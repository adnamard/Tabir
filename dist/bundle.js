/*! For license information please see bundle.js.LICENSE.txt */
(()=>{var e={31:function(e,t,n){var s;!function(e,r){function a(e){var t=this,n="";t.next=function(){var e=t.x^t.x>>>2;return t.x=t.y,t.y=t.z,t.z=t.w,t.w=t.v,(t.d=t.d+362437|0)+(t.v=t.v^t.v<<4^e^e<<1)|0},t.x=0,t.y=0,t.z=0,t.w=0,t.v=0,e===(0|e)?t.x=e:n+=e;for(var s=0;s<n.length+64;s++)t.x^=0|n.charCodeAt(s),s==n.length&&(t.d=t.x<<10^t.x>>>4),t.next()}function i(e,t){return t.x=e.x,t.y=e.y,t.z=e.z,t.w=e.w,t.v=e.v,t.d=e.d,t}function o(e,t){var n=new a(e),s=t&&t.state,r=function(){return(n.next()>>>0)/4294967296};return r.double=function(){do{var e=((n.next()>>>11)+(n.next()>>>0)/4294967296)/(1<<21)}while(0===e);return e},r.int32=n.next,r.quick=r,s&&("object"==typeof s&&i(s,n),r.state=function(){return i(n,{})}),r}r&&r.exports?r.exports=o:n.amdD&&n.amdO?void 0===(s=function(){return o}.call(t,n,t,r))||(r.exports=s):this.xorwow=o}(0,e=n.nmd(e),n.amdD)},67:function(e,t,n){var s;!function(e,r){function a(e){var t=this;t.next=function(){var e,n,s=t.x,r=t.i;return e=s[r],n=(e^=e>>>7)^e<<24,n^=(e=s[r+1&7])^e>>>10,n^=(e=s[r+3&7])^e>>>3,n^=(e=s[r+4&7])^e<<7,e=s[r+7&7],n^=(e^=e<<13)^e<<9,s[r]=n,t.i=r+1&7,n},function(e,t){var n,s=[];if(t===(0|t))s[0]=t;else for(t=""+t,n=0;n<t.length;++n)s[7&n]=s[7&n]<<15^t.charCodeAt(n)+s[n+1&7]<<13;for(;s.length<8;)s.push(0);for(n=0;n<8&&0===s[n];++n);for(8==n?s[7]=-1:s[n],e.x=s,e.i=0,n=256;n>0;--n)e.next()}(t,e)}function i(e,t){return t.x=e.x.slice(),t.i=e.i,t}function o(e,t){null==e&&(e=+new Date);var n=new a(e),s=t&&t.state,r=function(){return(n.next()>>>0)/4294967296};return r.double=function(){do{var e=((n.next()>>>11)+(n.next()>>>0)/4294967296)/(1<<21)}while(0===e);return e},r.int32=n.next,r.quick=r,s&&(s.x&&i(s,n),r.state=function(){return i(n,{})}),r}r&&r.exports?r.exports=o:n.amdD&&n.amdO?void 0===(s=function(){return o}.call(t,n,t,r))||(r.exports=s):this.xorshift7=o}(0,e=n.nmd(e),n.amdD)},108:()=>{},180:function(e,t,n){var s;!function(e,r){function a(e){var t,n=this,s=(t=4022871197,function(e){e=String(e);for(var n=0;n<e.length;n++){var s=.02519603282416938*(t+=e.charCodeAt(n));s-=t=s>>>0,t=(s*=t)>>>0,t+=4294967296*(s-=t)}return 2.3283064365386963e-10*(t>>>0)});n.next=function(){var e=2091639*n.s0+2.3283064365386963e-10*n.c;return n.s0=n.s1,n.s1=n.s2,n.s2=e-(n.c=0|e)},n.c=1,n.s0=s(" "),n.s1=s(" "),n.s2=s(" "),n.s0-=s(e),n.s0<0&&(n.s0+=1),n.s1-=s(e),n.s1<0&&(n.s1+=1),n.s2-=s(e),n.s2<0&&(n.s2+=1),s=null}function i(e,t){return t.c=e.c,t.s0=e.s0,t.s1=e.s1,t.s2=e.s2,t}function o(e,t){var n=new a(e),s=t&&t.state,r=n.next;return r.int32=function(){return 4294967296*n.next()|0},r.double=function(){return r()+11102230246251565e-32*(2097152*r()|0)},r.quick=r,s&&("object"==typeof s&&i(s,n),r.state=function(){return i(n,{})}),r}r&&r.exports?r.exports=o:n.amdD&&n.amdO?void 0===(s=function(){return o}.call(t,n,t,r))||(r.exports=s):this.alea=o}(0,e=n.nmd(e),n.amdD)},181:function(e,t,n){var s;!function(e,r){function a(e){var t=this,n="";t.x=0,t.y=0,t.z=0,t.w=0,t.next=function(){var e=t.x^t.x<<11;return t.x=t.y,t.y=t.z,t.z=t.w,t.w^=t.w>>>19^e^e>>>8},e===(0|e)?t.x=e:n+=e;for(var s=0;s<n.length+64;s++)t.x^=0|n.charCodeAt(s),t.next()}function i(e,t){return t.x=e.x,t.y=e.y,t.z=e.z,t.w=e.w,t}function o(e,t){var n=new a(e),s=t&&t.state,r=function(){return(n.next()>>>0)/4294967296};return r.double=function(){do{var e=((n.next()>>>11)+(n.next()>>>0)/4294967296)/(1<<21)}while(0===e);return e},r.int32=n.next,r.quick=r,s&&("object"==typeof s&&i(s,n),r.state=function(){return i(n,{})}),r}r&&r.exports?r.exports=o:n.amdD&&n.amdO?void 0===(s=function(){return o}.call(t,n,t,r))||(r.exports=s):this.xor128=o}(0,e=n.nmd(e),n.amdD)},234:()=>{},391:(e,t,n)=>{var s=n(180),r=n(181),a=n(31),i=n(67),o=n(833),l=n(717),u=n(801);u.alea=s,u.xor128=r,u.xorwow=a,u.xorshift7=i,u.xor4096=o,u.tychei=l,e.exports=u},452:e=>{var t=function(e){"use strict";var t,n=Object.prototype,s=n.hasOwnProperty,r=Object.defineProperty||function(e,t,n){e[t]=n.value},a="function"==typeof Symbol?Symbol:{},i=a.iterator||"@@iterator",o=a.asyncIterator||"@@asyncIterator",l=a.toStringTag||"@@toStringTag";function u(e,t,n){return Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}),e[t]}try{u({},"")}catch(e){u=function(e,t,n){return e[t]=n}}function c(e,t,n,s){var a=t&&t.prototype instanceof y?t:y,i=Object.create(a.prototype),o=new A(s||[]);return r(i,"_invoke",{value:T(e,n,o)}),i}function h(e,t,n){try{return{type:"normal",arg:e.call(t,n)}}catch(e){return{type:"throw",arg:e}}}e.wrap=c;var d="suspendedStart",p="suspendedYield",f="executing",m="completed",g={};function y(){}function b(){}function x(){}var w={};u(w,i,(function(){return this}));var v=Object.getPrototypeOf,k=v&&v(v(R([])));k&&k!==n&&s.call(k,i)&&(w=k);var I=x.prototype=y.prototype=Object.create(w);function N(e){["next","throw","return"].forEach((function(t){u(e,t,(function(e){return this._invoke(t,e)}))}))}function S(e,t){function n(r,a,i,o){var l=h(e[r],e,a);if("throw"!==l.type){var u=l.arg,c=u.value;return c&&"object"==typeof c&&s.call(c,"__await")?t.resolve(c.__await).then((function(e){n("next",e,i,o)}),(function(e){n("throw",e,i,o)})):t.resolve(c).then((function(e){u.value=e,i(u)}),(function(e){return n("throw",e,i,o)}))}o(l.arg)}var a;r(this,"_invoke",{value:function(e,s){function r(){return new t((function(t,r){n(e,s,t,r)}))}return a=a?a.then(r,r):r()}})}function T(e,n,s){var r=d;return function(a,i){if(r===f)throw new Error("Generator is already running");if(r===m){if("throw"===a)throw i;return{value:t,done:!0}}for(s.method=a,s.arg=i;;){var o=s.delegate;if(o){var l=C(o,s);if(l){if(l===g)continue;return l}}if("next"===s.method)s.sent=s._sent=s.arg;else if("throw"===s.method){if(r===d)throw r=m,s.arg;s.dispatchException(s.arg)}else"return"===s.method&&s.abrupt("return",s.arg);r=f;var u=h(e,n,s);if("normal"===u.type){if(r=s.done?m:p,u.arg===g)continue;return{value:u.arg,done:s.done}}"throw"===u.type&&(r=m,s.method="throw",s.arg=u.arg)}}}function C(e,n){var s=n.method,r=e.iterator[s];if(r===t)return n.delegate=null,"throw"===s&&e.iterator.return&&(n.method="return",n.arg=t,C(e,n),"throw"===n.method)||"return"!==s&&(n.method="throw",n.arg=new TypeError("The iterator does not provide a '"+s+"' method")),g;var a=h(r,e.iterator,n.arg);if("throw"===a.type)return n.method="throw",n.arg=a.arg,n.delegate=null,g;var i=a.arg;return i?i.done?(n[e.resultName]=i.value,n.next=e.nextLoc,"return"!==n.method&&(n.method="next",n.arg=t),n.delegate=null,g):i:(n.method="throw",n.arg=new TypeError("iterator result is not an object"),n.delegate=null,g)}function $(e){var t={tryLoc:e[0]};1 in e&&(t.catchLoc=e[1]),2 in e&&(t.finallyLoc=e[2],t.afterLoc=e[3]),this.tryEntries.push(t)}function E(e){var t=e.completion||{};t.type="normal",delete t.arg,e.completion=t}function A(e){this.tryEntries=[{tryLoc:"root"}],e.forEach($,this),this.reset(!0)}function R(e){if(null!=e){var n=e[i];if(n)return n.call(e);if("function"==typeof e.next)return e;if(!isNaN(e.length)){var r=-1,a=function n(){for(;++r<e.length;)if(s.call(e,r))return n.value=e[r],n.done=!1,n;return n.value=t,n.done=!0,n};return a.next=a}}throw new TypeError(typeof e+" is not iterable")}return b.prototype=x,r(I,"constructor",{value:x,configurable:!0}),r(x,"constructor",{value:b,configurable:!0}),b.displayName=u(x,l,"GeneratorFunction"),e.isGeneratorFunction=function(e){var t="function"==typeof e&&e.constructor;return!!t&&(t===b||"GeneratorFunction"===(t.displayName||t.name))},e.mark=function(e){return Object.setPrototypeOf?Object.setPrototypeOf(e,x):(e.__proto__=x,u(e,l,"GeneratorFunction")),e.prototype=Object.create(I),e},e.awrap=function(e){return{__await:e}},N(S.prototype),u(S.prototype,o,(function(){return this})),e.AsyncIterator=S,e.async=function(t,n,s,r,a){void 0===a&&(a=Promise);var i=new S(c(t,n,s,r),a);return e.isGeneratorFunction(n)?i:i.next().then((function(e){return e.done?e.value:i.next()}))},N(I),u(I,l,"Generator"),u(I,i,(function(){return this})),u(I,"toString",(function(){return"[object Generator]"})),e.keys=function(e){var t=Object(e),n=[];for(var s in t)n.push(s);return n.reverse(),function e(){for(;n.length;){var s=n.pop();if(s in t)return e.value=s,e.done=!1,e}return e.done=!0,e}},e.values=R,A.prototype={constructor:A,reset:function(e){if(this.prev=0,this.next=0,this.sent=this._sent=t,this.done=!1,this.delegate=null,this.method="next",this.arg=t,this.tryEntries.forEach(E),!e)for(var n in this)"t"===n.charAt(0)&&s.call(this,n)&&!isNaN(+n.slice(1))&&(this[n]=t)},stop:function(){this.done=!0;var e=this.tryEntries[0].completion;if("throw"===e.type)throw e.arg;return this.rval},dispatchException:function(e){if(this.done)throw e;var n=this;function r(s,r){return o.type="throw",o.arg=e,n.next=s,r&&(n.method="next",n.arg=t),!!r}for(var a=this.tryEntries.length-1;a>=0;--a){var i=this.tryEntries[a],o=i.completion;if("root"===i.tryLoc)return r("end");if(i.tryLoc<=this.prev){var l=s.call(i,"catchLoc"),u=s.call(i,"finallyLoc");if(l&&u){if(this.prev<i.catchLoc)return r(i.catchLoc,!0);if(this.prev<i.finallyLoc)return r(i.finallyLoc)}else if(l){if(this.prev<i.catchLoc)return r(i.catchLoc,!0)}else{if(!u)throw new Error("try statement without catch or finally");if(this.prev<i.finallyLoc)return r(i.finallyLoc)}}}},abrupt:function(e,t){for(var n=this.tryEntries.length-1;n>=0;--n){var r=this.tryEntries[n];if(r.tryLoc<=this.prev&&s.call(r,"finallyLoc")&&this.prev<r.finallyLoc){var a=r;break}}a&&("break"===e||"continue"===e)&&a.tryLoc<=t&&t<=a.finallyLoc&&(a=null);var i=a?a.completion:{};return i.type=e,i.arg=t,a?(this.method="next",this.next=a.finallyLoc,g):this.complete(i)},complete:function(e,t){if("throw"===e.type)throw e.arg;return"break"===e.type||"continue"===e.type?this.next=e.arg:"return"===e.type?(this.rval=this.arg=e.arg,this.method="return",this.next="end"):"normal"===e.type&&t&&(this.next=t),g},finish:function(e){for(var t=this.tryEntries.length-1;t>=0;--t){var n=this.tryEntries[t];if(n.finallyLoc===e)return this.complete(n.completion,n.afterLoc),E(n),g}},catch:function(e){for(var t=this.tryEntries.length-1;t>=0;--t){var n=this.tryEntries[t];if(n.tryLoc===e){var s=n.completion;if("throw"===s.type){var r=s.arg;E(n)}return r}}throw new Error("illegal catch attempt")},delegateYield:function(e,n,s){return this.delegate={iterator:R(e),resultName:n,nextLoc:s},"next"===this.method&&(this.arg=t),g}},e}(e.exports);try{regeneratorRuntime=t}catch(e){"object"==typeof globalThis?globalThis.regeneratorRuntime=t:Function("r","regeneratorRuntime = r")(t)}},530:()=>{},551:()=>{},554:function(e,t,n){(function(){"use strict";var e;function t(e){var t=0;return function(){return t<e.length?{done:!1,value:e[t++]}:{done:!0}}}var s="function"==typeof Object.defineProperties?Object.defineProperty:function(e,t,n){return e==Array.prototype||e==Object.prototype||(e[t]=n.value),e},r=function(e){e=["object"==typeof globalThis&&globalThis,e,"object"==typeof window&&window,"object"==typeof self&&self,"object"==typeof n.g&&n.g];for(var t=0;t<e.length;++t){var s=e[t];if(s&&s.Math==Math)return s}throw Error("Cannot find global object")}(this);function a(e,t){if(t)e:{var n=r;e=e.split(".");for(var a=0;a<e.length-1;a++){var i=e[a];if(!(i in n))break e;n=n[i]}(t=t(a=n[e=e[e.length-1]]))!=a&&null!=t&&s(n,e,{configurable:!0,writable:!0,value:t})}}function i(e){return(e={next:e})[Symbol.iterator]=function(){return this},e}function o(e){var n="undefined"!=typeof Symbol&&Symbol.iterator&&e[Symbol.iterator];return n?n.call(e):{next:t(e)}}function l(e){if(!(e instanceof Array)){e=o(e);for(var t,n=[];!(t=e.next()).done;)n.push(t.value);e=n}return e}a("Symbol",(function(e){function t(e,t){this.h=e,s(this,"description",{configurable:!0,writable:!0,value:t})}if(e)return e;t.prototype.toString=function(){return this.h};var n="jscomp_symbol_"+(1e9*Math.random()>>>0)+"_",r=0;return function e(s){if(this instanceof e)throw new TypeError("Symbol is not a constructor");return new t(n+(s||"")+"_"+r++,s)}})),a("Symbol.iterator",(function(e){if(e)return e;e=Symbol("Symbol.iterator");for(var n="Array Int8Array Uint8Array Uint8ClampedArray Int16Array Uint16Array Int32Array Uint32Array Float32Array Float64Array".split(" "),a=0;a<n.length;a++){var o=r[n[a]];"function"==typeof o&&"function"!=typeof o.prototype[e]&&s(o.prototype,e,{configurable:!0,writable:!0,value:function(){return i(t(this))}})}return e}));var u="function"==typeof Object.assign?Object.assign:function(e,t){for(var n=1;n<arguments.length;n++){var s=arguments[n];if(s)for(var r in s)Object.prototype.hasOwnProperty.call(s,r)&&(e[r]=s[r])}return e};a("Object.assign",(function(e){return e||u}));var c,h="function"==typeof Object.create?Object.create:function(e){function t(){}return t.prototype=e,new t};if("function"==typeof Object.setPrototypeOf)c=Object.setPrototypeOf;else{var d;e:{var p={};try{p.__proto__={a:!0},d=p.a;break e}catch(e){}d=!1}c=d?function(e,t){if(e.__proto__=t,e.__proto__!==t)throw new TypeError(e+" is not extensible");return e}:null}var f=c;function m(e,t){if(e.prototype=h(t.prototype),e.prototype.constructor=e,f)f(e,t);else for(var n in t)if("prototype"!=n)if(Object.defineProperties){var s=Object.getOwnPropertyDescriptor(t,n);s&&Object.defineProperty(e,n,s)}else e[n]=t[n];e.ya=t.prototype}function g(){this.m=!1,this.j=null,this.i=void 0,this.h=1,this.v=this.s=0,this.l=null}function y(e){if(e.m)throw new TypeError("Generator is already running");e.m=!0}function b(e,t){e.l={ma:t,na:!0},e.h=e.s||e.v}function x(e,t,n){return e.h=n,{value:t}}function w(e){this.h=new g,this.i=e}function v(e,t,n,s){try{var r=t.call(e.h.j,n);if(!(r instanceof Object))throw new TypeError("Iterator result "+r+" is not an object");if(!r.done)return e.h.m=!1,r;var a=r.value}catch(t){return e.h.j=null,b(e.h,t),k(e)}return e.h.j=null,s.call(e.h,a),k(e)}function k(e){for(;e.h.h;)try{var t=e.i(e.h);if(t)return e.h.m=!1,{value:t.value,done:!1}}catch(t){e.h.i=void 0,b(e.h,t)}if(e.h.m=!1,e.h.l){if(t=e.h.l,e.h.l=null,t.na)throw t.ma;return{value:t.return,done:!0}}return{value:void 0,done:!0}}function I(e){this.next=function(t){return y(e.h),e.h.j?t=v(e,e.h.j.next,t,e.h.u):(e.h.u(t),t=k(e)),t},this.throw=function(t){return y(e.h),e.h.j?t=v(e,e.h.j.throw,t,e.h.u):(b(e.h,t),t=k(e)),t},this.return=function(t){return function(e,t){y(e.h);var n=e.h.j;return n?v(e,"return"in n?n.return:function(e){return{value:e,done:!0}},t,e.h.return):(e.h.return(t),k(e))}(e,t)},this[Symbol.iterator]=function(){return this}}function N(e){return function(e){function t(t){return e.next(t)}function n(t){return e.throw(t)}return new Promise((function(s,r){!function e(a){a.done?s(a.value):Promise.resolve(a.value).then(t,n).then(e,r)}(e.next())}))}(new I(new w(e)))}function S(e){return e||Array.prototype.fill}g.prototype.u=function(e){this.i=e},g.prototype.return=function(e){this.l={return:e},this.h=this.v},a("Promise",(function(e){function t(e){this.i=0,this.j=void 0,this.h=[],this.u=!1;var t=this.l();try{e(t.resolve,t.reject)}catch(e){t.reject(e)}}function n(){this.h=null}function s(e){return e instanceof t?e:new t((function(t){t(e)}))}if(e)return e;n.prototype.i=function(e){if(null==this.h){this.h=[];var t=this;this.j((function(){t.m()}))}this.h.push(e)};var a=r.setTimeout;n.prototype.j=function(e){a(e,0)},n.prototype.m=function(){for(;this.h&&this.h.length;){var e=this.h;this.h=[];for(var t=0;t<e.length;++t){var n=e[t];e[t]=null;try{n()}catch(e){this.l(e)}}}this.h=null},n.prototype.l=function(e){this.j((function(){throw e}))},t.prototype.l=function(){function e(e){return function(s){n||(n=!0,e.call(t,s))}}var t=this,n=!1;return{resolve:e(this.I),reject:e(this.m)}},t.prototype.I=function(e){if(e===this)this.m(new TypeError("A Promise cannot resolve to itself"));else if(e instanceof t)this.L(e);else{e:switch(typeof e){case"object":var n=null!=e;break e;case"function":n=!0;break e;default:n=!1}n?this.F(e):this.s(e)}},t.prototype.F=function(e){var t=void 0;try{t=e.then}catch(e){return void this.m(e)}"function"==typeof t?this.M(t,e):this.s(e)},t.prototype.m=function(e){this.v(2,e)},t.prototype.s=function(e){this.v(1,e)},t.prototype.v=function(e,t){if(0!=this.i)throw Error("Cannot settle("+e+", "+t+"): Promise already settled in state"+this.i);this.i=e,this.j=t,2===this.i&&this.K(),this.H()},t.prototype.K=function(){var e=this;a((function(){if(e.D()){var t=r.console;void 0!==t&&t.error(e.j)}}),1)},t.prototype.D=function(){if(this.u)return!1;var e=r.CustomEvent,t=r.Event,n=r.dispatchEvent;return void 0===n||("function"==typeof e?e=new e("unhandledrejection",{cancelable:!0}):"function"==typeof t?e=new t("unhandledrejection",{cancelable:!0}):(e=r.document.createEvent("CustomEvent")).initCustomEvent("unhandledrejection",!1,!0,e),e.promise=this,e.reason=this.j,n(e))},t.prototype.H=function(){if(null!=this.h){for(var e=0;e<this.h.length;++e)i.i(this.h[e]);this.h=null}};var i=new n;return t.prototype.L=function(e){var t=this.l();e.T(t.resolve,t.reject)},t.prototype.M=function(e,t){var n=this.l();try{e.call(t,n.resolve,n.reject)}catch(e){n.reject(e)}},t.prototype.then=function(e,n){function s(e,t){return"function"==typeof e?function(t){try{r(e(t))}catch(e){a(e)}}:t}var r,a,i=new t((function(e,t){r=e,a=t}));return this.T(s(e,r),s(n,a)),i},t.prototype.catch=function(e){return this.then(void 0,e)},t.prototype.T=function(e,t){function n(){switch(s.i){case 1:e(s.j);break;case 2:t(s.j);break;default:throw Error("Unexpected state: "+s.i)}}var s=this;null==this.h?i.i(n):this.h.push(n),this.u=!0},t.resolve=s,t.reject=function(e){return new t((function(t,n){n(e)}))},t.race=function(e){return new t((function(t,n){for(var r=o(e),a=r.next();!a.done;a=r.next())s(a.value).T(t,n)}))},t.all=function(e){var n=o(e),r=n.next();return r.done?s([]):new t((function(e,t){function a(t){return function(n){i[t]=n,0==--o&&e(i)}}var i=[],o=0;do{i.push(void 0),o++,s(r.value).T(a(i.length-1),t),r=n.next()}while(!r.done)}))},t})),a("Array.prototype.keys",(function(e){return e||function(){return function(e,t){e instanceof String&&(e+="");var n=0,s=!1,r={next:function(){if(!s&&n<e.length){var r=n++;return{value:t(r,e[r]),done:!1}}return s=!0,{done:!0,value:void 0}}};return r[Symbol.iterator]=function(){return r},r}(this,(function(e){return e}))}})),a("Array.prototype.fill",(function(e){return e||function(e,t,n){var s=this.length||0;for(0>t&&(t=Math.max(0,s+t)),(null==n||n>s)&&(n=s),0>(n=Number(n))&&(n=Math.max(0,s+n)),t=Number(t||0);t<n;t++)this[t]=e;return this}})),a("Int8Array.prototype.fill",S),a("Uint8Array.prototype.fill",S),a("Uint8ClampedArray.prototype.fill",S),a("Int16Array.prototype.fill",S),a("Uint16Array.prototype.fill",S),a("Int32Array.prototype.fill",S),a("Uint32Array.prototype.fill",S),a("Float32Array.prototype.fill",S),a("Float64Array.prototype.fill",S),a("Object.is",(function(e){return e||function(e,t){return e===t?0!==e||1/e==1/t:e!=e&&t!=t}})),a("Array.prototype.includes",(function(e){return e||function(e,t){var n=this;n instanceof String&&(n=String(n));var s=n.length;for(0>(t=t||0)&&(t=Math.max(t+s,0));t<s;t++){var r=n[t];if(r===e||Object.is(r,e))return!0}return!1}})),a("String.prototype.includes",(function(e){return e||function(e,t){if(null==this)throw new TypeError("The 'this' value for String.prototype.includes must not be null or undefined");if(e instanceof RegExp)throw new TypeError("First argument to String.prototype.includes must not be a regular expression");return-1!==this.indexOf(e,t||0)}}));var T=this||self;function C(e,t){e=e.split(".");var n,s=T;e[0]in s||void 0===s.execScript||s.execScript("var "+e[0]);for(;e.length&&(n=e.shift());)e.length||void 0===t?s=s[n]&&s[n]!==Object.prototype[n]?s[n]:s[n]={}:s[n]=t}function $(e){var t;return(t=T.navigator)&&(t=t.userAgent)||(t=""),-1!=t.indexOf(e)}var E=Array.prototype.map?function(e,t){return Array.prototype.map.call(e,t,void 0)}:function(e,t){for(var n=e.length,s=Array(n),r="string"==typeof e?e.split(""):e,a=0;a<n;a++)a in r&&(s[a]=t.call(void 0,r[a],a,e));return s},A={},R=null;function _(){if(!R){R={};for(var e="ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789".split(""),t=["+/=","+/","-_=","-_.","-_"],n=0;5>n;n++){var s=e.concat(t[n].split(""));A[n]=s;for(var r=0;r<s.length;r++){var a=s[r];void 0===R[a]&&(R[a]=r)}}}}var F="undefined"!=typeof Uint8Array,D=!($("Trident")||$("MSIE"))&&"function"==typeof T.btoa;function O(e){if(!D){var t;void 0===t&&(t=0),_(),t=A[t];for(var n=Array(Math.floor(e.length/3)),s=t[64]||"",r=0,a=0;r<e.length-2;r+=3){var i=e[r],o=e[r+1],l=e[r+2],u=t[i>>2];i=t[(3&i)<<4|o>>4],o=t[(15&o)<<2|l>>6],l=t[63&l],n[a++]=u+i+o+l}switch(u=0,l=s,e.length-r){case 2:l=t[(15&(u=e[r+1]))<<2]||s;case 1:e=e[r],n[a]=t[e>>2]+t[(3&e)<<4|u>>4]+l+s}return n.join("")}for(t="";10240<e.length;)t+=String.fromCharCode.apply(null,e.subarray(0,10240)),e=e.subarray(10240);return t+=String.fromCharCode.apply(null,e),btoa(t)}var M,L=RegExp("[-_.]","g");function z(e){switch(e){case"-":return"+";case"_":return"/";case".":return"=";default:return""}}function B(e){if(!D)return function(e){var t=e.length,n=3*t/4;n%3?n=Math.floor(n):-1!="=.".indexOf(e[t-1])&&(n=-1!="=.".indexOf(e[t-2])?n-2:n-1);var s=new Uint8Array(n),r=0;return function(e,t){function n(t){for(;s<e.length;){var n=e.charAt(s++),r=R[n];if(null!=r)return r;if(!/^[\s\xa0]*$/.test(n))throw Error("Unknown base64 encoding at char: "+n)}return t}_();for(var s=0;;){var r=n(-1),a=n(0),i=n(64),o=n(64);if(64===o&&-1===r)break;t(r<<2|a>>4),64!=i&&(t(a<<4&240|i>>2),64!=o&&t(i<<6&192|o))}}(e,(function(e){s[r++]=e})),r!==n?s.subarray(0,r):s}(e);L.test(e)&&(e=e.replace(L,z)),e=atob(e);for(var t=new Uint8Array(e.length),n=0;n<e.length;n++)t[n]=e.charCodeAt(n);return t}function P(){return M||(M=new Uint8Array(0))}var W={},V="function"==typeof Uint8Array.prototype.slice,U=0,G=0;function j(e){var t=0>e,n=(e=Math.abs(e))>>>0;e=Math.floor((e-n)/4294967296),t&&(t=(n=o(K(n,e))).next().value,e=n.next().value,n=t),U=n>>>0,G=e>>>0}var H,q="function"==typeof BigInt;function K(e,t){return t=~t,e?e=1+~e:t+=1,[e,t]}function X(e,t){this.i=e>>>0,this.h=t>>>0}function Y(e){if(!e)return H||(H=new X(0,0));if(!/^-?\d+$/.test(e))return null;if(16>e.length)j(Number(e));else if(q)e=BigInt(e),U=Number(e&BigInt(4294967295))>>>0,G=Number(e>>BigInt(32)&BigInt(4294967295));else{var t=+("-"===e[0]);G=U=0;for(var n=e.length,s=t,r=(n-t)%6+t;r<=n;s=r,r+=6)s=Number(e.slice(s,r)),G*=1e6,4294967296<=(U=1e6*U+s)&&(G+=U/4294967296|0,U%=4294967296);t&&(e=(t=o(K(U,G))).next().value,t=t.next().value,U=e,G=t)}return new X(U,G)}function J(e,t){return Error("Invalid wire type: "+e+" (at position "+t+")")}function Z(){return Error("Failed to read varint, encoding is invalid.")}function Q(e,t){return Error("Tried to read past the end of the data "+t+" > "+e)}function ee(){throw Error("Invalid UTF8")}function te(e,t){return t=String.fromCharCode.apply(null,t),null==e?t:e+t}var ne,se,re,ae=void 0,ie="undefined"!=typeof TextDecoder,oe="undefined"!=typeof TextEncoder;function le(e){if(e!==W)throw Error("illegal external caller")}function ue(e,t){if(le(t),this.V=e,null!=e&&0===e.length)throw Error("ByteString should be constructed with non-empty values")}function ce(){return re||(re=new ue(null,W))}function he(e){le(W);var t=e.V;return null==(t=null==t||F&&null!=t&&t instanceof Uint8Array?t:"string"==typeof t?B(t):null)?t:e.V=t}function de(e,t){this.i=null,this.m=!1,this.h=this.j=this.l=0,pe(this,e,t)}function pe(e,t,n){n=void 0===n?{}:n,e.S=void 0!==n.S&&n.S,t&&(t=function(e){if("string"==typeof e)return{buffer:B(e),C:!1};if(Array.isArray(e))return{buffer:new Uint8Array(e),C:!1};if(e.constructor===Uint8Array)return{buffer:e,C:!1};if(e.constructor===ArrayBuffer)return{buffer:new Uint8Array(e),C:!1};if(e.constructor===ue)return{buffer:he(e)||P(),C:!0};if(e instanceof Uint8Array)return{buffer:new Uint8Array(e.buffer,e.byteOffset,e.byteLength),C:!1};throw Error("Type not convertible to a Uint8Array, expected a Uint8Array, an ArrayBuffer, a base64 encoded string, a ByteString or an Array of numbers")}(t),e.i=t.buffer,e.m=t.C,e.l=0,e.j=e.i.length,e.h=e.l)}function fe(e,t){if(e.h=t,t>e.j)throw Q(e.j,t)}function me(e){var t=e.i,n=e.h,s=t[n++],r=127&s;if(128&s&&(r|=(127&(s=t[n++]))<<7,128&s&&(r|=(127&(s=t[n++]))<<14,128&s&&(r|=(127&(s=t[n++]))<<21,128&s&&(r|=(s=t[n++])<<28,128&s&&128&t[n++]&&128&t[n++]&&128&t[n++]&&128&t[n++]&&128&t[n++])))))throw Z();return fe(e,n),r}function ge(e,t){if(0>t)throw Error("Tried to read a negative byte length: "+t);var n=e.h,s=n+t;if(s>e.j)throw Q(t,e.j-n);return e.h=s,n}de.prototype.reset=function(){this.h=this.l};var ye=[];function be(){this.h=[]}function xe(e,t,n){for(;0<n||127<t;)e.h.push(127&t|128),t=(t>>>7|n<<25)>>>0,n>>>=7;e.h.push(t)}function we(e,t){for(;127<t;)e.h.push(127&t|128),t>>>=7;e.h.push(t)}function ve(e,t){if(ye.length){var n=ye.pop();pe(n,e,t),e=n}else e=new de(e,t);this.h=e,this.j=this.h.h,this.i=this.l=-1,this.setOptions(t)}function ke(e){var t=e.h;if(t.h==t.j)return!1;e.j=e.h.h;var n=me(e.h)>>>0;if(t=n>>>3,!(0<=(n&=7)&&5>=n))throw J(n,e.j);if(1>t)throw Error("Invalid field number: "+t+" (at position "+e.j+")");return e.l=t,e.i=n,!0}function Ie(e){switch(e.i){case 0:if(0!=e.i)Ie(e);else e:{for(var t=(e=e.h).h,n=t+10,s=e.i;t<n;)if(!(128&s[t++])){fe(e,t);break e}throw Z()}break;case 1:fe(e=e.h,e.h+8);break;case 2:2!=e.i?Ie(e):(t=me(e.h)>>>0,fe(e=e.h,e.h+t));break;case 5:fe(e=e.h,e.h+4);break;case 3:for(t=e.l;;){if(!ke(e))throw Error("Unmatched start-group tag: stream EOF");if(4==e.i){if(e.l!=t)throw Error("Unmatched end-group tag");break}Ie(e)}break;default:throw J(e.i,e.j)}}be.prototype.length=function(){return this.h.length},be.prototype.end=function(){var e=this.h;return this.h=[],e},ve.prototype.setOptions=function(e){e=void 0===e?{}:e,this.ca=void 0!==e.ca&&e.ca},ve.prototype.reset=function(){this.h.reset(),this.j=this.h.h,this.i=this.l=-1};var Ne=[];function Se(){this.j=[],this.i=0,this.h=new be}function Te(e,t){0!==t.length&&(e.j.push(t),e.i+=t.length)}var Ce="function"==typeof Symbol&&"symbol"==typeof Symbol()?Symbol():void 0;function $e(e,t){return Ce?e[Ce]|=t:void 0!==e.A?e.A|=t:(Object.defineProperties(e,{A:{value:t,configurable:!0,writable:!0,enumerable:!1}}),t)}function Ee(e,t){Ce?e[Ce]&&(e[Ce]&=~t):void 0!==e.A&&(e.A&=~t)}function Ae(e){var t;return null==(t=Ce?e[Ce]:e.A)?0:t}function Re(e,t){Ce?e[Ce]=t:void 0!==e.A?e.A=t:Object.defineProperties(e,{A:{value:t,configurable:!0,writable:!0,enumerable:!1}})}function _e(e){return $e(e,1),e}function Fe(e,t){Re(t,-51&e)}function De(e,t){Re(t,-41&e|18)}var Oe={};function Me(e){return null!==e&&"object"==typeof e&&!Array.isArray(e)&&e.constructor===Object}var Le,ze,Be=[];function Pe(e){if(2&Ae(e.o))throw Error("Cannot mutate an immutable Message")}function We(e){var t=e.length;(t=t?e[t-1]:void 0)&&Me(t)?t.g=1:(t={},e.push((t.g=1,t)))}function Ve(e){var t=e.i+e.G;return e.B||(e.B=e.o[t]={})}function Ue(e,t){return-1===t?null:t>=e.i?e.B?e.B[t]:void 0:e.o[t+e.G]}function Ge(e,t,n,s){Pe(e),je(e,t,n,s)}function je(e,t,n,s){e.j&&(e.j=void 0),t>=e.i||s?Ve(e)[t]=n:(e.o[t+e.G]=n,(e=e.B)&&t in e&&delete e[t])}function He(e,t,n,s){var r=Ue(e,t);Array.isArray(r)||(r=Le);var a=Ae(r);if(1&a||_e(r),s)2&a||$e(r,2),1&n||Object.freeze(r);else{s=!(2&n);var i=2&a;1&n||!i?s&&16&a&&!i&&Ee(r,16):je(e,t,r=_e(Array.prototype.slice.call(r)))}return r}function qe(e,t){var n=Ue(e,t),s=null==n?n:"number"==typeof n||"NaN"===n||"Infinity"===n||"-Infinity"===n?Number(n):void 0;return null!=s&&s!==n&&je(e,t,s),s}function Ke(e,t,n,s,r){e.h||(e.h={});var a=e.h[n],i=He(e,n,3,r);if(!a){var o=i;a=[];var l=!!(16&Ae(e.o));i=!!(2&Ae(o));var u=o;!r&&i&&(o=Array.prototype.slice.call(o));for(var c=i,h=0;h<o.length;h++){var d=o[h],p=t,f=!1;if(f=void 0!==f&&f,void 0!==(d=Array.isArray(d)?new p(d):f?new p:void 0)){var m=f=Ae(p=d.o);i&&(m|=2),l&&(m|=16),m!=f&&Re(p,m),p=m,c=c||!!(2&p),a.push(d)}}return e.h[n]=a,t=33|(l=Ae(o)),l!=(t=c?-9&t:8|t)&&(c=o,Object.isFrozen(c)&&(c=Array.prototype.slice.call(c)),Re(c,t),o=c),u!==o&&je(e,n,o),(r||s&&i)&&$e(a,2),s&&Object.freeze(a),a}return r||(r=Object.isFrozen(a),s&&!r?Object.freeze(a):!s&&r&&(a=Array.prototype.slice.call(a),e.h[n]=a)),a}function Xe(e,t,n){var s=!!(2&Ae(e.o));if(t=Ke(e,t,n,s,s),e=He(e,n,3,s),!(s||8&Ae(e))){for(s=0;s<t.length;s++){if(2&Ae((n=t[s]).o)){var r=ot(n,!1);r.j=n}else r=n;n!==r&&(t[s]=r,e[s]=r.o)}$e(e,8)}return t}function Ye(e,t,n){if(null!=n&&"number"!=typeof n)throw Error("Value of float/double field must be a number|null|undefined, found "+typeof n+": "+n);Ge(e,t,n)}function Je(e,t,n,s,r){Pe(e);var a=Ke(e,n,t,!1,!1);return n=null!=s?s:new n,e=He(e,t,2,!1),null!=r?(a.splice(r,0,n),e.splice(r,0,n.o)):(a.push(n),e.push(n.o)),n.C()&&Ee(e,8),n}function Ze(e,t){return null==e?t:e}function Qe(e,t,n){return n=void 0===n?0:n,Ze(qe(e,t),n)}function et(e,t,n,s){if(null!=e){if(Array.isArray(e))e=tt(e,t,n,void 0!==s);else if(Me(e)){var r,a={};for(r in e)a[r]=et(e[r],t,n,s);e=a}else e=t(e,s);return e}}function tt(e,t,n,s){var r=Ae(e);s=s?!!(16&r):void 0,e=Array.prototype.slice.call(e);for(var a=0;a<e.length;a++)e[a]=et(e[a],t,n,s);return n(r,e),e}function nt(e){return e.ja===Oe?e.toJSON():function(e){switch(typeof e){case"number":return isFinite(e)?e:String(e);case"object":if(e)if(Array.isArray(e)){if(128&Ae(e))return We(e=Array.prototype.slice.call(e)),e}else{if(F&&null!=e&&e instanceof Uint8Array)return O(e);if(e instanceof ue){var t=e.V;return null==t?"":"string"==typeof t?t:e.V=O(t)}}}return e}(e)}function st(e,t){128&e&&We(t)}function rt(e,t,n){if(n=void 0===n?De:n,null!=e){if(F&&e instanceof Uint8Array)return e.length?new ue(new Uint8Array(e),W):ce();if(Array.isArray(e)){var s=Ae(e);return 2&s?e:!t||32&s||!(16&s||0===s)?(4&(t=Ae(e=tt(e,rt,4&s?De:n,!0)))&&2&t&&Object.freeze(e),e):(Re(e,2|s),e)}return e.ja===Oe?it(e):e}}function at(e,t,n,s,r,a,i){if(e=e.h&&e.h[n]){if(2&(s=Ae(e))?s=e:(De(s,a=E(e,it)),Object.freeze(a),s=a),Pe(t),i=null==s?Le:_e([]),null!=s){for(a=!!s.length,e=0;e<s.length;e++){var o=s[e];a=a&&!(2&Ae(o.o)),i[e]=o.o}a=1|(a?8:0),((e=Ae(i))&a)!==a&&(Object.isFrozen(i)&&(i=Array.prototype.slice.call(i)),Re(i,e|a)),t.h||(t.h={}),t.h[n]=s}else t.h&&(t.h[n]=void 0);je(t,n,i,r)}else Ge(t,n,rt(s,a,i),r)}function it(e){return 2&Ae(e.o)||$e((e=ot(e,!0)).o,2),e}function ot(e,t){var n=e.o,s=[];$e(s,16);var r=e.constructor.h;if(r&&s.push(r),r=e.B){s.length=n.length,s.fill(void 0,s.length,n.length);var a={};s[s.length-1]=a}128&Ae(n)&&We(s),t=t||e.C()?De:Fe,a=e.constructor,ze=s,s=new a(s),ze=void 0,e.R&&(s.R=e.R.slice()),a=!!(16&Ae(n));for(var i=r?n.length-1:n.length,o=0;o<i;o++)at(e,s,o-e.G,n[o],!1,a,t);if(r)for(var l in r)at(e,s,+l,r[l],!0,a,t);return s}function lt(e,t,n){null==e&&(e=ze),ze=void 0;var s,r=this.constructor.i||0,a=0<r,i=this.constructor.h,o=!1;if(null==e){var l=48,u=!0;a&&(r=0,l|=128),Re(e=i?[i]:[],l)}else{if(!Array.isArray(e))throw Error();if(i&&i!==e[0])throw Error();var c=l=$e(e,0);if((u=!!(16&c))&&((o=!!(32&c))||(c|=32)),a){if(128&c)r=0;else if(0<e.length){var h=e[e.length-1];if(Me(h)&&"g"in h){r=0,c|=128,delete h.g;var d,p=!0;for(d in h){p=!1;break}p&&e.pop()}}}else if(128&c)throw Error();l!==c&&Re(e,c)}if(this.G=(i?0:-1)-r,this.h=void 0,this.o=e,r=(i=this.o.length)-1,i&&Me(i=this.o[r])?(this.B=i,this.i=r-this.G):void 0!==t&&-1<t?(this.i=Math.max(t,r+1-this.G),this.B=void 0):this.i=Number.MAX_VALUE,!a&&this.B&&"g"in this.B)throw Error('Unexpected "g" flag in sparse object of message that is not a group type.');if(n)for(t=u&&!o&&!0,a=this.i,u=0;u<n.length;u++)(o=n[u])<a?(r=e[o+=this.G])?ut(r,t):e[o]=Le:(s||(s=Ve(this)),(r=s[o])?ut(r,t):s[o]=Le)}function ut(e,t){if(Array.isArray(e)){var n=Ae(e),s=1;!t||2&n||(s|=16),(n&s)!==s&&Re(e,n|s)}}function ct(e,t,n){if(n){var s,r={};for(s in n){var a=n[s],i=a.qa;i||(r.J=a.wa||a.oa.W,a.ia?(r.aa=bt(a.ia),i=function(e){return function(t,n,s){return e.J(t,n,s,e.aa)}}(r)):a.ka?(r.Z=xt(a.da.P,a.ka),i=function(e){return function(t,n,s){return e.J(t,n,s,e.Z)}}(r)):i=r.J,a.qa=i),i(t,e,a.da),r={J:r.J,aa:r.aa,Z:r.Z}}}!function(e,t){if(t=t.R){Te(e,e.h.end());for(var n=0;n<t.length;n++)Te(e,he(t[n])||P())}}(t,e)}Re(Be,23),Le=Object.freeze(Be),lt.prototype.toJSON=function(){return tt(this.o,nt,st)},lt.prototype.C=function(){return!!(2&Ae(this.o))},lt.prototype.ja=Oe,lt.prototype.toString=function(){return this.o.toString()};var ht=Symbol();function dt(e,t,n){return e[ht]||(e[ht]=function(e,s){return t(e,s,n)})}function pt(e){var t=e[ht];if(!t){var n=Rt(e);t=function(e,t){return _t(e,t,n)},e[ht]=t}return t}function ft(e){var t=function(e){var t=e.ia;return t?pt(t):(t=e.va)?dt(e.da.P,t,e.ka):void 0}(e),n=e.da,s=e.oa.U;return t?function(e,r){return s(e,r,n,t)}:function(e,t){return s(e,t,n)}}function mt(e,t){var n=e[t];return"function"==typeof n&&0===n.length&&(n=n(),e[t]=n),Array.isArray(n)&&(Tt in n||wt in n||0<n.length&&"function"==typeof n[0])?n:void 0}function gt(e,t,n,s,r,a){t.P=e[0];var i=1;if(e.length>i&&"number"!=typeof e[i]){var o=e[i++];n(t,o)}for(;i<e.length;){n=e[i++];for(var l=i+1;l<e.length&&"number"!=typeof e[l];)l++;switch(o=e[i++],l-=i){case 0:s(t,n,o);break;case 1:(l=mt(e,i))?(i++,r(t,n,o,l)):s(t,n,o,e[i++]);break;case 2:r(t,n,o,l=mt(e,l=i++),e[i++]);break;case 3:a(t,n,o,e[i++],e[i++],e[i++]);break;case 4:a(t,n,o,e[i++],e[i++],e[i++],e[i++]);break;default:throw Error("unexpected number of binary field arguments: "+l)}}return t}var yt=Symbol();function bt(e){var t=e[yt];if(!t){var n=St(e);t=function(e,t){return Ft(e,t,n)},e[yt]=t}return t}function xt(e,t){var n=e[yt];return n||(n=function(e,n){return ct(e,n,t)},e[yt]=n),n}var wt=Symbol();function vt(e,t){e.push(t)}function kt(e,t,n){e.push(t,n.W)}function It(e,t,n,s){var r=bt(s),a=St(s).P,i=n.W;e.push(t,(function(e,t,n){return i(e,t,n,a,r)}))}function Nt(e,t,n,s,r,a){var i=xt(s,a),o=n.W;e.push(t,(function(e,t,n){return o(e,t,n,s,i)}))}function St(e){var t=e[wt];return t||(t=gt(e,e[wt]=[],vt,kt,It,Nt),Tt in e&&wt in e&&(e.length=0),t)}var Tt=Symbol();function Ct(e,t){e[0]=t}function $t(e,t,n,s){var r=n.U;e[t]=s?function(e,t,n){return r(e,t,n,s)}:r}function Et(e,t,n,s,r){var a=n.U,i=pt(s),o=Rt(s).P;e[t]=function(e,t,n){return a(e,t,n,o,i,r)}}function At(e,t,n,s,r,a,i){var o=n.U,l=dt(s,r,a);e[t]=function(e,t,n){return o(e,t,n,s,l,i)}}function Rt(e){var t=e[Tt];return t||(t=gt(e,e[Tt]={},Ct,$t,Et,At),Tt in e&&wt in e&&(e.length=0),t)}function _t(e,t,n){for(;ke(t)&&4!=t.i;){var s=t.l,r=n[s];if(!r){var a=n[0];a&&(a=a[s])&&(r=n[s]=ft(a))}if(!r||!r(t,e,s)){s=e,a=(r=t).j,Ie(r);var i=r;if(!i.ca){if(r=i.h.h-a,i.h.h=a,i=i.h,0==r)r=ce();else{if(a=ge(i,r),i.S&&i.m)r=i.i.subarray(a,a+r);else{i=i.i;var o=a;r=o===(r=a+r)?P():V?i.slice(o,r):new Uint8Array(i.subarray(o,r))}r=0==r.length?ce():new ue(r,W)}(a=s.R)?a.push(r):s.R=[r]}}}return e}function Ft(e,t,n){for(var s=n.length,r=1==s%2,a=r?1:0;a<s;a+=2)(0,n[a+1])(t,e,n[a]);ct(e,t,r?n[0]:void 0)}function Dt(e,t){return{U:e,W:t}}var Ot=Dt((function(e,t,n){if(5!==e.i)return!1;var s=(e=e.h).i,r=e.h,a=s[r],i=s[r+1],o=s[r+2];return s=s[r+3],fe(e,e.h+4),e=2*((i=(a|i<<8|o<<16|s<<24)>>>0)>>31)+1,a=i>>>23&255,i&=8388607,Ge(t,n,255==a?i?NaN:1/0*e:0==a?e*Math.pow(2,-149)*i:e*Math.pow(2,a-150)*(i+Math.pow(2,23))),!0}),(function(e,t,n){if(null!=(t=qe(t,n))){we(e.h,8*n+5),e=e.h;var s=+t;0===s?0<1/s?U=G=0:(G=0,U=2147483648):isNaN(s)?(G=0,U=2147483647):34028234663852886e22<(s=(n=0>s?-2147483648:0)?-s:s)?(G=0,U=(2139095040|n)>>>0):11754943508222875e-54>s?(s=Math.round(s/Math.pow(2,-149)),G=0,U=(n|s)>>>0):(t=Math.floor(Math.log(s)/Math.LN2),s*=Math.pow(2,-t),16777216<=(s=Math.round(8388608*s))&&++t,G=0,U=(n|t+127<<23|8388607&s)>>>0),n=U,e.h.push(n>>>0&255),e.h.push(n>>>8&255),e.h.push(n>>>16&255),e.h.push(n>>>24&255)}})),Mt=Dt((function(e,t,n){if(0!==e.i)return!1;var s=e.h,r=0,a=e=0,i=s.i,o=s.h;do{var l=i[o++];r|=(127&l)<<a,a+=7}while(32>a&&128&l);for(32<a&&(e|=(127&l)>>4),a=3;32>a&&128&l;a+=7)e|=(127&(l=i[o++]))<<a;if(fe(s,o),!(128>l))throw Z();return s=r>>>0,(e=2147483648&(l=e>>>0))&&(l=~l>>>0,0==(s=1+~s>>>0)&&(l=l+1>>>0)),s=4294967296*l+(s>>>0),Ge(t,n,e?-s:s),!0}),(function(e,t,n){null!=(t=Ue(t,n))&&("string"==typeof t&&Y(t),null!=t&&(we(e.h,8*n),"number"==typeof t?(e=e.h,j(t),xe(e,U,G)):(n=Y(t),xe(e.h,n.i,n.h))))})),Lt=Dt((function(e,t,n){return 0===e.i&&(Ge(t,n,me(e.h)),!0)}),(function(e,t,n){if(null!=(t=Ue(t,n))&&null!=t)if(we(e.h,8*n),e=e.h,0<=(n=t))we(e,n);else{for(t=0;9>t;t++)e.h.push(127&n|128),n>>=7;e.h.push(1)}})),zt=Dt((function(e,t,n){if(2!==e.i)return!1;var s=me(e.h)>>>0,r=ge(e=e.h,s);if(e=e.i,ie){var a,i=e;(a=ne)||(a=ne=new TextDecoder("utf-8",{fatal:!0})),e=r+s,i=0===r&&e===i.length?i:i.subarray(r,e);try{var o=a.decode(i)}catch(e){if(void 0===ae){try{a.decode(new Uint8Array([128]))}catch(e){}try{a.decode(new Uint8Array([97])),ae=!0}catch(e){ae=!1}}throw!ae&&(ne=void 0),e}}else{s=(o=r)+s,r=[];for(var l,u,c=null;o<s;)128>(l=e[o++])?r.push(l):224>l?o>=s?ee():(u=e[o++],194>l||128!=(192&u)?(o--,ee()):r.push((31&l)<<6|63&u)):240>l?o>=s-1?ee():128!=(192&(u=e[o++]))||224===l&&160>u||237===l&&160<=u||128!=(192&(i=e[o++]))?(o--,ee()):r.push((15&l)<<12|(63&u)<<6|63&i):244>=l?o>=s-2?ee():128!=(192&(u=e[o++]))||u-144+(l<<28)>>30||128!=(192&(i=e[o++]))||128!=(192&(a=e[o++]))?(o--,ee()):(l=(7&l)<<18|(63&u)<<12|(63&i)<<6|63&a,l-=65536,r.push(55296+(l>>10&1023),56320+(1023&l))):ee(),8192<=r.length&&(c=te(c,r),r.length=0);o=te(c,r)}return Ge(t,n,o),!0}),(function(e,t,n){if(null!=(t=Ue(t,n))){var s=!1;if(s=void 0!==s&&s,oe){if(s&&/(?:[^\uD800-\uDBFF]|^)[\uDC00-\uDFFF]|[\uD800-\uDBFF](?![\uDC00-\uDFFF])/.test(t))throw Error("Found an unpaired surrogate");t=(se||(se=new TextEncoder)).encode(t)}else{for(var r=0,a=new Uint8Array(3*t.length),i=0;i<t.length;i++){var o=t.charCodeAt(i);if(128>o)a[r++]=o;else{if(2048>o)a[r++]=o>>6|192;else{if(55296<=o&&57343>=o){if(56319>=o&&i<t.length){var l=t.charCodeAt(++i);if(56320<=l&&57343>=l){o=1024*(o-55296)+l-56320+65536,a[r++]=o>>18|240,a[r++]=o>>12&63|128,a[r++]=o>>6&63|128,a[r++]=63&o|128;continue}i--}if(s)throw Error("Found an unpaired surrogate");o=65533}a[r++]=o>>12|224,a[r++]=o>>6&63|128}a[r++]=63&o|128}}t=r===a.length?a:a.subarray(0,r)}we(e.h,8*n+2),we(e.h,t.length),Te(e,e.h.end()),Te(e,t)}})),Bt=Dt((function(e,t,n,s,r){if(2!==e.i)return!1;t=Je(t,n,s),n=e.h.j,s=me(e.h)>>>0;var a=e.h.h+s,i=a-n;if(0>=i&&(e.h.j=a,r(t,e,void 0,void 0,void 0),i=a-e.h.h),i)throw Error("Message parsing ended unexpectedly. Expected to read "+s+" bytes, instead read "+(s-i)+" bytes, either the data ended unexpectedly or the message misreported its own length");return e.h.h=a,e.h.j=n,!0}),(function(e,t,n,s,r){if(null!=(t=Xe(t,s,n)))for(s=0;s<t.length;s++){var a=e;we(a.h,8*n+2);var i=a.h.end();Te(a,i),i.push(a.i),a=i,r(t[s],e),i=e;var o=a.pop();for(o=i.i+i.h.length()-o;127<o;)a.push(127&o|128),o>>>=7,i.i++;a.push(o),i.i++}}));function Pt(e){return function(t,n){e:{if(Ne.length){var s=Ne.pop();s.setOptions(n),pe(s.h,t,n),t=s}else t=new ve(t,n);try{var r=Rt(e),a=_t(new r.P,t,r);break e}finally{(r=t.h).i=null,r.m=!1,r.l=0,r.j=0,r.h=0,r.S=!1,t.l=-1,t.i=-1,100>Ne.length&&Ne.push(t)}a=void 0}return a}}function Wt(e){return function(){var t=new Se;Ft(this,t,St(e)),Te(t,t.h.end());for(var n=new Uint8Array(t.i),s=t.j,r=s.length,a=0,i=0;i<r;i++){var o=s[i];n.set(o,a),a+=o.length}return t.j=[n],n}}function Vt(e){lt.call(this,e)}m(Vt,lt);var Ut=[Vt,1,Lt,2,Ot,3,zt,4,zt];function Gt(e){lt.call(this,e,-1,jt)}Vt.prototype.l=Wt(Ut),m(Gt,lt),Gt.prototype.addClassification=function(e,t){return Je(this,1,Vt,e,t),this};var jt=[1],Ht=Pt([Gt,1,Bt,Ut]);function qt(e){lt.call(this,e)}m(qt,lt);var Kt=[qt,1,Ot,2,Ot,3,Ot,4,Ot,5,Ot];function Xt(e){lt.call(this,e,-1,Yt)}qt.prototype.l=Wt(Kt),m(Xt,lt);var Yt=[1],Jt=Pt([Xt,1,Bt,Kt]);function Zt(e){lt.call(this,e)}m(Zt,lt);var Qt=[Zt,1,Ot,2,Ot,3,Ot,4,Ot,5,Ot,6,Mt],en=Pt(Qt);function tn(e,t,n){if(n=e.createShader(0===n?e.VERTEX_SHADER:e.FRAGMENT_SHADER),e.shaderSource(n,t),e.compileShader(n),!e.getShaderParameter(n,e.COMPILE_STATUS))throw Error("Could not compile WebGL shader.\n\n"+e.getShaderInfoLog(n));return n}function nn(e){return Xe(e,Vt,1).map((function(e){var t=Ue(e,1);return{index:null==t?0:t,score:Qe(e,2),label:null!=Ue(e,3)?Ze(Ue(e,3),""):void 0,displayName:null!=Ue(e,4)?Ze(Ue(e,4),""):void 0}}))}function sn(e){return{x:Qe(e,1),y:Qe(e,2),z:Qe(e,3),visibility:null!=qe(e,4)?Qe(e,4):void 0}}function rn(e){return e.map((function(e){return Xe(Jt(e),qt,1).map(sn)}))}function an(e,t){this.i=e,this.h=t,this.m=0}function on(e,t,n){return function(e,t){var n=e.h;if(void 0===e.s){var s=tn(n,"\n  attribute vec2 aVertex;\n  attribute vec2 aTex;\n  varying vec2 vTex;\n  void main(void) {\n    gl_Position = vec4(aVertex, 0.0, 1.0);\n    vTex = aTex;\n  }",0),r=tn(n,"\n  precision mediump float;\n  varying vec2 vTex;\n  uniform sampler2D sampler0;\n  void main(){\n    gl_FragColor = texture2D(sampler0, vTex);\n  }",1),a=n.createProgram();if(n.attachShader(a,s),n.attachShader(a,r),n.linkProgram(a),!n.getProgramParameter(a,n.LINK_STATUS))throw Error("Could not compile WebGL program.\n\n"+n.getProgramInfoLog(a));s=e.s=a,n.useProgram(s),r=n.getUniformLocation(s,"sampler0"),e.l={O:n.getAttribLocation(s,"aVertex"),N:n.getAttribLocation(s,"aTex"),xa:r},e.v=n.createBuffer(),n.bindBuffer(n.ARRAY_BUFFER,e.v),n.enableVertexAttribArray(e.l.O),n.vertexAttribPointer(e.l.O,2,n.FLOAT,!1,0,0),n.bufferData(n.ARRAY_BUFFER,new Float32Array([-1,-1,-1,1,1,1,1,-1]),n.STATIC_DRAW),n.bindBuffer(n.ARRAY_BUFFER,null),e.u=n.createBuffer(),n.bindBuffer(n.ARRAY_BUFFER,e.u),n.enableVertexAttribArray(e.l.N),n.vertexAttribPointer(e.l.N,2,n.FLOAT,!1,0,0),n.bufferData(n.ARRAY_BUFFER,new Float32Array([0,1,0,0,1,0,1,1]),n.STATIC_DRAW),n.bindBuffer(n.ARRAY_BUFFER,null),n.uniform1i(r,0)}s=e.l,n.useProgram(e.s),n.canvas.width=t.width,n.canvas.height=t.height,n.viewport(0,0,t.width,t.height),n.activeTexture(n.TEXTURE0),e.i.bindTexture2d(t.glName),n.enableVertexAttribArray(s.O),n.bindBuffer(n.ARRAY_BUFFER,e.v),n.vertexAttribPointer(s.O,2,n.FLOAT,!1,0,0),n.enableVertexAttribArray(s.N),n.bindBuffer(n.ARRAY_BUFFER,e.u),n.vertexAttribPointer(s.N,2,n.FLOAT,!1,0,0),n.bindFramebuffer(n.DRAW_FRAMEBUFFER?n.DRAW_FRAMEBUFFER:n.FRAMEBUFFER,null),n.clearColor(0,0,0,0),n.clear(n.COLOR_BUFFER_BIT),n.colorMask(!0,!0,!0,!0),n.drawArrays(n.TRIANGLE_FAN,0,4),n.disableVertexAttribArray(s.O),n.disableVertexAttribArray(s.N),n.bindBuffer(n.ARRAY_BUFFER,null),e.i.bindTexture2d(0)}(e,t),"function"==typeof e.h.canvas.transferToImageBitmap?Promise.resolve(e.h.canvas.transferToImageBitmap()):n?Promise.resolve(e.h.canvas):"function"==typeof createImageBitmap?createImageBitmap(e.h.canvas):(void 0===e.j&&(e.j=document.createElement("canvas")),new Promise((function(t){e.j.height=e.h.canvas.height,e.j.width=e.h.canvas.width,e.j.getContext("2d",{}).drawImage(e.h.canvas,0,0,e.h.canvas.width,e.h.canvas.height),t(e.j)})))}function ln(e){this.h=e}Zt.prototype.l=Wt(Qt);var un=new Uint8Array([0,97,115,109,1,0,0,0,1,4,1,96,0,0,3,2,1,0,10,9,1,7,0,65,0,253,15,26,11]);function cn(e,t){return t+e}function hn(e,t){window[e]=t}function dn(e){if(this.h=e,this.listeners={},this.l={},this.L={},this.s={},this.v={},this.M=this.u=this.ga=!0,this.I=Promise.resolve(),this.fa="",this.D={},this.locateFile=e&&e.locateFile||cn,"object"==typeof window)var t=window.location.pathname.toString().substring(0,window.location.pathname.toString().lastIndexOf("/"))+"/";else{if("undefined"==typeof location)throw Error("solutions can only be loaded on a web page or in a web worker");t=location.pathname.toString().substring(0,location.pathname.toString().lastIndexOf("/"))+"/"}if(this.ha=t,e.options)for(var n=(t=o(Object.keys(e.options))).next();!n.done;n=t.next()){n=n.value;var s=e.options[n].default;void 0!==s&&(this.l[n]="function"==typeof s?s():s)}}function pn(e,t){var n,s;return N((function(r){return t in e.L?r.return(e.L[t]):(n=e.locateFile(t,""),s=fetch(n).then((function(e){return e.arrayBuffer()})),e.L[t]=s,r.return(s))}))}function fn(e,t){for(var n=t.name||"$",s=[].concat(l(t.wants)),r=new e.i.StringList,a=o(t.wants),i=a.next();!i.done;i=a.next())r.push_back(i.value);a=e.i.PacketListener.implement({onResults:function(r){for(var a={},i=0;i<t.wants.length;++i)a[s[i]]=r.get(i);var l=e.listeners[n];l&&(e.I=function(e,t,n){var s,r,a,i,l,u,c,h,d,p,f,m,g,y;return N((function(b){switch(b.h){case 1:if(!n)return b.return(t);for(s={},r=0,a=o(Object.keys(n)),i=a.next();!i.done;i=a.next())l=i.value,"string"!=typeof(u=n[l])&&"texture"===u.type&&void 0!==t[u.stream]&&++r;1<r&&(e.M=!1),c=o(Object.keys(n)),i=c.next();case 2:if(i.done){b.h=4;break}if(h=i.value,"string"==typeof(d=n[h]))return g=s,y=h,x(b,function(e,t,n){var s;return N((function(r){return"number"==typeof n||n instanceof Uint8Array||n instanceof e.i.Uint8BlobList?r.return(n):n instanceof e.i.Texture2dDataOut?((s=e.v[t])||(s=new an(e.i,e.K),e.v[t]=s),r.return(on(s,n,e.M))):r.return(void 0)}))}(e,h,t[d]),14);if(p=t[d.stream],"detection_list"===d.type){if(p){for(var w=p.getRectList(),v=p.getLandmarksList(),k=p.getClassificationsList(),I=[],S=0;S<w.size();++S){var T=en(w.get(S)),C=void 0;C=void 0===C?0:C,T={la:{ra:Qe(T,1),sa:Qe(T,2),height:Qe(T,3),width:Qe(T,4),rotation:Qe(T,5,0),pa:Ze(Ue(T,6),C)},ea:Xe(Jt(v.get(S)),qt,1).map(sn),ba:nn(Ht(k.get(S)))},I.push(T)}w=I}else w=[];s[h]=w,b.h=7;break}if("proto_list"===d.type){if(p){for(w=Array(p.size()),v=0;v<p.size();v++)w[v]=p.get(v);p.delete()}else w=[];s[h]=w,b.h=7;break}if(void 0===p){b.h=3;break}if("float_list"===d.type){s[h]=p,b.h=7;break}if("proto"===d.type){s[h]=p,b.h=7;break}if("texture"!==d.type)throw Error("Unknown output config type: '"+d.type+"'");return(f=e.v[h])||(f=new an(e.i,e.K),e.v[h]=f),x(b,on(f,p,e.M),13);case 13:m=b.i,s[h]=m;case 7:d.transform&&s[h]&&(s[h]=d.transform(s[h])),b.h=3;break;case 14:g[y]=b.i;case 3:i=c.next(),b.h=2;break;case 4:return b.return(s)}}))}(e,a,t.outs).then((function(n){n=l(n);for(var r=0;r<t.wants.length;++r){var i=a[s[r]];"object"==typeof i&&i.hasOwnProperty&&i.hasOwnProperty("delete")&&i.delete()}n&&(e.I=n)})))}}),e.j.attachMultiListener(r,a),r.delete()}function mn(e){return void 0===e&&(e=0),1===e?"hand_landmark_full.tflite":"hand_landmark_lite.tflite"}function gn(e){var t=this;e=e||{},this.h=new dn({locateFile:e.locateFile,files:function(e){return[{url:"hands_solution_packed_assets_loader.js"},{simd:!1,url:"hands_solution_wasm_bin.js"},{simd:!0,url:"hands_solution_simd_wasm_bin.js"},{data:!0,url:mn(e.modelComplexity)}]},graph:{url:"hands.binarypb"},inputs:{image:{type:"video",stream:"input_frames_gpu"}},listeners:[{wants:["multi_hand_landmarks","multi_hand_world_landmarks","image_transformed","multi_handedness"],outs:{image:"image_transformed",multiHandLandmarks:{type:"proto_list",stream:"multi_hand_landmarks",transform:rn},multiHandWorldLandmarks:{type:"proto_list",stream:"multi_hand_world_landmarks",transform:rn},multiHandedness:{type:"proto_list",stream:"multi_handedness",transform:function(e){return e.map((function(e){return nn(Ht(e))[0]}))}}}}],options:{useCpuInference:{type:0,graphOptionXref:{calculatorType:"InferenceCalculator",fieldName:"use_cpu_inference"},default:"object"==typeof window&&void 0!==window.navigator&&("iPad Simulator;iPhone Simulator;iPod Simulator;iPad;iPhone;iPod".split(";").includes(navigator.platform)||navigator.userAgent.includes("Mac")&&"ontouchend"in document)},selfieMode:{type:0,graphOptionXref:{calculatorType:"GlScalerCalculator",calculatorIndex:1,fieldName:"flip_horizontal"}},maxNumHands:{type:1,graphOptionXref:{calculatorType:"ConstantSidePacketCalculator",calculatorName:"ConstantSidePacketCalculator",fieldName:"int_value"}},modelComplexity:{type:1,graphOptionXref:{calculatorType:"ConstantSidePacketCalculator",calculatorName:"ConstantSidePacketCalculatorModelComplexity",fieldName:"int_value"},onChange:function(e){var n,s,r;return N((function(a){return 1==a.h?(n=mn(e),s="third_party/mediapipe/modules/hand_landmark/"+n,x(a,pn(t.h,n),2)):(r=a.i,t.h.overrideFile(s,r),a.return(!0))}))}},minDetectionConfidence:{type:1,graphOptionXref:{calculatorType:"TensorsToDetectionsCalculator",calculatorName:"handlandmarktrackinggpu__palmdetectiongpu__TensorsToDetectionsCalculator",fieldName:"min_score_thresh"}},minTrackingConfidence:{type:1,graphOptionXref:{calculatorType:"ThresholdingCalculator",calculatorName:"handlandmarktrackinggpu__handlandmarkgpu__ThresholdingCalculator",fieldName:"threshold"}}}})}(e=dn.prototype).close=function(){return this.j&&this.j.delete(),Promise.resolve()},e.reset=function(){var e=this;return N((function(t){e.j&&(e.j.reset(),e.s={},e.v={}),t.h=0}))},e.setOptions=function(e,t){var n=this;if(t=t||this.h.options){for(var s=[],r=[],a={},i=o(Object.keys(e)),l=i.next();!l.done;a={X:a.X,Y:a.Y},l=i.next())if(!((l=l.value)in this.l)||this.l[l]!==e[l]){this.l[l]=e[l];var u=t[l];void 0!==u&&(u.onChange&&(a.X=u.onChange,a.Y=e[l],s.push(function(e){return function(){return N((function(t){if(1==t.h)return x(t,e.X(e.Y),2);!0===t.i&&(n.u=!0),t.h=0}))}}(a))),u.graphOptionXref&&(l=Object.assign({},{calculatorName:"",calculatorIndex:0},u.graphOptionXref,{valueNumber:1===u.type?e[l]:0,valueBoolean:0===u.type&&e[l],valueString:2===u.type?e[l]:""}),r.push(l)))}0===s.length&&0===r.length||(this.u=!0,this.H=(void 0===this.H?[]:this.H).concat(r),this.F=(void 0===this.F?[]:this.F).concat(s))}},e.initialize=function(){var e=this;return N((function(t){return 1==t.h?x(t,function(e){var t,n,s,r,a,i,o,u,c,h,d;return N((function(p){switch(p.h){case 1:return e.ga?(t=void 0===e.h.files?[]:"function"==typeof e.h.files?e.h.files(e.l):e.h.files,x(p,N((function(e){switch(e.h){case 1:return e.s=2,x(e,WebAssembly.instantiate(un),4);case 4:e.h=3,e.s=0;break;case 2:return e.s=0,e.l=null,e.return(!1);case 3:return e.return(!0)}})),2)):p.return();case 2:if(n=p.i,"object"==typeof window)return hn("createMediapipeSolutionsWasm",{locateFile:e.locateFile}),hn("createMediapipeSolutionsPackedAssets",{locateFile:e.locateFile}),i=t.filter((function(e){return void 0!==e.data})),o=t.filter((function(e){return void 0===e.data})),u=Promise.all(i.map((function(t){var n=pn(e,t.url);if(void 0!==t.path){var s=t.path;n=n.then((function(t){return e.overrideFile(s,t),Promise.resolve(t)}))}return n}))),c=Promise.all(o.map((function(t){return void 0===t.simd||t.simd&&n||!t.simd&&!n?function(e){var t=document.createElement("script");return t.setAttribute("src",e),t.setAttribute("crossorigin","anonymous"),new Promise((function(e){t.addEventListener("load",(function(){e()}),!1),t.addEventListener("error",(function(){e()}),!1),document.body.appendChild(t)}))}(e.locateFile(t.url,e.ha)):Promise.resolve()}))).then((function(){var t,n,s;return N((function(r){if(1==r.h)return t=window.createMediapipeSolutionsWasm,n=window.createMediapipeSolutionsPackedAssets,s=e,x(r,t(n),2);s.i=r.i,r.h=0}))})),h=N((function(t){return e.h.graph&&e.h.graph.url?t=x(t,pn(e,e.h.graph.url),0):(t.h=0,t=void 0),t})),x(p,Promise.all([c,u,h]),7);if("function"!=typeof importScripts)throw Error("solutions can only be loaded on a web page or in a web worker");return s=t.filter((function(e){return void 0===e.simd||e.simd&&n||!e.simd&&!n})).map((function(t){return e.locateFile(t.url,e.ha)})),importScripts.apply(null,l(s)),r=e,x(p,createMediapipeSolutionsWasm(Module),6);case 6:r.i=p.i,e.m=new OffscreenCanvas(1,1),e.i.canvas=e.m,a=e.i.GL.createContext(e.m,{antialias:!1,alpha:!1,ua:"undefined"!=typeof WebGL2RenderingContext?2:1}),e.i.GL.makeContextCurrent(a),p.h=4;break;case 7:if(e.m=document.createElement("canvas"),!(d=e.m.getContext("webgl2",{}))&&!(d=e.m.getContext("webgl",{})))return alert("Failed to create WebGL canvas context when passing video frame."),p.return();e.K=d,e.i.canvas=e.m,e.i.createContext(e.m,!0,!0,{});case 4:e.j=new e.i.SolutionWasm,e.ga=!1,p.h=0}}))}(e),2):3!=t.h?x(t,function(e){var t,n,s,r,a,i,l,u;return N((function(c){if(1==c.h)return e.h.graph&&e.h.graph.url&&e.fa===e.h.graph.url?c.return():(e.u=!0,e.h.graph&&e.h.graph.url?(e.fa=e.h.graph.url,x(c,pn(e,e.h.graph.url),3)):void(c.h=2));for(2!=c.h&&(t=c.i,e.j.loadGraph(t)),n=o(Object.keys(e.D)),s=n.next();!s.done;s=n.next())r=s.value,e.j.overrideFile(r,e.D[r]);if(e.D={},e.h.listeners)for(a=o(e.h.listeners),i=a.next();!i.done;i=a.next())l=i.value,fn(e,l);u=e.l,e.l={},e.setOptions(u),c.h=0}))}(e),3):x(t,function(e){var t,n,s,r,a,i;return N((function(l){switch(l.h){case 1:if(!e.u)return l.return();if(!e.F){l.h=2;break}t=o(e.F),n=t.next();case 3:if(n.done){l.h=5;break}return x(l,(0,n.value)(),4);case 4:n=t.next(),l.h=3;break;case 5:e.F=void 0;case 2:if(e.H){for(s=new e.i.GraphOptionChangeRequestList,r=o(e.H),a=r.next();!a.done;a=r.next())i=a.value,s.push_back(i);e.j.changeOptions(s),s.delete(),e.H=void 0}e.u=!1,l.h=0}}))}(e),0)}))},e.overrideFile=function(e,t){this.j?this.j.overrideFile(e,t):this.D[e]=t},e.clearOverriddenFiles=function(){this.D={},this.j&&this.j.clearOverriddenFiles()},e.send=function(e,t){var n,s,r,a,i,l,u,c,h,d=this;return N((function(p){switch(p.h){case 1:return d.h.inputs?(n=1e3*(null==t?performance.now():t),x(p,d.I,2)):p.return();case 2:return x(p,d.initialize(),3);case 3:for(s=new d.i.PacketDataList,r=o(Object.keys(e)),a=r.next();!a.done;a=r.next())if(i=a.value,l=d.h.inputs[i]){e:{var f=e[i];switch(l.type){case"video":var m=d.s[l.stream];if(m||(m=new an(d.i,d.K),d.s[l.stream]=m),0===m.m&&(m.m=m.i.createTexture()),"undefined"!=typeof HTMLVideoElement&&f instanceof HTMLVideoElement)var g=f.videoWidth,y=f.videoHeight;else"undefined"!=typeof HTMLImageElement&&f instanceof HTMLImageElement?(g=f.naturalWidth,y=f.naturalHeight):(g=f.width,y=f.height);y={glName:m.m,width:g,height:y},(g=m.h).canvas.width=y.width,g.canvas.height=y.height,g.activeTexture(g.TEXTURE0),m.i.bindTexture2d(m.m),g.texImage2D(g.TEXTURE_2D,0,g.RGBA,g.RGBA,g.UNSIGNED_BYTE,f),m.i.bindTexture2d(0),m=y;break e;case"detections":for((m=d.s[l.stream])||(m=new ln(d.i),d.s[l.stream]=m),m.data||(m.data=new m.h.DetectionListData),m.data.reset(f.length),y=0;y<f.length;++y){g=f[y];var b=m.data,w=b.setBoundingBox,v=y,k=g.la,I=new Zt;if(Ye(I,1,k.ra),Ye(I,2,k.sa),Ye(I,3,k.height),Ye(I,4,k.width),Ye(I,5,k.rotation),Ge(I,6,k.pa),k=I.l(),w.call(b,v,k),g.ea)for(b=0;b<g.ea.length;++b){I=g.ea[b],v=(w=m.data).addNormalizedLandmark,k=y,I=Object.assign({},I,{visibility:I.visibility?I.visibility:0});var N=new qt;Ye(N,1,I.x),Ye(N,2,I.y),Ye(N,3,I.z),I.visibility&&Ye(N,4,I.visibility),I=N.l(),v.call(w,k,I)}if(g.ba)for(b=0;b<g.ba.length;++b)v=(w=m.data).addClassification,k=y,I=g.ba[b],Ye(N=new Vt,2,I.score),I.index&&Ge(N,1,I.index),I.label&&Ge(N,3,I.label),I.displayName&&Ge(N,4,I.displayName),I=N.l(),v.call(w,k,I)}m=m.data;break e;default:m={}}}switch(u=m,c=l.stream,l.type){case"video":s.pushTexture2d(Object.assign({},u,{stream:c,timestamp:n}));break;case"detections":(h=u).stream=c,h.timestamp=n,s.pushDetectionList(h);break;default:throw Error("Unknown input config type: '"+l.type+"'")}}return d.j.send(s),x(p,d.I,4);case 4:s.delete(),p.h=0}}))},e.onResults=function(e,t){this.listeners[t||"$"]=e},C("Solution",dn),C("OptionType",{BOOL:0,NUMBER:1,ta:2,0:"BOOL",1:"NUMBER",2:"STRING"}),(e=gn.prototype).close=function(){return this.h.close(),Promise.resolve()},e.onResults=function(e){this.h.onResults(e)},e.initialize=function(){var e=this;return N((function(t){return x(t,e.h.initialize(),0)}))},e.reset=function(){this.h.reset()},e.send=function(e){var t=this;return N((function(n){return x(n,t.h.send(e),0)}))},e.setOptions=function(e){this.h.setOptions(e)},C("Hands",gn),C("HAND_CONNECTIONS",[[0,1],[1,2],[2,3],[3,4],[0,5],[5,6],[6,7],[7,8],[5,9],[9,10],[10,11],[11,12],[9,13],[13,14],[14,15],[15,16],[13,17],[0,17],[17,18],[18,19],[19,20]]),C("VERSION","0.4.1675469240")}).call(this)},570:e=>{e.exports=n;var t=null;try{t=new WebAssembly.Instance(new WebAssembly.Module(new Uint8Array([0,97,115,109,1,0,0,0,1,13,2,96,0,1,127,96,4,127,127,127,127,1,127,3,7,6,0,1,1,1,1,1,6,6,1,127,1,65,0,11,7,50,6,3,109,117,108,0,1,5,100,105,118,95,115,0,2,5,100,105,118,95,117,0,3,5,114,101,109,95,115,0,4,5,114,101,109,95,117,0,5,8,103,101,116,95,104,105,103,104,0,0,10,191,1,6,4,0,35,0,11,36,1,1,126,32,0,173,32,1,173,66,32,134,132,32,2,173,32,3,173,66,32,134,132,126,34,4,66,32,135,167,36,0,32,4,167,11,36,1,1,126,32,0,173,32,1,173,66,32,134,132,32,2,173,32,3,173,66,32,134,132,127,34,4,66,32,135,167,36,0,32,4,167,11,36,1,1,126,32,0,173,32,1,173,66,32,134,132,32,2,173,32,3,173,66,32,134,132,128,34,4,66,32,135,167,36,0,32,4,167,11,36,1,1,126,32,0,173,32,1,173,66,32,134,132,32,2,173,32,3,173,66,32,134,132,129,34,4,66,32,135,167,36,0,32,4,167,11,36,1,1,126,32,0,173,32,1,173,66,32,134,132,32,2,173,32,3,173,66,32,134,132,130,34,4,66,32,135,167,36,0,32,4,167,11])),{}).exports}catch(e){}function n(e,t,n){this.low=0|e,this.high=0|t,this.unsigned=!!n}function s(e){return!0===(e&&e.__isLong__)}n.prototype.__isLong__,Object.defineProperty(n.prototype,"__isLong__",{value:!0}),n.isLong=s;var r={},a={};function i(e,t){var n,s,i;return t?(i=0<=(e>>>=0)&&e<256)&&(s=a[e])?s:(n=l(e,(0|e)<0?-1:0,!0),i&&(a[e]=n),n):(i=-128<=(e|=0)&&e<128)&&(s=r[e])?s:(n=l(e,e<0?-1:0,!1),i&&(r[e]=n),n)}function o(e,t){if(isNaN(e))return t?y:g;if(t){if(e<0)return y;if(e>=p)return k}else{if(e<=-f)return I;if(e+1>=f)return v}return e<0?o(-e,t).neg():l(e%d|0,e/d|0,t)}function l(e,t,s){return new n(e,t,s)}n.fromInt=i,n.fromNumber=o,n.fromBits=l;var u=Math.pow;function c(e,t,n){if(0===e.length)throw Error("empty string");if("NaN"===e||"Infinity"===e||"+Infinity"===e||"-Infinity"===e)return g;if("number"==typeof t?(n=t,t=!1):t=!!t,(n=n||10)<2||36<n)throw RangeError("radix");var s;if((s=e.indexOf("-"))>0)throw Error("interior hyphen");if(0===s)return c(e.substring(1),t,n).neg();for(var r=o(u(n,8)),a=g,i=0;i<e.length;i+=8){var l=Math.min(8,e.length-i),h=parseInt(e.substring(i,i+l),n);if(l<8){var d=o(u(n,l));a=a.mul(d).add(o(h))}else a=(a=a.mul(r)).add(o(h))}return a.unsigned=t,a}function h(e,t){return"number"==typeof e?o(e,t):"string"==typeof e?c(e,t):l(e.low,e.high,"boolean"==typeof t?t:e.unsigned)}n.fromString=c,n.fromValue=h;var d=4294967296,p=d*d,f=p/2,m=i(1<<24),g=i(0);n.ZERO=g;var y=i(0,!0);n.UZERO=y;var b=i(1);n.ONE=b;var x=i(1,!0);n.UONE=x;var w=i(-1);n.NEG_ONE=w;var v=l(-1,2147483647,!1);n.MAX_VALUE=v;var k=l(-1,-1,!0);n.MAX_UNSIGNED_VALUE=k;var I=l(0,-2147483648,!1);n.MIN_VALUE=I;var N=n.prototype;N.toInt=function(){return this.unsigned?this.low>>>0:this.low},N.toNumber=function(){return this.unsigned?(this.high>>>0)*d+(this.low>>>0):this.high*d+(this.low>>>0)},N.toString=function(e){if((e=e||10)<2||36<e)throw RangeError("radix");if(this.isZero())return"0";if(this.isNegative()){if(this.eq(I)){var t=o(e),n=this.div(t),s=n.mul(t).sub(this);return n.toString(e)+s.toInt().toString(e)}return"-"+this.neg().toString(e)}for(var r=o(u(e,6),this.unsigned),a=this,i="";;){var l=a.div(r),c=(a.sub(l.mul(r)).toInt()>>>0).toString(e);if((a=l).isZero())return c+i;for(;c.length<6;)c="0"+c;i=""+c+i}},N.getHighBits=function(){return this.high},N.getHighBitsUnsigned=function(){return this.high>>>0},N.getLowBits=function(){return this.low},N.getLowBitsUnsigned=function(){return this.low>>>0},N.getNumBitsAbs=function(){if(this.isNegative())return this.eq(I)?64:this.neg().getNumBitsAbs();for(var e=0!=this.high?this.high:this.low,t=31;t>0&&!(e&1<<t);t--);return 0!=this.high?t+33:t+1},N.isZero=function(){return 0===this.high&&0===this.low},N.eqz=N.isZero,N.isNegative=function(){return!this.unsigned&&this.high<0},N.isPositive=function(){return this.unsigned||this.high>=0},N.isOdd=function(){return!(1&~this.low)},N.isEven=function(){return!(1&this.low)},N.equals=function(e){return s(e)||(e=h(e)),(this.unsigned===e.unsigned||this.high>>>31!=1||e.high>>>31!=1)&&this.high===e.high&&this.low===e.low},N.eq=N.equals,N.notEquals=function(e){return!this.eq(e)},N.neq=N.notEquals,N.ne=N.notEquals,N.lessThan=function(e){return this.comp(e)<0},N.lt=N.lessThan,N.lessThanOrEqual=function(e){return this.comp(e)<=0},N.lte=N.lessThanOrEqual,N.le=N.lessThanOrEqual,N.greaterThan=function(e){return this.comp(e)>0},N.gt=N.greaterThan,N.greaterThanOrEqual=function(e){return this.comp(e)>=0},N.gte=N.greaterThanOrEqual,N.ge=N.greaterThanOrEqual,N.compare=function(e){if(s(e)||(e=h(e)),this.eq(e))return 0;var t=this.isNegative(),n=e.isNegative();return t&&!n?-1:!t&&n?1:this.unsigned?e.high>>>0>this.high>>>0||e.high===this.high&&e.low>>>0>this.low>>>0?-1:1:this.sub(e).isNegative()?-1:1},N.comp=N.compare,N.negate=function(){return!this.unsigned&&this.eq(I)?I:this.not().add(b)},N.neg=N.negate,N.add=function(e){s(e)||(e=h(e));var t=this.high>>>16,n=65535&this.high,r=this.low>>>16,a=65535&this.low,i=e.high>>>16,o=65535&e.high,u=e.low>>>16,c=0,d=0,p=0,f=0;return p+=(f+=a+(65535&e.low))>>>16,d+=(p+=r+u)>>>16,c+=(d+=n+o)>>>16,c+=t+i,l((p&=65535)<<16|(f&=65535),(c&=65535)<<16|(d&=65535),this.unsigned)},N.subtract=function(e){return s(e)||(e=h(e)),this.add(e.neg())},N.sub=N.subtract,N.multiply=function(e){if(this.isZero())return g;if(s(e)||(e=h(e)),t)return l(t.mul(this.low,this.high,e.low,e.high),t.get_high(),this.unsigned);if(e.isZero())return g;if(this.eq(I))return e.isOdd()?I:g;if(e.eq(I))return this.isOdd()?I:g;if(this.isNegative())return e.isNegative()?this.neg().mul(e.neg()):this.neg().mul(e).neg();if(e.isNegative())return this.mul(e.neg()).neg();if(this.lt(m)&&e.lt(m))return o(this.toNumber()*e.toNumber(),this.unsigned);var n=this.high>>>16,r=65535&this.high,a=this.low>>>16,i=65535&this.low,u=e.high>>>16,c=65535&e.high,d=e.low>>>16,p=65535&e.low,f=0,y=0,b=0,x=0;return b+=(x+=i*p)>>>16,y+=(b+=a*p)>>>16,b&=65535,y+=(b+=i*d)>>>16,f+=(y+=r*p)>>>16,y&=65535,f+=(y+=a*d)>>>16,y&=65535,f+=(y+=i*c)>>>16,f+=n*p+r*d+a*c+i*u,l((b&=65535)<<16|(x&=65535),(f&=65535)<<16|(y&=65535),this.unsigned)},N.mul=N.multiply,N.divide=function(e){if(s(e)||(e=h(e)),e.isZero())throw Error("division by zero");var n,r,a;if(t)return this.unsigned||-2147483648!==this.high||-1!==e.low||-1!==e.high?l((this.unsigned?t.div_u:t.div_s)(this.low,this.high,e.low,e.high),t.get_high(),this.unsigned):this;if(this.isZero())return this.unsigned?y:g;if(this.unsigned){if(e.unsigned||(e=e.toUnsigned()),e.gt(this))return y;if(e.gt(this.shru(1)))return x;a=y}else{if(this.eq(I))return e.eq(b)||e.eq(w)?I:e.eq(I)?b:(n=this.shr(1).div(e).shl(1)).eq(g)?e.isNegative()?b:w:(r=this.sub(e.mul(n)),a=n.add(r.div(e)));if(e.eq(I))return this.unsigned?y:g;if(this.isNegative())return e.isNegative()?this.neg().div(e.neg()):this.neg().div(e).neg();if(e.isNegative())return this.div(e.neg()).neg();a=g}for(r=this;r.gte(e);){n=Math.max(1,Math.floor(r.toNumber()/e.toNumber()));for(var i=Math.ceil(Math.log(n)/Math.LN2),c=i<=48?1:u(2,i-48),d=o(n),p=d.mul(e);p.isNegative()||p.gt(r);)p=(d=o(n-=c,this.unsigned)).mul(e);d.isZero()&&(d=b),a=a.add(d),r=r.sub(p)}return a},N.div=N.divide,N.modulo=function(e){return s(e)||(e=h(e)),t?l((this.unsigned?t.rem_u:t.rem_s)(this.low,this.high,e.low,e.high),t.get_high(),this.unsigned):this.sub(this.div(e).mul(e))},N.mod=N.modulo,N.rem=N.modulo,N.not=function(){return l(~this.low,~this.high,this.unsigned)},N.and=function(e){return s(e)||(e=h(e)),l(this.low&e.low,this.high&e.high,this.unsigned)},N.or=function(e){return s(e)||(e=h(e)),l(this.low|e.low,this.high|e.high,this.unsigned)},N.xor=function(e){return s(e)||(e=h(e)),l(this.low^e.low,this.high^e.high,this.unsigned)},N.shiftLeft=function(e){return s(e)&&(e=e.toInt()),0==(e&=63)?this:e<32?l(this.low<<e,this.high<<e|this.low>>>32-e,this.unsigned):l(0,this.low<<e-32,this.unsigned)},N.shl=N.shiftLeft,N.shiftRight=function(e){return s(e)&&(e=e.toInt()),0==(e&=63)?this:e<32?l(this.low>>>e|this.high<<32-e,this.high>>e,this.unsigned):l(this.high>>e-32,this.high>=0?0:-1,this.unsigned)},N.shr=N.shiftRight,N.shiftRightUnsigned=function(e){if(s(e)&&(e=e.toInt()),0==(e&=63))return this;var t=this.high;return e<32?l(this.low>>>e|t<<32-e,t>>>e,this.unsigned):l(32===e?t:t>>>e-32,0,this.unsigned)},N.shru=N.shiftRightUnsigned,N.shr_u=N.shiftRightUnsigned,N.toSigned=function(){return this.unsigned?l(this.low,this.high,!1):this},N.toUnsigned=function(){return this.unsigned?this:l(this.low,this.high,!0)},N.toBytes=function(e){return e?this.toBytesLE():this.toBytesBE()},N.toBytesLE=function(){var e=this.high,t=this.low;return[255&t,t>>>8&255,t>>>16&255,t>>>24,255&e,e>>>8&255,e>>>16&255,e>>>24]},N.toBytesBE=function(){var e=this.high,t=this.low;return[e>>>24,e>>>16&255,e>>>8&255,255&e,t>>>24,t>>>16&255,t>>>8&255,255&t]},n.fromBytes=function(e,t,s){return s?n.fromBytesLE(e,t):n.fromBytesBE(e,t)},n.fromBytesLE=function(e,t){return new n(e[0]|e[1]<<8|e[2]<<16|e[3]<<24,e[4]|e[5]<<8|e[6]<<16|e[7]<<24,t)},n.fromBytesBE=function(e,t){return new n(e[4]<<24|e[5]<<16|e[6]<<8|e[7],e[0]<<24|e[1]<<16|e[2]<<8|e[3],t)}},590:()=>{},717:function(e,t,n){var s;!function(e,r){function a(e){var t=this,n="";t.next=function(){var e=t.b,n=t.c,s=t.d,r=t.a;return e=e<<25^e>>>7^n,n=n-s|0,s=s<<24^s>>>8^r,r=r-e|0,t.b=e=e<<20^e>>>12^n,t.c=n=n-s|0,t.d=s<<16^n>>>16^r,t.a=r-e|0},t.a=0,t.b=0,t.c=-1640531527,t.d=1367130551,e===Math.floor(e)?(t.a=e/4294967296|0,t.b=0|e):n+=e;for(var s=0;s<n.length+20;s++)t.b^=0|n.charCodeAt(s),t.next()}function i(e,t){return t.a=e.a,t.b=e.b,t.c=e.c,t.d=e.d,t}function o(e,t){var n=new a(e),s=t&&t.state,r=function(){return(n.next()>>>0)/4294967296};return r.double=function(){do{var e=((n.next()>>>11)+(n.next()>>>0)/4294967296)/(1<<21)}while(0===e);return e},r.int32=n.next,r.quick=r,s&&("object"==typeof s&&i(s,n),r.state=function(){return i(n,{})}),r}r&&r.exports?r.exports=o:n.amdD&&n.amdO?void 0===(s=function(){return o}.call(t,n,t,r))||(r.exports=s):this.tychei=o}(0,e=n.nmd(e),n.amdD)},801:function(e,t,n){var s;!function(r,a,i){var o,l=256,u=i.pow(l,6),c=i.pow(2,52),h=2*c,d=255;function p(e,t,n){var s=[],d=y(g((t=1==t?{entropy:!0}:t||{}).entropy?[e,b(a)]:null==e?function(){try{var e;return o&&(e=o.randomBytes)?e=e(l):(e=new Uint8Array(l),(r.crypto||r.msCrypto).getRandomValues(e)),b(e)}catch(e){var t=r.navigator,n=t&&t.plugins;return[+new Date,r,n,r.screen,b(a)]}}():e,3),s),p=new f(s),x=function(){for(var e=p.g(6),t=u,n=0;e<c;)e=(e+n)*l,t*=l,n=p.g(1);for(;e>=h;)e/=2,t/=2,n>>>=1;return(e+n)/t};return x.int32=function(){return 0|p.g(4)},x.quick=function(){return p.g(4)/4294967296},x.double=x,y(b(p.S),a),(t.pass||n||function(e,t,n,s){return s&&(s.S&&m(s,p),e.state=function(){return m(p,{})}),n?(i.random=e,t):e})(x,d,"global"in t?t.global:this==i,t.state)}function f(e){var t,n=e.length,s=this,r=0,a=s.i=s.j=0,i=s.S=[];for(n||(e=[n++]);r<l;)i[r]=r++;for(r=0;r<l;r++)i[r]=i[a=d&a+e[r%n]+(t=i[r])],i[a]=t;(s.g=function(e){for(var t,n=0,r=s.i,a=s.j,i=s.S;e--;)t=i[r=d&r+1],n=n*l+i[d&(i[r]=i[a=d&a+t])+(i[a]=t)];return s.i=r,s.j=a,n})(l)}function m(e,t){return t.i=e.i,t.j=e.j,t.S=e.S.slice(),t}function g(e,t){var n,s=[],r=typeof e;if(t&&"object"==r)for(n in e)try{s.push(g(e[n],t-1))}catch(e){}return s.length?s:"string"==r?e:e+"\0"}function y(e,t){for(var n,s=e+"",r=0;r<s.length;)t[d&r]=d&(n^=19*t[d&r])+s.charCodeAt(r++);return b(t)}function b(e){return String.fromCharCode.apply(0,e)}if(y(i.random(),a),e.exports){e.exports=p;try{o=n(234)}catch(e){}}else void 0===(s=function(){return p}.call(t,n,t,e))||(e.exports=s)}("undefined"!=typeof self?self:this,[],Math)},817:()=>{},833:function(e,t,n){var s;!function(e,r){function a(e){var t=this;t.next=function(){var e,n,s=t.w,r=t.X,a=t.i;return t.w=s=s+1640531527|0,n=r[a+34&127],e=r[a=a+1&127],n^=n<<13,e^=e<<17,n^=n>>>15,e^=e>>>12,n=r[a]=n^e,t.i=a,n+(s^s>>>16)|0},function(e,t){var n,s,r,a,i,o=[],l=128;for(t===(0|t)?(s=t,t=null):(t+="\0",s=0,l=Math.max(l,t.length)),r=0,a=-32;a<l;++a)t&&(s^=t.charCodeAt((a+32)%t.length)),0===a&&(i=s),s^=s<<10,s^=s>>>15,s^=s<<4,s^=s>>>13,a>=0&&(i=i+1640531527|0,r=0==(n=o[127&a]^=s+i)?r+1:0);for(r>=128&&(o[127&(t&&t.length||0)]=-1),r=127,a=512;a>0;--a)s=o[r+34&127],n=o[r=r+1&127],s^=s<<13,n^=n<<17,s^=s>>>15,n^=n>>>12,o[r]=s^n;e.w=i,e.X=o,e.i=r}(t,e)}function i(e,t){return t.i=e.i,t.w=e.w,t.X=e.X.slice(),t}function o(e,t){null==e&&(e=+new Date);var n=new a(e),s=t&&t.state,r=function(){return(n.next()>>>0)/4294967296};return r.double=function(){do{var e=((n.next()>>>11)+(n.next()>>>0)/4294967296)/(1<<21)}while(0===e);return e},r.int32=n.next,r.quick=r,s&&(s.X&&i(s,n),r.state=function(){return i(n,{})}),r}r&&r.exports?r.exports=o:n.amdD&&n.amdO?void 0===(s=function(){return o}.call(t,n,t,r))||(r.exports=s):this.xor4096=o}(0,e=n.nmd(e),n.amdD)}},t={};function n(s){var r=t[s];if(void 0!==r)return r.exports;var a=t[s]={id:s,loaded:!1,exports:{}};return e[s].call(a.exports,a,a.exports,n),a.loaded=!0,a.exports}n.amdD=function(){throw new Error("define cannot be used indirect")},n.amdO={},n.n=e=>{var t=e&&e.__esModule?()=>e.default:()=>e;return n.d(t,{a:t}),t},n.d=(e,t)=>{for(var s in t)n.o(t,s)&&!n.o(e,s)&&Object.defineProperty(e,s,{enumerable:!0,get:t[s]})},n.g=function(){if("object"==typeof globalThis)return globalThis;try{return this||new Function("return this")()}catch(e){if("object"==typeof window)return window}}(),n.o=(e,t)=>Object.prototype.hasOwnProperty.call(e,t),n.r=e=>{"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})},n.nmd=e=>(e.paths=[],e.children||(e.children=[]),e),(()=>{"use strict";var e={};n.r(e),n.d(e,{CompositeArrayBuffer:()=>Ea,browserFiles:()=>ko,browserHTTPRequest:()=>Ro,concatenateArrayBuffers:()=>Ka,copyModel:()=>Fi,decodeWeights:()=>Ba,decodeWeightsStream:()=>Ga,encodeWeights:()=>za,fromMemory:()=>Oo,fromMemorySync:()=>Mo,getLoadHandlers:()=>ai,getModelArtifactsForJSON:()=>Za,getModelArtifactsForJSONSync:()=>Ja,getModelArtifactsInfoForJSON:()=>Qa,getSaveHandlers:()=>ri,getWeightSpecs:()=>ei,http:()=>Ao,isHTTPScheme:()=>$o,listModels:()=>Ri,loadWeights:()=>So,moveModel:()=>Di,registerLoadRouter:()=>si,registerSaveRouter:()=>ni,removeModel:()=>_i,weightsLoaderFactory:()=>To,withSaveHandler:()=>Lo,withSaveHandlerSync:()=>zo});var t={};n.r(t),n.d(t,{assertParamsValid:()=>Go,computeFlatOffset:()=>sl,computeOutShape:()=>Ho,getNormalizedAxes:()=>Yo,isSliceContinous:()=>nl,maskToAxes:()=>jo,parseSliceParams:()=>rl,sliceInfo:()=>al,startForAxis:()=>el,startIndicesWithElidedDims:()=>Jo,stopForAxis:()=>tl,stopIndicesWithElidedDims:()=>Zo,stridesForAxis:()=>Qo,stridesWithElidedDims:()=>qo});var s={};n.r(s),n.d(s,{conv2d:()=>bd,depthwiseConv2d:()=>vd,matMul:()=>kd});var r={};n.r(r),n.d(r,{collectGatherOpShapeInfo:()=>$f,computeOutShape:()=>Cf,segOpComputeOptimalWindowSize:()=>Tf});var a={};n.r(a),n.d(a,{ERF_A1:()=>Up,ERF_A2:()=>Gp,ERF_A3:()=>jp,ERF_A4:()=>Hp,ERF_A5:()=>qp,ERF_P:()=>Vp,PARALLELIZE_THRESHOLD:()=>Rp,RowPartitionType:()=>Tp,SELU_SCALE:()=>Wp,SELU_SCALEALPHA:()=>Pp,applyActivation:()=>gd,assertAndGetBroadcastShape:()=>ho,assertAxesAreInnerMostDims:()=>_u,assertParamsConsistent:()=>Np,assignToTypedArray:()=>Qp,axesAreInnerMostDims:()=>$u,calculateShapes:()=>Hh,checkEinsumDimSizes:()=>uf,checkPadOnDimRoundingMode:()=>Fl,combineLocations:()=>Eu,combineRaggedTensorToTensorShapes:()=>Cp,complexWithEvenIndex:()=>Yp,complexWithOddIndex:()=>Jp,computeConv2DInfo:()=>kl,computeConv3DInfo:()=>Il,computeDefaultPad:()=>Nl,computeDilation2DInfo:()=>xl,computeOptimalWindowSize:()=>_p,computeOutAndReduceShapes:()=>Au,computeOutShape:()=>Sp,computePool2DInfo:()=>wl,computePool3DInfo:()=>vl,convertConv2DDataFormat:()=>_l,decodeEinsumEquation:()=>of,eitherStridesOrDilationsAreOne:()=>Al,expandShapeToKeepDim:()=>Ru,exponent:()=>tf,exponents:()=>ef,fromStringArrayToUint8:()=>Af,fromUint8ToStringArray:()=>Ef,getAxesPermutation:()=>Fu,getBroadcastDims:()=>uo,getComplexWithIndex:()=>Zp,getEinsumComputePath:()=>cf,getEinsumPermutation:()=>lf,getFusedBiasGradient:()=>md,getFusedDyActivation:()=>fd,getImageCenter:()=>Fp,getInnerMostAxes:()=>Ou,getPermuted:()=>Op,getRaggedRank:()=>Ep,getReductionAxes:()=>co,getReshaped:()=>Dp,getReshapedPermuted:()=>Mp,getRowPartitionTypesHelper:()=>$p,getSliceBeginCoords:()=>Lp,getSliceSize:()=>zp,getSparseFillEmptyRowsIndicesDenseShapeMismatch:()=>ff,getSparseFillEmptyRowsNegativeIndexErrorMessage:()=>mf,getSparseFillEmptyRowsOutOfRangeIndexErrorMessage:()=>gf,getSparseReshapeEmptyTensorZeroOutputDimErrorMessage:()=>xf,getSparseReshapeInputOutputMismatchErrorMessage:()=>vf,getSparseReshapeInputOutputMultipleErrorMessage:()=>wf,getSparseReshapeMultipleNegativeOneOutputDimErrorMessage:()=>yf,getSparseReshapeNegativeOutputDimErrorMessage:()=>bf,getSparseSegmentReductionIndicesOutOfRangeErrorMessage:()=>Sf,getSparseSegmentReductionNegativeSegmentIdsErrorMessage:()=>kf,getSparseSegmentReductionNonIncreasingSegmentIdsErrorMessage:()=>If,getSparseSegmentReductionSegmentIdOutOfRangeErrorMessage:()=>Nf,getUndoAxesPermutation:()=>Du,isIdentityPermutation:()=>hf,log:()=>sr,mergeRealAndImagArrays:()=>Kp,prepareAndValidate:()=>Bp,prepareSplitSize:()=>pf,segment_util:()=>r,shouldFuse:()=>yd,slice_util:()=>t,splitRealAndImagArrays:()=>Xp,stridesOrDilationsArePositive:()=>Rl,tupleValuesAreOne:()=>El,upcastType:()=>ta,validateDefaultValueShape:()=>Ap,validateInput:()=>jh,validateUpdateShape:()=>Gh,warn:()=>nr});var i={};n.r(i),n.d(i,{json:()=>zv});var o={};n.r(o),n.d(o,{json:()=>Bv});var l={};n.r(l),n.d(l,{json:()=>Pv});var u={};n.r(u),n.d(u,{json:()=>Wv});var c={};n.r(c),n.d(c,{json:()=>Vv});var h={};n.r(h),n.d(h,{json:()=>Uv});var d={};n.r(d),n.d(d,{json:()=>Gv});var p={};n.r(p),n.d(p,{json:()=>jv});var f={};n.r(f),n.d(f,{json:()=>Hv});var m={};n.r(m),n.d(m,{json:()=>qv});var g={};n.r(g),n.d(g,{json:()=>Kv});var y={};n.r(y),n.d(y,{json:()=>Xv});var b={};n.r(b),n.d(b,{json:()=>Yv});var x={};n.r(x),n.d(x,{json:()=>Jv});var w={};n.r(w),n.d(w,{json:()=>Zv});var v={};n.r(v),n.d(v,{json:()=>Qv});var k={};n.r(k),n.d(k,{json:()=>ek});var I={};n.r(I),n.d(I,{json:()=>tk});var N={};n.r(N),n.d(N,{json:()=>nk});var S={};n.r(S),n.d(S,{OP_SCOPE_SUFFIX:()=>Ia,abs:()=>lo,acos:()=>ol,acosh:()=>ll,add:()=>Wi,addN:()=>ul,all:()=>cl,any:()=>hl,argMax:()=>dl,argMin:()=>pl,asin:()=>fl,asinh:()=>ml,atan:()=>gl,atan2:()=>yl,atanh:()=>bl,avgPool:()=>Ol,avgPool3d:()=>Ml,basicLSTMCell:()=>Vl,batchNorm:()=>Gl,batchNorm2d:()=>jl,batchNorm3d:()=>Hl,batchNorm4d:()=>ql,batchToSpaceND:()=>Ul,bincount:()=>Kl,bitwiseAnd:()=>Xl,booleanMaskAsync:()=>sd,broadcastArgs:()=>Yl,broadcastTo:()=>Jl,buffer:()=>Li,cast:()=>zi,ceil:()=>Zl,clipByValue:()=>Ql,clone:()=>Bi,complex:()=>Sa,concat:()=>Ll,concat1d:()=>eu,concat2d:()=>tu,concat3d:()=>nu,concat4d:()=>su,conv1d:()=>au,conv2d:()=>ru,conv2dTranspose:()=>ou,conv3d:()=>lu,conv3dTranspose:()=>cu,cos:()=>hu,cosh:()=>du,cosineWindow:()=>hd,cumprod:()=>pu,cumsum:()=>fu,denseBincount:()=>mu,depthToSpace:()=>gu,depthwiseConv2d:()=>yu,diag:()=>bu,dilation2d:()=>xu,div:()=>Ui,divNoNan:()=>ku,dot:()=>Iu,dropout:()=>ud,einsum:()=>Nu,elu:()=>Su,enclosingPowerOfTwo:()=>cd,ensureShape:()=>Tu,equal:()=>wu,erf:()=>Cu,euclideanNorm:()=>Wu,exp:()=>Vu,expandDims:()=>Uu,expm1:()=>Gu,eye:()=>Hu,fft:()=>$h,fill:()=>so,floor:()=>qu,floorDiv:()=>Vi,fused:()=>s,gather:()=>Ku,gatherND:()=>ld,greater:()=>Xu,greaterEqual:()=>Yu,ifft:()=>Eh,imag:()=>Ju,image:()=>gp,inTopKAsync:()=>dd,irfft:()=>Ah,isFinite:()=>Zu,isInf:()=>Qu,isNaN:()=>ec,leakyRelu:()=>tc,less:()=>nc,lessEqual:()=>sc,linalg:()=>yp,linspace:()=>rc,localResponseNormalization:()=>ac,log:()=>ic,log1p:()=>oc,logSigmoid:()=>cc,logSoftmax:()=>hc,logSumExp:()=>dc,logicalAnd:()=>pc,logicalNot:()=>fc,logicalOr:()=>mc,logicalXor:()=>gc,losses:()=>bp,lowerBound:()=>xc,matMul:()=>zl,max:()=>Mu,maxPool:()=>wc,maxPool3d:()=>vc,maxPoolWithArgmax:()=>kc,maximum:()=>po,mean:()=>Ic,meshgrid:()=>Tc,min:()=>Lu,minimum:()=>Cc,mirrorPad:()=>$c,mod:()=>Ec,moments:()=>Ac,movingAverage:()=>ad,mul:()=>Gi,multiRNNCell:()=>Rc,multinomial:()=>_c,neg:()=>lc,norm:()=>Pu,notEqual:()=>Fc,oneHot:()=>Dc,ones:()=>Sc,onesLike:()=>Oc,op:()=>Na,outerProduct:()=>Mc,pad:()=>Lc,pad1d:()=>zc,pad2d:()=>Bc,pad3d:()=>Pc,pad4d:()=>Wc,pool:()=>Uc,pow:()=>ao,prelu:()=>Gc,print:()=>Pi,prod:()=>jc,raggedGather:()=>Hc,raggedRange:()=>qc,raggedTensorToTensor:()=>Kc,rand:()=>Xc,randomGamma:()=>eh,randomNormal:()=>th,randomStandardNormal:()=>nh,randomUniform:()=>sh,randomUniformInt:()=>rh,range:()=>ah,real:()=>ih,reciprocal:()=>oh,relu:()=>lh,relu6:()=>uh,reshape:()=>Dl,reverse:()=>ch,reverse1d:()=>hh,reverse2d:()=>dh,reverse3d:()=>ph,reverse4d:()=>fh,rfft:()=>_h,round:()=>mh,rsqrt:()=>gh,scalar:()=>Xi,scatterND:()=>id,searchSorted:()=>bc,selu:()=>yh,separableConv2d:()=>bh,setdiff1dAsync:()=>xh,sigmoid:()=>Bl,sign:()=>wh,signal:()=>mp,sin:()=>vh,sinh:()=>kh,slice:()=>Pl,slice1d:()=>Ih,slice2d:()=>Nh,slice3d:()=>Sh,slice4d:()=>Th,softmax:()=>Ch,softplus:()=>uc,spaceToBatchND:()=>Vc,sparse:()=>xp,sparseToDense:()=>od,spectral:()=>fp,split:()=>Rh,sqrt:()=>ji,square:()=>Hi,squaredDifference:()=>Fh,squeeze:()=>Dh,stack:()=>Oh,step:()=>Mh,stridedSlice:()=>Lh,string:()=>wp,sub:()=>io,sum:()=>zu,tan:()=>zh,tanh:()=>Wl,tensor:()=>Ca,tensor1d:()=>Bh,tensor2d:()=>Ph,tensor3d:()=>Bo,tensor4d:()=>Wh,tensor5d:()=>Vh,tensor6d:()=>Uh,tensorScatterUpdate:()=>qh,tile:()=>ju,topk:()=>Kh,transpose:()=>rd,truncatedNormal:()=>Xh,unique:()=>Yh,unsortedSegmentSum:()=>Jh,unstack:()=>Zh,upperBound:()=>Qh,variable:()=>ed,where:()=>vu,whereAsync:()=>nd,zeros:()=>Nc,zerosLike:()=>qi});var T={};n.r(T),n.d(T,{mx:()=>JI,XI:()=>UN,Nk:()=>GN,f6:()=>HN,ct:()=>HI,YG:()=>YN,hH:()=>nS,z3:()=>PS,sG:()=>JS,uM:()=>nT,vS:()=>xT,qB:()=>CT,GG:()=>ET,lg:()=>DT,rq:()=>RT,cu:()=>qT,WR:()=>GT,GE:()=>YT,px:()=>ZT,jC:()=>pC,He:()=>gC,hE:()=>TC,BF:()=>_S,Dk:()=>MC,cl:()=>GC,_B:()=>s$,ub:()=>i$,_f:()=>u$,Ku:()=>m$,qy:()=>y$,Zy:()=>E$,bu:()=>_$,zv:()=>LI,dH:()=>iN,HS:()=>BN,yH:()=>Z$,l3:()=>eE,z9:()=>nE,x6:()=>oE,_m:()=>fE,eW:()=>xE,GK:()=>kE,SP:()=>SE,yr:()=>CE,dl:()=>lT,Dw:()=>FE,xT:()=>LE,_X:()=>pN,wz:()=>GE}),n(452);const C={render:()=>'\n      <header class="bg-white sticky top-0 py-4 shadow">\n        <nav class="container mx-auto flex items-center justify-between text-[#013366] text-lg px-4">\n          <a href="#" class="w-36 md:w-40">\n            <img src="../img/logo-tabir.png" alt="Logo" />\n          </a>\n\n          <input type="checkbox" id="menu-toggle" class="peer hidden">\n          <label for="menu-toggle" class="md:hidden cursor-pointer">\n            <svg class="w-8 h-8" fill="none" stroke="currentColor" stroke-width="2"\n              viewBox="0 0 24 24" stroke-linecap="round" stroke-linejoin="round">\n              <path d="M4 6h16M4 12h16M4 18h16" />\n            </svg>\n          </label>\n\n          <div class="peer-checked:flex hidden absolute top-full left-0 w-full flex-col bg-white p-4 md:relative md:flex md:flex-row md:items-center md:justify-center md:space-x-6 md:w-auto md:p-0 transition-all duration-300 ease-in-out transform peer-checked:translate-y-0 -translate-y-full md:translate-y-0">\n            <div class="flex flex-col md:flex-row items-center space-y-4 md:space-y-0 md:space-x-6">\n              <a href="#" class="py-2 md:py-0 font-bold hover:text-[#4A708B] transition-colors duration-300">Home</a>\n              <a href="#what" class="py-2 md:py-0 font-bold hover:text-[#4A708B] transition-colors duration-300">What</a>\n              <a href="#why" class="py-2 md:py-0 font-bold hover:text-[#4A708B] transition-colors duration-300">Why</a>\n              <a href="#how" class="py-2 md:py-0 font-bold hover:text-[#4A708B] transition-colors duration-300">How</a>\n              <a href="#who" class="py-2 md:py-0 font-bold hover:text-[#4A708B] transition-colors duration-300">Who</a>\n            </div>\n\n            <div class="flex flex-col md:flex-row items-center space-y-4 md:space-y-0 md:space-x-4 mt-4 md:mt-0">\n              <a href="#/login" class="text-[#013366] font-bold hover:text-[#4A708B] transition-colors duration-300">Log In</a>\n              <a href="#/register" class="bg-[#013366] text-white px-4 py-2 rounded-md hover:bg-[#4A708B] transition-colors duration-300">Create Account</a>\n            </div>\n          </div>\n        </nav>\n      </header>\n\n      <section class="bg-[#FAF5E5]">\n        <div class="container mx-auto min-h-screen flex flex-col-reverse md:flex-row justify-center items-center gap-4 md:gap-12 text-center md:text-left px-4">\n          <div class="w-full md:w-2/6">\n            <h3 class="text-3xl my-5 md:text-5xl font-bold text-[#013366] md:leading-tight">\n              Breaking Barriers<br>\n              In Sign Language<br>\n              Communication\n            </h3>\n            <p class="text-md text-balance text-[#013366]">TaBir (Tangan Bicara) uses AI to interpret sign language, making communication more accessible for everyone</p>\n            <div class="text-white mt-6 flex justify-center md:justify-start gap-2">\n              <button class="bg-[#7A8052] px-2 py-1 rounded-md hover:scale-105 transition-transform">Upload Video</button>\n              <button class="bg-[#4A708B] px-2 py-1 rounded-md hover:scale-105 transition-transform">Use Camera</button>\n            </div>\n          </div>\n          <img src="../img/logo.png" class="w-1/2 lg:w-1/4 lg:mb-0" />\n        </div>\n      </section>\n\n      <section id="what" class="bg-white">\n        <div class="container mx-auto min-h-screen flex flex-col md:flex-row justify-center items-center gap-4 md:gap-12 px-4 text-center md:text-left">\n          <img src="../img/girl-think.png" class="w-2/5 mt-2 md:w-2/6 mb-4 md:mb-0" />\n          <div class="w-full md:w-2/4">\n            <h4 class="text-3xl md:text-5xl font-bold mb-4 text-[#013366]">What is TaBir?</h4>\n            <p class="text-[#4A708B] text-sm md:text-base">TaBir is an innovative application that uses machine learning to interpret sign language from videos or real-time webcam bridging communication gaps between the deaf community and those who don\'t understand sign language</p>\n            \n            <div class="flex flex-col items-start space-y-2 my-6">\n              <div class="flex items-center space-x-2 justify-center md:justify-start">\n                <img src="../img/real-time.png">\n                <h1 class="text-lg font-semibold text-[#4A708B]">Real-Time Recognition</h1>\n              </div>\n              <p class="text-sm text-[#7AA2B2] text-center md:text-left">Instanly interprets sign language gestures through your webcam</p>\n            </div>\n\n            <div class="flex flex-col items-start space-y-2 my-6">\n              <div class="flex items-center space-x-2 justify-center md:justify-start">\n                <img src="../img/video-upload.png">\n                <h1 class="text-lg font-semibold text-[#4A708B]">Video Upload</h1>\n              </div>\n              <p class="text-sm text-[#7AA2B2] text-center md:text-left">Process pre-recorded sign language videos</p>\n            </div>\n\n            <div class="flex flex-col items-start space-y-2 my-6">\n              <div class="flex items-center space-x-2 justify-center md:justify-start">\n                <img src="../img/text-transcription.png">\n                <h1 class="text-lg font-semibold text-[#4A708B]">Text Transcription</h1>\n              </div>\n              <p class="text-sm text-[#7AA2B2] text-center md:text-left">Converts sign language to written text</p>\n            </div>\n          </div>\n        </div>\n      </section>\n\n      <section id="why" class="bg-[#FAF5E5] py-12">\n        <div class="container mx-auto min-h-screen flex flex-col md:flex-row justify-center items-center gap-8 md:gap-12 px-4 text-center md:text-left">\n          <div class="w-full md:w-2/4">\n            <h4 class="text-3xl md:text-5xl font-bold mb-4 text-[#013366]">Why TaBir Matters?</h4>\n            <p class="text-[#4A708B] font-semibold text-sm md:text-base my-4 md:my-6 text-balance">\n              Communication is a fundamental human right. For the 70 million deaf people worldwide who use sign language, barriers to communication can lead to isolation and limited opportunities\n            </p>\n            <p class="text-[#4A708B] font-semibold text-sm md:text-base my-4 md:my-6 text-balance">\n              TaBir aims to bridge this gap by making sign language interpretation accessible to everyone, anytime, anywhere-without requiring human interprets who may not always be available\n            </p>\n            <img src="../img/group-people.png" class="w-3/4 md:w-2/4 mx-auto md:mx-4 mt-4 md:mt-0">\n          </div>\n          <div class="flex flex-col-3 justify-center items-center md:flex-col md:items-start gap-6 w-full md:w-auto mt-6 md:mt-0">\n            <img src="../img/accuracy.png" class="w-1/4 md:w-2/3">\n            <img src="../img/accessibility.png" class="w-1/4 md:w-2/3">\n            <img src="../img/sibi.png" class="w-1/4 md:w-2/3">\n          </div>\n        </div>\n      </section>\n\n      <section id="how" class="bg-[#2C3E50] py-12">\n        <div class="container mx-auto min-h-screen flex flex-col md:flex-row justify-center items-center md:gap-12 px-4 text-center md:text-left">\n          <div class="w-full md:w-2/6">\n            <img src="../img/camera-prev.png" class="mb-3 mx-auto md:mx-0">\n            <div class="flex flex-col md:flex-row justify-center md:justify-between gap-4">\n              <button class="bg-[#8B9368] px-16 py-3 rounded-lg text-white text-xl font-bold">Capture</button>\n              <button class="bg-[#4A708B] px-16 py-3 rounded-lg text-white text-xl font-bold">Upload</button>\n            </div>\n          </div>\n          <div class="w-full md:w-2/4 md:mt-0">\n            <h1 class="text-3xl md:text-5xl font-bold text-[#F7F2E0] my-6">How TaBir Works?</h1>\n            <p class="text-base md:text-lg font-semibold text-balance text-[#4A708B]">Our application uses advanced machine learning algorithms to recognize and interpret sign language gestures in real-time. Here\'s how you can use TaBir :</p>\n            \n            <div class="flex flex-col md:flex-row items-center md:items-start text-center md:text-left space-y-2 md:space-y-0 md:space-x-4 my-5">\n              <img src="../img/number-1.png" class="w-16 md:w-20 mx-auto md:mx-0">\n              <div class="text-white my-2 mx-4">\n                <h2 class="text-lg font-semibold mb-2">Choose Your Input</h2>\n                <p>Select between uploading a video or using your webcam for real-time interpretation</p>\n              </div>\n            </div>\n\n            <div class="flex flex-col md:flex-row items-center md:items-start text-center md:text-left space-y-2 md:space-y-0 md:space-x-4 my-5">\n              <img src="../img/number-2.png" class="w-16 md:w-20 mx-auto md:mx-0">\n              <div class="text-white my-2 mx-4">\n                <h2 class="text-lg font-semibold mb-2">Position Yourself</h2>\n                <p>Ensure your signing is clearly visible within the frame for the best result</p>\n              </div>\n            </div>\n\n            <div class="flex flex-col md:flex-row items-center md:items-start text-center md:text-left space-y-2 md:space-y-0 md:space-x-4">\n              <img src="../img/number-3.png" class="w-16 md:w-20 mx-auto md:mx-0">\n              <div class="text-white my-2 mx-4">\n                <h2 class="text-lg font-semibold mb-2">Get interpretation</h2>\n                <p>View the real-time test interpretation of your sign language gestures</p>\n              </div>\n            </div>\n          </div>\n        </div>\n      </section>\n\n      <section id="who" class="bg-white py-12 overflow-hidden">\n        <div class="container mx-auto text-center px-4">\n          <h1 class="text-3xl md:text-5xl font-bold text-[#8B9368] mb-12">Meet Our Team</h1>\n\n          <div class="overflow-hidden">\n            <div class="flex w-[200%] animate-slide-group">\n              <div class="flex w-1/2 justify-center gap-4 md:gap-10">\n                <div class="bg-[#FAF5E5] rounded-xl px-4 md:px-6 shadow-md w-60 md:w-72">\n                  <div class="bg-[#8B9368] h-40 md:h-52 mb-4"></div>\n                  <h3 class="text-[#4A708B] font-bold text-lg text-left">Player One</h3>\n                  <p class="text-[#8B9368] text-sm mb-4 text-left">Machine Learning</p>\n                  <div class="flex space-x-4 mt-8 md:mt-12 mb-6">\n                    <img src="../img/linkedin.png" class="w-8 md:w-10 h-8 md:h-10">\n                    <img src="../img/github.png" class="w-8 md:w-10 h-8 md:h-10">\n                  </div>\n                </div>\n                <div class="bg-[#FAF5E5] rounded-xl px-4 md:px-6 shadow-md w-60 md:w-72">\n                  <div class="bg-[#7AA2B2] h-40 md:h-52 mb-4"></div>\n                  <h3 class="text-[#4A708B] font-bold text-lg text-left">Player Two</h3>\n                  <p class="text-[#8B9368] text-sm mb-4 text-left">Machine Learning</p>\n                  <div class="flex space-x-4 mt-8 md:mt-12 mb-6">\n                    <img src="../img/linkedin.png" class="w-8 md:w-10 h-8 md:h-10">\n                    <img src="../img/github.png" class="w-8 md:w-10 h-8 md:h-10">\n                  </div>\n                </div>\n                <div class="bg-[#FAF5E5] rounded-xl px-4 md:px-6 shadow-md w-60 md:w-72">\n                  <div class="bg-[#E7BD87] h-40 md:h-52 mb-4"></div>\n                  <h3 class="text-[#4A708B] font-bold text-lg text-left">Player Three</h3>\n                  <p class="text-[#8B9368] text-sm mb-4 text-left">Machine Learning</p>\n                  <div class="flex space-x-4 mt-8 md:mt-12 mb-6">\n                    <img src="../img/linkedin.png" class="w-8 md:w-10 h-8 md:h-10">\n                    <img src="../img/github.png" class="w-8 md:w-10 h-8 md:h-10">\n                  </div>\n                </div>\n              </div>\n\n              <div class="flex w-1/2 justify-center gap-4 md:gap-10">\n                <div class="bg-[#FAF5E5] rounded-xl px-4 md:px-6 shadow-md w-60 md:w-72">\n                  <div class="bg-[#A3D8F4] h-40 md:h-52 mb-4"></div>\n                  <h3 class="text-[#4A708B] font-bold text-lg text-left">Player Four</h3>\n                  <p class="text-[#8B9368] text-sm mb-4 text-left">Frontend</p>\n                  <div class="flex space-x-4 mt-8 md:mt-12 mb-6">\n                    <img src="../img/linkedin.png" class="w-8 md:w-10 h-8 md:h-10">\n                    <img src="../img/github.png" class="w-8 md:w-10 h-8 md:h-10">\n                  </div>\n                </div>\n                <div class="bg-[#FAF5E5] rounded-xl px-4 md:px-6 shadow-md w-60 md:w-72">\n                  <div class="bg-[#C4A69F] h-40 md:h-52 mb-4"></div>\n                  <h3 class="text-[#4A708B] font-bold text-lg text-left">Player Five</h3>\n                  <p class="text-[#8B9368] text-sm mb-4 text-left">Backend</p>\n                  <div class="flex space-x-4 mt-8 md:mt-12 mb-6">\n                    <img src="../img/linkedin.png" class="w-8 md:w-10 h-8 md:h-10">\n                    <img src="../img/github.png" class="w-8 md:w-10 h-8 md:h-10">\n                  </div>\n                </div>\n                <div class="bg-[#FAF5E5] rounded-xl px-4 md:px-6 shadow-md w-60 md:w-72">\n                  <div class="bg-[#F2D388] h-40 md:h-52 mb-4"></div>\n                  <h3 class="text-[#4A708B] font-bold text-lg text-left">Player Six</h3>\n                  <p class="text-[#8B9368] text-sm mb-4 text-left">UI Designer</p>\n                  <div class="flex space-x-4 mt-8 md:mt-12 mb-6">\n                    <img src="../img/linkedin.png" class="w-8 md:w-10 h-8 md:h-10">\n                    <img src="../img/github.png" class="w-8 md:w-10 h-8 md:h-10">\n                  </div>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      </section>\n    ',async afterRender(){const e=document.getElementById("menu-toggle"),t=document.querySelector(".peer-checked\\:flex");e?.addEventListener("change",(()=>{t.classList.toggle("hidden"),t.classList.toggle("-translate-y-full"),t.classList.toggle("translate-y-0")}))}},$=(e,t)=>t.some((t=>e instanceof t));let E,A;const R=new WeakMap,_=new WeakMap,F=new WeakMap;let D={get(e,t,n){if(e instanceof IDBTransaction){if("done"===t)return R.get(e);if("store"===t)return n.objectStoreNames[1]?void 0:n.objectStore(n.objectStoreNames[0])}return L(e[t])},set:(e,t,n)=>(e[t]=n,!0),has:(e,t)=>e instanceof IDBTransaction&&("done"===t||"store"===t)||t in e};function O(e){D=e(D)}function M(e){return"function"==typeof e?(t=e,(A||(A=[IDBCursor.prototype.advance,IDBCursor.prototype.continue,IDBCursor.prototype.continuePrimaryKey])).includes(t)?function(...e){return t.apply(z(this),e),L(this.request)}:function(...e){return L(t.apply(z(this),e))}):(e instanceof IDBTransaction&&function(e){if(R.has(e))return;const t=new Promise(((t,n)=>{const s=()=>{e.removeEventListener("complete",r),e.removeEventListener("error",a),e.removeEventListener("abort",a)},r=()=>{t(),s()},a=()=>{n(e.error||new DOMException("AbortError","AbortError")),s()};e.addEventListener("complete",r),e.addEventListener("error",a),e.addEventListener("abort",a)}));R.set(e,t)}(e),$(e,E||(E=[IDBDatabase,IDBObjectStore,IDBIndex,IDBCursor,IDBTransaction]))?new Proxy(e,D):e);var t}function L(e){if(e instanceof IDBRequest)return function(e){const t=new Promise(((t,n)=>{const s=()=>{e.removeEventListener("success",r),e.removeEventListener("error",a)},r=()=>{t(L(e.result)),s()},a=()=>{n(e.error),s()};e.addEventListener("success",r),e.addEventListener("error",a)}));return F.set(t,e),t}(e);if(_.has(e))return _.get(e);const t=M(e);return t!==e&&(_.set(e,t),F.set(t,e)),t}const z=e=>F.get(e),B=["get","getKey","getAll","getAllKeys","count"],P=["put","add","delete","clear"],W=new Map;function V(e,t){if(!(e instanceof IDBDatabase)||t in e||"string"!=typeof t)return;if(W.get(t))return W.get(t);const n=t.replace(/FromIndex$/,""),s=t!==n,r=P.includes(n);if(!(n in(s?IDBIndex:IDBObjectStore).prototype)||!r&&!B.includes(n))return;const a=async function(e,...t){const a=this.transaction(e,r?"readwrite":"readonly");let i=a.store;return s&&(i=i.index(t.shift())),(await Promise.all([i[n](...t),r&&a.done]))[0]};return W.set(t,a),a}O((e=>({...e,get:(t,n,s)=>V(t,n)||e.get(t,n,s),has:(t,n)=>!!V(t,n)||e.has(t,n)})));const U=["continue","continuePrimaryKey","advance"],G={},j=new WeakMap,H=new WeakMap,q={get(e,t){if(!U.includes(t))return e[t];let n=G[t];return n||(n=G[t]=function(...e){j.set(this,H.get(this)[t](...e))}),n}};async function*K(...e){let t=this;if(t instanceof IDBCursor||(t=await t.openCursor(...e)),!t)return;const n=new Proxy(t,q);for(H.set(n,t),F.set(n,z(t));t;)yield n,t=await(j.get(n)||t.continue()),j.delete(n)}function X(e,t){return t===Symbol.asyncIterator&&$(e,[IDBIndex,IDBObjectStore,IDBCursor])||"iterate"===t&&$(e,[IDBIndex,IDBObjectStore])}O((e=>({...e,get:(t,n,s)=>X(t,n)?K:e.get(t,n,s),has:(t,n)=>X(t,n)||e.has(t,n)})));!function(e,t,{blocked:n,upgrade:s,blocking:r,terminated:a}={}){const i=indexedDB.open(e,t),o=L(i);s&&i.addEventListener("upgradeneeded",(e=>{s(L(i.result),e.oldVersion,e.newVersion,L(i.transaction),e)})),n&&i.addEventListener("blocked",(e=>n(e.oldVersion,e.newVersion,e))),o.then((e=>{a&&e.addEventListener("close",(()=>a())),r&&e.addEventListener("versionchange",(e=>r(e.oldVersion,e.newVersion,e)))})).catch((()=>{}))}("tabir-db",1,{upgrade(e){e.createObjectStore("user-data",{keyPath:"id"})}});const Y={render:()=>'\n      <div class="flex min-h-screen items-center justify-center bg-[#FAF5E5] px-4 py-8">\n        <section class="w-full max-w-6xl mx-auto">\n          <div class="flex w-full flex-col items-center gap-8 rounded-[30px] sm:rounded-[50px] px-4 py-6 lg:flex-row">\n            <img \n              class="w-full max-w-[300px] sm:max-w-[400px] lg:max-w-[550px] bg-blue-950 lg:order-2 lg:w-1/2 rounded-[40px] lg:rounded-[80px]" \n              src="../img/auth-hero.png" \n              alt="Authentication Hero" \n            />\n\n            <div class="w-full max-w-[450px] rounded-2xl bg-white p-6 sm:p-8 shadow-md">\n              <h1 class="mb-6 sm:mb-8 text-2xl sm:text-3xl text-center font-bold">Login</h1>\n              <form id="loginForm" class="space-y-4 sm:space-y-6">\n                <div>\n                  <label class="mb-2 block font-semibold text-gray-700" for="username">Username</label>\n                  <input \n                    class="w-full rounded border px-3 py-2 text-sm sm:text-base leading-tight text-gray-700 focus:outline-none focus:ring-2 focus:ring-blue-950"\n                    id="username" \n                    type="text" \n                    required\n                    placeholder="Silahkan masukkan username kamu, ya" \n                  />\n                </div>\n                <div>\n                  <label class="mb-2 block font-semibold text-gray-700" for="password">Password</label>\n                  <input \n                    class="w-full rounded border px-3 py-2 text-sm sm:text-base leading-tight text-gray-700 focus:outline-none focus:ring-2 focus:ring-blue-950"\n                    id="password" \n                    type="password" \n                    required\n                    placeholder="Silahkan masukkan password kamu, ya" \n                  />\n                  <a class="mt-1 inline-block text-sm text-gray-600 hover:text-gray-800" href="#">Lupa passwordnya?</a>\n                </div>\n                <div>\n                  <button \n                    class="w-full rounded bg-blue-950 px-4 py-2 font-bold text-white transition-colors hover:bg-blue-900 focus:outline-none focus:ring-2 focus:ring-blue-950 focus:ring-offset-2"\n                    type="submit"\n                  >\n                    Login\n                  </button>\n                </div>\n                <p class="text-center text-sm text-gray-600">\n                  Kamu belum punya akun?\n                  <a href="#/register" class="text-blue-600 hover:underline">Daftar di sini yaa</a>\n                </p>\n              </form>\n            </div>\n          </div>\n        </section>\n      </div>\n    ',async afterRender(){const e=document.getElementById("loginForm");e?.addEventListener("submit",(async e=>{e.preventDefault();const t=document.getElementById("username").value,n=document.getElementById("password").value;try{const e=await fetch("https://tabir-backend-service-production.up.railway.app/authentications",{method:"POST",headers:{"Content-Type":"application/json"},body:JSON.stringify({username:t,password:n})}),s=await e.json();e.ok&&s.data?.accessToken?(localStorage.setItem("auth_token",s.data.accessToken),setTimeout((()=>{window.location.hash="#/dashboard"}),100)):alert(s.message||"Gagal Login.")}catch(e){console.error("Error:",e),alert("Gagal menghubungi server.")}}))}},J={render:()=>'\n      <div class="flex min-h-screen items-center justify-center bg-[#FAF5E5] px-4 py-8">\n        <section class="w-full max-w-6xl mx-auto">\n          <div class="flex w-full flex-col items-center gap-8 rounded-[30px] sm:rounded-[50px] px-4 py-6 lg:flex-row">\n            <img \n              class="w-full max-w-[300px] sm:max-w-[400px] lg:max-w-[550px] bg-blue-950 lg:order-2 lg:w-1/2 rounded-[40px] lg:rounded-[80px]" \n              src="../img/auth-hero.png" \n              alt="Authentication Hero" \n            />\n\n            <div class="w-full max-w-[450px] rounded-2xl bg-white p-6 sm:p-8 shadow-md">\n              <div class="logo-container flex flex-col items-center mb-6">\n                \n                <h1 class="text-2xl sm:text-3xl font-bold">Register</h1>\n              </div>\n              \n              <form id="registerForm" class="space-y-4 sm:space-y-6">\n                <div>\n                  <label class="mb-2 block font-semibold text-gray-700" for="fullname">Fullname</label>\n                  <input \n                    class="w-full rounded border px-3 py-2 text-sm sm:text-base leading-tight text-gray-700 focus:outline-none focus:ring-2 focus:ring-blue-950"\n                    id="fullname" \n                    name="fullname" \n                    type="text" \n                    required\n                    placeholder="Silahkan masukkan fullname kamu, ya"\n                  />\n                </div>\n\n                <div>\n                  <label class="mb-2 block font-semibold text-gray-700" for="username">Username</label>\n                  <input \n                    class="w-full rounded border px-3 py-2 text-sm sm:text-base leading-tight text-gray-700 focus:outline-none focus:ring-2 focus:ring-blue-950"\n                    id="username" \n                    name="username" \n                    type="text" \n                    required\n                    placeholder="Silahkan masukkan username kamu, ya"\n                  />\n                </div>\n\n                <div>\n                  <label class="mb-2 block font-semibold text-gray-700" for="password">Password</label>\n                  <input \n                    class="w-full rounded border px-3 py-2 text-sm sm:text-base leading-tight text-gray-700 focus:outline-none focus:ring-2 focus:ring-blue-950"\n                    id="password" \n                    name="password" \n                    type="password" \n                    required\n                    placeholder="Silahkan masukkan password kamu, ya"\n                  />\n                </div>\n\n                <div>\n                  <button \n                    class="w-full rounded bg-blue-950 px-4 py-2 font-bold text-white transition-colors hover:bg-blue-900 focus:outline-none focus:ring-2 focus:ring-blue-950 focus:ring-offset-2"\n                    type="submit"\n                  >\n                    Register\n                  </button>\n                </div>\n\n                <p class="text-center text-sm text-gray-600">\n                  Kamu sudah punya akun?\n                  <a href="#/login" class="text-blue-600 hover:underline">Masuk ke sini yaa</a>\n                </p>\n              </form>\n            </div>\n          </div>\n        </section>\n      </div>\n    ',async afterRender(){const e=document.getElementById("registerForm");e?.addEventListener("submit",(async e=>{e.preventDefault();const t=document.getElementById("fullname").value,n=document.getElementById("username").value,s=document.getElementById("password").value;try{const e=await fetch("https://tabir-backend-service-production.up.railway.app/users",{method:"POST",headers:{"Content-Type":"application/json"},body:JSON.stringify({fullname:t,username:n,password:s})}),r=await e.json();e.ok?(alert(r.message||"Registrasi berhasil!"),window.location.hash="#/login"):alert(r.message||"Gagal registrasi.")}catch(e){console.error("Error:",e),alert("Gagal menghubungi server.")}}))}};var Z=n(554);class Q{constructor(e,t){this.backend=e,this.dataMover=t,this.data=new WeakMap,this.dataIdsCount=0}get(e){return this.data.has(e)||this.dataMover.moveData(this.backend,e),this.data.get(e)}set(e,t){this.dataIdsCount++,this.data.set(e,t)}has(e){return this.data.has(e)}delete(e){return this.dataIdsCount--,this.data.delete(e)}numDataIds(){return this.dataIdsCount}}class ee{refCount(e){return te("refCount")}incRef(e){return te("incRef")}timerAvailable(){return!0}time(e){return te("time")}read(e){return te("read")}readSync(e){return te("readSync")}readToGPU(e,t){return te("readToGPU")}numDataIds(){return te("numDataIds")}disposeData(e,t){return te("disposeData")}write(e,t,n){return te("write")}move(e,t,n,s,r){return te("move")}createTensorFromGPUData(e,t,n){return te("createTensorFromGPUData")}memory(){return te("memory")}floatPrecision(){return te("floatPrecision")}epsilon(){return 32===this.floatPrecision()?1e-7:1e-4}dispose(){return te("dispose")}}function te(e){throw new Error(`'${e}' not yet implemented or not found in the registry. This kernel may not be supported by the tfjs backend you have chosen`)}function ne(e){let t=e.length,n=0;for(;t>0;)n=Math.random()*t|0,t--,ae(e,t,n)}function se(e,t,n){return Math.max(e,Math.min(t,n))}function re(e){return e%2==0?e:e+1}function ae(e,t,n){const s=e[t];e[t]=e[n],e[n]=s}function ie(e,t){if(!e)throw new Error("string"==typeof t?t:t())}function oe(e,t,n=""){ie(ce(e,t),(()=>n+` Shapes ${e} and ${t} must match`))}function le(e){ie(null!=e,(()=>"The input to the tensor constructor must be a non-null value."))}function ue(e){if(0===e.length)return 1;let t=e[0];for(let n=1;n<e.length;n++)t*=e[n];return t}function ce(e,t){if(e===t)return!0;if(null==e||null==t)return!1;if(e.length!==t.length)return!1;for(let n=0;n<e.length;n++)if(e[n]!==t[n])return!1;return!0}function he(e){return e%1==0}function de(e){const t=Math.ceil(Math.sqrt(e));return[t,Math.ceil(e/t)]}function pe(e,t){return t<=e.length?e:e+" ".repeat(t-e.length)}function fe(e,t=e=>0,n,s){return new Promise(((r,a)=>{let i=0;const o=()=>{if(e())return void r();i++;const l=t(i);null!=n&&i>=n?a():null!=s?s(o,l):setTimeout(o,l)};o()}))}function me(e,t){let n=1,s=-1;for(let t=0;t<e.length;++t)if(e[t]>=0)n*=e[t];else if(-1===e[t]){if(-1!==s)throw Error(`Shapes can only have 1 implicit size. Found -1 at dim ${s} and dim ${t}`);s=t}else if(e[t]<0)throw Error(`Shapes can not be < 0. Found ${e[t]} at dim ${t}`);if(-1===s){if(t>0&&t!==n)throw Error(`Size(${t}) must match the product of shape ${e}`);return e}if(0===n)throw Error(`Cannot infer the missing size in [${e}] when there are 0 elements`);if(t%n!==0)throw Error(`The implicit shape can't be a fractional number. Got ${t} / ${n}`);const r=e.slice();return r[s]=t/n,r}function ge(e,t){const n=t.length;return ie((e=null==e?t.map(((e,t)=>t)):[].concat(e)).every((e=>e>=-n&&e<n)),(()=>`All values in axis param must be in range [-${n}, ${n}) but got axis ${e}`)),ie(e.every((e=>he(e))),(()=>`All values in axis param must be integers but got axis ${e}`)),e.map((e=>e<0?n+e:e))}function ye(e,t){const n=[],s=[],r=null!=t&&Array.isArray(t)&&0===t.length,a=null==t||r?null:ge(t,e).sort();let i=0;for(let t=0;t<e.length;++t){if(null!=a){if(a[i]===t&&1!==e[t])throw new Error(`Can't squeeze axis ${t} since its dim '${e[t]}' is not 1`);(null==a[i]||a[i]>t)&&1===e[t]&&(n.push(e[t]),s.push(t)),a[i]<=t&&i++}1!==e[t]&&(n.push(e[t]),s.push(t))}return{newShape:n,keptDims:s}}function be(e,t){return xe(e,t)}function xe(e,t){let n=null;if(null==e||"float32"===e)n=new Float32Array(t);else if("int32"===e)n=new Int32Array(t);else if("bool"===e)n=new Uint8Array(t);else{if("string"!==e)throw new Error(`Unknown data type ${e}`);n=new Array(t)}return n}function we(e,t){return!("complex64"===t||"float32"===t&&"complex64"!==e||"int32"===t&&"float32"!==e&&"complex64"!==e||"bool"===t&&"bool"===e)}function ve(e){if("float32"===e||"int32"===e)return 4;if("complex64"===e)return 8;if("bool"===e)return 1;throw new Error(`Unknown dtype ${e}`)}function ke(e){return"string"==typeof e||e instanceof String}function Ie(e){return"number"==typeof e}function Ne(e){return Array.isArray(e)?Ne(e[0]):e instanceof Float32Array?"float32":e instanceof Int32Array||e instanceof Uint8Array||e instanceof Uint8ClampedArray?"int32":Ie(e)?"float32":ke(e)?"string":"boolean"==typeof e?"bool":"float32"}function Se(e){return!!(e&&e.constructor&&e.call&&e.apply)}function Te(e,t){for(let n=t;n<e;++n)if(e%n===0)return n;return e}function Ce(e){const t=e.length;if(t<2)return[];const n=new Array(t-1);n[t-2]=e[t-1];for(let s=t-3;s>=0;--s)n[s]=n[s+1]*e[s+1];return n}function $e(e,t,n,s=!1){const r=new Array;if(1===t.length){const a=t[0]*(s?2:1);for(let t=0;t<a;t++)r[t]=n[e+t]}else{const a=t[0],i=t.slice(1),o=i.reduce(((e,t)=>e*t))*(s?2:1);for(let t=0;t<a;t++)r[t]=$e(e+t*o,i,n,s)}return r}function Ee(e,t,n=!1){if(0===e.length)return t[0];const s=e.reduce(((e,t)=>e*t))*(n?2:1);if(0===s)return[];if(s!==t.length)throw new Error(`[${e}] does not match the input size ${t.length}${n?" for a complex tensor":""}.`);return $e(0,e,t,n)}function Ae(e,t){const n=Re(e,t);for(let e=0;e<n.length;e++)n[e]=1;return n}function Re(e,t){if(null==t||"float32"===t||"complex64"===t)return new Float32Array(e);if("int32"===t)return new Int32Array(e);if("bool"===t)return new Uint8Array(e);throw new Error(`Unknown data type ${t}`)}function _e(e,t){const n=e.reduce(((e,t)=>e*t),1);if(null==t||"float32"===t)return Ee(e,new Float32Array(n));if("int32"===t)return Ee(e,new Int32Array(n));if("bool"===t)return Ee(e,new Uint8Array(n));throw new Error(`Unknown data type ${t}`)}function Fe(e){e.forEach((t=>{ie(Number.isInteger(t)&&t>=0,(()=>`Tensor must have a shape comprised of positive integers but got shape [${e}].`))}))}function De(e,t,n){if(0===t)return 0;if(1===t)return e[0];let s=e[e.length-1];for(let t=0;t<e.length-1;++t)s+=n[t]*e[t];return s}function Oe(e,t,n){if(0===t)return[];if(1===t)return[e];const s=new Array(t);for(let t=0;t<s.length-1;++t)s[t]=Math.floor(e/n[t]),e-=s[t]*n[t];return s[s.length-1]=e,s}function Me(e){return e&&e.then&&"function"==typeof e.then}const Le="tfjsflags";class ze{constructor(e){this.global=e,this.flags={},this.flagRegistry={},this.urlFlags={},this.getQueryParams=Be,this.populateURLFlags()}setPlatform(e,t){null!=this.platform&&(Pe().getBool("IS_TEST")||Pe().getBool("PROD")||console.warn(`Platform ${this.platformName} has already been set. Overwriting the platform with ${e}.`)),this.platformName=e,this.platform=t}registerFlag(e,t,n){if(this.flagRegistry[e]={evaluationFn:t,setHook:n},null!=this.urlFlags[e]){const t=this.urlFlags[e];Pe().getBool("IS_TEST")||Pe().getBool("PROD")||console.warn(`Setting feature override from URL ${e}: ${t}.`),this.set(e,t)}}async getAsync(e){return e in this.flags||(this.flags[e]=await this.evaluateFlag(e)),this.flags[e]}get(e){if(e in this.flags)return this.flags[e];const t=this.evaluateFlag(e);if(Me(t))throw new Error(`Flag ${e} cannot be synchronously evaluated. Please use getAsync() instead.`);return this.flags[e]=t,this.flags[e]}getNumber(e){return this.get(e)}getBool(e){return this.get(e)}getString(e){return this.get(e)}getFlags(){return this.flags}get features(){return this.flags}set(e,t){if(null==this.flagRegistry[e])throw new Error(`Cannot set flag ${e} as it has not been registered.`);this.flags[e]=t,null!=this.flagRegistry[e].setHook&&this.flagRegistry[e].setHook(t)}evaluateFlag(e){if(null==this.flagRegistry[e])throw new Error(`Cannot evaluate flag '${e}': no evaluation function found.`);return this.flagRegistry[e].evaluationFn()}setFlags(e){this.flags=Object.assign({},e)}reset(){this.flags={},this.urlFlags={},this.populateURLFlags()}populateURLFlags(){if(void 0===this.global||void 0===this.global.location||void 0===this.global.location.search)return;const e=this.getQueryParams(this.global.location.search);Le in e&&e[Le].split(",").forEach((e=>{const[t,n]=e.split(":");this.urlFlags[t]=function(e,t){const n=t.toLowerCase();return"true"===n||"false"===n?"true"===n:""+ +n===n?+n:t}(0,n)}))}}function Be(e){const t={};return e.replace(/[?&]([^=?&]+)(?:=([^&]*))?/g,((e,...n)=>(function(e,t,n){e[decodeURIComponent(t)]=decodeURIComponent(n||"")}(t,n[0],n[1]),n.join("=")))),t}function Pe(){return Ve}let We,Ve=null;function Ue(){if(null==We){let e;if("undefined"!=typeof window)e=window;else if(void 0!==n.g)e=n.g;else if("undefined"!=typeof process)e=process;else{if("undefined"==typeof self)throw new Error("Could not find a global object");e=self}We=e}return We}function Ge(e,t){const n=function(){const e=Ue();return null==e._tfGlobals&&(e._tfGlobals=new Map),e._tfGlobals}();if(n.has(e))return n.get(e);{const s=t();return n.set(e,s),n.get(e)}}const je="Abs",He="Acos",qe="Acosh",Ke="Add",Xe="AddN",Ye="All",Je="Any",Ze="ArgMax",Qe="ArgMin",et="Asin",tt="Asinh",nt="Atan",st="Atanh",rt="Atan2",at="AvgPool",it="AvgPoolGrad",ot="AvgPool3D",lt="AvgPool3DGrad",ut="BatchMatMul",ct="BatchToSpaceND",ht="Bincount",dt="BitwiseAnd",pt="BroadcastArgs",ft="Cast",mt="Ceil",gt="ClipByValue",yt="Complex",bt="ComplexAbs",xt="Concat",wt="Conv2D",vt="Conv2DBackpropFilter",kt="Conv2DBackpropInput",It="Conv3D",Nt="Conv3DBackpropFilterV2",St="Conv3DBackpropInputV2",Tt="Cos",Ct="Cosh",$t="Cumprod",Et="Cumsum",At="CropAndResize",Rt="DenseBincount",_t="DepthToSpace",Ft="DepthwiseConv2dNative",Dt="DepthwiseConv2dNativeBackpropFilter",Ot="DepthwiseConv2dNativeBackpropInput",Mt="Diag",Lt="Dilation2D",zt="Dilation2DBackpropInput",Bt="Dilation2DBackpropFilter",Pt="RealDiv",Wt="Einsum",Vt="Elu",Ut="EluGrad",Gt="Erf",jt="Equal",Ht="Exp",qt="ExpandDims",Kt="Expm1",Xt="FFT",Yt="Fill",Jt="FlipLeftRight",Zt="Floor",Qt="FloorDiv",en="FusedBatchNorm",tn="GatherV2",nn="GatherNd",sn="Greater",rn="GreaterEqual",an="Identity",on="IFFT",ln="Imag",un="IsFinite",cn="IsInf",hn="IsNan",dn="LeakyRelu",pn="Less",fn="LessEqual",mn="LinSpace",gn="Log",yn="Log1p",bn="LogicalAnd",xn="LogicalNot",wn="LogicalOr",vn="LRN",kn="LRNGrad",In="Max",Nn="Maximum",Sn="MaxPool",Tn="MaxPoolGrad",Cn="MaxPool3D",$n="MaxPool3DGrad",En="MaxPoolWithArgmax",An="Mean",Rn="Min",_n="Minimum",Fn="MirrorPad",Dn="Mod",On="Multinomial",Mn="Multiply",Ln="Neg",zn="NotEqual",Bn="NonMaxSuppressionV3",Pn="NonMaxSuppressionV4",Wn="NonMaxSuppressionV5",Vn="OnesLike",Un="OneHot",Gn="Pack",jn="PadV2",Hn="Pow",qn="Prelu",Kn="Prod",Xn="RaggedGather",Yn="RaggedRange",Jn="RaggedTensorToTensor",Zn="Range",Qn="Real",es="Reciprocal",ts="Relu",ns="Reshape",ss="ResizeNearestNeighbor",rs="ResizeNearestNeighborGrad",as="ResizeBilinear",is="ResizeBilinearGrad",os="Relu6",ls="Reverse",us="Round",cs="Rsqrt",hs="ScatterNd",ds="TensorScatterUpdate",ps="SearchSorted",fs="Select",ms="Selu",gs="Slice",ys="Sin",bs="Sinh",xs="Sign",ws="Sigmoid",vs="Softplus",ks="Sqrt",Is="Sum",Ns="SpaceToBatchND",Ss="SplitV",Ts="Softmax",Cs="SparseFillEmptyRows",$s="SparseReshape",Es="SparseSegmentMean",As="SparseSegmentSum",Rs="SparseToDense",_s="SquaredDifference",Fs="Square",Ds="StaticRegexReplace",Os="StridedSlice",Ms="StringNGrams",Ls="StringSplit",zs="StringToHashBucketFast",Bs="Sub",Ps="Tan",Ws="Tanh",Vs="Tile",Us="TopK",Gs="Transform",js="Transpose",Hs="Unique",qs="Unpack",Ks="UnsortedSegmentSum",Xs="ZerosLike",Ys="Step",Js="FromPixels",Zs="RotateWithOffset",Qs="_FusedMatMul",er="FusedConv2D",tr="FusedDepthwiseConv2D";function nr(...e){Pe().getBool("IS_TEST")||Pe().getBool("PROD")||console.warn(...e)}function sr(...e){Pe().getBool("IS_TEST")||Pe().getBool("PROD")||console.log(...e)}const rr=Ge("kernelRegistry",(()=>new Map)),ar=Ge("gradRegistry",(()=>new Map));function ir(e,t){const n=hr(e,t);return rr.get(n)}function or(e){return ar.get(e)}function lr(e){const t=rr.entries(),n=[];for(;;){const{done:s,value:r}=t.next();if(s)break;const[a,i]=r,[o]=a.split("_");o===e&&n.push(i)}return n}function ur(e){const{kernelName:t,backendName:n}=e,s=hr(t,n);rr.has(s)&&nr(`The kernel '${t}' for backend '${n}' is already registered`),rr.set(s,e)}function cr(e){const{kernelName:t}=e;ar.has(t)&&Pe().getBool("DEBUG")&&nr(`Overriding the gradient for '${t}'`),ar.set(t,e)}function hr(e,t){return`${t}_${e}`}function dr(e){return e instanceof Float32Array||e instanceof Int32Array||e instanceof Uint8Array||e instanceof Uint8ClampedArray}var pr=n(570);const fr=n.n(pr)()||pr;function mr(e){return fr.fromString(e,!0,16)}const gr=mr("c3a5c85c97cb3127"),yr=mr("b492b66fbe98f273"),br=mr("9ae16a3b2f90404f");function xr(e){return e.xor(e.shru(47))}function wr(e,t,n){const s=e.slice(t,t+n);return fr.fromBytes(Array.from(s),!0,!0)}function vr(e,t){return wr(e,t,8)}function kr(e,t){return wr(e,t,4)}function Ir(e,t){return 0===t?e:e.shru(t).or(e.shl(64-t))}function Nr(e,t,n=mr("9ddfea08eb382d69")){let s=e.xor(t).mul(n);s=s.xor(s.shru(47));let r=t.xor(s).mul(n);return r=r.xor(r.shru(47)),r=r.mul(n),r}function Sr(e,t,n,s){return function(e,t,n,s,r,a){r=r.add(e),a=Ir(a.add(r).add(s),21);const i=r;return r=(r=r.add(t)).add(n),a=a.add(Ir(r,44)),[r.add(s),a.add(i)]}(vr(e,t),vr(e,t+8),vr(e,t+16),vr(e,t+24),n,s)}function Tr(e,t=e.length){const n=fr.fromNumber(81,!0);if(t<=32)return t<=16?function(e,t=e.length){if(t>=8){const n=br.add(2*t),s=vr(e,0).add(br),r=vr(e,t-8);return Nr(Ir(r,37).mul(n).add(s),Ir(s,25).add(r).mul(n),n)}if(t>=4){const n=br.add(2*t);return Nr(kr(e,0).shl(3).add(t),kr(e,t-4),n)}if(t>0){const n=e[0]+(e[t>>1]<<8),s=t+(e[t-1]<<2);return xr(br.mul(n).xor(gr.mul(s))).mul(br)}return br}(e,t):function(e,t=e.length){const n=br.add(2*t),s=vr(e,0).mul(yr),r=vr(e,8),a=vr(e,t-8).mul(n),i=vr(e,t-16).mul(br);return Nr(Ir(s.add(r),43).add(Ir(a,30)).add(i),s.add(Ir(r.add(br),18)).add(a),n)}(e,t);if(t<=64)return function(e,t=e.length){const n=br.add(2*t),s=vr(e,0).mul(br),r=vr(e,8),a=vr(e,t-8).mul(n),i=vr(e,t-16).mul(br),o=Ir(s.add(r),43).add(Ir(a,30)).add(i),l=Nr(o,s.add(Ir(r.add(br),18)).add(a),n),u=vr(e,16).mul(n),c=vr(e,24),h=o.add(vr(e,t-32)).mul(n),d=l.add(vr(e,t-24)).mul(n);return Nr(Ir(u.add(c),43).add(Ir(h,30)).add(d),u.add(Ir(c.add(s),18)).add(h),n)}(e,t);let s=n,r=n.mul(yr).add(113),a=xr(r.mul(br).add(113)).mul(br),i=[fr.UZERO,fr.UZERO],o=[fr.UZERO,fr.UZERO];s=s.mul(br).add(vr(e,0));let l=0;const u=64*(t-1>>6),c=u+(t-1&63)-63;do{s=Ir(s.add(r).add(i[0]).add(vr(e,l+8)),37).mul(yr),r=Ir(r.add(i[1]).add(vr(e,l+48)),42).mul(yr),s=s.xor(o[1]),r=r.add(i[0]).add(vr(e,l+40)),a=Ir(a.add(o[0]),33).mul(yr),i=Sr(e,l,i[1].mul(yr),s.add(o[0])),o=Sr(e,l+32,a.add(o[1]),r.add(vr(e,l+16))),[a,s]=[s,a],l+=64}while(l!==u);const h=yr.add(a.and(255).shl(1));return l=c,o[0]=o[0].add(t-1&63),i[0]=i[0].add(o[0]),o[0]=o[0].add(i[0]),s=Ir(s.add(r).add(i[0]).add(vr(e,l+8)),37).mul(h),r=Ir(r.add(i[1]).add(vr(e,l+48)),42).mul(h),s=s.xor(o[1].mul(9)),r=r.add(i[0].mul(9).add(vr(e,l+40))),a=Ir(a.add(o[0]),33).mul(h),i=Sr(e,l,i[1].mul(h),s.add(o[0])),o=Sr(e,l+32,a.add(o[1]),r.add(vr(e,l+16))),[a,s]=[s,a],Nr(Nr(i[0],o[0],h).add(xr(r).mul(gr)).add(a),Nr(i[1],o[1],h).add(s),h)}function Cr(e,t){return"string"===t?Ar(e):$r([e],t)}function $r(e,t){if("string"===t)throw new Error("Cannot convert a string[] to a TypedArray");if(Array.isArray(e)&&(e=Fr(e)),Pe().getBool("DEBUG")&&function(e,t){for(let n=0;n<e.length;n++){const s=e[n];if(isNaN(s)||!isFinite(s))throw Error(`A tensor of type ${t} being uploaded contains ${s}.`)}}(e,t),function(e,t){return e instanceof Float32Array&&"float32"===t||e instanceof Int32Array&&"int32"===t||e instanceof Uint8Array&&"bool"===t}(e,t))return e;if(null==t||"float32"===t||"complex64"===t)return new Float32Array(e);if("int32"===t)return new Int32Array(e);if("bool"===t){const t=new Uint8Array(e.length);for(let n=0;n<t.length;++n)0!==Math.round(e[n])&&(t[n]=1);return t}throw new Error(`Unknown data type ${t}`)}function Er(){return Pe().platform.now()}function Ar(e,t="utf-8"){return t=t||"utf-8",Pe().platform.encode(e,t)}function Rr(e,t="utf-8"){return t=t||"utf-8",Pe().platform.decode(e,t)}function _r(e){return null!=Pe().platform.isTypedArray?Pe().platform.isTypedArray(e):dr(e)}function Fr(e,t=[],n=!1){if(null==t&&(t=[]),"boolean"==typeof e||"number"==typeof e||"string"==typeof e||Me(e)||null==e||_r(e)&&n)t.push(e);else if(Array.isArray(e)||_r(e))for(let s=0;s<e.length;++s)Fr(e[s],t,n);else{let s=-1;for(const t of Object.keys(e))/^([1-9]+[0-9]*|0)$/.test(t)&&(s=Math.max(s,Number(t)));for(let r=0;r<=s;r++)Fr(e[r],t,n)}return t}class Dr{constructor(e,t){this.backendTimer=e,this.logger=t,null==t&&(this.logger=new Mr)}profileKernel(e,t,n){let s;const r=()=>{s=n()};let a;const i=Er();if(this.backendTimer.timerAvailable())a=this.backendTimer.time(r);else{r();for(const e of s)e.dataSync();a=Promise.resolve({kernelMs:Er()-i})}if(Pe().getBool("CHECK_COMPUTATION_FOR_ERRORS"))for(let t=0;t<s.length;t++){const n=s[t];n.data().then((t=>{Or(t,n.dtype,e)}))}return{kernelName:e,outputs:s,inputs:t,timeMs:a.then((e=>e.kernelMs)),extraInfo:a.then((e=>null!=e.getExtraProfileInfo?e.getExtraProfileInfo():""))}}logKernelProfile(e){const{kernelName:t,outputs:n,timeMs:s,inputs:r,extraInfo:a}=e;n.forEach((e=>{Promise.all([e.data(),s,a]).then((n=>{this.logger.logKernelProfile(t,e,n[0],n[1],r,n[2])}))}))}}function Or(e,t,n){if("float32"!==t)return!1;for(let t=0;t<e.length;t++){const s=e[t];if(isNaN(s)||!isFinite(s))return console.warn(`Found ${s} in the result of '${n}'`),!0}return!1}class Mr{logKernelProfile(e,t,n,s,r,a){const i="number"==typeof s?pe(`${s}ms`,9):s.error,o=pe(e,25),l=t.rank,u=t.size,c=pe(t.shape.toString(),14);let h="";for(const e in r){const n=r[e];if(null!=n){const s=n.shape||t.shape,r=s.length;h+=`${e}: ${r}D ${r>0?s:""} `}}console.log(`%c${o}\t%c${i}\t%c${l}D ${c}\t%c${u}\t%c${h}\t%c${a}`,"font-weight:bold","color:red","color:blue","color: orange","color: green","color: steelblue")}}function Lr(e,t,n,s){const r=Ce(t),a=function(e,t,n,s){const r=ue(t),a=s[s.length-1],i=new Array(a).fill(0),o=t.length,l="complex64"===n?Wr(e):e;if(o>1)for(let e=0;e<r/a;e++){const t=e*a;for(let e=0;e<a;e++)i[e]=Math.max(i[e],zr(l[t+e],0,n).length)}return i}(e,t,n,r),i=t.length,o=Pr(e,t,n,r,a),l=["Tensor"];return s&&(l.push(`  dtype: ${n}`),l.push(`  rank: ${i}`),l.push(`  shape: [${t}]`),l.push("  values:")),l.push(o.map((e=>"    "+e)).join("\n")),l.join("\n")}function zr(e,t,n){let s;return s=Array.isArray(e)?`${parseFloat(e[0].toFixed(7))} + ${parseFloat(e[1].toFixed(7))}j`:ke(e)?`'${e}'`:"bool"===n?Br(e):parseFloat(e.toFixed(7)).toString(),pe(s,t)}function Br(e){return 0===e?"false":"true"}function Pr(e,t,n,s,r,a=!0){const i="complex64"===n?2:1,o=t[0],l=t.length;if(0===l)return"complex64"===n?[zr(Wr(e)[0],0,n)]:"bool"===n?[Br(e[0])]:[e[0].toString()];if(1===l){if(o>20){const t=3*i;let s=Array.from(e.slice(0,t)),a=Array.from(e.slice((o-3)*i,o*i));return"complex64"===n&&(s=Wr(s),a=Wr(a)),["["+s.map(((e,t)=>zr(e,r[t],n))).join(", ")+", ..., "+a.map(((e,t)=>zr(e,r[o-3+t],n))).join(", ")+"]"]}return["["+("complex64"===n?Wr(e):Array.from(e)).map(((e,t)=>zr(e,r[t],n))).join(", ")+"]"]}const u=t.slice(1),c=s.slice(1),h=s[0]*i,d=[];if(o>20){for(let t=0;t<3;t++){const s=t*h,a=s+h;d.push(...Pr(e.slice(s,a),u,n,c,r,!1))}d.push("...");for(let t=o-3;t<o;t++){const s=t*h,a=s+h;d.push(...Pr(e.slice(s,a),u,n,c,r,t===o-1))}}else for(let t=0;t<o;t++){const s=t*h,a=s+h;d.push(...Pr(e.slice(s,a),u,n,c,r,t===o-1))}const p=2===l?",":"";d[0]="["+(o>0?d[0]+p:"");for(let e=1;e<d.length-1;e++)d[e]=" "+d[e]+p;let f=",\n";for(let e=2;e<l;e++)f+="\n";return d[d.length-1]=" "+d[d.length-1]+"]"+(a?"":f),d}function Wr(e){const t=[];for(let n=0;n<e.length;n+=2)t.push([e[n],e[n+1]]);return t}class Vr{constructor(e,t,n){if(this.dtype=t,this.shape=e.slice(),this.size=ue(e),null!=n){const e=n.length;ie(e===this.size,(()=>`Length of values '${e}' does not match the size inferred by the shape '${this.size}'.`))}if("complex64"===t)throw new Error("complex64 dtype TensorBuffers are not supported. Please create a TensorBuffer for the real and imaginary parts separately and call tf.complex(real, imag).");this.values=n||xe(t,this.size),this.strides=Ce(e)}set(e,...t){0===t.length&&(t=[0]),ie(t.length===this.rank,(()=>`The number of provided coordinates (${t.length}) must match the rank (${this.rank})`));const n=this.locToIndex(t);this.values[n]=e}get(...e){0===e.length&&(e=[0]);let t=0;for(const n of e){if(n<0||n>=this.shape[t]){const t=`Requested out of range element at ${e}.   Buffer shape=${this.shape}`;throw new Error(t)}t++}let n=e[e.length-1];for(let t=0;t<e.length-1;++t)n+=this.strides[t]*e[t];return this.values[n]}locToIndex(e){if(0===this.rank)return 0;if(1===this.rank)return e[0];let t=e[e.length-1];for(let n=0;n<e.length-1;++n)t+=this.strides[n]*e[n];return t}indexToLoc(e){if(0===this.rank)return[];if(1===this.rank)return[e];const t=new Array(this.shape.length);for(let n=0;n<t.length-1;++n)t[n]=Math.floor(e/this.strides[n]),e-=t[n]*this.strides[n];return t[t.length-1]=e,t}get rank(){return this.shape.length}toTensor(){return Ur().makeTensor(this.values,this.shape,this.dtype)}}let Ur=null,Gr=null,jr=null;class Hr{constructor(e,t,n,s){this.kept=!1,this.isDisposedInternal=!1,this.shape=e.slice(),this.dtype=t||"float32",this.size=ue(e),this.strides=Ce(e),this.dataId=n,this.id=s,this.rankType=this.rank<5?this.rank.toString():"higher"}get rank(){return this.shape.length}async buffer(){const e=await this.data();return Gr.buffer(this.shape,this.dtype,e)}bufferSync(){return Gr.buffer(this.shape,this.dtype,this.dataSync())}async array(){const e=await this.data();return Ee(this.shape,e,"complex64"===this.dtype)}arraySync(){return Ee(this.shape,this.dataSync(),"complex64"===this.dtype)}async data(){this.throwIfDisposed();const e=Ur().read(this.dataId);if("string"===this.dtype){const t=await e;try{return t.map((e=>Rr(e)))}catch(e){throw new Error("Failed to decode the string bytes into utf-8. To get the original bytes, call tensor.bytes().")}}return e}dataToGPU(e){return this.throwIfDisposed(),Ur().readToGPU(this.dataId,e)}dataSync(){this.throwIfDisposed();const e=Ur().readSync(this.dataId);if("string"===this.dtype)try{return e.map((e=>Rr(e)))}catch(e){throw new Error("Failed to decode the string bytes into utf-8. To get the original bytes, call tensor.bytes().")}return e}async bytes(){this.throwIfDisposed();const e=await Ur().read(this.dataId);return"string"===this.dtype?e:new Uint8Array(e.buffer)}dispose(){this.isDisposed||(this.kerasMask&&this.kerasMask.dispose(),Ur().disposeTensor(this),this.isDisposedInternal=!0)}get isDisposed(){return this.isDisposedInternal}throwIfDisposed(){if(this.isDisposed)throw new Error("Tensor is disposed.")}print(e=!1){return Gr.print(this,e)}clone(){return this.throwIfDisposed(),Gr.clone(this)}toString(e=!1){return Lr(this.dataSync(),this.shape,this.dtype,e)}cast(e){return this.throwIfDisposed(),Gr.cast(this,e)}variable(e=!0,t,n){return this.throwIfDisposed(),Ur().makeVariable(this,e,t,n)}}function qr(){return Ge("Tensor",(()=>Hr))}Object.defineProperty(Hr,Symbol.hasInstance,{value:e=>!!e&&null!=e.data&&null!=e.dataSync&&null!=e.throwIfDisposed}),qr();class Kr extends Hr{constructor(e,t,n,s){super(e.shape,e.dtype,e.dataId,s),this.trainable=t,this.name=n}assign(e){if(e.dtype!==this.dtype)throw new Error(`dtype of the new value (${e.dtype}) and previous value (${this.dtype}) must match`);if(!ce(e.shape,this.shape))throw new Error(`shape of the new value (${e.shape}) and previous value (${this.shape}) must match`);Ur().disposeTensor(this),this.dataId=e.dataId,Ur().incRef(this,null)}dispose(){Ur().disposeVariable(this),this.isDisposedInternal=!0}}var Xr,Yr,Jr,Zr,Qr;Object.defineProperty(Kr,Symbol.hasInstance,{value:e=>e instanceof Hr&&null!=e.assign&&e.assign instanceof Function}),function(e){e.R0="R0",e.R1="R1",e.R2="R2",e.R3="R3",e.R4="R4",e.R5="R5",e.R6="R6"}(Xr||(Xr={})),function(e){e.float32="float32",e.int32="int32",e.bool="int32",e.complex64="complex64"}(Yr||(Yr={})),function(e){e.float32="float32",e.int32="int32",e.bool="bool",e.complex64="complex64"}(Jr||(Jr={})),function(e){e.float32="float32",e.int32="float32",e.bool="float32",e.complex64="complex64"}(Zr||(Zr={})),function(e){e.float32="complex64",e.int32="complex64",e.bool="complex64",e.complex64="complex64"}(Qr||(Qr={}));const ea={float32:Zr,int32:Yr,bool:Jr,complex64:Qr};function ta(e,t){if("string"===e||"string"===t){if("string"===e&&"string"===t)return"string";throw new Error(`Can not upcast ${e} with ${t}`)}return ea[e][t]}function na(e){return ta(e,"int32")}function sa(e){return null!=e&&"object"==typeof e&&"texture"in e&&e.texture instanceof WebGLTexture}function ra(e){return"undefined"!=typeof GPUBuffer&&null!=e&&"object"==typeof e&&"buffer"in e&&e.buffer instanceof GPUBuffer}function aa(e,t){if(e.dtype===t.dtype)return[e,t];const n=ta(e.dtype,t.dtype);return[e.cast(n),t.cast(n)]}function ia(e,t){return t.some((t=>t.id===e.id))}function oa(e){const t=[];return la(e,t,new Set),t}function la(e,t,n){if(null==e)return;if(e instanceof Hr)return void t.push(e);if(s=e,!Array.isArray(s)&&"object"!=typeof s)return;var s;const r=e;for(const e in r){const s=r[e];n.has(s)||(n.add(s),la(s,t,n))}}function ua(e){return null!=e.kernelName}class ca{constructor(){this.registeredVariables={},this.nextTapeNodeId=0,this.numBytes=0,this.numTensors=0,this.numStringTensors=0,this.numDataBuffers=0,this.gradientDepth=0,this.kernelDepth=0,this.scopeStack=[],this.numDataMovesStack=[],this.nextScopeId=0,this.tensorInfo=new WeakMap,this.profiling=!1,this.activeProfile={newBytes:0,newTensors:0,peakBytes:0,kernels:[],result:null,get kernelNames(){return Array.from(new Set(this.kernels.map((e=>e.name))))}}}dispose(){for(const e in this.registeredVariables)this.registeredVariables[e].dispose()}}class ha{constructor(e){this.ENV=e,this.registry={},this.registryFactory={},this.pendingBackendInitId=0,this.state=new ca}async ready(){if(null!=this.pendingBackendInit)return this.pendingBackendInit.then((()=>{}));if(null!=this.backendInstance)return;const e=this.getSortedBackends();for(let t=0;t<e.length;t++){const n=e[t];if(await this.initializeBackend(n).success)return void await this.setBackend(n)}throw new Error("Could not initialize any backends, all backend initializations failed.")}get backend(){if(null!=this.pendingBackendInit)throw new Error(`Backend '${this.backendName}' has not yet been initialized. Make sure to await tf.ready() or await tf.setBackend() before calling other methods`);if(null==this.backendInstance){const{name:e,asyncInit:t}=this.initializeBackendsAndReturnBest();if(t)throw new Error(`The highest priority backend '${e}' has not yet been initialized. Make sure to await tf.ready() or await tf.setBackend() before calling other methods`);this.setBackend(e)}return this.backendInstance}backendNames(){return Object.keys(this.registryFactory)}findBackend(e){if(!(e in this.registry)){if(!(e in this.registryFactory))return null;{const{asyncInit:t}=this.initializeBackend(e);if(t)return null}}return this.registry[e]}findBackendFactory(e){return e in this.registryFactory?this.registryFactory[e].factory:null}registerBackend(e,t,n=1){return e in this.registryFactory?(nr(`${e} backend was already registered. Reusing existing backend factory.`),!1):(this.registryFactory[e]={factory:t,priority:n},!0)}async setBackend(e){if(null==this.registryFactory[e])throw new Error(`Backend name '${e}' not found in registry`);if(this.backendName=e,null==this.registry[e]){this.backendInstance=null;const{success:t,asyncInit:n}=this.initializeBackend(e);if(!(n?await t:t))return!1}return this.backendInstance=this.registry[e],this.setupRegisteredKernels(),this.profiler=new Dr(this.backendInstance),!0}setupRegisteredKernels(){lr(this.backendName).forEach((e=>{null!=e.setupFunc&&e.setupFunc(this.backendInstance)}))}disposeRegisteredKernels(e){lr(e).forEach((t=>{null!=t.disposeFunc&&t.disposeFunc(this.registry[e])}))}initializeBackend(e){const t=this.registryFactory[e];if(null==t)throw new Error(`Cannot initialize backend ${e}, no registration found.`);try{const n=t.factory();if(!n||n instanceof ee||"function"!=typeof n.then)return this.registry[e]=n,{success:!0,asyncInit:!1};{const t=++this.pendingBackendInitId,s=n.then((n=>!(t<this.pendingBackendInitId||(this.registry[e]=n,this.pendingBackendInit=null,0)))).catch((n=>(t<this.pendingBackendInitId||(this.pendingBackendInit=null,nr(`Initialization of backend ${e} failed`),nr(n.stack||n.message)),!1)));return this.pendingBackendInit=s,{success:s,asyncInit:!0}}}catch(t){return nr(`Initialization of backend ${e} failed`),nr(t.stack||t.message),{success:!1,asyncInit:!1}}}removeBackend(e){if(!(e in this.registryFactory))throw new Error(`${e} backend not found in registry`);this.backendName===e&&null!=this.pendingBackendInit&&this.pendingBackendInitId++,e in this.registry&&(this.disposeRegisteredKernels(e),this.registry[e].dispose(),delete this.registry[e]),delete this.registryFactory[e],this.backendName===e&&(this.pendingBackendInit=null,this.backendName=null,this.backendInstance=null)}getSortedBackends(){if(0===Object.keys(this.registryFactory).length)throw new Error("No backend found in registry.");return Object.keys(this.registryFactory).sort(((e,t)=>this.registryFactory[t].priority-this.registryFactory[e].priority))}initializeBackendsAndReturnBest(){const e=this.getSortedBackends();for(let t=0;t<e.length;t++){const n=e[t],{success:s,asyncInit:r}=this.initializeBackend(n);if(r||s)return{name:n,asyncInit:r}}throw new Error("Could not initialize any backends, all backend initializations failed.")}moveData(e,t){const n=this.state.tensorInfo.get(t),s=n.backend,r=this.readSync(t),a=s.refCount(t);s.disposeData(t,!0),n.backend=e,e.move(t,r,n.shape,n.dtype,a),this.shouldCheckForMemLeaks()&&this.state.numDataMovesStack[this.state.numDataMovesStack.length-1]++}tidy(e,t){let n,s=null;if(null==t){if("function"!=typeof e)throw new Error("Please provide a function to tidy()");t=e}else{if("string"!=typeof e&&!(e instanceof String))throw new Error("When calling with two arguments, the first argument to tidy() must be a string");if("function"!=typeof t)throw new Error("When calling with two arguments, the 2nd argument to tidy() must be a function");s=e}return this.scopedRun((()=>this.startScope(s)),(()=>this.endScope(n)),(()=>(n=t(),n instanceof Promise&&console.error("Cannot return a Promise inside of tidy."),n)))}scopedRun(e,t,n){e();try{const e=n();return t(),e}catch(e){throw t(),e}}nextTensorId(){return ha.nextTensorId++}nextVariableId(){return ha.nextVariableId++}clone(e){const t=pa.runKernel(an,{x:e}),n={x:e};return this.addTapeNode(this.state.activeScope.name,n,[t],(e=>({x:()=>{const t={x:e};return pa.runKernel(ft,t,{dtype:"float32"})}})),[],{}),t}runKernel(e,t,n){if(null==this.backendName&&this.backend,null==ir(e,this.backendName))throw new Error(`Kernel '${e}' not registered for backend '${this.backendName}'`);return this.runKernelFunc({kernelName:e,inputs:t,attrs:n})}shouldCheckForMemLeaks(){return this.ENV.getBool("IS_TEST")}checkKernelForMemLeak(e,t,n){const s=this.backend.numDataIds();let r=0;n.forEach((e=>{r+="complex64"===e.dtype?3:1}));const a=this.state.numDataMovesStack[this.state.numDataMovesStack.length-1],i=s-t-r-a;if(i>0)throw new Error(`Backend '${this.backendName}' has an internal memory leak (${i} data ids) after running '${e}'`)}runKernelFunc(e){let t,n=[];const s=this.isTapeOn(),r=this.state.numBytes,a=this.state.numTensors;let i,o;this.shouldCheckForMemLeaks()&&this.state.numDataMovesStack.push(0),null==this.backendName&&this.backend;const l=ua(e)?e.kernelName:null!=this.state.activeScope?this.state.activeScope.name:"";if(ua(e)){const{kernelName:t,inputs:r,attrs:a}=e;null==this.backendName&&this.backend;const l=ir(t,this.backendName);ie(null!=l,(()=>`Cannot find registered kernel '${t}' for backend '${this.backendName}'`)),i=()=>{const e=this.backend.numDataIds();o=l.kernelFunc({inputs:r,attrs:a,backend:this.backend});const i=Array.isArray(o)?o:[o];this.shouldCheckForMemLeaks()&&this.checkKernelForMemLeak(t,e,i);const u=i.map((e=>null!=e.rank?e:this.makeTensorFromTensorInfo(e)));if(s){const e=this.getTensorsForGradient(t,r,u);n=this.saveTensorsForBackwardMode(e)}return u}}else{const{forwardFunc:t}=e,r=e=>{s&&(n=e.map((e=>this.keep(this.clone(e)))))};i=()=>{const e=this.backend.numDataIds();o=this.tidy((()=>t(this.backend,r)));const n=Array.isArray(o)?o:[o];return this.shouldCheckForMemLeaks()&&this.checkKernelForMemLeak(l,e,n),n}}const{inputs:u,attrs:c}=e,h=ua(e)?null:e.backwardsFunc;let d;return this.scopedRun((()=>this.state.kernelDepth++),(()=>this.state.kernelDepth--),(()=>{this.ENV.getBool("DEBUG")||this.state.profiling?(d=this.profiler.profileKernel(l,u,(()=>i())),this.ENV.getBool("DEBUG")&&this.profiler.logKernelProfile(d),t=d.outputs):t=i()})),s&&this.addTapeNode(l,u,t,h,n,c),this.state.profiling&&this.state.activeProfile.kernels.push({name:l,bytesAdded:this.state.numBytes-r,totalBytesSnapshot:this.state.numBytes,tensorsAdded:this.state.numTensors-a,totalTensorsSnapshot:this.state.numTensors,inputShapes:Object.keys(u).map((e=>null!=u[e]?u[e].shape:null)),outputShapes:t.map((e=>e.shape)),kernelTimeMs:d.timeMs,extraInfo:d.extraInfo}),Array.isArray(o)?t:t[0]}saveTensorsForBackwardMode(e){const t=e.map((e=>this.keep(this.clone(e))));return t}getTensorsForGradient(e,t,n){const s=or(e);if(null!=s){const e=s.inputsToSave||[],r=s.outputsToSave||[];let a;s.saveAllInputs?(ie(Array.isArray(t),(()=>"saveAllInputs is true, expected inputs to be an array.")),a=Object.keys(t).map((e=>t[e]))):a=e.map((e=>t[e]));const i=n.filter(((e,t)=>r[t]));return a.concat(i)}return[]}makeTensor(e,t,n,s){if(null==e)throw new Error("Values passed to engine.makeTensor() are null");n=n||"float32",s=s||this.backend;let r=e;"string"===n&&ke(e[0])&&(r=e.map((e=>Ar(e))));const a=s.write(r,t,n),i=new Hr(t,n,a,this.nextTensorId());if(this.trackTensor(i,s),"string"===n){const e=this.state.tensorInfo.get(a),t=function(e){if(null==e)return 0;let t=0;return e.forEach((e=>t+=e.length)),t}(r);this.state.numBytes+=t-e.bytes,e.bytes=t}return i}makeTensorFromDataId(e,t,n,s){const r={dataId:e,shape:t,dtype:n=n||"float32"};return this.makeTensorFromTensorInfo(r,s)}makeTensorFromTensorInfo(e,t){const{dataId:n,shape:s,dtype:r}=e,a=new Hr(s,r,n,this.nextTensorId());return this.trackTensor(a,t),a}makeVariable(e,t=!0,n,s){n=n||this.nextVariableId().toString(),null!=s&&s!==e.dtype&&(e=e.cast(s));const r=new Kr(e,t,n,this.nextTensorId());if(null!=this.state.registeredVariables[r.name])throw new Error(`Variable with name ${r.name} was already registered`);return this.state.registeredVariables[r.name]=r,this.incRef(r,this.backend),r}trackTensor(e,t){this.state.numTensors++,"string"===e.dtype&&this.state.numStringTensors++;let n=0;"complex64"!==e.dtype&&"string"!==e.dtype&&(n=e.size*ve(e.dtype)),this.state.numBytes+=n,this.state.tensorInfo.has(e.dataId)||(this.state.numDataBuffers++,this.state.tensorInfo.set(e.dataId,{backend:t||this.backend,dtype:e.dtype,shape:e.shape,bytes:n})),e instanceof Kr||this.track(e)}incRef(e,t){this.trackTensor(e,t),this.backend.incRef(e.dataId)}removeDataId(e,t){this.state.tensorInfo.has(e)&&this.state.tensorInfo.get(e).backend===t&&(this.state.tensorInfo.delete(e),this.state.numDataBuffers--)}disposeTensor(e){if(!this.state.tensorInfo.has(e.dataId))return;const t=this.state.tensorInfo.get(e.dataId);if(this.state.numTensors--,"string"===e.dtype&&(this.state.numStringTensors--,this.state.numBytes-=t.bytes),"complex64"!==e.dtype&&"string"!==e.dtype){const t=e.size*ve(e.dtype);this.state.numBytes-=t}t.backend.disposeData(e.dataId)&&this.removeDataId(e.dataId,t.backend)}disposeVariables(){for(const e in this.state.registeredVariables){const t=this.state.registeredVariables[e];this.disposeVariable(t)}}disposeVariable(e){this.disposeTensor(e),null!=this.state.registeredVariables[e.name]&&delete this.state.registeredVariables[e.name]}memory(){const e=this.backend.memory();return e.numTensors=this.state.numTensors,e.numDataBuffers=this.state.numDataBuffers,e.numBytes=this.state.numBytes,this.state.numStringTensors>0&&(e.unreliable=!0,null==e.reasons&&(e.reasons=[]),e.reasons.push("Memory usage by string tensors is approximate (2 bytes per character)")),e}async profile(e){this.state.profiling=!0;const t=this.state.numBytes,n=this.state.numTensors;this.state.activeProfile.kernels=[],this.state.activeProfile.result=await e(),this.state.profiling=!1,this.state.activeProfile.peakBytes=Math.max(...this.state.activeProfile.kernels.map((e=>e.totalBytesSnapshot))),this.state.activeProfile.newBytes=this.state.numBytes-t,this.state.activeProfile.newTensors=this.state.numTensors-n;for(const e of this.state.activeProfile.kernels)e.kernelTimeMs=await e.kernelTimeMs,e.extraInfo=await e.extraInfo;return this.state.activeProfile}isTapeOn(){return this.state.gradientDepth>0&&0===this.state.kernelDepth}addTapeNode(e,t,n,s,r,a){const i={id:this.state.nextTapeNodeId++,kernelName:e,inputs:t,outputs:n,saved:r},o=or(e);null!=o&&(s=o.gradFunc),null!=s&&(i.gradient=e=>(e=e.map(((e,t)=>{if(null==e){const e=n[t],s=Re(e.size,e.dtype);return this.makeTensor(s,e.shape,e.dtype)}return e})),s(e.length>1?e:e[0],r,a))),this.state.activeTape.push(i)}keep(e){return e.kept=!0,e}startTape(){0===this.state.gradientDepth&&(this.state.activeTape=[]),this.state.gradientDepth++}endTape(){this.state.gradientDepth--}startScope(e){const t={track:[],name:"unnamed scope",id:this.state.nextScopeId++};e&&(t.name=e),this.state.scopeStack.push(t),this.state.activeScope=t}endScope(e){const t=oa(e),n=new Set(t.map((e=>e.id)));for(let e=0;e<this.state.activeScope.track.length;e++){const t=this.state.activeScope.track[e];t.kept||n.has(t.id)||t.dispose()}const s=this.state.scopeStack.pop();this.state.activeScope=0===this.state.scopeStack.length?null:this.state.scopeStack[this.state.scopeStack.length-1],t.forEach((e=>{e.kept||e.scopeId!==s.id||this.track(e)}))}gradients(e,t,n,s=!1){if(ie(t.length>0,(()=>"gradients() received an empty list of xs.")),null!=n&&"float32"!==n.dtype)throw new Error(`dy must have 'float32' dtype, but has '${n.dtype}'`);const r=this.scopedRun((()=>this.startTape()),(()=>this.endTape()),(()=>this.tidy("forward",e)));ie(r instanceof Hr,(()=>"The result y returned by f() must be a tensor."));const a=function(e,t,n){const s={},r={};for(let e=0;e<t.length;e++)s[t[e].id]=!0;for(let n=0;n<e.length;n++){const a=e[n],i=a.inputs;for(const e in i){const n=i[e];let o=!1;for(let e=0;e<t.length;e++)if(s[n.id]){a.outputs.forEach((e=>s[e.id]=!0)),o=!0,r[a.id]=!0;break}if(o)break}}const a={};a[n.id]=!0;const i={};for(let t=e.length-1;t>=0;t--){const n=e[t],s=n.inputs;for(let e=0;e<n.outputs.length;e++)if(a[n.outputs[e].id]){for(const e in s)a[s[e].id]=!0,i[n.id]=!0;break}}const o=[];for(let t=0;t<e.length;t++){const n=e[t];if(r[n.id]&&i[n.id]){const e={};for(const t in n.inputs){const r=n.inputs[t];s[r.id]&&(e[t]=r)}const t=Object.assign({},n);t.inputs=e,t.outputs=n.outputs,o.push(t)}}return o}(this.state.activeTape,t,r);if(!s&&0===a.length&&t.length>0)throw new Error("Cannot compute gradient of y=f(x) with respect to x. Make sure that the f you passed encloses all operations that lead from x to y.");return this.tidy("backward",(()=>{const e={};e[r.id]=null==n?function(e){const t=Ae(ue(e),"float32");return pa.makeTensor(t,e,"float32")}(r.shape):n,function(e,t,n,s){for(let r=t.length-1;r>=0;r--){const a=t[r],i=[];if(a.outputs.forEach((t=>{const n=e[t.id];null!=n?i.push(n):i.push(null)})),null==a.gradient)throw new Error(`Cannot compute gradient: gradient function not found for ${a.kernelName}.`);const o=a.gradient(i);for(const t in a.inputs){if(!(t in o))throw new Error(`Cannot backprop through input ${t}. Available gradients found: ${Object.keys(o)}.`);const r=n((()=>o[t]()));if("float32"!==r.dtype)throw new Error(`Error in gradient for op ${a.kernelName}. The gradient of input ${t} must have 'float32' dtype, but has '${r.dtype}'`);const i=a.inputs[t];if(!ce(r.shape,i.shape))throw new Error(`Error in gradient for op ${a.kernelName}. The gradient of input '${t}' has shape '${r.shape}', which does not match the shape of the input '${i.shape}'`);if(null==e[i.id])e[i.id]=r;else{const t=e[i.id];e[i.id]=s(t,r),t.dispose()}}}}(e,a,(e=>this.tidy(e)),fa);const s=t.map((t=>e[t.id]));return 0===this.state.gradientDepth&&(this.state.activeTape.forEach((e=>{for(const t of e.saved)t.dispose()})),this.state.activeTape=null),{value:r,grads:s}}))}customGrad(e){return ie(Se(e),(()=>"The f passed in customGrad(f) must be a function.")),(...t)=>{let n;ie(t.every((e=>e instanceof Hr)),(()=>"The args passed in customGrad(f)(x1, x2,...) must all be tensors"));const s={};return t.forEach(((e,t)=>{s[t]=e})),this.runKernelFunc({forwardFunc:(s,r)=>(n=e(...t,r),ie(n.value instanceof Hr,(()=>"The function f passed in customGrad(f) must return an object where `obj.value` is a tensor")),ie(Se(n.gradFunc),(()=>"The function f passed in customGrad(f) must return an object where `obj.gradFunc` is a function.")),n.value),backwardsFunc:(e,s)=>{const r=n.gradFunc(e,s),a=Array.isArray(r)?r:[r];ie(a.length===t.length,(()=>"The function f passed in customGrad(f) must return an object where `obj.gradFunc` is a function that returns the same number of tensors as inputs passed to f(...).")),ie(a.every((e=>e instanceof Hr)),(()=>"The function f passed in customGrad(f) must return an object where `obj.gradFunc` is a function that returns a list of only tensors."));const i={};return a.forEach(((e,t)=>{i[t]=()=>e})),i},inputs:s})}}readSync(e){return this.state.tensorInfo.get(e).backend.readSync(e)}read(e){return this.state.tensorInfo.get(e).backend.read(e)}readToGPU(e,t){return this.state.tensorInfo.get(e).backend.readToGPU(e,t)}async time(e){const t=Er(),n=await this.backend.time(e);return n.wallMs=Er()-t,n}track(e){return null!=this.state.activeScope&&(e.scopeId=this.state.activeScope.id,this.state.activeScope.track.push(e)),e}get registeredVariables(){return this.state.registeredVariables}reset(){this.pendingBackendInitId++,this.state.dispose(),this.ENV.reset(),this.state=new ca;for(const e in this.registry)this.disposeRegisteredKernels(e),this.registry[e].dispose(),delete this.registry[e];this.backendName=null,this.backendInstance=null,this.pendingBackendInit=null}}function da(){const e=Ue();if(null==e._tfengine){const t=new ze(e);e._tfengine=new ha(t)}var t;return t=e._tfengine.ENV,Ve=t,Ur=()=>e._tfengine,e._tfengine}ha.nextTensorId=0,ha.nextVariableId=0;const pa=da();function fa(e,t){const n={a:e,b:t};return pa.runKernel(Ke,n)}function ma(e){if(e||"undefined"!=typeof navigator&&null!=navigator){if(e||(e=navigator),"ReactNative"===e.product)return!0;const t=e.userAgent||e.vendor||("undefined"!=typeof window?window.opera:"");if(!t){const t=e;return t.userAgentData&&t.userAgentData.mobile}return/(android|bb\d+|meego).+mobile|avantgo|bada\/|blackberry|blazer|compal|elaine|fennec|hiptop|iemobile|ip(hone|od)|iris|kindle|lge |maemo|midp|mmp|mobile.+firefox|netfront|opera m(ob|in)i|palm( os)?|phone|p(ixi|re)\/|plucker|pocket|psp|series(4|6)0|symbian|treo|up\.(browser|link)|vodafone|wap|windows ce|xda|xiino/i.test(t)||/1207|6310|6590|3gso|4thp|50[1-6]i|770s|802s|a wa|abac|ac(er|oo|s\-)|ai(ko|rn)|al(av|ca|co)|amoi|an(ex|ny|yw)|aptu|ar(ch|go)|as(te|us)|attw|au(di|\-m|r |s )|avan|be(ck|ll|nq)|bi(lb|rd)|bl(ac|az)|br(e|v)w|bumb|bw\-(n|u)|c55\/|capi|ccwa|cdm\-|cell|chtm|cldc|cmd\-|co(mp|nd)|craw|da(it|ll|ng)|dbte|dc\-s|devi|dica|dmob|do(c|p)o|ds(12|\-d)|el(49|ai)|em(l2|ul)|er(ic|k0)|esl8|ez([4-7]0|os|wa|ze)|fetc|fly(\-|_)|g1 u|g560|gene|gf\-5|g\-mo|go(\.w|od)|gr(ad|un)|haie|hcit|hd\-(m|p|t)|hei\-|hi(pt|ta)|hp( i|ip)|hs\-c|ht(c(\-| |_|a|g|p|s|t)|tp)|hu(aw|tc)|i\-(20|go|ma)|i230|iac( |\-|\/)|ibro|idea|ig01|ikom|im1k|inno|ipaq|iris|ja(t|v)a|jbro|jemu|jigs|kddi|keji|kgt( |\/)|klon|kpt |kwc\-|kyo(c|k)|le(no|xi)|lg( g|\/(k|l|u)|50|54|\-[a-w])|libw|lynx|m1\-w|m3ga|m50\/|ma(te|ui|xo)|mc(01|21|ca)|m\-cr|me(rc|ri)|mi(o8|oa|ts)|mmef|mo(01|02|bi|de|do|t(\-| |o|v)|zz)|mt(50|p1|v )|mwbp|mywa|n10[0-2]|n20[2-3]|n30(0|2)|n50(0|2|5)|n7(0(0|1)|10)|ne((c|m)\-|on|tf|wf|wg|wt)|nok(6|i)|nzph|o2im|op(ti|wv)|oran|owg1|p800|pan(a|d|t)|pdxg|pg(13|\-([1-8]|c))|phil|pire|pl(ay|uc)|pn\-2|po(ck|rt|se)|prox|psio|pt\-g|qa\-a|qc(07|12|21|32|60|\-[2-7]|i\-)|qtek|r380|r600|raks|rim9|ro(ve|zo)|s55\/|sa(ge|ma|mm|ms|ny|va)|sc(01|h\-|oo|p\-)|sdk\/|se(c(\-|0|1)|47|mc|nd|ri)|sgh\-|shar|sie(\-|m)|sk\-0|sl(45|id)|sm(al|ar|b3|it|t5)|so(ft|ny)|sp(01|h\-|v\-|v )|sy(01|mb)|t2(18|50)|t6(00|10|18)|ta(gt|lk)|tcl\-|tdg\-|tel(i|m)|tim\-|t\-mo|to(pl|sh)|ts(70|m\-|m3|m5)|tx\-9|up(\.b|g1|si)|utst|v400|v750|veri|vi(rg|te)|vk(40|5[0-3]|\-v)|vm40|voda|vulc|vx(52|53|60|61|70|80|81|83|85|98)|w3c(\-| )|webc|whit|wi(g |nc|nw)|wmlb|wonu|x700|yas\-|your|zeto|zte\-/i.test(t.substr(0,4))}return!1}function ga(){return"undefined"!=typeof window&&null!=window.document||"undefined"!=typeof WorkerGlobalScope}const ya=Pe();function ba(e,t){let n=e;if(_r(e))return"string"===t?[]:[e.length];if(sa(e)){const t=e.channels||"RGBA";return[e.height,e.width*t.length]}if(ra(e))return[e.buffer.size/(null==t?4:ve(t))];if(!Array.isArray(e))return[];const s=[];for(;Array.isArray(n)||_r(n)&&"string"!==t;)s.push(n.length),n=n[0];return Array.isArray(e)&&Pe().getBool("TENSORLIKE_CHECK_SHAPE_CONSISTENCY")&&xa(e,s,[]),s}function xa(e,t,n){if(n=n||[],!Array.isArray(e)&&!_r(e))return void ie(0===t.length,(()=>`Element arr[${n.join("][")}] is a primitive, but should be an array/TypedArray of ${t[0]} elements`));ie(t.length>0,(()=>`Element arr[${n.join("][")}] should be a primitive, but is an array of ${e.length} elements`)),ie(e.length===t[0],(()=>`Element arr[${n.join("][")}] should have ${t[0]} elements, but has ${e.length} elements`));const s=t.slice(1);for(let t=0;t<e.length;++t)xa(e[t],s,n.concat(t))}function wa(e,t,n,s){if("string_or_numeric"!==e){if(null==e)throw new Error("Expected dtype cannot be null.");if("numeric"!==e&&e!==t||"numeric"===e&&"string"===t)throw new Error(`Argument '${n}' passed to '${s}' must be ${e} tensor, but got ${t} tensor`)}}function va(e,t,n,s="numeric"){if(e instanceof qr())return wa(s,e.dtype,t,n),e;let r=Ne(e);if("string"!==r&&["bool","int32","float32"].indexOf(s)>=0&&(r=s),wa(s,r,t,n),null==e||!_r(e)&&!Array.isArray(e)&&"number"!=typeof e&&"boolean"!=typeof e&&"string"!=typeof e){const s=null==e?"null":e.constructor.name;throw new Error(`Argument '${t}' passed to '${n}' must be a Tensor or TensorLike, but got '${s}'`)}const a=ba(e,r);_r(e)||Array.isArray(e)||(e=[e]);const i="string"!==r?$r(e,r):Fr(e,[],!0);return pa.makeTensor(i,a,r)}function ka(e,t,n,s="numeric"){if(!Array.isArray(e))throw new Error(`Argument ${t} passed to ${n} must be a \`Tensor[]\` or \`TensorLike[]\``);return e.map(((e,r)=>va(e,`${t}[${r}]`,n,s)))}ya.registerFlag("DEBUG",(()=>!1),(e=>{e&&console.warn("Debugging mode is ON. The output of every math call will be downloaded to CPU and checked for NaNs. This significantly impacts performance.")})),ya.registerFlag("IS_BROWSER",(()=>ga())),ya.registerFlag("IS_NODE",(()=>"undefined"!=typeof process&&void 0!==process.versions&&void 0!==process.versions.node)),ya.registerFlag("IS_CHROME",(()=>"undefined"!=typeof navigator&&null!=navigator&&null!=navigator.userAgent&&/Chrome/.test(navigator.userAgent)&&/Google Inc/.test(navigator.vendor))),ya.registerFlag("IS_SAFARI",(()=>"undefined"!=typeof navigator&&null!=navigator&&null!=navigator.userAgent&&/Safari/.test(navigator.userAgent)&&/Apple/.test(navigator.vendor))),ya.registerFlag("PROD",(()=>!1)),ya.registerFlag("TENSORLIKE_CHECK_SHAPE_CONSISTENCY",(()=>ya.getBool("DEBUG"))),ya.registerFlag("DEPRECATION_WARNINGS_ENABLED",(()=>!0)),ya.registerFlag("IS_TEST",(()=>!1)),ya.registerFlag("CHECK_COMPUTATION_FOR_ERRORS",(()=>ya.getBool("DEBUG"))),ya.registerFlag("WRAP_TO_IMAGEBITMAP",(()=>!1)),ya.registerFlag("CANVAS2D_WILL_READ_FREQUENTLY_FOR_GPU",(()=>!1)),ya.registerFlag("USE_SETTIMEOUTCUSTOM",(()=>!1));const Ia="__op";function Na(e){const t=Object.keys(e);if(1!==t.length)throw new Error(`Please provide an object with a single key (operation name) mapping to a function. Got an object with ${t.length} keys.`);let n=t[0];const s=e[n];n.endsWith("_")&&(n=n.substring(0,n.length-1)),n+=Ia;const r=(...e)=>{pa.startScope(n);try{const t=s(...e);return Me(t)&&console.error("Cannot return a Promise inside of tidy."),pa.endScope(t),t}catch(e){throw pa.endScope(null),e}};return Object.defineProperty(r,"name",{value:n,configurable:!0}),r}const Sa=Na({complex_:function(e,t){const n=va(e,"real","complex"),s=va(t,"imag","complex");oe(n.shape,s.shape,`real and imag shapes, ${n.shape} and ${s.shape}, must match in call to tf.complex().`);const r={real:n,imag:s};return pa.runKernel(yt,r)}});function Ta(e,t,n,s){if(null==s)s=Ne(e);else if("complex64"===s)throw new Error("Cannot construct a complex64 tensor directly. Please use tf.complex(real, imag).");if(ra(e)||sa(e)){if("float32"!==s&&"int32"!==s)throw new Error(`Creating tensor from GPU data only supports 'float32'|'int32' dtype, while the dtype is ${s}.`);return pa.backend.createTensorFromGPUData(e,t||n,s)}if(!_r(e)&&!Array.isArray(e)&&"number"!=typeof e&&"boolean"!=typeof e&&"string"!=typeof e)throw new Error("values passed to tensor(values) must be a number/boolean/string or an array of numbers/booleans/strings, or a TypedArray");if(null!=t){Fe(t);const e=ue(t),s=ue(n);ie(e===s,(()=>`Based on the provided shape, [${t}], the tensor should have ${e} values but has ${s}`));for(let e=0;e<n.length;++e){const s=n[e],r=e!==n.length-1||s!==ue(t.slice(e));ie(n[e]===t[e]||!r,(()=>`Error creating a new Tensor. Inferred shape (${n}) does not match the provided shape (${t}). `))}}return _r(e)||Array.isArray(e)||(e=[e]),t=t||n,e="string"!==s?$r(e,s):Fr(e,[],!0),pa.makeTensor(e,t,s)}function Ca(e,t,n){return Ta(e,t,ba(e,n),n)}const $a={float32:4,float16:2,int32:4,uint16:2,uint8:1,bool:1,complex64:8};class Ea{static join(e){return new Ea(e).slice()}constructor(e){if(this.shards=[],this.previousShardIndex=0,null==e)return;if(e instanceof Array||(e=[e]),0===(e=e.map((e=>_r(e)?e.buffer:e))).length)return;this.bufferUniformSize=e[0].byteLength;let t=0;for(let n=0;n<e.length;n++){const s=e[n];n!==e.length-1&&s.byteLength!==this.bufferUniformSize&&(this.bufferUniformSize=void 0);const r=t+s.byteLength;this.shards.push({buffer:s,start:t,end:r}),t=r}0===this.shards.length&&(this.byteLength=0),this.byteLength=this.shards[this.shards.length-1].end}slice(e=0,t=this.byteLength){if(0===this.shards.length)return new ArrayBuffer(0);if(e=isNaN(Number(e))?0:e,t=isNaN(Number(t))?0:t,e=Math.max(0,e),(t=Math.min(this.byteLength,t))<=e)return new ArrayBuffer(0);const n=this.findShardForByte(e);if(-1===n)throw new Error(`Could not find start shard for byte ${e}`);const s=new ArrayBuffer(t-e),r=new Uint8Array(s);let a=0;for(let s=n;s<this.shards.length;s++){const n=this.shards[s],i=e+a-n.start,o=a,l=Math.min(t,n.end)-n.start,u=new Uint8Array(n.buffer,i,l-i);if(r.set(u,o),a+=u.length,t<n.end)break}return s}findShardForByte(e){if(0===this.shards.length||e<0||e>=this.byteLength)return-1;if(null!=this.bufferUniformSize)return this.previousShardIndex=Math.floor(e/this.bufferUniformSize),this.previousShardIndex;function t(t){return e<t.start?-1:e>=t.end?1:0}if(0===t(this.shards[this.previousShardIndex]))return this.previousShardIndex;const n=function(e,t){let n=0,s=e.length;for(;n<=s;){const r=Math.floor((s-n)/2)+n,a=t(e[r]);if(0===a)return r;a<0?s=r:n=r+1}return-1}(this.shards,t);return-1===n?-1:(this.previousShardIndex=n,this.previousShardIndex)}}function Aa(){return pa}function Ra(){return pa.memory()}function _a(e,t){return pa.tidy(e,t)}function Fa(e){oa(e).forEach((e=>e.dispose()))}function Da(e){return pa.keep(e)}function Oa(e,t,n=1){return pa.registerBackend(e,t,n)}function Ma(){return pa.backend}jr=function(e){Pe().getBool("DEPRECATION_WARNINGS_ENABLED")&&console.warn(e+" You can disable deprecation warnings with tf.disableDeprecationWarnings().")};const La=4;async function za(e,t){const n=[],s=[],r=Array.isArray(e)?e.map((e=>e.name)):Object.keys(e);for(let a=0;a<r.length;++a){const i=r[a],o=Array.isArray(e)?e[a].tensor:e[i];if("float32"!==o.dtype&&"int32"!==o.dtype&&"bool"!==o.dtype&&"string"!==o.dtype&&"complex64"!==o.dtype)throw new Error(`Unsupported dtype in weight '${i}': ${o.dtype}`);const l={name:i,shape:o.shape,dtype:o.dtype};if("string"===o.dtype){const e=new Promise((async e=>{const t=await o.bytes(),n=t.reduce(((e,t)=>e+t.length),0)+La*t.length,s=new Uint8Array(n);let r=0;for(let e=0;e<t.length;e++){const n=t[e],a=new Uint8Array(new Uint32Array([n.length]).buffer);s.set(a,r),r+=La,s.set(n,r),r+=n.length}e(s)}));s.push(e)}else s.push(o.data());null!=t&&(l.group=t),n.push(l)}return{data:ja(await Promise.all(s)),specs:n}}function Ba(e,t){const n=new Ea(e),s={};let r=0;for(const e of t){const t=Pa(e,((e,t)=>n.slice(r+e,r+t)));s[e.name]=Va(e,n.slice(r,r+t)),r+=t}return s}function Pa(e,t){const n=ue(e.shape);let s;if("quantization"in e){const t=e.quantization;s=$a[t.dtype]}else{if("string"===e.dtype){let e=0;for(let s=0;s<n;s++)e+=La+new Uint32Array(t(e,e+La))[0];return e}s=$a[e.dtype]}return n*s}async function Wa(e,t){const n=ue(e.shape);let s;if("quantization"in e){const t=e.quantization;s=$a[t.dtype]}else{if("string"===e.dtype){let e=0;for(let s=0;s<n;s++)e+=La+new Uint32Array(await t(e,e+La))[0];return e}s=$a[e.dtype]}return n*s}function Va(e,t){const n=e.name,s=e.dtype,r=e.shape,a=ue(r);let i,o=0;if("quantization"in e){const r=e.quantization;if("uint8"===r.dtype||"uint16"===r.dtype){if(!("min"in r)||!("scale"in r))throw new Error(`Weight ${e.name} with quantization ${r.dtype} doesn't have corresponding metadata min and scale.`)}else{if("float16"!==r.dtype)throw new Error(`Weight ${e.name} has unknown quantization dtype ${r.dtype}. Supported quantization dtypes are: 'uint8', 'uint16', and 'float16'.`);if("float32"!==s)throw new Error(`Weight ${e.name} is quantized with ${r.dtype} which only supports weights of type float32 not ${s}.`)}const l=$a[r.dtype],u="uint8"===r.dtype?new Uint8Array(t):new Uint16Array(t);if("float32"===s)if("uint8"===r.dtype||"uint16"===r.dtype){i=new Float32Array(u.length);for(let e=0;e<u.length;e++){const t=u[e];i[e]=t*r.scale+r.min}}else{if("float16"!==r.dtype)throw new Error(`Unsupported quantization type ${r.dtype} for weight type float32.`);{const e=function(){const e=function(){const e=e=>{let t=e<<13,n=0;for(;!(8388608&t);)n-=8388608,t<<=1;return t&=-8388609,n+=947912704,t|n},t=new Uint32Array(2048);t[0]=0;for(let n=1;n<1024;n++)t[n]=e(n);for(let e=1024;e<2048;e++)t[e]=939524096+(e-1024<<13);return t}(),t=function(){const e=new Uint32Array(64);e[0]=0,e[31]=1199570944,e[32]=2147483648,e[63]=3347054592;for(let t=1;t<31;t++)e[t]=t<<23;for(let t=33;t<63;t++)e[t]=2147483648+(t-32<<23);return e}(),n=function(){const e=new Uint32Array(64);for(let t=0;t<64;t++)e[t]=1024;return e[0]=e[32]=0,e}();return s=>{const r=new ArrayBuffer(4*s.length),a=new Uint32Array(r);for(let r=0;r<s.length;r++){const i=s[r],o=e[n[i>>10]+(1023&i)]+t[i>>10];a[r]=o}return new Float32Array(r)}}();i=e(u)}}else{if("int32"!==s)throw new Error(`Unsupported dtype in weight '${n}': ${s}`);if("uint8"!==r.dtype&&"uint16"!==r.dtype)throw new Error(`Unsupported quantization type ${r.dtype} for weight type int32.`);i=new Int32Array(u.length);for(let e=0;e<u.length;e++){const t=u[e];i[e]=Math.round(t*r.scale+r.min)}}o+=a*l}else if("string"===s){const n=ue(e.shape);i=[];for(let e=0;e<n;e++){const e=new Uint32Array(t.slice(o,o+La))[0];o+=La;const n=new Uint8Array(t.slice(o,o+e));i.push(n),o+=e}}else{const e=$a[s];if("float32"===s)i=new Float32Array(t);else if("int32"===s)i=new Int32Array(t);else{if("bool"!==s){if("complex64"===s){i=new Float32Array(t);const e=new Float32Array(i.length/2),n=new Float32Array(i.length/2);for(let t=0;t<e.length;t++)e[t]=i[2*t],n[t]=i[2*t+1];const s=Ca(e,r,"float32"),a=Ca(n,r,"float32"),o=Sa(s,a);return s.dispose(),a.dispose(),o}throw new Error(`Unsupported dtype in weight '${n}': ${s}`)}i=new Uint8Array(t)}o+=a*e}return Ca(i,r,s)}async function Ua(e,t,n){let s=new Uint8Array(t);for(;s.byteLength<n;){const{done:t,value:r}=await e.read();if(t&&null==r){const e=n-s.byteLength;throw new Error(`Reader is done but ${e} bytes are still expected`)}const a=new Uint8Array(s.length+r.byteLength);a.set(s,0),a.set(new Uint8Array(r),s.length),s=a}return s.buffer}async function Ga(e,t){const n={},s=e.getReader();let r=new ArrayBuffer(0);for(const e of t){const t=await Wa(e,(async(e,t)=>(r=await Ua(s,r,t),r.slice(e,t))));r=await Ua(s,r,t);const a=r.slice(0,t);r=r.slice(t);const i=Va(e,a);if(n[e.name]=i,"webgpu"===pa.backendName){const e=Ma();"uploadToGPU"in e&&ue(i.shape)>=Pe().get("WEBGPU_CPU_HANDOFF_SIZE_THRESHOLD")&&e.uploadToGPU(i.dataId)}}return n}function ja(e){if(null===e)throw new Error(`Invalid input value: ${JSON.stringify(e)}`);let t=0;const n=[];e.forEach((e=>{if(t+=e.byteLength,n.push(e.byteLength===e.buffer.byteLength?e:new e.constructor(e)),!(e instanceof Float32Array||e instanceof Int32Array||e instanceof Uint8Array))throw new Error(`Unsupported TypedArray subtype: ${e.constructor.name}`)}));const s=new Uint8Array(t);let r=0;return n.forEach((e=>{s.set(new Uint8Array(e.buffer),r),r+=e.byteLength})),s.buffer}const Ha="undefined"!=typeof Buffer&&("undefined"==typeof Blob||"undefined"==typeof atob||"undefined"==typeof btoa);function qa(e){return Ha?Buffer.byteLength(e,"utf8"):new Blob([e]).size}function Ka(e){return Ea.join(e)}function Xa(e){for(e=e.trim();e.endsWith("/");)e=e.slice(0,e.length-1);const t=e.split("/");return t[t.length-1]}function Ya(e,t){const n={modelTopology:e.modelTopology,format:e.format,generatedBy:e.generatedBy,convertedBy:e.convertedBy,weightsManifest:t};return null!=e.signature&&(n.signature=e.signature),null!=e.userDefinedMetadata&&(n.userDefinedMetadata=e.userDefinedMetadata),null!=e.modelInitializer&&(n.modelInitializer=e.modelInitializer),null!=e.initializerSignature&&(n.initializerSignature=e.initializerSignature),null!=e.trainingConfig&&(n.trainingConfig=e.trainingConfig),n}function Ja(e,t,n){const s={modelTopology:e.modelTopology,format:e.format,generatedBy:e.generatedBy,convertedBy:e.convertedBy};if(null!=e.trainingConfig&&(s.trainingConfig=e.trainingConfig),null!=e.weightsManifest){if(!t)throw new Error("modelJSON has weightsManifest but weightSpecs is null");if(!n)throw new Error("modelJSON has weightsManifest but weightData is null");s.weightSpecs=t,s.weightData=n}return null!=e.signature&&(s.signature=e.signature),null!=e.userDefinedMetadata&&(s.userDefinedMetadata=e.userDefinedMetadata),null!=e.modelInitializer&&(s.modelInitializer=e.modelInitializer),null!=e.initializerSignature&&(s.initializerSignature=e.initializerSignature),s}async function Za(e,t){let n,s;return null!=e.weightsManifest&&([n,s]=await t(e.weightsManifest)),Ja(e,n,s)}function Qa(e){if(e.modelTopology instanceof ArrayBuffer)throw new Error("Expected JSON model topology, received ArrayBuffer.");return{dateSaved:new Date,modelTopologyType:"JSON",modelTopologyBytes:null==e.modelTopology?0:qa(JSON.stringify(e.modelTopology)),weightSpecsBytes:null==e.weightSpecs?0:qa(JSON.stringify(e.weightSpecs)),weightDataBytes:null==e.weightData?0:new Ea(e.weightData).byteLength}}function ei(e){const t=[];for(const n of e)t.push(...n.weights);return t}class ti{constructor(){this.saveRouters=[],this.loadRouters=[]}static getInstance(){return null==ti.instance&&(ti.instance=new ti),ti.instance}static registerSaveRouter(e){ti.getInstance().saveRouters.push(e)}static registerLoadRouter(e){ti.getInstance().loadRouters.push(e)}static getSaveHandlers(e){return ti.getHandlers(e,"save")}static getLoadHandlers(e,t){return ti.getHandlers(e,"load",t)}static getHandlers(e,t,n){const s=[];return("load"===t?ti.getInstance().loadRouters:ti.getInstance().saveRouters).forEach((t=>{const r=t(e,n);null!==r&&s.push(r)})),s}}const ni=e=>ti.registerSaveRouter(e),si=e=>ti.registerLoadRouter(e),ri=e=>ti.getSaveHandlers(e),ai=(e,t)=>ti.getLoadHandlers(e,t),ii="tensorflowjs",oi="models_store",li="model_info_store";function ui(){if(!Pe().getBool("IS_BROWSER"))throw new Error("Failed to obtain IndexedDB factory because the current environmentis not a web browser.");const e="undefined"==typeof window?self:window,t=e.indexedDB||e.mozIndexedDB||e.webkitIndexedDB||e.msIndexedDB||e.shimIndexedDB;if(null==t)throw new Error("The current browser does not appear to support IndexedDB.");return t}function ci(e){const t=e.result;t.createObjectStore(oi,{keyPath:"modelPath"}),t.createObjectStore(li,{keyPath:"modelPath"})}class hi{constructor(e){if(this.indexedDB=ui(),null==e||!e)throw new Error("For IndexedDB, modelPath must not be null, undefined or empty.");this.modelPath=e}async save(e){if(e.modelTopology instanceof ArrayBuffer)throw new Error("BrowserLocalStorage.save() does not support saving model topology in binary formats yet.");return this.databaseAction(this.modelPath,e)}async load(){return this.databaseAction(this.modelPath)}databaseAction(e,t){return new Promise(((e,n)=>{const s=this.indexedDB.open(ii,1);s.onupgradeneeded=()=>ci(s),s.onsuccess=()=>{const r=s.result;if(null==t){const t=r.transaction(oi,"readonly"),s=t.objectStore(oi).get(this.modelPath);s.onsuccess=()=>{if(null==s.result)return r.close(),n(new Error(`Cannot find model with path '${this.modelPath}' in IndexedDB.`));e(s.result.modelArtifacts)},s.onerror=e=>(r.close(),n(s.error)),t.oncomplete=()=>r.close()}else{t.weightData=Ea.join(t.weightData);const s=Qa(t),a=r.transaction(li,"readwrite");let i,o,l=a.objectStore(li);try{i=l.put({modelPath:this.modelPath,modelArtifactsInfo:s})}catch(e){return n(e)}i.onsuccess=()=>{o=r.transaction(oi,"readwrite");const i=o.objectStore(oi);let u;try{u=i.put({modelPath:this.modelPath,modelArtifacts:t,modelArtifactsInfo:s})}catch(e){return n(e)}u.onsuccess=()=>e({modelArtifactsInfo:s}),u.onerror=e=>{l=a.objectStore(li);const t=l.delete(this.modelPath);t.onsuccess=()=>(r.close(),n(u.error)),t.onerror=e=>(r.close(),n(u.error))}},i.onerror=e=>(r.close(),n(i.error)),a.oncomplete=()=>{null==o?r.close():o.oncomplete=()=>r.close()}}},s.onerror=e=>n(s.error)}))}}hi.URL_SCHEME="indexeddb://";const di=e=>{return Pe().getBool("IS_BROWSER")&&!Array.isArray(e)&&e.startsWith(hi.URL_SCHEME)?(t=e.slice(hi.URL_SCHEME.length),new hi(t)):null;var t};ti.registerSaveRouter(di),ti.registerLoadRouter(di);class pi{constructor(){this.indexedDB=ui()}async listModels(){return new Promise(((e,t)=>{const n=this.indexedDB.open(ii,1);n.onupgradeneeded=()=>ci(n),n.onsuccess=()=>{const s=n.result,r=s.transaction(li,"readonly"),a=r.objectStore(li).getAll();a.onsuccess=()=>{const t={};for(const e of a.result)t[e.modelPath]=e.modelArtifactsInfo;e(t)},a.onerror=e=>(s.close(),t(a.error)),r.oncomplete=()=>s.close()},n.onerror=e=>t(n.error)}))}async removeModel(e){var t;return e=(t=e).startsWith(hi.URL_SCHEME)?t.slice(hi.URL_SCHEME.length):t,new Promise(((t,n)=>{const s=this.indexedDB.open(ii,1);s.onupgradeneeded=()=>ci(s),s.onsuccess=()=>{const r=s.result,a=r.transaction(li,"readwrite"),i=a.objectStore(li),o=i.get(e);let l;o.onsuccess=()=>{if(null==o.result)return r.close(),n(new Error(`Cannot find model with path '${e}' in IndexedDB.`));{const s=i.delete(e),a=()=>{l=r.transaction(oi,"readwrite");const s=l.objectStore(oi).delete(e);s.onsuccess=()=>t(o.result.modelArtifactsInfo),s.onerror=e=>n(o.error)};s.onsuccess=a,s.onerror=e=>(a(),r.close(),n(o.error))}},o.onerror=e=>(r.close(),n(o.error)),a.oncomplete=()=>{null==l?r.close():l.oncomplete=()=>r.close()}},s.onerror=e=>n(s.error)}))}}const fi="/",mi="tensorflowjs_models",gi="info",yi="model_topology",bi="weight_specs",xi="weight_data",wi="model_metadata";function vi(e){return{info:[mi,e,gi].join(fi),topology:[mi,e,yi].join(fi),weightSpecs:[mi,e,bi].join(fi),weightData:[mi,e,xi].join(fi),modelMetadata:[mi,e,wi].join(fi)}}function ki(e){for(const t of Object.values(e))window.localStorage.removeItem(t)}function Ii(e){const t=e.split(fi);if(t.length<3)throw new Error(`Invalid key format: ${e}`);return t.slice(1,t.length-1).join(fi)}class Ni{constructor(e){if(!Pe().getBool("IS_BROWSER")||"undefined"==typeof window||void 0===window.localStorage)throw new Error("The current environment does not support local storage.");if(this.LS=window.localStorage,null==e||!e)throw new Error("For local storage, modelPath must not be null, undefined or empty.");this.modelPath=e,this.keys=vi(this.modelPath)}async save(e){if(e.modelTopology instanceof ArrayBuffer)throw new Error("BrowserLocalStorage.save() does not support saving model topology in binary formats yet.");{const t=JSON.stringify(e.modelTopology),n=JSON.stringify(e.weightSpecs),s=Qa(e),r=Ea.join(e.weightData);try{this.LS.setItem(this.keys.info,JSON.stringify(s)),this.LS.setItem(this.keys.topology,t),this.LS.setItem(this.keys.weightSpecs,n),this.LS.setItem(this.keys.weightData,function(e){if(Ha)return Buffer.from(e).toString("base64");const t=new Uint8Array(e);let n="";for(let e=0,s=t.length;e<s;e++)n+=String.fromCharCode(t[e]);return btoa(n)}(r));const a={format:e.format,generatedBy:e.generatedBy,convertedBy:e.convertedBy,signature:null!=e.signature?e.signature:void 0,userDefinedMetadata:null!=e.userDefinedMetadata?e.userDefinedMetadata:void 0,modelInitializer:null!=e.modelInitializer?e.modelInitializer:void 0,initializerSignature:null!=e.initializerSignature?e.initializerSignature:void 0,trainingConfig:null!=e.trainingConfig?e.trainingConfig:void 0};return this.LS.setItem(this.keys.modelMetadata,JSON.stringify(a)),{modelArtifactsInfo:s}}catch(e){throw ki(this.keys),new Error(`Failed to save model '${this.modelPath}' to local storage: size quota being exceeded is a possible cause of this failure: modelTopologyBytes=${s.modelTopologyBytes}, weightSpecsBytes=${s.weightSpecsBytes}, weightDataBytes=${s.weightDataBytes}.`)}}}async load(){const e=JSON.parse(this.LS.getItem(this.keys.info));if(null==e)throw new Error(`In local storage, there is no model with name '${this.modelPath}'`);if("JSON"!==e.modelTopologyType)throw new Error("BrowserLocalStorage does not support loading non-JSON model topology yet.");const t={},n=JSON.parse(this.LS.getItem(this.keys.topology));if(null==n)throw new Error(`In local storage, the topology of model '${this.modelPath}' is missing.`);t.modelTopology=n;const s=JSON.parse(this.LS.getItem(this.keys.weightSpecs));if(null==s)throw new Error(`In local storage, the weight specs of model '${this.modelPath}' are missing.`);t.weightSpecs=s;const r=this.LS.getItem(this.keys.modelMetadata);if(null!=r){const e=JSON.parse(r);t.format=e.format,t.generatedBy=e.generatedBy,t.convertedBy=e.convertedBy,null!=e.signature&&(t.signature=e.signature),null!=e.userDefinedMetadata&&(t.userDefinedMetadata=e.userDefinedMetadata),null!=e.modelInitializer&&(t.modelInitializer=e.modelInitializer),null!=e.initializerSignature&&(t.initializerSignature=e.initializerSignature),null!=e.trainingConfig&&(t.trainingConfig=e.trainingConfig)}const a=this.LS.getItem(this.keys.weightData);if(null==a)throw new Error(`In local storage, the binary weight values of model '${this.modelPath}' are missing.`);return t.weightData=function(e){if(Ha){const t=Buffer.from(e,"base64");return t.buffer.slice(t.byteOffset,t.byteOffset+t.byteLength)}const t=atob(e),n=new Uint8Array(t.length);for(let e=0;e<t.length;++e)n.set([t.charCodeAt(e)],e);return n.buffer}(a),t}}Ni.URL_SCHEME="localstorage://";const Si=e=>{return Pe().getBool("IS_BROWSER")&&!Array.isArray(e)&&e.startsWith(Ni.URL_SCHEME)?(t=e.slice(Ni.URL_SCHEME.length),new Ni(t)):null;var t};ti.registerSaveRouter(Si),ti.registerLoadRouter(Si);class Ti{constructor(){ie(Pe().getBool("IS_BROWSER"),(()=>"Current environment is not a web browser")),ie("undefined"==typeof window||void 0!==window.localStorage,(()=>"Current browser does not appear to support localStorage")),this.LS=window.localStorage}async listModels(){const e={},t=mi+fi,n=fi+gi;for(let s=0;s<this.LS.length;++s){const r=this.LS.key(s);r.startsWith(t)&&r.endsWith(n)&&(e[Ii(r)]=JSON.parse(this.LS.getItem(r)))}return e}async removeModel(e){var t;const n=vi(e=(t=e).startsWith(Ni.URL_SCHEME)?t.slice(Ni.URL_SCHEME.length):t);if(null==this.LS.getItem(n.info))throw new Error(`Cannot find model at path '${e}'`);const s=JSON.parse(this.LS.getItem(n.info));return ki(n),s}}const Ci="://";class $i{constructor(){this.managers={}}static getInstance(){return null==$i.instance&&($i.instance=new $i),$i.instance}static registerManager(e,t){ie(null!=e,(()=>"scheme must not be undefined or null.")),e.endsWith(Ci)&&(e=e.slice(0,e.indexOf(Ci))),ie(e.length>0,(()=>"scheme must not be an empty string."));const n=$i.getInstance();ie(null==n.managers[e],(()=>`A model store manager is already registered for scheme '${e}'.`)),n.managers[e]=t}static getManager(e){const t=$i.getInstance().managers[e];if(null==t)throw new Error(`Cannot find model manager for scheme '${e}'`);return t}static getSchemes(){return Object.keys($i.getInstance().managers)}}function Ei(e){if(-1===e.indexOf(Ci))throw new Error(`The url string provided does not contain a scheme. Supported schemes are: ${$i.getSchemes().join(",")}`);return{scheme:e.split(Ci)[0],path:e.split(Ci)[1]}}async function Ai(e,t,n=!1){ie(e!==t,(()=>`Old path and new path are the same: '${e}'`));const s=ti.getLoadHandlers(e);ie(s.length>0,(()=>`Copying failed because no load handler is found for source URL ${e}.`)),ie(s.length<2,(()=>`Copying failed because more than one (${s.length}) load handlers for source URL ${e}.`));const r=s[0],a=ti.getSaveHandlers(t);ie(a.length>0,(()=>`Copying failed because no save handler is found for destination URL ${t}.`)),ie(a.length<2,(()=>`Copying failed because more than one (${s.length}) save handlers for destination URL ${t}.`));const i=a[0],o=Ei(e).scheme,l=Ei(e).path,u=o===Ei(e).scheme,c=await r.load();n&&u&&await $i.getManager(o).removeModel(l);const h=await i.save(c);return n&&!u&&await $i.getManager(o).removeModel(l),h.modelArtifactsInfo}async function Ri(){const e=$i.getSchemes(),t={};for(const n of e){const e=await $i.getManager(n).listModels();for(const s in e)t[n+Ci+s]=e[s]}return t}async function _i(e){const t=Ei(e);return $i.getManager(t.scheme).removeModel(t.path)}async function Fi(e,t){return Ai(e,t,!1)}async function Di(e,t){return Ai(e,t,!0)}class Oi{constructor(){this.messageName="setTimeoutCustom",this.functionRefs=[],this.handledMessageCount=0,this.hasEventListener=!1}fetch(e,t){return fetch(e,t)}now(){return performance.now()}encode(e,t){if("utf-8"!==t&&"utf8"!==t)throw new Error(`Browser's encoder only supports utf-8, but got ${t}`);return null==this.textEncoder&&(this.textEncoder=new TextEncoder),this.textEncoder.encode(e)}decode(e,t){return new TextDecoder(t).decode(e)}setTimeoutCustom(e,t){"undefined"!=typeof window&&Pe().getBool("USE_SETTIMEOUTCUSTOM")?(this.functionRefs.push(e),setTimeout((()=>{window.postMessage({name:this.messageName,index:this.functionRefs.length-1},"*")}),t),this.hasEventListener||(this.hasEventListener=!0,window.addEventListener("message",(e=>{e.source===window&&e.data.name===this.messageName&&(e.stopPropagation(),(0,this.functionRefs[e.data.index])(),this.handledMessageCount++,this.handledMessageCount===this.functionRefs.length&&(this.functionRefs=[],this.handledMessageCount=0))}),!0))):setTimeout(e,t)}isTypedArray(e){return dr(e)}}if(Pe().get("IS_BROWSER")){Pe().setPlatform("browser",new Oi);try{$i.registerManager(Ni.URL_SCHEME,new Ti)}catch(e){}try{$i.registerManager(hi.URL_SCHEME,new pi)}catch(e){}}let Mi;function Li(e,t="float32",n){return t=t||"float32",Fe(e),new Vr(e,t,n)}Pe().get("IS_NODE")&&!Pe().get("IS_BROWSER")&&Pe().setPlatform("node",new class{constructor(){this.util=n(590),this.textEncoder=new this.util.TextEncoder}fetch(e,t){return null!=Pe().global.fetch?Pe().global.fetch(e,t):(null==Mi&&(Mi=n(817)),Mi(e,t))}now(){const e=process.hrtime();return 1e3*e[0]+e[1]/1e6}encode(e,t){if("utf-8"!==t&&"utf8"!==t)throw new Error(`Node built-in encoder only supports utf-8, but got ${t}`);return this.textEncoder.encode(e)}decode(e,t){return 0===e.length?"":new this.util.TextDecoder(t).decode(e)}isTypedArray(e){return this.util.types.isFloat32Array(e)||this.util.types.isInt32Array(e)||this.util.types.isUint8Array(e)||this.util.types.isUint8ClampedArray(e)}});const zi=Na({cast_:function(e,t){const n=va(e,"x","cast");if(!function(e){return"bool"===e||"complex64"===e||"float32"===e||"int32"===e||"string"===e}(t))throw new Error(`Failed to cast to unknown dtype ${t}`);if("string"===t&&"string"!==n.dtype||"string"!==t&&"string"===n.dtype)throw new Error("Only strings can be casted to strings");const s={x:n},r={dtype:t};return pa.runKernel(ft,s,r)}}),Bi=Na({clone_:function(e){const t={x:va(e,"x","clone","string_or_numeric")};return pa.runKernel(an,t)}});function Pi(e,t=!1){console.log(e.toString(t))}da(),Gr={buffer:Li,cast:zi,clone:Bi,print:Pi};const Wi=Na({add_:function(e,t){let n=va(e,"a","add"),s=va(t,"b","add");[n,s]=aa(n,s);const r={a:n,b:s};return pa.runKernel(Ke,r)}}),Vi=Na({floorDiv_:function(e,t){let n=va(e,"a","floorDiv"),s=va(t,"b","floorDiv");[n,s]=aa(n,s);const r={a:n,b:s};return pa.runKernel(Qt,r)}}),Ui=Na({div_:function(e,t){let n=va(e,"a","div"),s=va(t,"b","div");if([n,s]=aa(n,s),"int32"===n.dtype&&"int32"===s.dtype)return Vi(n,s);const r={a:n,b:s};return pa.runKernel(Pt,r,{})}}),Gi=Na({mul_:function(e,t){let n=va(e,"a","mul"),s=va(t,"b","mul");[n,s]=aa(n,s);const r={a:n,b:s};return pa.runKernel(Mn,r)}}),ji=Na({sqrt_:function(e){const t={x:va(e,"x","sqrt","float32")};return pa.runKernel(ks,t)}}),Hi=Na({square_:function(e){const t=va(e,"x","square");return pa.runKernel("Square",{x:t},{})}}),qi=Na({zerosLike_:function(e){const t={x:va(e,"x","zerosLike")};return pa.runKernel(Xs,t)}});function Ki(e){return pa.customGrad(e)}function Xi(e,t){if((_r(e)&&"string"!==t||Array.isArray(e))&&"complex64"!==t)throw new Error("Error creating a new Scalar: value must be a primitive (number|boolean|string)");if("string"===t&&_r(e)&&!(e instanceof Uint8Array))throw new Error("When making a scalar from encoded string, the value must be `Uint8Array`.");return Ta(e,[],[],t)}const Yi=new Map,Ji=new Map;class Zi{getClassName(){return this.constructor.className}static fromConfig(e,t){return new e(t)}}class Qi{constructor(){this.classNameMap={}}static getMap(){return null==Qi.instance&&(Qi.instance=new Qi),Qi.instance}static register(e){Qi.getMap().classNameMap[e.className]=[e,e.fromConfig]}}function eo(e,t,n){ie(null!=e.className,(()=>"Class being registered does not have the static className property defined.")),ie("string"==typeof e.className,(()=>"className is required to be a string, but got type "+typeof e.className)),ie(e.className.length>0,(()=>"Class being registered has an empty-string as its className, which is disallowed.")),void 0===t&&(t="Custom"),void 0===n&&(n=e.className);const s=t+">"+n;return Qi.register(e),Yi.set(s,e),Ji.set(e,s),e}class to extends Zi{minimize(e,t=!1,n){const{value:s,grads:r}=this.computeGradients(e,n);if(null!=n){const e=n.map((e=>({name:e.name,tensor:r[e.name]})));this.applyGradients(e)}else this.applyGradients(r);return Fa(r),t?s:(s.dispose(),null)}get iterations(){return null==this.iterations_&&(this.iterations_=0),this.iterations_}incrementIterations(){this.iterations_=this.iterations+1}computeGradients(e,t){return function(e,t){ie(Se(e),(()=>"The f passed in variableGrads(f) must be a function")),ie(null==t||Array.isArray(t)&&t.every((e=>e instanceof Kr)),(()=>"The varList passed in variableGrads(f, varList) must be an array of variables"));const n=null!=t;if(!n){t=[];for(const e in pa.registeredVariables)t.push(pa.registeredVariables[e])}const s=n?t.filter((e=>!e.trainable)):null,r=t.length;t=t.filter((e=>e.trainable)),ie(t.length>0,(()=>`variableGrads() expects at least one of the input variables to be trainable, but none of the ${r} variables is trainable.`));const{value:a,grads:i}=pa.gradients(e,t,null,!0);ie(i.some((e=>null!=e)),(()=>"Cannot find a connection between any variable and the result of the loss function y=f(x). Please make sure the operations that use variables are inside the function f passed to minimize().")),ie(0===a.rank,(()=>`The f passed in variableGrads(f) must return a scalar, but it returned a rank-${a.rank} tensor`));const o={};return t.forEach(((e,t)=>{null!=i[t]&&(o[e.name]=i[t])})),null!=s&&s.forEach((e=>o[e.name]=null)),{value:a,grads:o}}(e,t)}dispose(){null!=this.iterations_&&Fa(this.iterations_)}async saveIterations(){return null==this.iterations_&&(this.iterations_=0),{name:"iter",tensor:Xi(this.iterations_,"int32")}}async getWeights(){throw new Error("getWeights() is not implemented for this optimizer yet.")}async setWeights(e){throw new Error(`setWeights() is not implemented for this optimizer class ${this.getClassName()}`)}async extractIterations(e){return this.iterations_=(await e[0].tensor.data())[0],e.slice(1)}}Object.defineProperty(to,Symbol.hasInstance,{value:e=>null!=e.minimize&&null!=e.computeGradients&&null!=e.applyGradients});class no extends to{static get className(){return"Adadelta"}constructor(e,t,n=null){super(),this.learningRate=e,this.rho=t,this.epsilon=n,this.accumulatedGrads=[],this.accumulatedUpdates=[],null==n&&(this.epsilon=pa.backend.epsilon())}applyGradients(e){(Array.isArray(e)?e.map((e=>e.name)):Object.keys(e)).forEach(((t,n)=>{const s=pa.registeredVariables[t],r=!1;null==this.accumulatedGrads[n]&&(this.accumulatedGrads[n]={originalName:`${t}/accum_grad`,variable:_a((()=>qi(s).variable(r)))}),null==this.accumulatedUpdates[n]&&(this.accumulatedUpdates[n]={originalName:`${t}/accum_var`,variable:_a((()=>qi(s).variable(r)))});const a=Array.isArray(e)?e[n].tensor:e[t];if(null==a)return;const i=this.accumulatedGrads[n].variable,o=this.accumulatedUpdates[n].variable;_a((()=>{const e=Wi(Gi(i,this.rho),Gi(Hi(a),1-this.rho)),t=Gi(Ui(ji(Wi(o,this.epsilon)),ji(Wi(i,this.epsilon))),a),n=Wi(Gi(o,this.rho),Gi(Hi(t),1-this.rho));i.assign(e),o.assign(n);const r=Wi(Gi(t,-this.learningRate),s);s.assign(r)}))})),this.incrementIterations()}dispose(){null!=this.accumulatedUpdates&&(Fa(this.accumulatedGrads.map((e=>e.variable))),Fa(this.accumulatedUpdates.map((e=>e.variable))))}async getWeights(){const e=[...this.accumulatedGrads,...this.accumulatedUpdates];return[await this.saveIterations()].concat(e.map((e=>({name:e.originalName,tensor:e.variable}))))}async setWeights(e){const t=(e=await this.extractIterations(e)).length/2,n=!1;this.accumulatedGrads=e.slice(0,t).map((e=>({originalName:e.name,variable:e.tensor.variable(n)}))),this.accumulatedUpdates=e.slice(t,2*t).map((e=>({originalName:e.name,variable:e.tensor.variable(n)})))}getConfig(){return{learningRate:this.learningRate,rho:this.rho,epsilon:this.epsilon}}static fromConfig(e,t){return new e(t.learningRate,t.rho,t.epsilon)}}function so(e,t,n){Fe(e);const s={shape:e,value:t,dtype:n=n||Ne(t)};return pa.runKernel(Yt,{},s)}class ro extends to{static get className(){return"Adagrad"}constructor(e,t=.1){super(),this.learningRate=e,this.initialAccumulatorValue=t,this.accumulatedGrads=[]}applyGradients(e){(Array.isArray(e)?e.map((e=>e.name)):Object.keys(e)).forEach(((t,n)=>{const s=pa.registeredVariables[t];if(null==this.accumulatedGrads[n]){const e=!1;this.accumulatedGrads[n]={originalName:`${t}/accumulator`,variable:_a((()=>so(s.shape,this.initialAccumulatorValue).variable(e)))}}const r=Array.isArray(e)?e[n].tensor:e[t];if(null==r)return;const a=this.accumulatedGrads[n].variable;_a((()=>{const e=Wi(a,Hi(r));a.assign(e);const t=Wi(Gi(Ui(r,ji(Wi(e,pa.backend.epsilon()))),-this.learningRate),s);s.assign(t)}))})),this.incrementIterations()}dispose(){null!=this.accumulatedGrads&&Fa(this.accumulatedGrads.map((e=>e.variable)))}async getWeights(){return[await this.saveIterations()].concat(this.accumulatedGrads.map((e=>({name:e.originalName,tensor:e.variable}))))}async setWeights(e){e=await this.extractIterations(e),this.accumulatedGrads=e.map((e=>({originalName:e.name,variable:e.tensor.variable(!1)})))}getConfig(){return{learningRate:this.learningRate,initialAccumulatorValue:this.initialAccumulatorValue}}static fromConfig(e,t){return new e(t.learningRate,t.initialAccumulatorValue)}}const ao=Na({pow_:function(e,t){let n=va(e,"base","pow"),s=va(t,"exp","pow");[n,s]=aa(n,s);const r={a:n,b:s};return pa.runKernel(Hn,r)}}),io=Na({sub_:function(e,t){let n=va(e,"a","sub"),s=va(t,"b","sub");[n,s]=aa(n,s);const r={a:n,b:s};return pa.runKernel(Bs,r)}});class oo extends to{static get className(){return"Adam"}constructor(e,t,n,s=null){super(),this.learningRate=e,this.beta1=t,this.beta2=n,this.epsilon=s,this.accumulatedFirstMoment=[],this.accumulatedSecondMoment=[],_a((()=>{this.accBeta1=Xi(t).variable(),this.accBeta2=Xi(n).variable()})),null==s&&(this.epsilon=pa.backend.epsilon())}applyGradients(e){const t=Array.isArray(e)?e.map((e=>e.name)):Object.keys(e);_a((()=>{const n=io(1,this.accBeta1),s=io(1,this.accBeta2);t.forEach(((t,r)=>{const a=pa.registeredVariables[t],i=!1;null==this.accumulatedFirstMoment[r]&&(this.accumulatedFirstMoment[r]={originalName:`${t}/m`,variable:_a((()=>qi(a).variable(i)))}),null==this.accumulatedSecondMoment[r]&&(this.accumulatedSecondMoment[r]={originalName:`${t}/v`,variable:_a((()=>qi(a).variable(i)))});const o=Array.isArray(e)?e[r].tensor:e[t];if(null==o)return;const l=this.accumulatedFirstMoment[r].variable,u=this.accumulatedSecondMoment[r].variable,c=Wi(Gi(l,this.beta1),Gi(o,1-this.beta1)),h=Wi(Gi(u,this.beta2),Gi(Hi(o),1-this.beta2)),d=Ui(c,n),p=Ui(h,s);l.assign(c),u.assign(h);const f=Wi(Gi(Ui(d,Wi(ji(p),this.epsilon)),-this.learningRate),a);a.assign(f)})),this.accBeta1.assign(Gi(this.accBeta1,this.beta1)),this.accBeta2.assign(Gi(this.accBeta2,this.beta2))})),this.incrementIterations()}dispose(){this.accBeta1.dispose(),this.accBeta2.dispose(),null!=this.accumulatedFirstMoment&&Fa(this.accumulatedFirstMoment.map((e=>e.variable))),null!=this.accumulatedSecondMoment&&Fa(this.accumulatedSecondMoment.map((e=>e.variable)))}async getWeights(){const e=[...this.accumulatedFirstMoment,...this.accumulatedSecondMoment];return[await this.saveIterations()].concat(e.map((e=>({name:e.originalName,tensor:e.variable}))))}async setWeights(e){e=await this.extractIterations(e),_a((()=>{this.accBeta1.assign(ao(this.beta1,this.iterations_+1)),this.accBeta2.assign(ao(this.beta2,this.iterations_+1))}));const t=e.length/2,n=!1;this.accumulatedFirstMoment=e.slice(0,t).map((e=>({originalName:e.name,variable:e.tensor.variable(n)}))),this.accumulatedSecondMoment=e.slice(t,2*t).map((e=>({originalName:e.name,variable:e.tensor.variable(n)})))}getConfig(){return{learningRate:this.learningRate,beta1:this.beta1,beta2:this.beta2,epsilon:this.epsilon}}static fromConfig(e,t){return new e(t.learningRate,t.beta1,t.beta2,t.epsilon)}}const lo=Na({abs_:function(e){const t=va(e,"x","abs");if("complex64"===t.dtype){const e={x:t};return pa.runKernel(bt,e)}{const e={x:t};return pa.runKernel(je,e)}}});function uo(e,t){const n=e.length,s=[];for(let r=0;r<n;r++){const a=n-1-r,i=e[a]||1;(t[t.length-1-r]||1)>1&&1===i&&s.unshift(a)}return s}function co(e,t){const n=[];for(let s=0;s<t.length;s++){const r=e[e.length-s-1],a=t.length-s-1,i=t[a];(null==r||1===r&&i>1)&&n.unshift(a)}return n}function ho(e,t){const n=Math.max(e.length,t.length),s=new Array(n);for(let r=0;r<n;r++){let a=e[e.length-r-1];null==a&&(a=1);let i=t[t.length-r-1];if(null==i&&(i=1),1===a)s[n-r-1]=i;else if(1===i)s[n-r-1]=a;else{if(a!==i)throw Error(`Operands could not be broadcast together with shapes ${e} and ${t}.`);s[n-r-1]=a}}return s}const po=Na({maximum_:function(e,t){let n=va(e,"a","maximum"),s=va(t,"b","maximum");[n,s]=aa(n,s),"bool"===n.dtype&&(n=zi(n,"int32"),s=zi(s,"int32")),ho(n.shape,s.shape);const r={a:n,b:s};return pa.runKernel(Nn,r)}});class fo extends to{static get className(){return"Adamax"}constructor(e,t,n,s=null,r=0){super(),this.learningRate=e,this.beta1=t,this.beta2=n,this.epsilon=s,this.decay=r,this.accumulatedFirstMoment=[],this.accumulatedWeightedInfNorm=[],_a((()=>{this.iteration=Xi(0).variable(),this.accBeta1=Xi(t).variable()})),null==s&&(this.epsilon=pa.backend.epsilon())}applyGradients(e){const t=Array.isArray(e)?e.map((e=>e.name)):Object.keys(e);_a((()=>{const n=io(1,this.accBeta1),s=Ui(-this.learningRate,Wi(Gi(this.iteration,this.decay),1));t.forEach(((t,r)=>{const a=pa.registeredVariables[t],i=!1;null==this.accumulatedFirstMoment[r]&&(this.accumulatedFirstMoment[r]={originalName:`${t}/m`,variable:qi(a).variable(i)}),null==this.accumulatedWeightedInfNorm[r]&&(this.accumulatedWeightedInfNorm[r]={originalName:`${t}/v`,variable:qi(a).variable(i)});const o=Array.isArray(e)?e[r].tensor:e[t];if(null==o)return;const l=this.accumulatedFirstMoment[r].variable,u=this.accumulatedWeightedInfNorm[r].variable,c=Wi(Gi(l,this.beta1),Gi(o,1-this.beta1)),h=Gi(u,this.beta2),d=lo(o),p=po(h,d);l.assign(c),u.assign(p);const f=Wi(Gi(Ui(s,n),Ui(c,Wi(p,this.epsilon))),a);a.assign(f)})),this.iteration.assign(Wi(this.iteration,1)),this.accBeta1.assign(Gi(this.accBeta1,this.beta1))})),this.incrementIterations()}dispose(){this.accBeta1.dispose(),this.iteration.dispose(),null!=this.accumulatedFirstMoment&&Fa(this.accumulatedFirstMoment.map((e=>e.variable))),null!=this.accumulatedWeightedInfNorm&&Fa(this.accumulatedWeightedInfNorm.map((e=>e.variable)))}async getWeights(){throw new Error("getWeights() is not implemented for Adamax yet.")}async setWeights(e){throw new Error("setWeights() is not implemented for Adamax yet.")}getConfig(){return{learningRate:this.learningRate,beta1:this.beta1,beta2:this.beta2,epsilon:this.epsilon,decay:this.decay}}static fromConfig(e,t){return new e(t.learningRate,t.beta1,t.beta2,t.epsilon,t.decay)}}class mo extends to{static get className(){return"SGD"}constructor(e){super(),this.learningRate=e,this.setLearningRate(e)}applyGradients(e){(Array.isArray(e)?e.map((e=>e.name)):Object.keys(e)).forEach(((t,n)=>{const s=Array.isArray(e)?e[n].tensor:e[t];if(null==s)return;const r=pa.registeredVariables[t];_a((()=>{const e=Wi(Gi(this.c,s),r);r.assign(e)}))})),this.incrementIterations()}setLearningRate(e){this.learningRate=e,null!=this.c&&this.c.dispose(),this.c=Da(Xi(-e))}dispose(){this.c.dispose()}async getWeights(){return[await this.saveIterations()]}async setWeights(e){if(0!==(e=await this.extractIterations(e)).length)throw new Error("SGD optimizer does not have settable weights.")}getConfig(){return{learningRate:this.learningRate}}static fromConfig(e,t){return new e(t.learningRate)}}class go extends mo{static get className(){return"Momentum"}constructor(e,t,n=!1){super(e),this.learningRate=e,this.momentum=t,this.useNesterov=n,this.accumulations=[],this.m=Xi(this.momentum)}applyGradients(e){(Array.isArray(e)?e.map((e=>e.name)):Object.keys(e)).forEach(((t,n)=>{const s=pa.registeredVariables[t];if(null==this.accumulations[n]){const e=!1;this.accumulations[n]={originalName:`${t}/momentum`,variable:_a((()=>qi(s).variable(e)))}}const r=this.accumulations[n].variable,a=Array.isArray(e)?e[n].tensor:e[t];null!=a&&_a((()=>{let e;const t=Wi(Gi(this.m,r),a);e=this.useNesterov?Wi(Gi(this.c,Wi(a,Gi(t,this.m))),s):Wi(Gi(this.c,t),s),r.assign(t),s.assign(e)}))})),this.incrementIterations()}dispose(){this.m.dispose(),null!=this.accumulations&&Fa(this.accumulations.map((e=>e.variable)))}setMomentum(e){this.momentum=e}async getWeights(){return[await this.saveIterations()].concat(this.accumulations.map((e=>({name:e.originalName,tensor:e.variable}))))}async setWeights(e){e=await this.extractIterations(e),this.accumulations=e.map((e=>({originalName:e.name,variable:e.tensor.variable(!1)})))}getConfig(){return{learningRate:this.learningRate,momentum:this.momentum,useNesterov:this.useNesterov}}static fromConfig(e,t){return new e(t.learningRate,t.momentum,t.useNesterov)}}class yo extends to{static get className(){return"RMSProp"}constructor(e,t=.9,n=0,s=null,r=!1){if(super(),this.learningRate=e,this.decay=t,this.momentum=n,this.epsilon=s,this.accumulatedMeanSquares=[],this.accumulatedMoments=[],this.accumulatedMeanGrads=[],this.centered=r,null==s&&(this.epsilon=pa.backend.epsilon()),null==e)throw new Error("learningRate for RMSPropOptimizer must be defined.")}applyGradients(e){(Array.isArray(e)?e.map((e=>e.name)):Object.keys(e)).forEach(((t,n)=>{const s=pa.registeredVariables[t],r=!1;null==this.accumulatedMeanSquares[n]&&(this.accumulatedMeanSquares[n]={originalName:`${t}/rms`,variable:_a((()=>qi(s).variable(r)))}),null==this.accumulatedMoments[n]&&(this.accumulatedMoments[n]={originalName:`${t}/momentum`,variable:_a((()=>qi(s).variable(r)))}),null==this.accumulatedMeanGrads[n]&&this.centered&&(this.accumulatedMeanGrads[n]={originalName:`${t}/mg`,variable:_a((()=>qi(s).variable(r)))});const a=Array.isArray(e)?e[n].tensor:e[t];if(null==a)return;const i=this.accumulatedMeanSquares[n].variable,o=this.accumulatedMoments[n].variable;_a((()=>{const e=Wi(Gi(i,this.decay),Gi(Hi(a),1-this.decay));if(this.centered){const t=this.accumulatedMeanGrads[n].variable,r=Wi(Gi(t,this.decay),Gi(a,1-this.decay)),l=Ui(Gi(a,this.learningRate),ji(io(e,Wi(Hi(r),this.epsilon)))),u=Wi(Gi(o,this.momentum),l);i.assign(e),t.assign(r),o.assign(u);const c=io(s,u);s.assign(c)}else{const e=Wi(Gi(i,this.decay),Gi(Hi(a),1-this.decay)),t=Wi(Gi(o,this.momentum),Ui(Gi(a,this.learningRate),ji(Wi(e,this.epsilon))));i.assign(e),o.assign(t);const n=io(s,t);s.assign(n)}}))})),this.incrementIterations()}dispose(){null!=this.accumulatedMeanSquares&&Fa(this.accumulatedMeanSquares.map((e=>e.variable))),null!=this.accumulatedMeanGrads&&this.centered&&Fa(this.accumulatedMeanGrads.map((e=>e.variable))),null!=this.accumulatedMoments&&Fa(this.accumulatedMoments.map((e=>e.variable)))}async getWeights(){const e=[...this.accumulatedMeanSquares,...this.accumulatedMoments];return this.centered&&e.push(...this.accumulatedMeanGrads),[await this.saveIterations()].concat(e.map((e=>({name:e.originalName,tensor:e.variable}))))}async setWeights(e){e=await this.extractIterations(e);const t=this.centered?e.length/3:e.length/2,n=!1;this.accumulatedMeanSquares=e.slice(0,t).map((e=>({originalName:e.name,variable:e.tensor.variable(n)}))),this.accumulatedMoments=e.slice(t,2*t).map((e=>({originalName:e.name,variable:e.tensor.variable(n)}))),this.centered&&(this.accumulatedMeanGrads=e.slice(2*t,3*t).map((e=>({originalName:e.name,variable:e.tensor.variable(n)}))))}getConfig(){return{learningRate:this.learningRate,decay:this.decay,momentum:this.momentum,epsilon:this.epsilon,centered:this.centered}}static fromConfig(e,t){return new e(t.learningRate,t.decay,t.momentum,t.epsilon,t.centered)}}const bo=[no,ro,oo,fo,go,yo,mo];function xo(e){return new Promise((e=>setTimeout(e))).then(e)}class wo{constructor(e){if(!Pe().getBool("IS_BROWSER"))throw new Error("browserDownloads() cannot proceed because the current environment is not a browser.");e.startsWith(wo.URL_SCHEME)&&(e=e.slice(wo.URL_SCHEME.length)),null!=e&&0!==e.length||(e="model"),this.modelJsonFileName=e+".json",this.weightDataFileName=e+".weights.bin"}async save(e){if("undefined"==typeof document)throw new Error("Browser downloads are not supported in this environment since `document` is not present");const t=Ea.join(e.weightData),n=window.URL.createObjectURL(new Blob([t],{type:"application/octet-stream"}));if(e.modelTopology instanceof ArrayBuffer)throw new Error("BrowserDownloads.save() does not support saving model topology in binary formats yet.");{const t=Ya(e,[{paths:["./"+this.weightDataFileName],weights:e.weightSpecs}]),s=window.URL.createObjectURL(new Blob([JSON.stringify(t)],{type:"application/json"})),r=null==this.modelJsonAnchor?document.createElement("a"):this.modelJsonAnchor;if(r.download=this.modelJsonFileName,r.href=s,await xo((()=>r.dispatchEvent(new MouseEvent("click")))),null!=e.weightData){const e=null==this.weightDataAnchor?document.createElement("a"):this.weightDataAnchor;e.download=this.weightDataFileName,e.href=n,await xo((()=>e.dispatchEvent(new MouseEvent("click"))))}return{modelArtifactsInfo:Qa(e)}}}}wo.URL_SCHEME="downloads://";class vo{constructor(e){if(null==e||e.length<1)throw new Error(`When calling browserFiles, at least 1 file is required, but received ${e}`);this.jsonFile=e[0],this.weightsFiles=e.slice(1)}async load(){return new Promise(((e,t)=>{const n=new FileReader;n.onload=n=>{const s=JSON.parse(n.target.result),r=s.modelTopology;if(null==r)return void t(new Error(`modelTopology field is missing from file ${this.jsonFile.name}`));if(null==s.weightsManifest)return void t(new Error(`weightManifest field is missing from file ${this.jsonFile.name}`));if(0===this.weightsFiles.length)return void e({modelTopology:r});const a=Za(s,(e=>this.loadWeights(e)));e(a)},n.onerror=e=>t(`Failed to read model topology and weights manifest JSON from file '${this.jsonFile.name}'. BrowserFiles supports loading Keras-style tf.Model artifacts only.`),n.readAsText(this.jsonFile)}))}loadWeights(e){const t=[],n=[];for(const s of e)t.push(...s.weights),n.push(...s.paths);const s=this.checkManifestAndWeightFiles(e),r=n.map((e=>this.loadWeightsFile(e,s[e])));return Promise.all(r).then((e=>[t,e]))}loadWeightsFile(e,t){return new Promise(((n,s)=>{const r=new FileReader;r.onload=e=>{const t=e.target.result;n(t)},r.onerror=t=>s(`Failed to weights data from file of path '${e}'.`),r.readAsArrayBuffer(t)}))}checkManifestAndWeightFiles(e){const t=[],n=this.weightsFiles.map((e=>Xa(e.name))),s={};for(const r of e)r.paths.forEach((e=>{const r=Xa(e);if(-1!==t.indexOf(r))throw new Error(`Duplicate file basename found in weights manifest: '${r}'`);if(t.push(r),-1===n.indexOf(r))throw new Error(`Weight file with basename '${r}' is not provided.`);s[e]=this.weightsFiles[n.indexOf(r)]}));if(t.length!==this.weightsFiles.length)throw new Error(`Mismatch in the number of files in weights manifest (${t.length}) and the number of weight files provided (${this.weightsFiles.length}).`);return s}}function ko(e){return new vo(e)}function Io(e,t,n,s){!function(e){ie(null!=e&&Array.isArray(e)&&e.length>0,(()=>"promises must be a none empty array"))}(e),function(e,t){ie(e>=0&&e<=1,(()=>`Progress fraction must be in range [0, 1], but got startFraction ${e}`)),ie(t>=0&&t<=1,(()=>`Progress fraction must be in range [0, 1], but got endFraction ${t}`)),ie(t>=e,(()=>`startFraction must be no more than endFraction, but got startFraction ${e} and endFraction ${t}`))}(n=null==n?0:n,s=null==s?1:s);let r=0;return Promise.all(e.map((a=>(a.then((a=>{const i=n+ ++r/e.length*(s-n);return t(i),a})),a))))}async function No(e,t){null==t&&(t={});const n=null==t.fetchFunc?Pe().platform.fetch:t.fetchFunc,s=e.map((e=>n(e,t.requestInit,{isBinary:!0}))),r=(null==t.onProgress?await Promise.all(s):await Io(s,t.onProgress,0,.5)).map((e=>e.arrayBuffer()));return null==t.onProgress?await Promise.all(r):await Io(r,t.onProgress,.5,1)}async function So(e,t="",n,s){return To((e=>No(e,{requestInit:s})))(e,t,n)}function To(e){return async(t,n="",s)=>{const r=t.map((()=>!1)),a={},i=null!=s?s.map((()=>!1)):[],o=[];if(t.forEach(((e,t)=>{let n=0;e.weights.forEach((e=>{const l="quantization"in e?e.quantization.dtype:e.dtype,u=$a[l]*ue(e.shape),c=()=>{r[t]=!0,null==a[t]&&(a[t]=[]),a[t].push({manifestEntry:e,groupOffset:n,sizeBytes:u})};null!=s?s.forEach(((t,n)=>{t===e.name&&(c(),i[n]=!0)})):c(),o.push(e.name),n+=u}))})),!i.every((e=>e))){const e=s.filter(((e,t)=>!i[t]));throw new Error(`Could not find weights in manifest with names: ${e.join(", ")}. \nManifest JSON has weights with names: ${o.join(", ")}.`)}const l=r.reduce(((e,t,n)=>(t&&e.push(n),e)),[]),u=[];l.forEach((e=>{t[e].paths.forEach((e=>{const t=n+(n.endsWith("/")?"":"/")+e;u.push(t)}))}));const c=await e(u),h={};let d=0;return l.forEach((e=>{const n=t[e].paths.length,s=new Ea(c.slice(d,d+n));a[e].forEach((e=>{const t=Ba(s.slice(e.groupOffset,e.groupOffset+e.sizeBytes),[e.manifestEntry]);for(const e in t)h[e]=t[e]})),d+=n})),h}}ti.registerSaveRouter((e=>Pe().getBool("IS_BROWSER")&&!Array.isArray(e)&&e.startsWith(wo.URL_SCHEME)?function(e="model"){return new wo(e)}(e.slice(wo.URL_SCHEME.length)):null));class Co{constructor(e,t){if(this.DEFAULT_METHOD="POST",null==t&&(t={}),this.weightPathPrefix=t.weightPathPrefix,this.weightUrlConverter=t.weightUrlConverter,null!=t.fetchFunc?(ie("function"==typeof t.fetchFunc,(()=>"Must pass a function that matches the signature of `fetch` (see https://developer.mozilla.org/en-US/docs/Web/API/Fetch_API)")),this.fetch=t.fetchFunc):this.fetch=Pe().platform.fetch,ie(null!=e&&e.length>0,(()=>"URL path for http must not be null, undefined or empty.")),Array.isArray(e)&&ie(2===e.length,(()=>`URL paths for http must have a length of 2, (actual length is ${e.length}).`)),this.path=e,null!=t.requestInit&&null!=t.requestInit.body)throw new Error("requestInit is expected to have no pre-existing body, but has one.");this.requestInit=t.requestInit||{},this.loadOptions=t}async save(e){if(e.modelTopology instanceof ArrayBuffer)throw new Error("BrowserHTTPRequest.save() does not support saving model topology in binary formats yet.");const t=Object.assign({method:this.DEFAULT_METHOD},this.requestInit);t.body=new FormData;const n=Ya(e,[{paths:["./model.weights.bin"],weights:e.weightSpecs}]);if(t.body.append("model.json",new Blob([JSON.stringify(n)],{type:"application/json"}),"model.json"),null!=e.weightData){const n=Ea.join(e.weightData);t.body.append("model.weights.bin",new Blob([n],{type:"application/octet-stream"}),"model.weights.bin")}const s=await this.fetch(this.path,t);if(s.ok)return{modelArtifactsInfo:Qa(e),responses:[s]};throw new Error(`BrowserHTTPRequest.save() failed due to HTTP response status ${s.status}.`)}async loadModelJSON(){const e=await this.fetch(this.path,this.requestInit);if(!e.ok)throw new Error(`Request to ${this.path} failed with status code ${e.status}. Please verify this URL points to the model JSON of the model to load.`);let t;try{t=await e.json()}catch(e){let t=`Failed to parse model JSON of response from ${this.path}.`;throw this.path.endsWith(".pb")?t+=" Your path contains a .pb file extension. Support for .pb models have been removed in TensorFlow.js 1.0 in favor of .json models. You can re-convert your Python TensorFlow model using the TensorFlow.js 1.0 conversion scripts or you can convert your.pb models with the 'pb2json'NPM script in the tensorflow/tfjs-converter repository.":t+=" Please make sure the server is serving valid JSON for this request.",new Error(t)}const n=t.modelTopology,s=t.weightsManifest;if(null==n&&null==s)throw new Error(`The JSON from HTTP path ${this.path} contains neither model topology or manifest for weights.`);return t}async load(){return this.loadOptions.streamWeights?this.loadStream():Za(await this.loadModelJSON(),(e=>this.loadWeights(e)))}async loadStream(){const e=await this.loadModelJSON(),t=await this.getWeightUrls(e.weightsManifest),n=ei(e.weightsManifest);return Object.assign(Object.assign({},e),{weightSpecs:n,getWeightStream:()=>function(e,t){var n;const s=null==t.fetchFunc?Pe().platform.fetch:t.fetchFunc;let r,a=0;return null===(n=t.onProgress)||void 0===n||n.call(t,0),new ReadableStream({pull:async n=>{for(var i;a<e.length;){if(!r){const n=(await s(e[a],t.requestInit,{isBinary:!0})).body;r=n.getReader()}const{done:o,value:l}=await r.read();if(!o)return void n.enqueue(l);a++,r=void 0,null===(i=t.onProgress)||void 0===i||i.call(t,a/e.length)}n.close()}})}(t,this.loadOptions)})}async getWeightUrls(e){const t=Array.isArray(this.path)?this.path[1]:this.path,[n,s]=function(e){const t=e.lastIndexOf("/"),n=e.lastIndexOf("?");return[e.substring(0,t)+"/",n>t?e.substring(n):""]}(t),r=this.weightPathPrefix||n,a=[],i=[];for(const t of e)for(const e of t.paths)null!=this.weightUrlConverter?i.push(this.weightUrlConverter(e)):a.push(r+e+s);return this.weightUrlConverter&&a.push(...await Promise.all(i)),a}async loadWeights(e){const t=await this.getWeightUrls(e);return[ei(e),await No(t,this.loadOptions)]}}function $o(e){return null!=e.match(Co.URL_SCHEME_REGEX)}Co.URL_SCHEME_REGEX=/^https?:\/\//;const Eo=(e,t)=>{if("undefined"==typeof fetch&&(null==t||null==t.fetchFunc))return null;{let n=!0;if(n=Array.isArray(e)?e.every((e=>$o(e))):$o(e),n)return Ao(e,t)}return null};function Ao(e,t){return new Co(e,t)}function Ro(e,t){return Ao(e,t)}ti.registerSaveRouter(Eo),ti.registerLoadRouter(Eo);class _o{constructor(e){this.modelArtifacts=e}load(){return this.modelArtifacts}}class Fo{constructor(e){this.saveHandler=e}save(e){return this.saveHandler(e)}}class Do{constructor(e){e.load&&(this.load=()=>Promise.resolve(e.load())),e.save&&(this.save=t=>Promise.resolve(e.save(t)))}}function Oo(e,t,n,s){return new Do(Mo(...arguments))}function Mo(e,t,n,s){return 1===arguments.length?null!=e.modelTopology||null!=e.weightSpecs?new _o(e):(console.warn("Please call tf.io.fromMemory() with only one argument. The argument should be of type ModelArtifacts. The multi-argument signature of tf.io.fromMemory() has been deprecated and will be removed in a future release."),new _o({modelTopology:e})):(console.warn("Please call tf.io.fromMemory() with only one argument. The argument should be of type ModelArtifacts. The multi-argument signature of tf.io.fromMemory() has been deprecated and will be removed in a future release."),new _o({modelTopology:e,weightSpecs:t,weightData:n,trainingConfig:s}))}function Lo(e){return new Fo(e)}function zo(e){return new Fo(e)}function Bo(e,t,n){if(le(e),null!=t&&3!==t.length)throw new Error("tensor3d() requires shape to have three numbers");const s=ba(e,n);if(3!==s.length&&1!==s.length)throw new Error("tensor3d() requires values to be number[][][] or flat/TypedArray");if(1===s.length&&null==t)throw new Error("tensor3d() requires shape to be provided when `values` are a flat array");return Ta(e,t,s,n)}let Po;const Wo=Na({fromPixels_:function(e,t=3){if(t>4)throw new Error("Cannot construct Tensor with more than 4 channels from pixels.");if(null==e)throw new Error("pixels passed to tf.browser.fromPixels() can not be null");let n=!1,s=!1,r=!1,a=!1,i=!1,o=!1;if(e.data instanceof Uint8Array)n=!0;else if("undefined"!=typeof ImageData&&e instanceof ImageData)s=!0;else if("undefined"!=typeof HTMLVideoElement&&e instanceof HTMLVideoElement)r=!0;else if("undefined"!=typeof HTMLImageElement&&e instanceof HTMLImageElement)a=!0;else if(null!=e.getContext)i=!0;else{if(!("undefined"!=typeof ImageBitmap&&e instanceof ImageBitmap))throw new Error(`pixels passed to tf.browser.fromPixels() must be either an HTMLVideoElement, HTMLImageElement, HTMLCanvasElement, ImageData in browser, or OffscreenCanvas, ImageData in webworker or {data: Uint32Array, width: number, height: number}, but was ${e.constructor.name}`);o=!0}if(null!=ir(Js,pa.backendName)){const n={pixels:e},s={numChannels:t};return pa.runKernel(Js,n,s)}const[l,u]=r?[e.videoWidth,e.videoHeight]:[e.width,e.height];let c,h;if(i)c=e.getContext("2d").getImageData(0,0,l,u).data;else if(s||n)c=e.data;else if(a||r||o){if(null==Po)if("undefined"==typeof document){if("undefined"==typeof OffscreenCanvas||"undefined"==typeof OffscreenCanvasRenderingContext2D)throw new Error("Cannot parse input in current context. Reason: OffscreenCanvas Context2D rendering is not supported.");Po=new OffscreenCanvas(1,1).getContext("2d")}else Po=document.createElement("canvas").getContext("2d",{willReadFrequently:!0});Po.canvas.width=l,Po.canvas.height=u,Po.drawImage(e,0,0,l,u),c=Po.getImageData(0,0,l,u).data}if(4===t)h=new Int32Array(c);else{const e=l*u;h=new Int32Array(e*t);for(let n=0;n<e;n++)for(let e=0;e<t;++e)h[n*t+e]=c[4*n+e]}return Bo(h,[u,l,t],"int32")}}),Vo=-2,Uo=-1;function Go(e,t,n){const s=e.shape.length;ie(s===t.length,(()=>`Error in slice${s}D: Length of begin ${t} must match the rank of the array (${s}).`)),ie(s===n.length,(()=>`Error in slice${s}D: Length of size ${n} must match the rank of the array (${s}).`));for(let r=0;r<s;++r)ie(t[r]+n[r]<=e.shape[r],(()=>`Error in slice${s}D: begin[${r}] + size[${r}] (${t[r]+n[r]}) would overflow input.shape[${r}] (${e.shape[r]})`))}function jo(e){const t=[];let n=0;for(;e>0;)1&e&&t.push(n),e/=2,n++;return t}function Ho(e,t,n){const s=[];for(let r=0;r<e.length;r++)s[r]=Math.ceil((t[r]-e[r])/n[r]);return s}function qo(e,t,n,s){const r=[...e];for(let e=r.length;e<s.length;e++)r.push(1);for(let e=0;e<n;e++)0===e?r[t]=1:(r.splice(t,0,1),r.pop());return r}function Ko(e,t,n){return n<=e?n:n-(t-1)}function Xo(e,t){const n=[];for(let s=0;s<e;s++)n.push(t+s);return n}function Yo(e,t,n,s,r,a,i,o,l){const u=e.length;let c=new Array(u),h=new Array(u),d=new Array(u);if(t.length&&n>0){const l=t[0],u=n+1;c=Jo(i,l,u,s,e),h=Zo(o,l,u,r,e),d=qo(a,l,u,e)}else for(let t=0;t<u;t++)c[t]=el(i,s,a,e,t,l),h[t]=tl(o,r,a,e,t,l),d[t]=Qo(a,t,l);return{begin:c,end:h,strides:d}}function Jo(e,t,n,s,r){const a=[...r],i=Xo(n,t);for(let r=0;r<a.length;r++)if(i.indexOf(r)>-1)a[r]=0;else{const i=Ko(t,n,r);let o=s[i];e&1<<i&&(o=0),a[r]=o}return a}function Zo(e,t,n,s,r){const a=[...r],i=Xo(n,t);for(let r=0;r<a.length;r++)if(i.indexOf(r)>-1)a[r]=Number.MAX_SAFE_INTEGER;else{const i=Ko(t,n,r);let o=s[i];e&1<<i&&(o=Number.MAX_SAFE_INTEGER),a[r]=o}for(let e=0;e<a.length;e++){const t=r[e];a[e]<0&&(a[e]+=t),a[e]=se(0,a[e],r[e])}return a}function Qo(e,t,n){let s=e[t];return(n&1<<t||null==s)&&(s=1),s}function el(e,t,n,s,r,a){let i=t[r];const o=n[r]||1;(e&1<<r||a&1<<r||null==i)&&(i=o>0?Number.MIN_SAFE_INTEGER:Number.MAX_SAFE_INTEGER);const l=s[r];return i<0&&(i+=l),i=se(0,i,l-1),i}function tl(e,t,n,s,r,a){let i=t[r];const o=n[r]||1;(e&1<<r||a&1<<r||null==i)&&(i=o>0?Number.MAX_SAFE_INTEGER:Number.MIN_SAFE_INTEGER);const l=s[r];return i<0&&(i+=l),i=o>0?se(0,i,l):se(-1,i,l-1),i}function nl(e,t,n){let s=n.length;for(let e=0;e<n.length;e++)if(n[e]>1){s=e;break}for(let r=s+1;r<n.length;r++)if(t[r]>0||n[r]!==e[r])return!1;return!0}function sl(e,t){let n=e.length>0?e[e.length-1]:1;for(let s=0;s<e.length-1;s++)n+=e[s]*t[s];return n}function rl(e,t,n){let s;const r=e.shape.length;let a;return s="number"==typeof t?[t,...new Array(r-1).fill(0)]:t.length<r?t.concat(new Array(r-t.length).fill(0)):t.slice(),s.forEach((e=>{ie(-1!==e,(()=>"slice() does not support negative begin indexing."))})),a=null==n?new Array(r).fill(-1):"number"==typeof n?[n,...new Array(r-1).fill(-1)]:n.length<r?n.concat(new Array(r-n.length).fill(-1)):n,a=a.map(((t,n)=>t>=0?t:(ie(-1===t,(()=>`Negative size values should be exactly -1 but got ${t} for the slice() size at index ${n}.`)),e.shape[n]-s[n]))),[s,a]}function al(e,t,n,s,r,a,i,o,l){let u;if(null==s?(u=new Array(t.length),u.fill(1)):u=s,null!=i&&i&i-1)throw new Error("Multiple ellipses in slice is not allowed.");let c=!1;const h={dims:u.length,numAddAxisAfterEllipsis:0,begin:t.slice(),end:n.slice(),strides:u.slice(),beginMask:r,endMask:a,ellipsisMask:i,newAxisMask:o,shrinkAxisMask:l};for(let e=0;e<h.dims;e++)c&&1<<e&o&&h.numAddAxisAfterEllipsis++,1<<e&i&&(c=!0);c||(h.ellipsisMask|=1<<h.dims,h.dims++);const d={dims:e.length,beginMask:0,endMask:0,beginValid:!1,endValid:!1};!function(e,t){t.beginMask=0,t.endMask=0,t.shrinkAxisMask=0;let n=0;t.beginValid=null!=e.begin,t.endValid=null!=e.end,t.begin=new Array(t.dims),t.end=new Array(t.dims),t.strides=new Array(t.dims),t.finalShapeGatherIndices=[],t.finalShapeGatherIndicesSparse=[],t.inputShapeGatherIndicesSparse=new Array(t.dims);for(let s=0;s<e.dims;s++)if(1<<s&e.ellipsisMask){const r=Math.min(t.dims-(e.dims-s)+1+e.numAddAxisAfterEllipsis,t.dims);for(;n<r;n++)t.begin[n]=0,t.end[n]=0,t.strides[n]=1,t.beginMask|=1<<n,t.endMask|=1<<n,t.finalShapeGatherIndices.push(n),t.finalShapeGatherIndicesSparse.push(-1),t.inputShapeGatherIndicesSparse[n]=s}else if(1<<s&e.newAxisMask)t.finalShapeGatherIndices.push(Vo),t.finalShapeGatherIndicesSparse.push(-1);else{if(n===t.begin.length)throw Error(`Index out of range using input dim ${n}; input has only ${t.dims} dims, ${t.begin.length}.`);null!=e.begin&&(t.begin[n]=e.begin[s]),null!=e.end&&(t.end[n]=e.end[s]),t.strides[n]=e.strides[s],e.beginMask&1<<s&&(t.beginMask|=1<<n),e.endMask&1<<s&&(t.endMask|=1<<n),e.shrinkAxisMask&1<<s?(t.finalShapeGatherIndices.push(Uo),t.finalShapeGatherIndicesSparse.push(-1),t.shrinkAxisMask|=1<<n):(t.finalShapeGatherIndices.push(n),t.finalShapeGatherIndicesSparse.push(s)),t.inputShapeGatherIndicesSparse[n]=s,n++}}(h,d);let p=!0,f=!0,m=!0;const g=[],y=[];for(let t=0;t<e.length;++t){if(0===d.strides[t])throw Error(`strides[${t}] must be non-zero`);const n=!!(d.shrinkAxisMask&1<<t),s=e[t];if(-1===s){g.push(n?1:-1);continue}const r=[d.beginMask&1<<t,d.endMask&1<<t],a=[d.strides[t]>0?0:-1,d.strides[t]>0?s:s-1];if(n&&d.strides[t]<=0)throw Error("only stride 1 allowed on non-range indexing.");m=m&&1===d.strides[t];const i=!!(d.beginMask&1<<t&&d.endMask&1<<t);if(d.beginValid&&d.endValid){if(n){const e=d.begin[t]<0?s+d.begin[t]:d.begin[t];if(d.begin[t]=e,d.end[t]=d.begin[t]+1,e<0||e>=s)throw Error(`slice index ${d.begin[t]} of dimension ${t} out of bounds.`)}else d.begin[t]=il(d.begin[t],0,d.strides[t],s,r,a),d.end[t]=il(d.end[t],1,d.strides[t],s,r,a);const e=1===d.strides[t]&&0===d.begin[t]&&d.end[t]===s;p=p&&e,f=f&&(0===t&&1===d.strides[t]||e)}else p=p&&1===d.strides[t]&&i,f=f&&(0===t&&1===d.strides[t]||i);let o,l=!1;if(d.beginValid&&d.endValid?(o=d.end[t]-d.begin[t],l=!0):n?(o=1,l=!0):i&&s>=0&&(o=d.strides[t]<0?-s:s,l=!0),l){let e;e=0===o||o<0!=d.strides[t]<0?0:Math.trunc(o/d.strides[t])+(o%d.strides[t]!==0?1:0),g.push(e)}else g.push(-1)}for(let e=0;e<d.finalShapeGatherIndices.length;++e){const t=d.finalShapeGatherIndices[e];t>=0?y.push(g[t]):t===Vo&&y.push(1)}return{finalShapeSparse:y.filter(((e,t)=>d.finalShapeGatherIndices[t]!==Vo)),finalShape:y,isIdentity:p,sliceDim0:f,isSimpleSlice:m,begin:d.begin,end:d.end,strides:d.strides}}function il(e,t,n,s,r,a){if(r[t])return n>0?a[t]:a[t+1&1];{const t=e<0?s+e:e;return t<a[0]?a[0]:t>a[1]?a[1]:t}}const ol=Na({acos_:function(e){const t={x:va(e,"x","acos")};return pa.runKernel(He,t)}}),ll=Na({acosh_:function(e){const t={x:va(e,"x","acosh")};return pa.runKernel(qe,t)}}),ul=Na({addN_:function(e){ie(Array.isArray(e),(()=>"The argument passed to tf.addN() must be a list of tensors")),ie(e.length>=1,(()=>`Must pass at least one tensor to tf.addN(), but got ${e.length}`));const t=e.map(((e,t)=>va(e,`tensors${t}`,"addN"))),n=t[0];t.forEach((e=>{if(e.dtype!==n.dtype)throw new Error("All tensors passed to tf.addN() must have the same dtype")})),t.forEach((e=>{if(!ce(e.shape,n.shape))throw new Error("All tensors passed to tf.addN() must have the same shape")}));const s=t;return pa.runKernel(Xe,s)}}),cl=Na({all_:function(e,t=null,n=!1){const s={x:va(e,"x","all","bool")},r={axis:t,keepDims:n};return pa.runKernel(Ye,s,r)}}),hl=Na({any_:function(e,t=null,n=!1){const s={x:va(e,"x","any","bool")},r={axis:t,keepDims:n};return pa.runKernel(Je,s,r)}}),dl=Na({argMax_:function(e,t=0){const n={x:va(e,"x","argMax")},s={axis:t};return pa.runKernel(Ze,n,s)}}),pl=Na({argMin_:function(e,t=0){const n={x:va(e,"x","argMin")},s={axis:t};return pa.runKernel(Qe,n,s)}}),fl=Na({asin_:function(e){const t={x:va(e,"x","asin")};return pa.runKernel(et,t)}}),ml=Na({asinh_:function(e){const t={x:va(e,"x","asinh")};return pa.runKernel(tt,t)}}),gl=Na({atan_:function(e){const t={x:va(e,"x","atan")};return pa.runKernel(nt,t)}}),yl=Na({atan2_:function(e,t){let n=va(e,"a","atan2"),s=va(t,"b","atan2");[n,s]=aa(n,s);const r={a:n,b:s};return pa.runKernel(rt,r)}}),bl=Na({atanh_:function(e){const t={x:va(e,"x","atanh")};return pa.runKernel(st,t)}});function xl(e,t,n,s,r="NHWC",a){return kl(e,[...t,e[3]],n,a,s,null,null,_l(r))}function wl(e,t,n,s,r,a,i="channelsLast"){const[o,l]=Sl(t);let u;if("channelsLast"===i)u=[o,l,e[3],e[3]];else{if("channelsFirst"!==i)throw new Error(`Unknown dataFormat ${i}`);u=[o,l,e[1],e[1]]}return kl(e,u,n,s,r,a,!1,i)}function vl(e,t,n,s,r,a,i="NDHWC"){const[o,l,u]=Tl(t);let c,h;if("NDHWC"===i)h="channelsLast",c=[o,l,u,e[4],e[4]];else{if("NCDHW"!==i)throw new Error(`Unknown dataFormat ${i}`);h="channelsFirst",c=[o,l,u,e[1],e[1]]}return Il(e,c,n,s,r,!1,h,a)}function kl(e,t,n,s,r,a,i=!1,o="channelsLast"){let[l,u,c,h]=[-1,-1,-1,-1];if("channelsLast"===o)[l,u,c,h]=e;else{if("channelsFirst"!==o)throw new Error(`Unknown dataFormat ${o}`);[l,h,u,c]=e}const[d,p,,f]=t,[m,g]=Sl(n),[y,b]=Sl(s),x=Cl(d,y),w=Cl(p,b),{padInfo:v,outHeight:k,outWidth:I}=function(e,t,n,s,r,a,i,o,l){let u,c,h;if("number"==typeof e){u={top:e,bottom:e,left:e,right:e,type:0===e?"VALID":"NUMBER"};const r=function(e,t,n,s,r){null==s&&(s=Nl(e,t,n));const a=e[1];return[$l((e[0]-t+2*s)/n+1,r),$l((a-t+2*s)/n+1,r)]}([t,n],a,s,e,o);c=r[0],h=r[1]}else if("same"===e){c=Math.ceil(t/s),h=Math.ceil(n/r);const e=Math.max(0,(c-1)*s+a-t),o=Math.max(0,(h-1)*r+i-n),l=Math.floor(e/2),d=e-l,p=Math.floor(o/2);u={top:l,bottom:d,left:p,right:o-p,type:"SAME"}}else if("valid"===e)u={top:0,bottom:0,left:0,right:0,type:"VALID"},c=Math.ceil((t-a+1)/s),h=Math.ceil((n-i+1)/r);else{if("object"!=typeof e)throw Error(`Unknown padding parameter: ${e}`);{const d="channelsLast"===l?e[1][0]:e[2][0],p="channelsLast"===l?e[1][1]:e[2][1],f="channelsLast"===l?e[2][0]:e[3][0],m="channelsLast"===l?e[2][1]:e[3][1];u={top:d,bottom:p,left:f,right:m,type:0===d&&0===p&&0===f&&0===m?"VALID":"EXPLICIT"},c=$l((t-a+d+p)/s+1,o),h=$l((n-i+f+m)/r+1,o)}}return{padInfo:u,outHeight:c,outWidth:h}}(r,u,c,m,g,x,w,a,o),N=i?f*h:f;let S;return"channelsFirst"===o?S=[l,N,k,I]:"channelsLast"===o&&(S=[l,k,I,N]),{batchSize:l,dataFormat:o,inHeight:u,inWidth:c,inChannels:h,outHeight:k,outWidth:I,outChannels:N,padInfo:v,strideHeight:m,strideWidth:g,filterHeight:d,filterWidth:p,effectiveFilterHeight:x,effectiveFilterWidth:w,dilationHeight:y,dilationWidth:b,inShape:e,outShape:S,filterShape:t}}function Il(e,t,n,s,r,a=!1,i="channelsLast",o){let[l,u,c,h,d]=[-1,-1,-1,-1,-1];if("channelsLast"===i)[l,u,c,h,d]=e;else{if("channelsFirst"!==i)throw new Error(`Unknown dataFormat ${i}`);[l,d,u,c,h]=e}const[p,f,m,,g]=t,[y,b,x]=Tl(n),[w,v,k]=Tl(s),I=Cl(p,w),N=Cl(f,v),S=Cl(m,k),{padInfo:T,outDepth:C,outHeight:$,outWidth:E}=function(e,t,n,s,r,a,i,o,l,u,c){let h,d,p,f;if("valid"===e&&(e=0),"number"==typeof e){h={top:e,bottom:e,left:e,right:e,front:e,back:e,type:0===e?"VALID":"NUMBER"};const m=function(e,t,n,s,r,a){null==r&&(r=Nl(e,t[0],s[0]));const i=[0,0,0,1];for(let n=0;n<3;n++)e[n]+2*r>=t[n]&&(i[n]=$l((e[n]-t[n]+2*r)/s[n]+1,a));return i}([t,n,s,1],[o,l,u],0,[r,a,i],e,c);d=m[0],p=m[1],f=m[2]}else{if("same"!==e)throw Error(`Unknown padding parameter: ${e}`);{d=Math.ceil(t/r),p=Math.ceil(n/a),f=Math.ceil(s/i);const e=(d-1)*r+o-t,c=(p-1)*a+l-n,m=(f-1)*i+u-s,g=Math.floor(e/2),y=e-g,b=Math.floor(c/2),x=c-b,w=Math.floor(m/2);h={top:b,bottom:x,left:w,right:m-w,front:g,back:y,type:"SAME"}}}return{padInfo:h,outDepth:d,outHeight:p,outWidth:f}}(r,u,c,h,y,b,x,I,N,S,o),A=a?g*d:g;let R;return"channelsFirst"===i?R=[l,A,C,$,E]:"channelsLast"===i&&(R=[l,C,$,E,A]),{batchSize:l,dataFormat:i,inDepth:u,inHeight:c,inWidth:h,inChannels:d,outDepth:C,outHeight:$,outWidth:E,outChannels:A,padInfo:T,strideDepth:y,strideHeight:b,strideWidth:x,filterDepth:p,filterHeight:f,filterWidth:m,effectiveFilterDepth:I,effectiveFilterHeight:N,effectiveFilterWidth:S,dilationDepth:w,dilationHeight:v,dilationWidth:k,inShape:e,outShape:R,filterShape:t}}function Nl(e,t,n,s=1){const r=Cl(t,s);return Math.floor((e[0]*(n-1)-n+r)/2)}function Sl(e){return"number"==typeof e?[e,e,e]:2===e.length?[e[0],e[1],1]:e}function Tl(e){return"number"==typeof e?[e,e,e]:e}function Cl(e,t){return t<=1?e:e+(e-1)*(t-1)}function $l(e,t){if(!t)return Math.trunc(e);switch(t){case"round":return Math.round(e);case"ceil":return Math.ceil(e);case"floor":return Math.floor(e);default:throw new Error(`Unknown roundingMode ${t}`)}}function El(e){const[t,n,s]=Sl(e);return 1===t&&1===n&&1===s}function Al(e,t){return El(e)||El(t)}function Rl(e){return Sl(e).every((e=>e>0))}function _l(e){if("NHWC"===e)return"channelsLast";if("NCHW"===e)return"channelsFirst";throw new Error(`Unknown dataFormat ${e}`)}function Fl(e,t,n){if(null!=n){if("string"==typeof t)throw Error(`Error in ${e}: pad must be an integer when using dimRoundingMode ${n} but got pad ${t}.`);if("number"==typeof t)ie(he(t),(()=>`Error in ${e}: pad must be an integer when using dimRoundingMode ${n} but got pad ${t}.`));else{if("object"!=typeof t)throw Error(`Error in ${e}: Unknown padding parameter: ${t}`);t.forEach((t=>{t.forEach((t=>{ie(he(t),(()=>`Error in ${e}: pad must be an integer when using dimRoundingMode ${n} but got pad ${t}.`))}))}))}}}const Dl=Na({reshape_:function(e,t){const n={x:va(e,"x","reshape","string_or_numeric")},s={shape:t};return pa.runKernel(ns,n,s)}}),Ol=Na({avgPool_:function(e,t,n,s,r){const a=va(e,"x","avgPool","float32");ie(Al(n,1),(()=>`Error in avgPool: Either strides or dilations must be 1. Got strides ${n} and dilations '1'`));let i=a,o=!1;3===a.rank&&(o=!0,i=Dl(a,[1,a.shape[0],a.shape[1],a.shape[2]])),ie(4===i.rank,(()=>`Error in avgPool: x must be rank 4 but got rank ${i.rank}.`)),Fl("avgPool",s,r);const l={x:i},u={filterSize:t,strides:n,pad:s,dimRoundingMode:r};let c=pa.runKernel(at,l,u);return c=zi(c,a.dtype),o?Dl(c,[c.shape[1],c.shape[2],c.shape[3]]):c}}),Ml=Na({avgPool3d_:function(e,t,n,s,r,a="NDHWC"){const i=va(e,"x","avgPool3d","float32");let o=i,l=!1;4===i.rank&&(l=!0,o=Dl(i,[1,i.shape[0],i.shape[1],i.shape[2],i.shape[3]])),ie(5===o.rank,(()=>`Error in avgPool3d: x must be rank 5 but got rank ${o.rank}.`)),ie("NDHWC"===a,(()=>`Error in avgPool3d: Only NDHWC is currently supported, but got dataFormat of ${a}`)),ie("number"==typeof n&&n>0||Array.isArray(n)&&n[0]>0&&n[1]>0&&n[2]>0,(()=>`Error in avgPool3d: Stride must be > 0, but got '${n}'`)),Fl("avgPool3d",s,r);const u={x:o},c={filterSize:t,strides:n,pad:s,dimRoundingMode:r,dataFormat:a};let h=pa.runKernel(ot,u,c);return h=zi(h,o.dtype),l?Dl(h,[h.shape[1],h.shape[2],h.shape[3],h.shape[4]]):h}}),Ll=Na({concat_:function(e,t=0){ie(e.length>=1,(()=>"Pass at least one tensor to concat"));const n=ka(e,"tensors","concat","string_or_numeric");if("complex64"===n[0].dtype&&n.forEach((e=>{if("complex64"!==e.dtype)throw new Error(`Cannot concatenate complex64 tensors with a tensor\n          with dtype ${e.dtype}. `)})),1===n.length)return Bi(n[0]);const s=n,r={axis:t};return pa.runKernel(xt,s,r)}}),zl=Na({matMul_:function(e,t,n=!1,s=!1){let r=va(e,"a","matMul"),a=va(t,"b","matMul");[r,a]=aa(r,a);const i={a:r,b:a},o={transposeA:n,transposeB:s};return pa.runKernel(ut,i,o)}}),Bl=Na({sigmoid_:function(e){const t={x:va(e,"x","sigmoid","float32")};return pa.runKernel(ws,t)}}),Pl=Na({slice_:function(e,t,n){const s=va(e,"x","slice","string_or_numeric");if(0===s.rank)throw new Error("Slicing scalar is not possible");const r={x:s},a={begin:t,size:n};return pa.runKernel(gs,r,a)}}),Wl=Na({tanh_:function(e){const t={x:va(e,"x","tanh","float32")};return pa.runKernel(Ws,t)}}),Vl=Na({basicLSTMCell_:function(e,t,n,s,r,a){const i=va(e,"forgetBias","basicLSTMCell"),o=va(t,"lstmKernel","basicLSTMCell"),l=va(n,"lstmBias","basicLSTMCell"),u=va(s,"data","basicLSTMCell"),c=va(r,"c","basicLSTMCell"),h=va(a,"h","basicLSTMCell"),d=Ll([u,h],1),p=zl(d,o),f=Wi(p,l),m=f.shape[0],g=f.shape[1]/4,y=[m,g],b=Pl(f,[0,0],y),x=Pl(f,[0,g],y),w=Pl(f,[0,2*g],y),v=Pl(f,[0,3*g],y),k=Wi(Gi(Bl(b),Wl(x)),Gi(c,Bl(Wi(i,w))));return[k,Gi(Wl(k),Bl(v))]}}),Ul=Na({batchToSpaceND_:function(e,t,n){const s=va(e,"x","batchToSpaceND"),r=t.reduce(((e,t)=>e*t));ie(s.rank>=1+t.length,(()=>`input rank is ${s.rank} but should be > than blockShape.length ${t.length}`)),ie(n.length===t.length,(()=>`crops.length is ${n.length} but should be equal to blockShape.length  ${t.length}`)),ie(s.shape[0]%r===0,(()=>`input tensor batch is ${s.shape[0]} but is not divisible by the product of the elements of blockShape ${t.join(" * ")} === ${r}`));const a={x:s},i={blockShape:t,crops:n};return pa.runKernel(ct,a,i)}}),Gl=Na({batchNorm_:function(e,t,n,s,r,a){null==a&&(a=.001);const i=va(e,"x","batchNorm"),o=va(t,"mean","batchNorm"),l=va(n,"variance","batchNorm");let u,c;null!=r&&(u=va(r,"scale","batchNorm")),null!=s&&(c=va(s,"offset","batchNorm")),ie(o.rank===l.rank,(()=>"Batch normalization gradient requires mean and variance to have equal ranks.")),ie(null==c||o.rank===c.rank,(()=>"Batch normalization gradient requires mean and offset to have equal ranks.")),ie(null==u||o.rank===u.rank,(()=>"Batch normalization gradient requires mean and scale to have equal ranks."));const h={x:function(e){let t;return t=0===e.rank||1===e.rank?Dl(e,[1,1,1,e.size]):2===e.rank?Dl(e,[1,1,e.shape[0],e.shape[1]]):3===e.rank?Dl(e,[1,e.shape[0],e.shape[1],e.shape[2]]):e,t}(i),scale:u,offset:c,mean:o,variance:l},d={varianceEpsilon:a},p=pa.runKernel(en,h,d);return Dl(p,i.shape)}}),jl=Na({batchNorm2d_:function(e,t,n,s,r,a){const i=va(e,"x","batchNorm"),o=va(t,"mean","batchNorm"),l=va(n,"variance","batchNorm");let u,c;return null!=r&&(u=va(r,"scale","batchNorm")),null!=s&&(c=va(s,"offset","batchNorm")),ie(2===i.rank,(()=>`Error in batchNorm2D: x must be rank 2 but got rank ${i.rank}.`)),ie(2===o.rank||1===o.rank,(()=>`Error in batchNorm2D: mean must be rank 2 or rank 1 but got rank ${o.rank}.`)),ie(2===l.rank||1===l.rank,(()=>`Error in batchNorm2D: variance must be rank 2 or rank 1 but got rank ${l.rank}.`)),null!=u&&ie(2===u.rank||1===u.rank,(()=>`Error in batchNorm2D: scale must be rank 2 or rank 1 but got rank ${u.rank}.`)),null!=c&&ie(2===c.rank||1===c.rank,(()=>`Error in batchNorm2D: offset must be rank 2 or rank 1 but got rank ${c.rank}.`)),Gl(i,o,l,c,u,a)}}),Hl=Na({batchNorm3d_:function(e,t,n,s,r,a){const i=va(e,"x","batchNorm"),o=va(t,"mean","batchNorm"),l=va(n,"variance","batchNorm");let u,c;return null!=r&&(u=va(r,"scale","batchNorm")),null!=s&&(c=va(s,"offset","batchNorm")),ie(3===i.rank,(()=>`Error in batchNorm3D: x must be rank 3 but got rank ${i.rank}.`)),ie(3===o.rank||1===o.rank,(()=>`Error in batchNorm3D: mean must be rank 3 or rank 1 but got rank ${o.rank}.`)),ie(3===l.rank||1===l.rank,(()=>`Error in batchNorm3D: variance must be rank 3 or rank 1 but got rank ${l.rank}.`)),null!=u&&ie(3===u.rank||1===u.rank,(()=>`Error in batchNorm3D: scale must be rank 3 or rank 1 but got rank ${u.rank}.`)),null!=c&&ie(3===c.rank||1===c.rank,(()=>`Error in batchNorm3D: offset must be rank 3 or rank 1 but got rank ${c.rank}.`)),Gl(i,o,l,c,u,a)}}),ql=Na({batchNorm4d_:function(e,t,n,s,r,a){const i=va(e,"x","batchNorm"),o=va(t,"mean","batchNorm"),l=va(n,"variance","batchNorm");let u,c;return null!=r&&(u=va(r,"scale","batchNorm")),null!=s&&(c=va(s,"offset","batchNorm")),ie(4===i.rank,(()=>`Error in batchNorm4D: x must be rank 4 but got rank ${i.rank}.`)),ie(4===o.rank||1===o.rank,(()=>`Error in batchNorm4D: mean must be rank 4 or rank 1 but got rank ${o.rank}.`)),ie(4===l.rank||1===l.rank,(()=>`Error in batchNorm4D: variance must be rank 4 or rank 1 but got rank ${l.rank}.`)),null!=u&&ie(4===u.rank||1===u.rank,(()=>`Error in batchNorm4D: scale must be rank 4 or rank 1 but got rank ${u.rank}.`)),null!=c&&ie(4===c.rank||1===c.rank,(()=>`Error in batchNorm4D: offset must be rank 4 or rank 1 but got rank ${c.rank}.`)),Gl(i,o,l,c,u,a)}}),Kl=Na({bincount_:function(e,t,n){const s=va(e,"x","bincount"),r=va(t,"weights","bincount");ie("int32"===s.dtype,(()=>`Error in bincount: input dtype must be int32, but got ${s.dtype}`)),ie(n>=0,(()=>`size must be non-negative, but got ${n}.`)),ie(r.size===s.size||0===r.size,(()=>`Error in bincount: weights must have the same size as input or0-length, but got input shape: ${s.shape}, weights shape: ${r.shape}.`));const a={x:s,weights:r},i={size:n};return pa.runKernel(ht,a,i)}}),Xl=Na({bitwiseAnd_:function(e,t){const n=va(e,"x","bitwiseAnd"),s=va(t,"y","bitwiseAnd");if(!ce(n.shape,s.shape))throw new Error(`BitwiseAnd: Tensors must have the same shape. x: ${n.shape}, y: ${s.shape}`);if("int32"!==n.dtype||"int32"!==s.dtype)throw new Error(`BitwiseAnd: Only supports 'int32' values in tensor, found type of x: ${n.dtype} and type of y: ${s.dtype}`);const r={a:n,b:s};return pa.runKernel(dt,r)}}),Yl=Na({broadcastArgs_:function(e,t){const n=va(e,"s0","broadcastArgs","int32"),s=va(t,"s1","broadcastArgs","int32");if(1!==n.rank)throw new Error(`broadcastArgs(): first input must be a vector (rank=1). Has rank ${n.rank}`);if(1!==s.rank)throw new Error(`broadcastArgs(): second input must be a vector (rank=1). Has rank ${s.rank}`);const r={s0:n,s1:s};return pa.runKernel(pt,r)}}),Jl=Na({broadcastTo_:function(e,t){let n=va(e,"broadcastTo","x");const s=n.shape;if(Fe(t),t.length<n.rank)throw new Error(`broadcastTo(): shape.length=${t.length} < input.rank=${n.rank}.`);if(t.length>n.rank){const e=n.shape.slice();for(;e.length<t.length;)e.unshift(1);n=Dl(n,e)}const r=n.shape,a=Array.from(t);for(let e=t.length-1;e>=0;e--)if(r[e]===t[e])a[e]=1;else if(1!==n.shape[e])throw new Error(`broadcastTo(): [${s}] cannot be broadcast to [${t}].`);if(0===a.map(((e,t)=>e>1?t:-1)).filter((e=>e>=0)).length)return Bi(n);const i={x:n},o={reps:a};return pa.runKernel(Vs,i,o)}}),Zl=Na({ceil_:function(e){const t={x:va(e,"x","ceil","float32")};return pa.runKernel(mt,t)}}),Ql=Na({clipByValue_:function(e,t,n){const s=va(e,"x","clipByValue");if(ie(t<=n,(()=>`Error in clip: min (${t}) must be less than or equal to max (${n}).`)),t===n)return so(s.shape,t,s.dtype);const r={x:s},a={clipValueMin:t,clipValueMax:n};return pa.runKernel(gt,r,a)}}),eu=Na({concat1d_:function(e){return Ll(e,0)}}),tu=Na({concat2d_:function(e,t){return Ll(e,t)}}),nu=Na({concat3d_:function(e,t){return Ll(e,t)}}),su=Na({concat4d_:function(e,t){return Ll(e,t)}}),ru=Na({conv2d_:function(e,t,n,s,r="NHWC",a=[1,1],i){const o=va(e,"x","conv2d","float32"),l=va(t,"filter","conv2d","float32");let u=o,c=!1;3===o.rank&&(c=!0,u=Dl(o,[1,o.shape[0],o.shape[1],o.shape[2]])),ie(4===u.rank,(()=>`Error in conv2d: input must be rank 4, but got rank ${u.rank}.`)),ie(4===l.rank,(()=>`Error in conv2d: filter must be rank 4, but got rank ${l.rank}.`)),Fl("conv2d",s,i);const h="NHWC"===r?u.shape[3]:u.shape[1];ie(h===l.shape[2],(()=>`Error in conv2d: depth of input (${h}) must match input depth for filter ${l.shape[2]}.`)),ie(Al(n,a),(()=>`Error in conv2D: Either strides or dilations must be 1. Got strides ${n} and dilations '${a}'`)),ie(Rl(a),(()=>"Error in conv2D: Dilated rates should be larger than 0.")),ie(Rl(n),(()=>"Error in conv2D: Strides should be larger than 0."));const d={x:u,filter:l},p={strides:n,pad:s,dataFormat:r,dilations:a,dimRoundingMode:i},f=pa.runKernel(wt,d,p);return c?Dl(f,[f.shape[1],f.shape[2],f.shape[3]]):f}}),au=Na({conv1d_:function(e,t,n,s,r="NWC",a=1,i){const o=va(e,"x","conv1d"),l=va(t,"filter","conv1d");let u=o,c=!1;2===o.rank&&(c=!0,u=Dl(o,[1,o.shape[0],o.shape[1]])),ie(3===u.rank,(()=>`Error in conv1d: input must be rank 3, but got rank ${u.rank}.`)),ie(3===l.rank,(()=>`Error in conv1d: filter must be rank 3, but got rank ${l.rank}.`)),Fl("conv1d",s,i),ie(u.shape[2]===l.shape[1],(()=>`Error in conv1d: depth of input (${u.shape[2]}) must match input depth for filter ${l.shape[1]}.`)),ie(Al(n,a),(()=>`Error in conv1D: Either stride or dilation must be 1. Got stride ${n} and dilation '${a}'`)),ie(Rl(a),(()=>"Error in conv1D: Dilated rates should be larger than 0.")),ie(Rl(n),(()=>"Error in conv1D: Stride should be larger than 0.")),ie("NWC"===r,(()=>`Error in conv1d: got dataFormat of ${r} but only NWC is currently supported.`));const h=Dl(l,[1,l.shape[0],l.shape[1],l.shape[2]]),d=Dl(u,[u.shape[0],1,u.shape[1],u.shape[2]]),p=ru(d,h,[1,n],s,"NHWC",[1,a],i);return Dl(p,c?[p.shape[2],p.shape[3]]:[p.shape[0],p.shape[2],p.shape[3]])}}),iu=Na({conv2DBackpropInput_:function(e,t,n,s,r,a="NHWC",i){ie(e.length===t.rank,(()=>`Length of inShape (${e.length}) and rank of dy (${t.rank}) must match`));let o=e,l=t,u=!1;3===t.rank&&(u=!0,l=Dl(t,[1,t.shape[0],t.shape[1],t.shape[2]]),o=[1,e[0],e[1],e[2]]),ie(4===o.length,(()=>`Error in conv2dDerInput: inShape must be length 4, but got length ${o.length}.`)),ie(4===l.rank,(()=>`Error in conv2dDerInput: dy must be rank 4, but got rank ${l.rank}`)),ie(4===n.rank,(()=>`Error in conv2dDerInput: filter must be rank 4, but got rank ${n.rank}`));const c="NHWC"===a?o[3]:o[1],h="NHWC"===a?l.shape[3]:l.shape[1];ie(c===n.shape[2],(()=>`Error in conv2dDerInput: depth of input (${c}) must match input depth for filter ${n.shape[2]}.`)),ie(h===n.shape[3],(()=>`Error in conv2dDerInput: depth of output (${h}) must match output depth for filter ${n.shape[3]}.`)),Fl("conv2dDerInput",r,i);const d={dy:l,filter:n},p={strides:s,pad:r,dataFormat:a,dimRoundingMode:i,inputShape:o},f=pa.runKernel(kt,d,p);return u?Dl(f,[f.shape[1],f.shape[2],f.shape[3]]):f}}),ou=Na({conv2dTranspose_:function(e,t,n,s,r,a){const i=va(e,"x","conv2dTranspose"),o=va(t,"filter","conv2dTranspose");return iu(n,i,o,s,r,"NHWC",a)}}),lu=Na({conv3d_:function(e,t,n,s,r="NDHWC",a=[1,1,1]){const i=va(e,"x","conv3d"),o=va(t,"filter","conv3d");let l=i,u=!1;4===i.rank&&(u=!0,l=Dl(i,[1,i.shape[0],i.shape[1],i.shape[2],i.shape[3]])),ie(5===l.rank,(()=>`Error in conv3d: input must be rank 5, but got rank ${l.rank}.`)),ie(5===o.rank,(()=>`Error in conv3d: filter must be rank 5, but got rank ${o.rank}.`)),ie(l.shape[4]===o.shape[3],(()=>`Error in conv3d: depth of input (${l.shape[4]}) must match input depth for filter ${o.shape[3]}.`)),ie(Al(n,a),(()=>`Error in conv3D: Either strides or dilations must be 1. Got strides ${n} and dilations '${a}'`)),ie("NDHWC"===r,(()=>`Error in conv3d: got dataFormat of ${r} but only NDHWC is currently supported.`)),ie(Rl(a),(()=>"Error in conv3D: Dilated rates should be larger than 0.")),ie(Rl(n),(()=>"Error in conv3D: Strides should be larger than 0."));const c={x:l,filter:o},h={strides:n,pad:s,dataFormat:r,dilations:a},d=pa.runKernel(It,c,h);return u?Dl(d,[d.shape[1],d.shape[2],d.shape[3],d.shape[4]]):d}}),uu=Na({conv3DBackpropInput_:function(e,t,n,s,r){ie(e.length===t.rank,(()=>`Length of inShape (${e.length}) and rank of dy (${t.rank}) must match`));let a=e,i=t,o=!1;4===t.rank&&(o=!0,i=Dl(t,[1,t.shape[0],t.shape[1],t.shape[2],t.shape[3]]),a=[1,e[0],e[1],e[2],e[3]]);const l=a[4],u=i.shape[4];ie(5===a.length,(()=>`Error in conv3dDerInput: inShape must be length 5, but got length ${a.length}.`)),ie(5===i.rank,(()=>`Error in conv3dDerInput: dy must be rank 5, but got rank ${i.rank}`)),ie(5===n.rank,(()=>`Error in conv3dDerInput: filter must be rank 5, but got rank ${n.rank}`)),ie(l===n.shape[3],(()=>`Error in conv3dDerInput: depth of input (${l}) must match input depth for filter ${n.shape[3]}.`)),ie(u===n.shape[4],(()=>`Error in conv3dDerInput: depth of output (${u}) must match output depth for filter ${n.shape[4]}.`));const c={dy:i,filter:n},h={pad:r,strides:s,inputShape:a},d=pa.runKernel(St,c,h);return o?Dl(d,[d.shape[1],d.shape[2],d.shape[3],d.shape[4]]):d}}),cu=Na({conv3dTranspose_:function(e,t,n,s,r){const a=va(e,"x","conv3dTranspose"),i=va(t,"filter","conv3dTranspose");return uu(n,a,i,s,r)}}),hu=Na({cos_:function(e){const t={x:va(e,"x","cos","float32")};return pa.runKernel(Tt,t)}}),du=Na({cosh_:function(e){const t={x:va(e,"x","cosh","float32")};return pa.runKernel(Ct,t)}}),pu=Na({cumprod_:function(e,t=0,n=!1,s=!1){const r={x:va(e,"x","cumprod")},a={axis:t,exclusive:n,reverse:s};return pa.runKernel($t,r,a)}}),fu=Na({cumsum_:function(e,t=0,n=!1,s=!1){const r={x:va(e,"x","cumsum")},a={axis:t,exclusive:n,reverse:s};return pa.runKernel(Et,r,a)}}),mu=Na({denseBincount_:function(e,t,n,s=!1){const r=va(e,"x","denseBincount"),a=va(t,"weights","denseBincount");ie("int32"===r.dtype,(()=>`Error in denseBincount: input dtype must be int32, but got ${r.dtype}`)),ie(r.rank<=2,(()=>`Error in denseBincount: input must be at most rank 2, but got rank ${r.rank}.`)),ie(n>=0,(()=>`size must be non-negative, but got ${n}.`)),ie(a.size===r.size||0===a.size,(()=>`Error in denseBincount: weights must have the same shape as x or 0-length, but got x shape: ${r.shape}, weights shape: ${a.shape}.`));const i={x:r,weights:a},o={size:n,binaryOutput:s};return pa.runKernel(Rt,i,o)}}),gu=Na({depthToSpace_:function(e,t,n="NHWC"){const s=va(e,"x","depthToSpace","float32"),r="NHWC"===n?s.shape[1]:s.shape[2],a="NHWC"===n?s.shape[2]:s.shape[3],i="NHWC"===n?s.shape[3]:s.shape[1];ie(t>1,(()=>`blockSize should be > 1 for depthToSpace, but was: ${t}`)),ie(r*t>=0,(()=>`Negative dimension size caused by overflow when multiplying\n    ${r} and ${t}  for depthToSpace with input shape\n    ${s.shape}`)),ie(a*t>=0,(()=>`Negative dimension size caused by overflow when multiplying\n    ${a} and ${t} for depthToSpace with input shape\n        ${s.shape}`)),ie(i%(t*t)===0,(()=>`Dimension size must be evenly divisible by ${t*t} but is ${i} for depthToSpace with input shape ${s.shape}`));const o={x:s},l={blockSize:t,dataFormat:n};return pa.runKernel(_t,o,l)}}),yu=Na({depthwiseConv2d_:function(e,t,n,s,r="NHWC",a=[1,1],i){const o=va(e,"x","depthwiseConv2d","float32"),l=va(t,"filter","depthwiseConv2d","float32");let u=o,c=!1;3===o.rank&&(c=!0,u=Dl(o,[1,o.shape[0],o.shape[1],o.shape[2]])),ie(4===u.rank,(()=>`Error in depthwiseConv2d: input must be rank 4, but got rank ${u.rank}.`)),ie(4===l.rank,(()=>`Error in depthwiseConv2d: filter must be rank 4, but got rank ${l.rank}.`));const h="NHWC"===r?u.shape[3]:u.shape[1];ie(h===l.shape[2],(()=>`Error in depthwiseConv2d: number of input channels (${h}) must match the inChannels dimension in filter ${l.shape[2]}.`)),Fl("depthwiseConv2d",s,i);const d={x:u,filter:l},p={strides:n,pad:s,dataFormat:r,dilations:a,dimRoundingMode:i},f=pa.runKernel(Ft,d,p);return c?Dl(f,[f.shape[1],f.shape[2],f.shape[3]]):f}}),bu=Na({diag_:function(e){const t={x:va(e,"x","diag")};return pa.runKernel(Mt,t)}}),xu=Na({dilation2d_:function(e,t,n,s,r=[1,1],a="NHWC"){const i=va(e,"x","dilation2d"),o=va(t,"filter","dilation2d");ie(3===i.rank||4===i.rank,(()=>`Error in dilation2d: input must be rank 3 or 4, but got rank ${i.rank}.`)),ie(3===o.rank,(()=>`Error in dilation2d: filter must be rank 3, but got rank ${o.rank}.`)),ie("NHWC"===a,(()=>`Error in dilation2d: Only NHWC is currently supported, but got dataFormat of ${a}`));let l=i,u=!1;3===i.rank&&(l=Dl(i,[1,i.shape[0],i.shape[1],i.shape[2]]),u=!0),ie(l.shape[3]===o.shape[2],(()=>`Error in dilation2d:  input and filter must have the same depth: ${l.shape[3]} vs ${o.shape[2]}`));const c={x:l,filter:o},h={strides:n,pad:s,dilations:r},d=pa.runKernel(Lt,c,h);return u?Dl(d,[d.shape[1],d.shape[2],d.shape[3]]):d}}),wu=Na({equal_:function(e,t){let n=va(e,"a","equal","string_or_numeric"),s=va(t,"b","equal","string_or_numeric");[n,s]=aa(n,s),ho(n.shape,s.shape);const r={a:n,b:s};return pa.runKernel(jt,r)}}),vu=Na({where_:function(e,t,n){const s=va(t,"a","where"),r=va(n,"b","where"),a=va(e,"condition","where","bool"),i=ho(ho(a.shape,s.shape),r.shape),o={condition:Jl(a,i),t:Jl(s,i),e:Jl(r,i)};return pa.runKernel(fs,o)}}),ku=Na({divNoNan_:function(e,t){let n=va(e,"a","div"),s=va(t,"b","div");[n,s]=aa(n,s);const r=Ui(n,s),a=qi(r),i=wu(s,a);return vu(i,a,r)}}),Iu=Na({dot_:function(e,t){const n=va(e,"t1","dot"),s=va(t,"t2","dot");ie(!(1!==n.rank&&2!==n.rank||1!==s.rank&&2!==s.rank),(()=>`Error in dot: inputs must all be rank 1 or 2, but got ranks ${n.rank} and ${s.rank}.`));const r=1===n.rank?n.size:n.shape[1],a=1===s.rank?s.size:s.shape[0];if(ie(r===a,(()=>`Error in dot: inner dimensions of inputs must match, but got ${r} and ${a}.`)),1===n.rank&&1===s.rank){const e=Dl(n,[1,-1]),t=Dl(s,[-1,1]),r=zl(e,t);return Dl(r,[])}if(1===n.rank&&2===s.rank){const e=Dl(n,[1,-1]),t=Dl(s,[s.shape[0],s.shape[1]]),r=zl(e,t);return Dl(r,[r.size])}if(2===n.rank&&1===s.rank){const e=Dl(s,[-1,1]),t=zl(n,e);return Dl(t,[t.size])}{const e=Dl(s,[s.shape[0],s.shape[1]]);return zl(n,e)}}}),Nu=Na({einsum_:function(e,...t){const n=t.map(((e,t)=>va(e,`tensors${t}`,"einsum"))),s={equation:e};return pa.runKernel(Wt,n,s)}}),Su=Na({elu_:function(e){const t={x:va(e,"x","elu","float32")};return pa.runKernel(Vt,t)}}),Tu=Na({ensureShape_:function(e,t){const n=va(e,"x","ensureShape","string_or_numeric");if(!function(e,t){if(e===t)return!0;if(null==e||null==t)return!1;if(e.length!==t.length)return!1;for(let n=0;n<e.length;n++)if(null!==e[n]&&null!==t[n]&&e[n]!==t[n])return!1;return!0}(n.shape,t))throw new Error(`EnsureShape: Shape of tensor ${n.shape} is not compatible with expected shape ${t}`);return e}}),Cu=Na({erf_:function(e){let t=va(e,"x","erf");ie("int32"===t.dtype||"float32"===t.dtype,(()=>"Input dtype must be `int32` or `float32`.")),"int32"===t.dtype&&(t=zi(t,"float32"));const n={x:t};return pa.runKernel(Gt,n)}});function $u(e,t){for(let n=0;n<e.length;++n)if(e[e.length-n-1]!==t-1-n)return!1;return!0}function Eu(e,t,n){const s=e.length+t.length,r=[];let a=0,i=0;for(let o=0;o<s;o++)-1===n.indexOf(o)?r.push(e[a++]):r.push(t[i++]);return r}function Au(e,t){const n=[],s=e.length;for(let r=0;r<s;r++)-1===t.indexOf(r)&&n.push(e[r]);return[n,t.map((t=>e[t]))]}function Ru(e,t){return Eu(e,t.map((e=>1)),t)}function _u(e,t,n){ie($u(t,n),(()=>`${e} supports only inner-most axes for now. Got axes ${t} and rank-${n} input.`))}function Fu(e,t){if($u(e,t))return null;const n=[];for(let s=0;s<t;++s)-1===e.indexOf(s)&&n.push(s);return e.forEach((e=>n.push(e))),n}function Du(e){return e.map(((e,t)=>[t,e])).sort(((e,t)=>e[1]-t[1])).map((e=>e[0]))}function Ou(e,t){const n=[];for(let s=t-e;s<t;++s)n.push(s);return n}const Mu=Na({max_:function(e,t=null,n=!1){const s={x:va(e,"x","max")},r={reductionIndices:t,keepDims:n};return pa.runKernel(In,s,r)}}),Lu=Na({min_:function(e,t=null,n=!1){const s={x:va(e,"x","min")},r={axis:t,keepDims:n};return pa.runKernel(Rn,s,r)}}),zu=Na({sum_:function(e,t=null,n=!1){let s=va(e,"x","sum");"bool"===s.dtype&&(s=zi(s,"int32"));const r={x:s},a={axis:t,keepDims:n};return pa.runKernel(Is,r,a)}});function Bu(e,t,n=null){if(0===e.rank)return lo(e);if(1!==e.rank&&null===n)return Bu(Dl(e,[-1]),t,n);if(1===e.rank||"number"==typeof n||Array.isArray(n)&&1===n.length){if(1===t)return zu(lo(e),n);if(t===1/0)return Mu(lo(e),n);if(t===-1/0)return Lu(lo(e),n);if("euclidean"===t||2===t)return ji(zu(ao(lo(e),Xi(2,"int32")),n));throw new Error(`Error in norm: invalid ord value: ${t}`)}if(Array.isArray(n)&&2===n.length){if(1===t)return Mu(zu(lo(e),n[0]),n[1]-1);if(t===1/0)return Mu(zu(lo(e),n[1]),n[0]);if(t===-1/0)return Lu(zu(lo(e),n[1]),n[0]);if("fro"===t||"euclidean"===t)return ji(zu(Hi(e),n));throw new Error(`Error in norm: invalid ord value: ${t}`)}throw new Error(`Error in norm: invalid axis: ${n}`)}const Pu=Na({norm_:function(e,t="euclidean",n=null,s=!1){const r=Bu(e=va(e,"x","norm"),t,n);let a=r.shape;if(s){const t=ge(n,e.shape);a=Ru(r.shape,t)}return Dl(r,a)}}),Wu=Na({euclideanNorm_:function(e,t=null,n=!1){return Pu(e,"euclidean",t,n)}}),Vu=Na({exp_:function(e){const t={x:va(e,"x","exp")};return pa.runKernel(Ht,t)}}),Uu=Na({expandDims_:function(e,t=0){const n=va(e,"x","expandDims","string_or_numeric");ie(t<=n.rank,(()=>"Axis must be <= rank of the tensor"));const s={input:n},r={dim:t};return pa.runKernel(qt,s,r)}}),Gu=Na({expm1_:function(e){const t={x:va(e,"x","expm1")};return pa.runKernel(Kt,t)}}),ju=Na({tile_:function(e,t){const n=va(e,"x","tile","string_or_numeric");ie(n.rank===t.length,(()=>`Error in transpose: rank of input ${n.rank} must match length of reps ${t}.`));const s={x:n},r={reps:t};return pa.runKernel(Vs,s,r)}}),Hu=Na({eye_:function(e,t,n,s="float32"){null==t&&(t=e);const r=Li([e,t],s),a=e<=t?e:t;for(let e=0;e<a;++e)r.set(1,e,e);const i=Dl(r.toTensor(),[e,t]);if(null==n)return i;if(1===n.length)return ju(Uu(i,0),[n[0],1,1]);if(2===n.length)return ju(Uu(Uu(i,0),0),[n[0],n[1],1,1]);if(3===n.length)return ju(Uu(Uu(Uu(i,0),0),0),[n[0],n[1],n[2],1,1]);throw new Error(`eye() currently supports only 1D and 2D batchShapes, but received ${n.length}D.`)}}),qu=Na({floor_:function(e){const t={x:va(e,"x","floor","float32")};return pa.runKernel(Zt,t)}}),Ku=Na({gather_:function(e,t,n=0,s=0){const r={x:va(e,"x","gather"),indices:va(t,"indices","gather","int32")},a={axis:n,batchDims:s};return pa.runKernel(tn,r,a)}}),Xu=Na({greater_:function(e,t){let n=va(e,"a","greater","string_or_numeric"),s=va(t,"b","greater","string_or_numeric");[n,s]=aa(n,s),ho(n.shape,s.shape);const r={a:n,b:s};return pa.runKernel(sn,r)}}),Yu=Na({greaterEqual_:function(e,t){let n=va(e,"a","greaterEqual","string_or_numeric"),s=va(t,"b","greaterEqual","string_or_numeric");[n,s]=aa(n,s),ho(n.shape,s.shape);const r={a:n,b:s};return pa.runKernel(rn,r)}}),Ju=Na({imag_:function(e){const t={input:va(e,"input","imag")};return pa.runKernel(ln,t)}}),Zu=Na({isFinite_:function(e){const t={x:va(e,"x","isFinite")};return pa.runKernel(un,t)}}),Qu=Na({isInf_:function(e){const t={x:va(e,"x","isInf")};return pa.runKernel(cn,t)}}),ec=Na({isNaN_:function(e){const t={x:va(e,"x","isNaN")};return pa.runKernel(hn,t)}}),tc=Na({leakyRelu_:function(e,t=.2){const n={x:va(e,"x","leakyRelu")},s={alpha:t};return pa.runKernel(dn,n,s)}}),nc=Na({less_:function(e,t){let n=va(e,"a","less","string_or_numeric"),s=va(t,"b","less","string_or_numeric");[n,s]=aa(n,s),ho(n.shape,s.shape);const r={a:n,b:s};return pa.runKernel(pn,r)}}),sc=Na({lessEqual_:function(e,t){let n=va(e,"a","lessEqual","string_or_numeric"),s=va(t,"b","lessEqual","string_or_numeric");[n,s]=aa(n,s),ho(n.shape,s.shape);const r={a:n,b:s};return pa.runKernel(fn,r)}});function rc(e,t,n){if(n<=0)throw new Error("The number of values should be positive.");const s={start:e,stop:t,num:n};return pa.runKernel(mn,{},s)}const ac=Na({localResponseNormalization_:function(e,t=5,n=1,s=1,r=.5){const a=va(e,"x","localResponseNormalization");ie(4===a.rank||3===a.rank,(()=>`Error in localResponseNormalization: x must be rank 3 or 4 but got\n               rank ${a.rank}.`)),ie(he(t),(()=>`Error in localResponseNormalization: depthRadius must be an integer but got depthRadius ${t}.`));let i=a,o=!1;3===a.rank&&(o=!0,i=Dl(a,[1,a.shape[0],a.shape[1],a.shape[2]]));const l={x:i},u={depthRadius:t,bias:n,alpha:s,beta:r},c=pa.runKernel(vn,l,u);return o?Dl(c,[c.shape[1],c.shape[2],c.shape[3]]):c}}),ic=Na({log_:function(e){const t={x:va(e,"x","log","float32")};return pa.runKernel(gn,t)}}),oc=Na({log1p_:function(e){const t={x:va(e,"x","log1p")};return pa.runKernel(yn,t)}}),lc=Na({neg_:function(e){const t={x:va(e,"x","neg")};return pa.runKernel(Ln,t)}}),uc=Na({softplus_:function(e){const t={x:va(e,"x","softplus")};return pa.runKernel(vs,t)}}),cc=Na({logSigmoid_:function(e){const t=va(e,"x","logSigmoid");return Ki((e=>({value:lc(uc(lc(e))),gradFunc:t=>Gi(t,Bl(lc(e)))})))(t)}}),hc=Na({logSoftmax_:function(e,t=-1){const n=va(e,"logits","logSoftmax");if(-1===t&&(t=n.rank-1),t!==n.rank-1)throw Error(`Log Softmax along a non-last dimension is not yet supported. Logits was rank ${n.rank} and axis was ${t}`);const s=Ki(((e,n)=>{const s=Mu(e,t,!0),r=io(e,s),a=io(zi(r,"float32"),ic(zu(Vu(r),t,!0)));return n([a]),{value:a,gradFunc:(e,n)=>{const[s]=n,r=Vu(s);return io(e,Gi(zu(e,t,!0),r))}}}));return s(n)}}),dc=Na({logSumExp_:function(e,t=null,n=!1){const s=va(e,"x","logSumExp"),r=ge(t,s.shape),a=Mu(s,r,!0),i=io(s,a),o=Vu(i),l=zu(o,r),u=ic(l),c=Wi(Dl(a,u.shape),u);if(n){const e=Ru(c.shape,r);return Dl(c,e)}return c}}),pc=Na({logicalAnd_:function(e,t){const n=va(e,"a","logicalAnd","bool"),s=va(t,"b","logicalAnd","bool");ho(n.shape,s.shape);const r={a:n,b:s};return pa.runKernel(bn,r)}}),fc=Na({logicalNot_:function(e){const t={x:va(e,"x","logicalNot","bool")};return pa.runKernel(xn,t)}}),mc=Na({logicalOr_:function(e,t){const n=va(e,"a","logicalOr","bool"),s=va(t,"b","logicalOr","bool");ho(n.shape,s.shape);const r={a:n,b:s};return pa.runKernel(wn,r)}}),gc=Na({logicalXor_:function(e,t){const n=va(e,"a","logicalXor","bool"),s=va(t,"b","logicalXor","bool");return ho(n.shape,s.shape),pc(mc(e,t),fc(pc(e,t)))}}),yc=2147483648,bc=Na({searchSorted_:function(e,t,n="left"){const s=va(e,"sortedSequence","searchSorted"),r=va(t,"values","searchSorted"),a=s.shape[s.shape.length-1],i=r.shape[r.shape.length-1],o=Dl(s,[-1,a]),l=Dl(r,[-1,i]);if(o.rank<2)throw new Error("Sorted input argument must be at least 2-dimensional");if(o.shape[0]!==l.shape[0])throw new Error("Leading dimension of 'sortedSequence' and 'values' must match.");if(ue(l.shape)>=yc)throw new Error("values tensor size must less than 2147483648");if(o.shape[1]>=yc)throw new Error(`trailing dim_size must less than 2147483648 for int32 output type, was ${o.shape[1]}`);const u={sortedSequence:o,values:l},c={side:n};return pa.runKernel(ps,u,c)}});function xc(e,t){return bc(e,t,"left")}const wc=Na({maxPool_:function(e,t,n,s,r){const a=va(e,"x","maxPool");let i=a,o=!1;3===a.rank&&(o=!0,i=Dl(a,[1,a.shape[0],a.shape[1],a.shape[2]])),ie(4===i.rank,(()=>`Error in maxPool: input must be rank 4 but got rank ${i.rank}.`)),ie(Al(n,1),(()=>`Error in maxPool: Either strides or dilations must be 1. Got strides ${n} and dilations '1'`)),Fl("maxPool",s,r);const l={x:i},u={filterSize:t,strides:n,pad:s,dimRoundingMode:r},c=pa.runKernel(Sn,l,u);return o?Dl(c,[c.shape[1],c.shape[2],c.shape[3]]):c}}),vc=Na({maxPool3d_:function(e,t=[1,1,1],n,s,r,a="NDHWC"){const i=va(e,"x","maxPool3d");let o=i,l=!1;4===i.rank&&(l=!0,o=Dl(i,[1,i.shape[0],i.shape[1],i.shape[2],i.shape[3]])),ie(5===o.rank,(()=>`Error in maxPool3d: x must be rank 5 but got rank ${o.rank}.`)),ie("NDHWC"===a,(()=>`Error in maxPool3d: Only NDHWC is currently supported, but got dataFormat of ${a}`)),Fl("maxPool3d",s,r);const u={x:o},c={filterSize:t,strides:n,pad:s,dimRoundingMode:r,dataFormat:a},h=pa.runKernel(Cn,u,c);return l?Dl(h,[h.shape[1],h.shape[2],h.shape[3],h.shape[4]]):h}}),kc=Na({maxPoolWithArgmax_:function(e,t,n,s,r=!1){const a={x:va(e,"x","maxPoolWithArgmax")},i={filterSize:t,strides:n,pad:s,includeBatchInIndex:r},o=pa.runKernel(En,a,i);return{result:o[0],indexes:o[1]}}}),Ic=Na({mean_:function(e,t=null,n=!1){const s={x:va(e,"x","mean")},r={axis:t,keepDims:n};return pa.runKernel(An,s,r)}});function Nc(e,t="float32"){if(Fe(e),"complex64"===t){const t=Nc(e,"float32"),n=Nc(e,"float32");return Sa(t,n)}const n=Re(ue(e),t);return pa.makeTensor(n,e,t)}function Sc(e,t="float32"){if(Fe(e),"complex64"===t){const t=Sc(e,"float32"),n=Nc(e,"float32");return Sa(t,n)}const n=Ae(ue(e),t);return pa.makeTensor(n,e,t)}function Tc(e,t,{indexing:n="xy"}={}){if("xy"!==n&&"ij"!==n)throw new TypeError(`${n} is not a valid third argument to meshgrid`);if(void 0===e)return[];let s=va(e,"x","meshgrid",e instanceof Hr?e.dtype:"float32");if(void 0===t)return[s];let r=va(t,"y","meshgrid",t instanceof Hr?t.dtype:"float32");const a=ue(s.shape),i=ue(r.shape);return"xy"===n?(s=Dl(s,[1,-1]),r=Dl(r,[-1,1]),[zl(Sc([i,1],s.dtype),s),zl(r,Sc([1,a],r.dtype))]):(s=Dl(s,[-1,1]),r=Dl(r,[1,-1]),[zl(s,Sc([1,i],s.dtype)),zl(Sc([a,1],r.dtype),r)])}const Cc=Na({minimum_:function(e,t){let n=va(e,"a","minimum"),s=va(t,"b","minimum");[n,s]=aa(n,s),"bool"===n.dtype&&(n=zi(n,"int32"),s=zi(s,"int32")),ho(n.shape,s.shape);const r={a:n,b:s};return pa.runKernel(_n,r)}}),$c=Na({mirrorPad_:function(e,t,n){ie("reflect"===n||"symmetric"===n,(()=>`Invalid mode. Mode must be either reflect or symmetric. Got ${n}.`));const s=va(e,"x","mirrorPad");if(0===s.rank)throw new Error("mirrorPad(scalar) is not defined. Pass non-scalar to mirrorPad");ie(t.length===s.rank,(()=>`Padding doesn't match input. Must be ${s.rank}. Got ${t.length}.`));const r="reflect"===n?1:0;for(let e=0;e<s.rank;e++)ie(2===t[e].length,(()=>"Invalid number of paddings. Must be length of 2 each.")),ie(t[e][0]>=0&&t[e][0]<=s.shape[e]-r&&t[e][1]>=0&&t[e][1]<=s.shape[e]-r,(()=>`Padding in dimension ${e} cannot be greater than or equal to ${s.shape[e]-r} or less than 0 for input of shape ${s.shape}`));const a={paddings:t,mode:n},i={x:s};return pa.runKernel(Fn,i,a)}}),Ec=Na({mod_:function(e,t){let n=va(e,"a","mod"),s=va(t,"b","mod");[n,s]=aa(n,s);const r={a:n,b:s};return pa.runKernel(Dn,r)}}),Ac=Na({moments_:function(e,t=null,n=!1){const s=ge(t,(e=va(e,"x","moments")).shape),r=Ic(e,s,n);let a=r.shape;n||(a=Ru(r.shape,s));const i=Hi(io(zi(e,"float32"),Dl(r,a)));return{mean:r,variance:Ic(i,s,n)}}}),Rc=Na({multiRNNCell_:function(e,t,n,s){const r=va(t,"data","multiRNNCell"),a=ka(n,"c","multiRNNCell"),i=ka(s,"h","multiRNNCell");let o=r;const l=[];for(let t=0;t<e.length;t++){const n=e[t](o,a[t],i[t]);l.push(n[0]),l.push(n[1]),o=n[1]}const u=[],c=[];for(let e=0;e<l.length;e+=2)u.push(l[e]),c.push(l[e+1]);return[u,c]}}),_c=Na({multinomial_:function(e,t,n,s=!1){const r=va(e,"logits","multinomial"),a=r.size,i=r.rank;if(a<2)throw new Error(`Error in multinomial: you need at least 2 outcomes, but got ${a}.`);if(i>2)throw new Error(`Rank of probabilities must be 1 or 2, but is ${i}`);n=n||Math.random();const o={logits:1===i?Dl(r,[1,-1]):r},l={numSamples:t,seed:n,normalized:s},u=pa.runKernel(On,o,l);return 1===i?Dl(u,[u.size]):u}}),Fc=Na({notEqual_:function(e,t){let n=va(e,"a","notEqual","string_or_numeric"),s=va(t,"b","notEqual","string_or_numeric");[n,s]=aa(n,s),ho(n.shape,s.shape);const r={a:n,b:s};return pa.runKernel(zn,r)}}),Dc=Na({oneHot_:function(e,t,n=1,s=0,r="int32"){if(t<2)throw new Error(`Error in oneHot: depth must be >=2, but it is ${t}`);const a={indices:va(e,"indices","oneHot","int32")},i={dtype:r,depth:t,onValue:n,offValue:s};return pa.runKernel(Un,a,i)}}),Oc=Na({onesLike_:function(e){const t={x:va(e,"x","onesLike")};return pa.runKernel(Vn,t)}}),Mc=Na({outerProduct_:function(e,t){const n=va(e,"v1","outerProduct"),s=va(t,"v2","outerProduct");ie(1===n.rank&&1===s.rank,(()=>`Error in outerProduct: inputs must be rank 1, but got ranks ${n.rank} and ${s.rank}.`));const r=Dl(n,[-1,1]),a=Dl(s,[1,-1]);return zl(r,a)}}),Lc=Na({pad_:function(e,t,n=0){const s=va(e,"x","pad");if(0===s.rank)throw new Error("pad(scalar) is not defined. Pass non-scalar to pad");const r={paddings:t,constantValue:n},a={x:s};return pa.runKernel(jn,a,r)}}),zc=Na({pad1d_:function(e,t,n=0){return ie(2===t.length,(()=>"Invalid number of paddings. Must be length of 2.")),Lc(e,[t],n)}}),Bc=Na({pad2d_:function(e,t,n=0){return ie(2===t.length&&2===t[0].length&&2===t[1].length,(()=>"Invalid number of paddings. Must be length of 2 each.")),Lc(e,t,n)}}),Pc=Na({pad3d_:function(e,t,n=0){return ie(3===t.length&&2===t[0].length&&2===t[1].length&&2===t[2].length,(()=>"Invalid number of paddings. Must be length of 2 each.")),Lc(e,t,n)}}),Wc=Na({pad4d_:function(e,t,n=0){return ie(4===t.length&&2===t[0].length&&2===t[1].length&&2===t[2].length&&2===t[3].length,(()=>"Invalid number of paddings. Must be length of 2 each.")),Lc(e,t,n)}}),Vc=Na({spaceToBatchND_:function(e,t,n){const s=va(e,"x","spaceToBatchND");ie(s.rank>=1+t.length,(()=>`input rank ${s.rank} should be > than [blockShape] ${t.length}`)),ie(n.length===t.length,(()=>`paddings.shape[0] ${n.length} must be equal to [blockShape] ${t.length}`)),ie(s.shape.reduce(((e,s,r)=>r>0&&r<=t.length?e&&(s+n[r-1][0]+n[r-1][1])%t[r-1]===0:e),!0),(()=>`input spatial dimensions ${s.shape.slice(1)} with paddings ${n.toString()} must be divisible by blockShapes ${t.toString()}`));const r={x:s},a={blockShape:t,paddings:n};return pa.runKernel(Ns,r,a)}}),Uc=Na({pool_:function(e,t,n,s,r,a,i){null==r&&(r=[1,1]),null==a&&(a=1),0===s&&(s="valid");const o=va(e,"x","maxPool");let l=o,u=!1;3===o.rank&&(u=!0,l=Dl(o,[1,o.shape[0],o.shape[1],o.shape[2]])),ie(Al(a,r),(()=>`Error in pool: Either strides or dilations must be 1. Got strides ${a} and dilations '${r}'`));const c=wl(l.shape,t,a,r,s),h=[c.dilationHeight,c.dilationWidth];let d;d="same"===s?function(e,t){const n=e.map(((e,n)=>e+(e-1)*(t[n]-1))).map((e=>e-1)),s=n.map((e=>Math.floor(e/2))),r=n.map(((e,t)=>e-s[t]));return n.map(((e,t)=>[s[t],r[t]]))}([c.filterHeight,c.filterWidth],h):[[0,0],[0,0]];const p=1===h[0]&&1===h[1],[f,m]=function(e,t,n){const s=n.map((e=>e[0])),r=n.map((e=>e[1])),a=e.concat(s,r),i=t.map(((e,t)=>(e-a[t]%e)%e)),o=r.map(((e,t)=>e+i[t]));return[t.map(((e,t)=>[s[t],o[t]])),t.map(((e,t)=>[0,i[t]]))]}([c.inHeight,c.inWidth],h,d),g=p?s:"valid",y=p?l:Vc(l,h,f),b=("avg"===n?()=>Ol(y,t,a,g,i):()=>wc(y,t,a,g,i))(),x=p?b:Ul(b,h,m);return u?Dl(x,[x.shape[1],x.shape[2],x.shape[3]]):x}}),Gc=Na({prelu_:function(e,t){const n={x:va(e,"x","prelu"),alpha:va(t,"alpha","prelu")};return pa.runKernel(qn,n)}}),jc=Na({prod_:function(e,t=null,n=!1){let s=va(e,"x","prod");"bool"===s.dtype&&(s=zi(s,"int32"));const r={x:s},a={axis:t,keepDims:n};return pa.runKernel(Kn,r,a)}}),Hc=Na({raggedGather_:function(e,t,n,s){const r={paramsNestedSplits:e.map(((e,t)=>va(e,`tensors${t}`,"raggedGather","int32"))),paramsDenseValues:va(t,"paramsDenseValues","raggedGather"),indices:va(n,"indices","raggedGather","int32")},a={outputRaggedRank:s},i=pa.runKernel(Xn,r,a);return{outputNestedSplits:i.slice(0,i.length-1),outputDenseValues:i[i.length-1]}}}),qc=Na({raggedRange_:function(e,t,n){const s=va(e,"starts","raggedRange"),r={starts:s,limits:va(t,"limits","raggedRange",s.dtype),deltas:va(n,"deltas","raggedRange",s.dtype)},a=pa.runKernel(Yn,r);return{rtNestedSplits:a[0],rtDenseValues:a[1]}}}),Kc=Na({raggedTensorToTensor_:function(e,t,n,s,r){const a=va(e,"shape","raggedTensorToTensor","int32"),i=va(t,"values","raggedTensorToTensor"),o={shape:a,values:i,defaultValue:va(n,"defaultValue","raggedTensorToTensor",i.dtype),rowPartitionTensors:s.map(((e,t)=>va(e,`tensors${t}`,"raggedTensorToTensor","int32")))},l={rowPartitionTypes:r};return pa.runKernel(Jn,o,l)}}),Xc=Na({rand_:function(e,t,n){Fe(e);const s=ue(e);let r=null;if(null==n||"float32"===n)r=new Float32Array(s);else if("int32"===n)r=new Int32Array(s);else{if("bool"!==n)throw new Error(`Unknown data type ${n}`);r=new Uint8Array(s)}for(let e=0;e<s;e++)r[e]=t();return pa.makeTensor(r,e,n)}});var Yc=n(391);class Jc{constructor(e,t,n,s,r){this.mean=e,this.stdDev=t,this.dtype=n,this.nextVal=NaN,this.truncated=s,this.truncated&&(this.upper=this.mean+2*this.stdDev,this.lower=this.mean-2*this.stdDev);const a=r||Math.random();this.random=Yc.alea(a.toString())}nextValue(){if(!isNaN(this.nextVal)){const e=this.nextVal;return this.nextVal=NaN,e}let e,t,n=!1;for(;!n;){let s,r,a;do{s=2*this.random()-1,r=2*this.random()-1,a=s*s+r*r}while(a>=1||0===a);const i=Math.sqrt(-2*Math.log(a)/a);e=this.mean+this.stdDev*s*i,t=this.mean+this.stdDev*r*i,this.truncated&&!this.isValidTruncated(e)||(n=!0)}return this.truncated&&!this.isValidTruncated(t)||(this.nextVal=this.convertValue(t)),this.convertValue(e)}convertValue(e){return null==this.dtype||"float32"===this.dtype?e:Math.round(e)}isValidTruncated(e){return e<=this.upper&&e>=this.lower}}class Zc{constructor(e,t,n,s){this.alpha=e,this.beta=1/t,this.dtype=n;const r=s||Math.random();this.randu=Yc.alea(r.toString()),this.randn=new Jc(0,1,n,!1,this.randu()),this.d=e<1?e+2/3:e-1/3,this.c=1/Math.sqrt(9*this.d)}nextValue(){let e,t,n,s,r,a;for(;;){do{s=this.randn.nextValue(),a=1+this.c*s}while(a<=0);if(a*=a*a,e=s*s,t=1-.331*e*e,n=.5*e+this.d*(1-a+Math.log(a)),r=this.randu(),r<t||Math.log(r)<n)break}return a=1/this.beta*this.d*a,this.alpha<1&&(a*=Math.pow(this.randu(),1/this.alpha)),this.convertValue(a)}convertValue(e){return"float32"===this.dtype?e:Math.round(e)}}class Qc{constructor(e=0,t=1,n,s){if(this.canReturnFloat=()=>null==this.dtype||"float32"===this.dtype,this.min=e,this.range=t-e,this.dtype=n,null==s&&(s=Math.random()),"number"==typeof s&&(s=s.toString()),!this.canReturnFloat()&&this.range<=1)throw new Error(`The difference between ${e} - ${t} <= 1 and dtype is not float`);this.random=Yc.alea(s)}convertValue(e){return this.canReturnFloat()?e:Math.round(e)}nextValue(){return this.convertValue(this.min+this.range*this.random())}}const eh=Na({randomGamma_:function(e,t,n=1,s="float32",r){if(Fe(e),null==n&&(n=1),null==s&&(s="float32"),"float32"!==s&&"int32"!==s)throw new Error(`Unsupported data type ${s}`);const a=new Zc(t,n,s,r),i=Li(e,s);for(let e=0;e<i.values.length;e++)i.values[e]=a.nextValue();return i.toTensor()}}),th=Na({randomNormal_:function(e,t=0,n=1,s,r){if(Fe(e),null!=s&&"bool"===s)throw new Error(`Unsupported data type ${s}`);const a=new Jc(t,n,s,!1,r),i=Li(e,s);for(let e=0;e<i.values.length;e++)i.values[e]=a.nextValue();return i.toTensor()}}),nh=Na({randomStandardNormal_:function(e,t,n){if(null!=t&&"bool"===t)throw new Error(`Unsupported data type ${t}`);return th(e,0,1,t,n)}}),sh=Na({randomUniform_:function(e,t=0,n=1,s="float32",r){Fe(e);const a=Li(e,s),i=new Qc(t,n,null,r);for(let e=0;e<a.values.length;e++)a.values[e]=i.nextValue();return a.toTensor()}}),rh=Na({randomUniformInt_:function(e,t,n,s){return sh(e,t,n,"int32",s)}});function ah(e,t,n=1,s="float32"){if(0===n)throw new Error("Cannot have a step of zero");const r={start:e,stop:t,step:n,dtype:s};return pa.runKernel(Zn,{},r)}const ih=Na({real_:function(e){const t={input:va(e,"input","real")};return pa.runKernel(Qn,t)}}),oh=Na({reciprocal_:function(e){const t={x:va(e,"x","reciprocal")};return pa.runKernel(es,t)}}),lh=Na({relu_:function(e){const t={x:va(e,"x","relu")};return pa.runKernel(ts,t)}}),uh=Na({relu6_:function(e){const t={x:va(e,"x","relu6")};return pa.runKernel(os,t)}}),ch=Na({reverse_:function(e,t){const n={x:va(e,"x","reverse")},s={dims:t};return pa.runKernel(ls,n,s)}}),hh=Na({reverse1d_:function(e){const t=va(e,"x","reverse");return ie(1===t.rank,(()=>`Error in reverse1D: x must be rank 1 but got rank ${t.rank}.`)),ch(t,0)}}),dh=Na({reverse2d_:function(e,t){const n=va(e,"x","reverse");return ie(2===n.rank,(()=>`Error in reverse2D: x must be rank 2 but got rank ${n.rank}.`)),ch(n,t)}}),ph=Na({reverse3d_:function(e,t){const n=va(e,"x","reverse");return ie(3===n.rank,(()=>`Error in reverse3D: x must be rank 3 but got rank ${n.rank}.`)),ch(n,t)}}),fh=Na({reverse4d_:function(e,t){const n=va(e,"x","reverse");return ie(4===n.rank,(()=>`Error in reverse4D: x must be rank 4 but got rank ${n.rank}.`)),ch(n,t)}}),mh=Na({round_:function(e){const t={x:va(e,"x","round")};return pa.runKernel(us,t)}}),gh=Na({rsqrt_:function(e){const t={x:va(e,"x","rsqrt","float32")};return pa.runKernel(cs,t)}}),yh=Na({selu_:function(e){const t={x:va(e,"x","selu")};return pa.runKernel(ms,t)}}),bh=Na({separableConv2d_:function(e,t,n,s,r,a=[1,1],i="NHWC"){const o=va(e,"x","separableConv2d"),l=va(t,"depthwiseFilter","separableConv2d"),u=va(n,"pointwiseFilter","separableConv2d");let c=o,h=!1;if(3===o.rank&&(h=!0,c=Dl(o,[1,o.shape[0],o.shape[1],o.shape[2]])),"NCHW"===i)throw new Error("separableConv2d currently does not support dataFormat NCHW; only NHWC is supported");ie(4===c.rank,(()=>`Error in separableConv2d: input must be rank 4, but got rank ${c.rank}.`)),ie(4===l.rank,(()=>`Error in separableConv2d: depthwise filter must be rank 4, but got rank ${l.rank}.`)),ie(4===u.rank,(()=>`Error in separableConv2d: pointwise filter must be rank 4, but got rank ${l.rank}.`)),ie(1===u.shape[0],(()=>`Error in separableConv2d: the first dimension of pointwise filter  must be 1, but got ${u.shape[0]}.`)),ie(1===u.shape[1],(()=>`Error in separableConv2d: the second dimension of pointwise filter must be 1, but got ${u.shape[1]}.`));const d=l.shape[2],p=l.shape[3];ie(u.shape[2]===d*p,(()=>`Error in separableConv2d: the third dimension of pointwise filter must be ${d*p}, but got ${u.shape[2]}.`));const f=yu(c,l,s,r,i,a),m=ru(f,u,1,"valid",i);return h?Dl(m,[m.shape[1],m.shape[2],m.shape[3]]):m}}),xh=async function(e,t){const n=va(e,"x","setdiff1d"),s=va(t,"y","setdiff1d");ie(n.dtype===s.dtype,(()=>`x and y should have the same dtype, but got x (${n.dtype}) and y (${s.dtype}).`)),ie(1===n.rank,(()=>`x should be 1D tensor, but got x (${n.shape}).`)),ie(1===s.rank,(()=>`y should be 1D tensor, but got y (${s.shape}).`));const r=await n.data(),a=await s.data(),i=new Set(a);let o=0;for(let e=0;e<r.length;e++)i.has(r[e])||o++;const l=new Vr([o],n.dtype),u=new Vr([o],"int32");for(let e=0,t=0;e<r.length;e++)i.has(r[e])||(l.values[t]=r[e],u.values[t]=e,t++);return[l.toTensor(),u.toTensor()]},wh=Na({sign_:function(e){const t={x:va(e,"x","sign")};return pa.runKernel(xs,t)}}),vh=Na({sin_:function(e){const t={x:va(e,"x","sin","float32")};return pa.runKernel(ys,t)}}),kh=Na({sinh_:function(e){const t={x:va(e,"x","sinh")};return pa.runKernel(bs,t)}}),Ih=Na({slice1d_:function(e,t,n){const s=va(e,"x","slice1d");return ie(1===s.rank,(()=>`slice1d expects a rank-1 tensor, but got a rank-${s.rank} tensor`)),Pl(s,[t],[n])}}),Nh=Na({slice2d_:function(e,t,n){const s=va(e,"x","slice2d");return ie(2===s.rank,(()=>`slice2d expects a rank-2 tensor, but got a rank-${s.rank} tensor`)),Pl(s,t,n)}}),Sh=Na({slice3d_:function(e,t,n){const s=va(e,"x","slice3d");return ie(3===s.rank,(()=>`slice3d expects a rank-3 tensor, but got a rank-${s.rank} tensor`)),Pl(s,t,n)}}),Th=Na({slice4d_:function(e,t,n){const s=va(e,"x","slice4d");return ie(4===s.rank,(()=>`slice4d expects a rank-4 tensor, but got a rank-${s.rank} tensor`)),Pl(s,t,n)}}),Ch=Na({softmax_:function(e,t=-1){const n=va(e,"logits","softmax","float32");if(-1===t&&(t=n.rank-1),t!==n.rank-1)throw Error(`Softmax along a non-last dimension is not yet supported. Logits was rank ${n.rank} and dim was ${t}`);const s={logits:n},r={dim:t};return pa.runKernel(Ts,s,r)}}),$h=Na({fft_:function(e){ie("complex64"===e.dtype,(()=>`The dtype for tf.spectral.fft() must be complex64 but got ${e.dtype}.`));const t={input:e};return pa.runKernel(Xt,t)}}),Eh=Na({ifft_:function(e){ie("complex64"===e.dtype,(()=>`The dtype for tf.spectral.ifft() must be complex64 but got ${e.dtype}.`));const t={input:e};return pa.runKernel(on,t)}}),Ah=Na({irfft_:function(e){const t=e.shape[e.shape.length-1],n=e.size/t;let s;if(t<=2){const r=Dl(e,[n,t]);s=Eh(r)}else{const r=[n,2*(t-1)],a=Dl(ih(e),[n,t]),i=Dl(Ju(e),[n,t]),o=ch(Pl(a,[0,1],[n,t-2]),1),l=Gi(ch(Pl(i,[0,1],[n,t-2]),1),Xi(-1)),u=Ll([a,o],1),c=Ll([i,l],1),h=Dl(Sa(u,c),[r[0],r[1]]);s=Eh(h)}if(s=ih(s),3===e.rank&&0!==e.shape[0]){const t=s,n=e.shape[0];s=Dl(s,[n,s.shape[0]/n,s.shape[1]]),t.dispose()}return s}}),Rh=Na({split_:function(e,t,n=0){const s={x:va(e,"x","split")},r={numOrSizeSplits:t,axis:n};return pa.runKernel(Ss,s,r)}}),_h=Na({rfft_:function(e,t){ie("float32"===e.dtype,(()=>`The dtype for rfft() must be real value but got ${e.dtype}`));let n=e.shape[e.shape.length-1];const s=e.size/n;let r;if(null!=t&&t<n){const s=e.shape.map((e=>0)),a=e.shape.map((e=>e));a[e.shape.length-1]=t,r=Pl(e,s,a),n=t}else if(null!=t&&t>n){const s=e.shape.map((e=>e));s[e.shape.length-1]=t-n,r=Ll([e,Nc(s)],e.shape.length-1),n=t}else r=e;const a=qi(r),i=Dl(Sa(r,a),[s,n]),o=$h(i),l=Math.floor(n/2)+1,u=ih(o),c=Ju(o),h=Rh(u,[l,n-l],u.shape.length-1),d=Rh(c,[l,n-l],c.shape.length-1),p=r.shape.slice();return p[r.shape.length-1]=l,Dl(Sa(h[0],d[0]),p)}}),Fh=Na({squaredDifference_:function(e,t){let n=va(e,"a","squaredDifference"),s=va(t,"b","squaredDifference");[n,s]=aa(n,s),ho(n.shape,s.shape);const r={a:n,b:s};return pa.runKernel(_s,r,{})}}),Dh=Na({squeeze_:function(e,t){const n=va(e,"x","squeeze","string_or_numeric");return Dl(n,ye(n.shape,t).newShape)}}),Oh=Na({stack_:function(e,t=0){const n=ka(e,"tensors","stack","string_or_numeric");ie(n.length>=1,(()=>"Pass at least one tensor to tf.stack")),n.length>0&&ie(t<=n[0].rank,(()=>"Axis must be <= rank of the tensor"));const s=n,r={axis:t};return pa.runKernel(Gn,s,r)}}),Mh=Na({step_:function(e,t=0){const n={x:va(e,"x","step")},s={alpha:t};return pa.runKernel(Ys,n,s)}}),Lh=Na({stridedSlice_:function(e,t,n,s,r=0,a=0,i=0,o=0,l=0){const u={x:va(e,"x","stridedSlice","string_or_numeric")},c={begin:t,end:n,strides:s,beginMask:r,endMask:a,ellipsisMask:i,newAxisMask:o,shrinkAxisMask:l};return pa.runKernel(Os,u,c)}}),zh=Na({tan_:function(e){const t={x:va(e,"x","tan","float32")};return pa.runKernel(Ps,t)}});function Bh(e,t){le(e);const n=ba(e,t);if(1!==n.length)throw new Error("tensor1d() requires values to be a flat/TypedArray");return Ta(e,null,n,t)}function Ph(e,t,n){if(le(e),null!=t&&2!==t.length)throw new Error("tensor2d() requires shape to have two numbers");const s=ba(e,n);if(2!==s.length&&1!==s.length)throw new Error("tensor2d() requires values to be number[][] or flat/TypedArray");if(1===s.length&&null==t)throw new Error("tensor2d() requires shape to be provided when `values` are a flat/TypedArray");return Ta(e,t,s,n)}function Wh(e,t,n){if(le(e),null!=t&&4!==t.length)throw new Error("tensor4d() requires shape to have four numbers");const s=ba(e,n);if(4!==s.length&&1!==s.length)throw new Error("tensor4d() requires values to be number[][][][] or flat/TypedArray");if(1===s.length&&null==t)throw new Error("tensor4d() requires shape to be provided when `values` are a flat array");return Ta(e,t,s,n)}function Vh(e,t,n){if(le(e),null!=t&&5!==t.length)throw new Error("tensor5d() requires shape to have five numbers");const s=ba(e,n);if(5!==s.length&&1!==s.length)throw new Error("tensor5d() requires values to be number[][][][][] or flat/TypedArray");if(1===s.length&&null==t)throw new Error("tensor5d() requires shape to be provided when `values` are a flat array");return Ta(e,t,s,n)}function Uh(e,t,n){if(le(e),null!=t&&6!==t.length)throw new Error("tensor6d() requires shape to have six numbers");const s=ba(e,n);if(6!==s.length&&1!==s.length)throw new Error("tensor6d() requires values to be number[][][][][][] or flat/TypedArray");if(1===s.length&&null==t)throw new Error("tensor6d() requires shape to be provided when `values` are a flat array");return Ta(e,t=t||s,s,n)}function Gh(e,t,n){const s=t.rank>1?t.shape[t.rank-1]:1,r=t.rank>1?t.rank-1:1,a=`Must have updates.shape = indices.shape[:batchDim] + shape[sliceDim:], got updates.shape: ${n.shape}, indices.shape: ${t.shape}, shape: ${e}, sliceDim: ${s}, and batchDim: ${r}.`;if(n.rank<r)throw new Error(a+` update.rank < ${r}. `);if(e.length<s+(n.rank-r))throw new Error(a+` Output shape length < ${s+(n.rank-r)}`);if(n.rank!==r+e.length-s)throw new Error(a+" update.rank != "+(r+e.length-s));for(let e=0;e<r;++e)if(n.shape[e]!==t.shape[e])throw new Error(a+` updates.shape[${e}] (${n.shape[e]}) != indices.shape[${e}] (${t.shape[e]}).`);for(let t=0;t<n.rank-r;++t)if(n.shape[t+r]!==e[t+s])throw new Error(a+` updates.shape[${t+r}] (${n.shape[t+r]}) != shape[${t+r}] (${e[t+r]})`)}function jh(e,t,n){if(t.rank<1)throw new Error(`tf.scatterND() expects the indices to be rank 1 or higher, but the rank was ${t.rank}.`);if(e.rank<1)throw new Error(`tf.scatterND() expects the updates to be rank 1 or higher, but the rank was ${e.rank}.`);if("int32"!==t.dtype)throw new Error(`The dtype of 'indices' should be int32, but got dtype: ${t.dtype}`);if(n.length<1)throw new Error(`Output rank must be greater or equal to 1, but got shape: ${n}`);if(0===n.length){if(0===t.size)throw new Error(`Indices specified for empty output. indices shape: ${t.shape}`);if(0===e.size)throw new Error(`Updates specified for empty output. updates shape: ${e.shape}`)}Gh(n,t,e)}function Hh(e,t,n){const s=t.shape.length,r=s>1?t.shape[s-1]:1,a=n.length;let i=1;for(let e=r;e<a;++e)i*=n[e];const o=r<1?1:r;return{sliceRank:r,numUpdates:ue(t.shape)/o,sliceSize:i,strides:[...Ce(n.slice(0,r)),1],outputSize:ue(n)}}const qh=Na({tensorScatterUpdate_:function(e,t,n){const s=va(e,"tensor","tensorScatterupdate"),r=va(t,"indices","tensorScatterupdate","int32"),a=va(n,"updates","tensorScatterupdate");if(jh(a,r,s.shape),s.dtype!==a.dtype)throw new Error(`tensor and updates must have the same dtype, instead they are ${s.dtype} and ${a.dtype}.`);const i={tensor:s,indices:r,updates:a};return pa.runKernel(ds,i,{})}}),Kh=Na({topk_:function(e,t=1,n=!0){const s=va(e,"x","topk");if(0===s.rank)throw new Error("topk() expects the input to be of rank 1 or higher");const r=s.shape[s.shape.length-1];if(t<0)throw new Error(`'k' passed to topk() must be >= 0 but got ${t}`);if(t>r)throw new Error(`'k' passed to topk() must be <= the last dimension (${r}) but got ${t}`);const a={x:s},i={k:t,sorted:n},[o,l]=pa.runKernel(Us,a,i);return{values:o,indices:l}}}),Xh=Na({truncatedNormal_:function(e,t=0,n=1,s,r){if(Fe(e),null!=s&&"bool"===s)throw new Error("Unsupported data type $ { dtype }");const a=new Jc(t,n,s,!0,r),i=Li(e,s);for(let e=0;e<i.values.length;e++)i.values[e]=a.nextValue();return i.toTensor()}}),Yh=Na({unique_:function(e,t=0){const n=va(e,"x","unique","string_or_numeric");ie(n.rank>0,(()=>"The input tensor must be at least 1D"));const s={x:n},r={axis:t},[a,i]=pa.runKernel(Hs,s,r);return{values:a,indices:i}}}),Jh=Na({unsortedSegmentSum_:function(e,t,n){const s=va(e,"x","unsortedSegmentSum"),r=va(t,"segmentIds","unsortedSegmentSum","int32");ie(he(n),(()=>"numSegments must be of dtype int"));const a={x:s,segmentIds:r},i={numSegments:n};return pa.runKernel(Ks,a,i)}}),Zh=Na({unstack_:function(e,t=0){const n=va(e,"x","unstack","string_or_numeric");ie(t>=-n.shape.length&&t<n.shape.length,(()=>`Axis = ${t} is not in [-${n.shape.length}, ${n.shape.length})`));const s={value:n},r={axis:t};return pa.runKernel(qs,s,r)}});function Qh(e,t){return bc(e,t,"right")}function ed(e,t=!0,n,s){return pa.makeVariable(e,t,n,s)}function td(e,t){const n=[];for(let e=0;e<t.length;e++)t[e]&&n.push(e);const s=Li(e,"int32"),r=Li([n.length,e.length],"int32");for(let t=0;t<n.length;t++){const a=s.indexToLoc(n[t]),i=t*e.length;r.values.set(a,i)}return r.toTensor()}const nd=async function(e){const t=va(e,"condition","whereAsync","bool"),n=await t.data(),s=td(t.shape,n);return e!==t&&t.dispose(),s},sd=async function(e,t,n){const s=va(e,"tensor","boolMask"),r=va(t,"mask","boolMask","bool"),a=null==n?0:n,i=r.rank,o=s.shape;ie(i>0,(()=>"mask cannot be scalar")),oe(o.slice(a,a+i),r.shape,"mask's shape must match the first K dimensions of tensor's shape,");let l=1;for(let e=a;e<a+i;e++)l*=o[e];const u=o.slice(0,a).concat([l],o.slice(a+i)),c=Dl(s,u),h=Dl(r,[-1]),d=await nd(h),p=Dh(d,[1]),f=Ku(c,p,a);return e!==s&&s.dispose(),t!==r&&r.dispose(),p.dispose(),c.dispose(),h.dispose(),d.dispose(),f},rd=Na({transpose_:function(e,t,n){const s=va(e,"x","transpose");if(null==t&&(t=s.shape.map(((e,t)=>t)).reverse()),ie(s.rank===t.length,(()=>`Error in transpose: rank of input ${s.rank} must match length of perm ${t}.`)),t.forEach((e=>{ie(e>=0&&e<s.rank,(()=>"All entries in 'perm' must be between 0 and "+(s.rank-1)+` but got ${t}`))})),s.rank<=1)return s.clone();const r={x:s},a={perm:t};return"complex64"===s.dtype?_a((()=>{let e=ih(s),t=Ju(s);return e=pa.runKernel(js,{x:e},a),t=pa.runKernel(js,{x:t},a),n&&(t=lc(t)),Sa(e,t)})):pa.runKernel(js,r,a)}}),ad=Na({movingAverage_:function(e,t,n,s,r=!0){const a=va(e,"v","movingAverage"),i=va(t,"x","movingAverage"),o=va(n,"decay","movingAverage");var l,u;u=i,ie((l=a).dtype===u.dtype,(()=>`The dtypes of the first(${l.dtype}) and second(${u.dtype}) input must match`)),ie(ce(a.shape,i.shape),(()=>"Shape mismatch in v and x"));const c=Xi(1),h=io(c,o);let d=Gi(io(i,a),h);if(r){ie(null!=s,(()=>"When using zeroDebias: true, step is required."));const e=va(s,"step","movingAverage");d=Ui(d,io(c,ao(o,e)))}return Wi(a,d)}}),id=Na({scatterND_:function(e,t,n){Fe(n);const s=va(e,"indices","scatterND","int32"),r=va(t,"updates","scatterND");jh(r,s,n);const a={indices:s,updates:r},i={shape:n};return pa.runKernel(hs,a,i)}}),od=Na({sparseToDense_:function(e,t,n,s=0){Fe(n);const r=va(e,"sparseIndices","sparseToDense","int32"),a=va(t,"sparseValues","sparseToDense","string_or_numeric"),i=va(s,"defaultValue","sparseToDense",a.dtype);!function(e,t,n,s){if("int32"!==e.dtype)throw new Error(`tf.sparseToDense() expects the indices to be int32 type, but the dtype was ${e.dtype}.`);if(e.rank>2)throw new Error(`sparseIndices should be a scalar, vector, or matrix, but got shape ${e.shape}.`);const r=e.rank>0?e.shape[0]:1,a=e.rank>1?e.shape[1]:1;if(n.length!==a)throw new Error(`outputShape has incorrect number of elements:, ${n.length}, should be: ${a}.`);const i=t.size;if(0!==t.rank&&(1!==t.rank||i!==r))throw new Error(`sparseValues has incorrect shape ${t.shape}, should be [] or [${r}]`);if(t.dtype!==s.dtype)throw new Error("sparseValues.dtype must match defaultValues.dtype")}(r,a,n,i);const o={sparseIndices:r,sparseValues:a,defaultValue:i},l={outputShape:n};return pa.runKernel(Rs,o,l)}}),ld=Na({gatherND_:function(e,t){const n=va(t,"indices","gatherND","int32"),s={params:va(e,"x","gatherND","string_or_numeric"),indices:n};return pa.runKernel(nn,s)}}),ud=Na({dropout_:function(e,t,n,s){const r=va(e,"x","dropout");if(ie("float32"===r.dtype,(()=>`x has to be a floating point tensor since it's going to be scaled, but got a ${r.dtype} tensor instead.`)),ie(t>=0&&t<1,(()=>`rate must be a float in the range [0, 1), but got ${t}.`)),0===t)return e instanceof Hr?r.clone():r;const a=function(e,t){if(null==t)return e.shape.slice();if(ce(e.shape,t))return t;if(e.shape.length===t.length){const n=[];for(let s=0;s<e.shape.length;s++)null==t[s]&&null!=e.shape[s]?n.push(e.shape[s]):n.push(t[s]);return n}return t}(r,n),i=1-t,o=Ui(qu(Wi(sh(a,0,1,"float32",s),i)),i);return Gi(r,o)}});function cd(e){return Math.floor(Math.pow(2,Math.ceil(Math.log(e)/Math.log(2))))}function hd(e,t,n){const s=1-e%2,r=new Float32Array(e);for(let a=0;a<e;++a){const i=2*Math.PI*a/(e+s-1);r[a]=t-n*Math.cos(i)}return Bh(r,"float32")}const dd=async function(e,t,n=1){const s=va(e,"predictions","inTopK"),r=va(t,"targets","inTopK");ie(s.rank>1,(()=>`inTopK() expects the predictions to be of rank 2 or higher, but got ${s.rank}`)),ie(s.rank-1===r.rank,(()=>`predictions rank should be 1 larger than targets rank, but got predictions rank ${s.rank} and targets rank ${r.rank}`)),oe(s.shape.slice(0,s.shape.length-1),r.shape,"predictions's shape should be align with the targets' shape, except the last dimension.");const a=s.shape[s.shape.length-1];ie(n>0&&n<=a,(()=>`'k' passed to inTopK() must be > 0 && <= the predictions last dimension (${a}), but got ${n}`));const i=await s.data(),o=await r.data(),[l,u]=[i.length/a,a],c=be("bool",l);for(let e=0;e<l;e++){const t=e*u,s=i.subarray(t,t+u),r=[];for(let e=0;e<s.length;e++)r.push({value:s[e],index:e});r.sort(((e,t)=>t.value-e.value)),c[e]=0;for(let t=0;t<n;t++)if(r[t].index===o[e]){c[e]=1;break}}return e!==s&&s.dispose(),t!==r&&r.dispose(),Ca(c,r.shape,"bool")},pd=Na({conv2DBackpropFilter_:function(e,t,n,s,r,a="NHWC",i){let o=e;3===e.rank&&(o=Dl(e,[1,e.shape[0],e.shape[1],e.shape[2]]));let l=t;3===l.rank&&(l=Dl(t,[1,t.shape[0],t.shape[1],t.shape[2]])),ie(4===o.rank,(()=>`Error in conv2dDerFilter: input must be rank 4, but got shape ${o.shape}.`)),ie(4===l.rank,(()=>`Error in conv2dDerFilter: dy must be rank 4, but got shape ${l.shape}.`)),ie(4===n.length,(()=>`Error in conv2dDerFilter: filterShape must be length 4, but got ${n}.`));const u="NHWC"===a?o.shape[3]:o.shape[1],c="NHWC"===a?l.shape[3]:l.shape[1];ie(u===n[2],(()=>`Error in conv2dDerFilter: depth of input ${u}) must match input depth in filter (${n[2]}.`)),ie(c===n[3],(()=>`Error in conv2dDerFilter: depth of dy (${c}) must match output depth for filter (${n[3]}).`)),Fl("conv2dDerFilter",r,i);const h={x:o,dy:l},d={strides:s,pad:r,dataFormat:a,dimRoundingMode:i,filterShape:n};return pa.runKernel(vt,h,d)}});function fd(e,t,n){if(null==n||"linear"===n)return e;if("relu"===n)return Gi(e,Mh(t));throw new Error(`Cannot compute gradient for fused activation ${n}.`)}function md(e,t){let n=t;const s=co(e.shape,t.shape);return s.length>0&&(n=zu(n,s)),Dl(n,e.shape)}function gd(e,t,n,s){if("linear"===t)return e;if("relu"===t)return lh(e);if("elu"===t)return Su(e);if("relu6"===t)return uh(e);if("prelu"===t)return Gc(e,n);if("leakyrelu"===t)return tc(e,s);if("sigmoid"===t)return Bl(e);throw new Error(`Unknown fused activation ${t}.`)}const yd=(e,t)=>!(e>0)||"linear"===t,bd=Na({fusedConv2d_:function({x:e,filter:t,strides:n,pad:s,dataFormat:r="NHWC",dilations:a=[1,1],dimRoundingMode:i,bias:o,activation:l="linear",preluActivationWeights:u,leakyreluAlpha:c}){if(l=l||"linear",!1===yd(pa.state.gradientDepth,l)){ie("NHWC"===r,(()=>`Error in fused conv2d: got dataFormat of ${r} but only NHWC is currently supported for the case of gradient depth is 0 and the activation is not linear.`));let h=ru(e,t,n,s,r,a,i);return null!=o&&(h=Wi(h,o)),gd(h,l,u,c)}const h=va(e,"x","conv2d","float32"),d=va(t,"filter","conv2d","float32");let p=h,f=!1;3===h.rank&&(f=!0,p=Dl(h,[1,h.shape[0],h.shape[1],h.shape[2]])),ie(4===p.rank,(()=>`Error in fused conv2d: input must be rank 4, but got rank ${p.rank}.`)),ie(4===d.rank,(()=>`Error in fused conv2d: filter must be rank 4, but got rank ${d.rank}.`)),Fl("fused conv2d",s,i);const m="NHWC"===r?p.shape[3]:p.shape[1];ie(d.shape[2]===m,(()=>`Error in conv2d: depth of input (${m}) must match input depth for filter ${d.shape[2]}.`)),ie(Al(n,a),(()=>`Error in conv2D: Either strides or dilations must be 1. Got strides ${n} and dilations '${a}'`));const g=kl(p.shape,d.shape,n,a,s,i);let y,b;if(null!=o&&(y=va(o,"bias","fused conv2d"),[y]=aa(y,h),"NHWC"===r?ho(g.outShape,y.shape):(ie(y.shape.length<=1,(()=>`Error in fused conv2d: only supports scalar or 1-D Tensor bias for NCHW format but got the bias of rank-${y.shape.length}.`)),ie(0===y.shape.length||y.shape[0]===g.outChannels||1===y.shape[0],(()=>`Error in fused conv2d: bias shape (${y.shape}) is not compatible with the number of output channels (${g.outChannels})`)))),null!=u){const e=u.shape;if(ie(e.length<=1||3===e.length,(()=>`Error in fused conv2d: only supports scalar, 1-D Tensor or 3-D Tensor PReLU activation weights but got a tensor of rank-${e.length}.`)),1===e.length)ie(1===e[0]||e[0]===g.outChannels,(()=>`Error in fused conv2d: PReLU activation weights (${e}) is not compatible with the number of output channels (${g.outChannels}).`));else if(3===e.length)try{ho(e,g.outShape)}catch(t){const n=`Error in fused conv2d: PReLU activation weights (${e}) is not compatible with the output shape of the conv2d (${g.outShape}).`;throw Error(n)}b=va(u,"prelu weights","fused conv2d")}const x=(e,t)=>{ie("NHWC"===r,(()=>`Error in gradient of fused conv2D: got dataFormat of ${r} but only NHWC is currently supported.`));const[i,o,u,c]=t,h=fd(e,u,l);ie(El(a),(()=>`Error in gradient of fused conv2D: dilation rates greater than 1 are not yet supported in gradients. Got dilations '${a}'`));const d=[iu(o.shape,h,i,n,s),pd(o,h,i.shape,n,s)];if(null!=c){const e=md(c,h);d.push(e)}return d},w={x:p,filter:d,bias:y,preluActivationWeights:b},v={strides:n,pad:s,dataFormat:r,dilations:a,dimRoundingMode:i,activation:l,leakyreluAlpha:c};if(null==o){const e=Ki(((e,t,n)=>{let s=pa.runKernel(er,w,v);return n([t,e,s]),f&&(s=Dl(s,[s.shape[1],s.shape[2],s.shape[3]])),{value:s,gradFunc:x}}));return e(p,d)}{const e=Ki(((e,t,n,s)=>{let r=pa.runKernel(er,w,v);return s([t,e,r,n]),f&&(r=Dl(r,[r.shape[1],r.shape[2],r.shape[3]])),{value:r,gradFunc:x}}));return e(p,d,y)}}}),xd=Na({depthwiseConv2dNativeBackpropFilter_:function(e,t,n,s,r,a=[1,1],i){let o=e;3===e.rank&&(o=Dl(e,[1,e.shape[0],e.shape[1],e.shape[2]]));let l=t;3===l.rank&&(l=Dl(t,[1,t.shape[0],t.shape[1],t.shape[2]]));const u={x:o,dy:l},c={strides:s,pad:r,dimRoundingMode:i,dilations:a,filterShape:n};return pa.runKernel(Dt,u,c)}}),wd=Na({depthwiseConv2dNativeBackpropInput_:function(e,t,n,s,r,a=[1,1],i){let o=t,l=!1;3===t.rank&&(l=!0,o=Dl(t,[1,t.shape[0],t.shape[1],t.shape[2]]));const u={dy:o,filter:n},c={strides:s,pad:r,dimRoundingMode:i,dilations:a,inputShape:e},h=pa.runKernel(Ot,u,c);return l?Dl(h,[h.shape[1],h.shape[2],h.shape[3]]):h}}),vd=Na({fusedDepthwiseConv2d_:function({x:e,filter:t,strides:n,pad:s,dataFormat:r="NHWC",dilations:a=[1,1],dimRoundingMode:i,bias:o,activation:l="linear",preluActivationWeights:u,leakyreluAlpha:c}){if(!1===yd(pa.state.gradientDepth,l)){let h=yu(e,t,n,s,r,a,i);return null!=o&&(h=Wi(h,o)),gd(h,l,u,c)}const h=va(e,"x","depthwiseConv2d","float32"),d=va(t,"filter","depthwiseConv2d","float32");let p=h,f=!1;3===h.rank&&(f=!0,p=Dl(h,[1,h.shape[0],h.shape[1],h.shape[2]])),ie(4===p.rank,(()=>`Error in fused depthwiseConv2d: input must be rank 4, but got rank ${p.rank}.`)),ie(4===d.rank,(()=>`Error in fused depthwiseConv2d: filter must be rank 4, but got rank ${d.rank}.`)),ie(p.shape[3]===d.shape[2],(()=>`Error in fused depthwiseConv2d: number of input channels (${p.shape[3]}) must match the inChannels dimension in filter ${d.shape[2]}.`)),null==a&&(a=[1,1]),ie(Al(n,a),(()=>`Error in fused depthwiseConv2d: Either strides or dilations must be 1. Got strides ${n} and dilations '${a}'`)),Fl("fused depthwiseConv2d",s,i);const m=kl(p.shape,d.shape,n,a,s,i,!0);let g,y;null!=o&&(g=va(o,"bias","fused conv2d"),[g]=aa(g,h),ho(m.outShape,g.shape)),null!=u&&(y=va(u,"prelu weights","fused depthwiseConv2d"));const b=(e,t)=>{ie(El(a),(()=>`Error in gradient of fused depthwiseConv2d: dilation rates greater than 1 are not yet supported. Got dilations '${a}'`));const[r,o,u,c]=t,h=fd(e,u,l),d=wd(o.shape,h,r,n,s,a,i),p=xd(o,h,r.shape,n,s,a,i);return null!=c?[d,p,md(g,h)]:[d,p]},x={x:p,filter:d,bias:g,preluActivationWeights:y},w={strides:n,pad:s,dataFormat:r,dilations:a,dimRoundingMode:i,activation:l,leakyreluAlpha:c};if(null==o){const e=Ki(((e,t,n)=>{let s=pa.runKernel(tr,x,w);return n([t,e,s]),f&&(s=Dl(s,[s.shape[1],s.shape[2],s.shape[3]])),{value:s,gradFunc:b}}));return e(p,d)}{const e=Ki(((e,t,n,s)=>{let r=pa.runKernel(tr,x,w);return s([t,e,r,n]),f&&(r=Dl(r,[r.shape[1],r.shape[2],r.shape[3]])),{value:r,gradFunc:b}}));return e(p,d,g)}}}),kd=Na({fusedMatMul_:function({a:e,b:t,transposeA:n=!1,transposeB:s=!1,bias:r,activation:a="linear",preluActivationWeights:i,leakyreluAlpha:o=.2}){if(!1===yd(pa.state.gradientDepth,a)){let l=zl(e,t,n,s);return null!=r&&(l=Wi(l,r)),gd(l,a,i,o)}let l=va(e,"a","fused matMul"),u=va(t,"b","fused matMul");[l,u]=aa(l,u);const c=n?l.shape[l.rank-2]:l.shape[l.rank-1],h=s?u.shape[u.rank-1]:u.shape[u.rank-2],d=n?l.shape[l.rank-1]:l.shape[l.rank-2],p=s?u.shape[u.rank-2]:u.shape[u.rank-1],f=l.shape.slice(0,-2),m=u.shape.slice(0,-2),g=ue(f),y=ue(m);ie(c===h,(()=>`Error in fused matMul: inner shapes (${c}) and (${h}) of Tensors with shapes ${l.shape} and ${u.shape} and transposeA=${n} and transposeB=${s} must match.`));const b=ho(l.shape.slice(0,-2),u.shape.slice(0,-2)).concat([d,p]),x=Dl(l,n?[g,c,d]:[g,d,c]),w=Dl(u,s?[y,p,h]:[y,h,p]);let v,k;null!=r&&(v=va(r,"bias","fused matMul"),[v]=aa(v,l),ho(b,v.shape)),null!=i&&(k=va(i,"prelu weights","fused matMul"));const I=(e,t)=>{const[i,o,l,u]=t,c=fd(Dl(e,l.shape),l,a);let h,d;return n||s?!n&&s?(h=zl(c,o,!1,!1),d=zl(c,i,!0,!1)):n&&!s?(h=zl(o,c,!1,!0),d=zl(i,c,!1,!1)):(h=zl(o,c,!0,!0),d=zl(c,i,!0,!0)):(h=zl(c,o,!1,!0),d=zl(i,c,!0,!1)),null!=r?[h,d,md(u,c)]:[h,d]},N={a:x,b:w,bias:v,preluActivationWeights:k},S={transposeA:n,transposeB:s,activation:a,leakyreluAlpha:o};if(null==r){const e=Ki(((e,t,n)=>{const s=pa.runKernel(Qs,N,S);return n([e,t,s]),{value:Dl(s,b),gradFunc:I}}));return e(x,w)}{const e=Ki(((e,t,n,s)=>{const r=pa.runKernel(Qs,N,S);return s([e,t,r,n]),{value:Dl(r,b),gradFunc:I}}));return e(x,w,v)}}}),Id=Na({hammingWindow_:function(e){return hd(e,.54,.46)}}),Nd=Na({hannWindow_:function(e){return hd(e,.5,.5)}}),Sd=Na({frame_:function(e,t,n,s=!1,r=0){let a=0;const i=[];for(;a+t<=e.size;)i.push(Pl(e,a,t)),a+=n;if(s)for(;a<e.size;){const s=a+t-e.size,o=Ll([Pl(e,a,t-s),so([s],r)]);i.push(o),a+=n}return 0===i.length?Ph([],[0,t]):Dl(Ll(i),[i.length,t])}}),Td=Na({stft_:function(e,t,n,s,r=Nd){null==s&&(s=cd(t));const a=Sd(e,t,n),i=Gi(a,r(t));return _h(i,s)}}),Cd=Na({cropAndResize_:function(e,t,n,s,r="bilinear",a=0){const i=va(e,"image","cropAndResize"),o=va(t,"boxes","cropAndResize","float32"),l=va(n,"boxInd","cropAndResize","int32"),u=o.shape[0];ie(4===i.rank,(()=>`Error in cropAndResize: image must be rank 4,but got rank ${i.rank}.`)),ie(2===o.rank&&4===o.shape[1],(()=>`Error in cropAndResize: boxes must be have size [${u},4] but had shape ${o.shape}.`)),ie(1===l.rank&&l.shape[0]===u,(()=>`Error in cropAndResize: boxInd must be have size [${u}] but had shape ${o.shape}.`)),ie(2===s.length,(()=>`Error in cropAndResize: cropSize must be of length 2, but got length ${s.length}.`)),ie(s[0]>=1&&s[1]>=1,(()=>`cropSize must be atleast [1,1], but was ${s}`)),ie("bilinear"===r||"nearest"===r,(()=>`method must be bilinear or nearest, but was ${r}`));const c={image:i,boxes:o,boxInd:l},h={method:r,extrapolationValue:a,cropSize:s};return pa.runKernel(At,c,h)}}),$d=Na({flipLeftRight_:function(e){const t=va(e,"image","flipLeftRight","float32");ie(4===t.rank,(()=>`Error in flipLeftRight: image must be rank 4,but got rank ${t.rank}.`));const n={image:t};return pa.runKernel(Jt,n,{})}}),Ed=Na({grayscaleToRGB_:function(e){const t=va(e,"image","grayscaleToRGB"),n=t.rank-1,s=t.shape[n];ie(t.rank>=2,(()=>`Error in grayscaleToRGB: images must be at least rank 2, but got rank ${t.rank}.`)),ie(1===s,(()=>`Error in grayscaleToRGB: last dimension of a grayscale image should be size 1, but got size ${s}.`));const r=new Array(t.rank);return r.fill(1,0,n),r[n]=3,ju(t,r)}}),Ad=Na({rgbToGrayscale_:function(e){const t=va(e,"image","RGBToGrayscale"),n=t.rank-1,s=t.shape[n];ie(t.rank>=2,(()=>`Error in RGBToGrayscale: images must be at least rank 2, but got rank ${t.rank}.`)),ie(3===s,(()=>`Error in RGBToGrayscale: last dimension of an RGB image should be size 3, but got size ${s}.`));const r=t.dtype,a=zi(t,"float32"),i=Bh([.2989,.587,.114]);let o;switch(t.rank){case 2:o=Nu("ij,j->i",a,i);break;case 3:o=Nu("ijk,k->ij",a,i);break;case 4:o=Nu("ijkl,l->ijk",a,i);break;case 5:o=Nu("ijklm,m->ijkl",a,i);break;case 6:o=Nu("ijklmn,n->ijklm",a,i);break;default:throw new Error("Not a valid tensor rank.")}return o=Uu(o,-1),zi(o,r)}}),Rd=Na({rotateWithOffset_:function(e,t,n=0,s=.5){const r=va(e,"image","rotateWithOffset","float32");ie(4===r.rank,(()=>`Error in rotateWithOffset: image must be rank 4,but got rank ${r.rank}.`));const a={image:r},i={radians:t,fillValue:n,center:s};return pa.runKernel(Zs,a,i)}});function _d(e,t,n,s,r,a){null==s&&(s=.5),null==r&&(r=Number.NEGATIVE_INFINITY),null==a&&(a=0);const i=e.shape[0];return n=Math.min(n,i),ie(0<=s&&s<=1,(()=>`iouThreshold must be in [0, 1], but was '${s}'`)),ie(2===e.rank,(()=>`boxes must be a 2D tensor, but was of rank '${e.rank}'`)),ie(4===e.shape[1],(()=>`boxes must have 4 columns, but 2nd dimension was ${e.shape[1]}`)),ie(1===t.rank,(()=>"scores must be a 1D tensor")),ie(t.shape[0]===i,(()=>`scores has incompatible shape with boxes. Expected ${i}, but was ${t.shape[0]}`)),ie(0<=a&&a<=1,(()=>`softNmsSigma must be in [0, 1], but was '${a}'`)),{maxOutputSize:n,iouThreshold:s,scoreThreshold:r,softNmsSigma:a}}const Fd=Na({nonMaxSuppression_:function(e,t,n,s=.5,r=Number.NEGATIVE_INFINITY){const a=va(e,"boxes","nonMaxSuppression","float32"),i=va(t,"scores","nonMaxSuppression","float32"),o=_d(a,i,n,s,r),l={maxOutputSize:n=o.maxOutputSize,iouThreshold:s=o.iouThreshold,scoreThreshold:r=o.scoreThreshold};return pa.runKernel(Bn,{boxes:a,scores:i},l)}});function Dd(e,t,n){const s=function(e,t,n){return function(e,t,n){let s=0,r=e.length,a=0,i=!1;for(;s<r;){a=s+(r-s>>>1);const o=n(t,e[a]);o>0?s=a+1:(r=a,i=!o)}return i?s:-s-1}(e,t,n||Od)}(e,t,n),r=s<0?-(s+1):s;e.splice(r,0,t)}function Od(e,t){return e>t?1:e<t?-1:0}function Md(e,t,n,s,r){return Bd(e,t,n,s,r,0)}function Ld(e,t,n,s,r,a){return Bd(e,t,n,s,r,0,!1,a,!0)}function zd(e,t,n,s,r,a){return Bd(e,t,n,s,r,a,!0)}function Bd(e,t,n,s,r,a,i=!1,o=!1,l=!1){const u=[];for(let e=0;e<t.length;e++)t[e]>r&&u.push({score:t[e],boxIndex:e,suppressBeginIndex:0});u.sort(Vd);const c=a>0?-.5/a:0,h=[],d=[];for(;h.length<n&&u.length>0;){const t=u.pop(),{score:n,boxIndex:a,suppressBeginIndex:i}=t;if(n<r)break;let o=!1;for(let n=h.length-1;n>=i;--n){const i=Pd(e,a,h[n]);if(i>=s){o=!0;break}if(t.score=t.score*Wd(s,c,i),t.score<=r)break}t.suppressBeginIndex=h.length,o||(t.score===n?(h.push(a),d.push(t.score)):t.score>r&&Dd(u,t,Vd))}const p=h.length,f=n-p;o&&f>0&&(h.push(...new Array(f).fill(0)),d.push(...new Array(f).fill(0)));const m={selectedIndices:h};return i&&(m.selectedScores=d),l&&(m.validOutputs=p),m}function Pd(e,t,n){const s=e.subarray(4*t,4*t+4),r=e.subarray(4*n,4*n+4),a=Math.min(s[0],s[2]),i=Math.min(s[1],s[3]),o=Math.max(s[0],s[2]),l=Math.max(s[1],s[3]),u=Math.min(r[0],r[2]),c=Math.min(r[1],r[3]),h=Math.max(r[0],r[2]),d=Math.max(r[1],r[3]),p=(o-a)*(l-i),f=(h-u)*(d-c);if(p<=0||f<=0)return 0;const m=Math.max(a,u),g=Math.max(i,c),y=Math.min(o,h),b=Math.min(l,d),x=Math.max(y-m,0)*Math.max(b-g,0);return x/(p+f-x)}function Wd(e,t,n){const s=Math.exp(t*n*n);return n<=e?s:0}function Vd(e,t){return e.score-t.score||e.score===t.score&&t.boxIndex-e.boxIndex}const Ud=Na({nonMaxSuppressionWithScore_:function(e,t,n,s=.5,r=Number.NEGATIVE_INFINITY,a=0){const i=va(e,"boxes","nonMaxSuppression"),o=va(t,"scores","nonMaxSuppression"),l=_d(i,o,n,s,r,a),u={boxes:i,scores:o},c={maxOutputSize:n=l.maxOutputSize,iouThreshold:s=l.iouThreshold,scoreThreshold:r=l.scoreThreshold,softNmsSigma:a=l.softNmsSigma},h=pa.runKernel(Wn,u,c);return{selectedIndices:h[0],selectedScores:h[1]}}}),Gd=Na({nonMaxSuppressionPadded_:function(e,t,n,s=.5,r=Number.NEGATIVE_INFINITY,a=!1){const i=va(e,"boxes","nonMaxSuppression"),o=va(t,"scores","nonMaxSuppression"),l=_d(i,o,n,s,r,null),u={boxes:i,scores:o},c={maxOutputSize:l.maxOutputSize,iouThreshold:l.iouThreshold,scoreThreshold:l.scoreThreshold,padToMaxOutputSize:a},h=pa.runKernel(Pn,u,c);return{selectedIndices:h[0],validOutputs:h[1]}}}),jd=Na({resizeBilinear_:function(e,t,n=!1,s=!1){const r=va(e,"images","resizeBilinear");ie(3===r.rank||4===r.rank,(()=>`Error in resizeBilinear: x must be rank 3 or 4, but got rank ${r.rank}.`)),ie(2===t.length,(()=>`Error in resizeBilinear: new shape must 2D, but got shape ${t}.`)),ie(!1===s||!1===n,(()=>"Error in resizeBilinear: If halfPixelCenters is true, alignCorners must be false."));let a=r,i=!1;3===r.rank&&(i=!0,a=Dl(r,[1,r.shape[0],r.shape[1],r.shape[2]]));const[]=t,o={images:a},l={alignCorners:n,halfPixelCenters:s,size:t},u=pa.runKernel(as,o,l);return i?Dl(u,[u.shape[1],u.shape[2],u.shape[3]]):u}}),Hd=Na({resizeNearestNeighbor_:function(e,t,n=!1,s=!1){const r=va(e,"images","resizeNearestNeighbor");ie(3===r.rank||4===r.rank,(()=>`Error in resizeNearestNeighbor: x must be rank 3 or 4, but got rank ${r.rank}.`)),ie(2===t.length,(()=>`Error in resizeNearestNeighbor: new shape must 2D, but got shape ${t}.`)),ie("float32"===r.dtype||"int32"===r.dtype,(()=>"`images` must have `int32` or `float32` as dtype")),ie(!1===s||!1===n,(()=>"Error in resizeNearestNeighbor: If halfPixelCenters is true, alignCorners must be false."));let a=r,i=!1;3===r.rank&&(i=!0,a=Dl(r,[1,r.shape[0],r.shape[1],r.shape[2]]));const[]=t,o={images:a},l={alignCorners:n,halfPixelCenters:s,size:t},u=pa.runKernel(ss,o,l);return i?Dl(u,[u.shape[1],u.shape[2],u.shape[3]]):u}}),qd=Na({threshold_:function(e,t="binary",n=!1,s=.5){const r=va(e,"image","threshold"),a=r.shape[0]*r.shape[1];let i,o,l,u,c=Gi(Bh([s]),255);if(ie(3===r.rank,(()=>`Error in threshold: image must be rank 3,but got rank ${r.rank}.`)),ie(3===r.shape[2]||1===r.shape[2],(()=>`Error in threshold: image color channel must be equal to 3 or 1but got ${r.shape[2]}.`)),ie("int32"===r.dtype||"float32"===r.dtype,(()=>`Error in dtype: image dtype must be int32 or float32,but got dtype ${r.dtype}.`)),ie("otsu"===t||"binary"===t,(()=>`Method must be binary or otsu, but was ${t}`)),3===r.shape[2]){[i,o,l]=Rh(r,[1,1,1],-1);const e=Gi(i,.2989),t=Gi(o,.587),n=Gi(l,.114);u=Wi(Wi(e,t),n)}else u=e;"otsu"===t&&(c=function(e,t){let n,s,r,a,i,o,l=Bh([-1]),u=Bh([0]),c=Bh([0]);for(let h=0;h<e.size-1;h++){n=Pl(e,0,h+1),s=Pl(e,h+1),i=Ui(zu(n),t),o=Ui(zu(s),t);const d=zu(Gi(n,ah(0,n.size)));r=Ui(d,zu(n));const p=so(s.shape,n.size),f=Wi(ah(0,s.size),p),m=Gi(s,f);a=Ui(zu(m),zu(s));const g=io(r,a),y=io(r,a),b=Gi(i,o);c=Gi(Gi(b,g),y);const x=Xu(c,u);u=vu(x,c,u),l=vu(x,Bh([h]),l)}return l}(Kl(zi(mh(u),"int32"),Ca([]),256),a));const h=n?sc(u,c):Xu(u,c);return zi(Gi(h,255),"int32")}}),Kd=Na({transform_:function(e,t,n="nearest",s="constant",r=0,a){const i=va(e,"image","transform","float32"),o=va(t,"transforms","transform","float32");ie(4===i.rank,(()=>`Error in transform: image must be rank 4,but got rank ${i.rank}.`)),ie(2===o.rank&&(o.shape[0]===i.shape[0]||1===o.shape[0])&&8===o.shape[1],(()=>"Error in transform: Input transform should be batch x 8 or 1 x 8")),ie(null==a||2===a.length,(()=>`Error in transform: outputShape must be [height, width] or null, but got ${a}.`));const l={image:i,transforms:o},u={interpolation:n,fillMode:s,fillValue:r,outputShape:a};return pa.runKernel(Gs,l,u)}}),Xd=Na({bandPart_:function(e,t,n){const s=va(e,"a","bandPart");ie(s.rank>=2,(()=>`bandPart(): Rank must be at least 2, got ${s.rank}.`));const r=s.shape,[a,i]=s.shape.slice(-2);let o,l;"number"==typeof t?(ie(t%1==0,(()=>`bandPart(): numLower must be an integer, got ${t}.`)),ie(t<=a,(()=>`bandPart(): numLower (${t}) must not be greater than the number of rows (${a}).`)),o=va(t<0?a:t,"numLower","bandPart")):(ie("int32"===t.dtype,(()=>"bandPart(): numLower's dtype must be an int32.")),o=vu(nc(t,0),a,Cc(t,a))),"number"==typeof n?(ie(n%1==0,(()=>`bandPart(): numUpper must be an integer, got ${n}.`)),ie(n<=i,(()=>`bandPart(): numUpper (${n}) must not be greater than the number of columns (${i}).`)),l=va(n<0?i:n,"numUpper","bandPart")):(ie("int32"===n.dtype,(()=>"bandPart(): numUpper's dtype must be an int32.")),l=vu(nc(n,0),i,Cc(n,i)));const u=Dl(ah(0,a,1,"int32"),[-1,1]),c=ah(0,i,1,"int32"),h=io(u,c),d=pc(sc(h,o),Yu(h,lc(l))),p=Nc([a,i],s.dtype);return Dl(Oh(Zh(Dl(s,[-1,a,i])).map((e=>vu(d,e,p)))),r)}}),Yd=Na({gramSchmidt_:function(e){let t;if(Array.isArray(e)){t=!1,ie(null!=e&&e.length>0,(()=>"Gram-Schmidt process: input must not be null, undefined, or empty"));const n=e[0].shape[0];for(let t=1;t<e.length;++t)ie(e[t].shape[0]===n,(()=>`Gram-Schmidt: Non-unique lengths found in the input vectors: (${e[t].shape[0]} vs. ${n})`))}else t=!0,e=Rh(e,e.shape[0],0).map((e=>Dh(e,[0])));ie(e.length<=e[0].shape[0],(()=>`Gram-Schmidt: Number of vectors (${e.length}) exceeds number of dimensions (${e[0].shape[0]}).`));const n=[],s=e;for(let t=0;t<e.length;++t)n.push(pa.tidy((()=>{let e=s[t];if(t>0)for(let s=0;s<t;++s){const t=Gi(zu(Gi(n[s],e)),n[s]);e=io(e,t)}return Ui(e,Pu(e,"euclidean"))})));return t?Oh(n,0):n}});function Jd(e,t=!1){return pa.tidy((()=>{ie(2===e.shape.length,(()=>`qr2d() requires a 2D Tensor, but got a ${e.shape.length}D Tensor.`));const n=e.shape[0],s=e.shape[1];let r=Hu(n),a=Bi(e);const i=Ph([[1]],[1,1]);let o=Bi(i);const l=n>=s?s:n;for(let e=0;e<l;++e){const t=a,l=o,u=r;[o,a,r]=pa.tidy((()=>{const t=Pl(a,[e,e],[n-e,1]),l=Pu(t),u=Pl(a,[e,e],[1,1]),c=vu(Xu(u,0),Ph([[-1]]),Ph([[1]])),h=io(u,Gi(c,l)),d=Ui(t,h);o=1===d.shape[0]?Bi(i):Ll([i,Pl(d,[1,0],[d.shape[0]-1,d.shape[1]])],0);const p=lc(Ui(zl(c,h),l)),f=Pl(a,[e,0],[n-e,s]),m=Gi(p,o),g=rd(o);if(0===e)a=io(f,zl(m,zl(g,f)));else{const t=io(f,zl(m,zl(g,f)));a=Ll([Pl(a,[0,0],[e,s]),t],0)}const y=rd(m),b=Pl(r,[0,e],[n,r.shape[1]-e]);if(0===e)r=io(b,zl(zl(b,o),y));else{const t=io(b,zl(zl(b,o),y));r=Ll([Pl(r,[0,0],[n,e]),t],1)}return[o,a,r]})),Fa([t,l,u])}return!t&&n>s&&(r=Pl(r,[0,0],[n,s]),a=Pl(a,[0,0],[s,s])),[r,a]}))}const Zd=Na({qr_:function(e,t=!1){if(ie(e.rank>=2,(()=>`qr() requires input tensor to have a rank >= 2, but got rank ${e.rank}`)),2===e.rank)return Jd(e,t);{const n=e.shape.slice(0,e.shape.length-2).reduce(((e,t)=>e*t)),s=Zh(Dl(e,[n,e.shape[e.shape.length-2],e.shape[e.shape.length-1]]),0),r=[],a=[];return s.forEach((e=>{const[n,s]=Jd(e,t);r.push(n),a.push(s)})),[Dl(Oh(r,0),e.shape),Dl(Oh(a,0),e.shape)]}}});var Qd;!function(e){e[e.NONE=0]="NONE",e[e.MEAN=1]="MEAN",e[e.SUM=2]="SUM",e[e.SUM_BY_NONZERO_WEIGHTS=3]="SUM_BY_NONZERO_WEIGHTS"}(Qd||(Qd={}));const ep=Na({computeWeightedLoss_:function(e,t,n=Qd.SUM_BY_NONZERO_WEIGHTS){const s=va(e,"losses","computeWeightedLoss");let r=null;null!=t&&(r=va(t,"weights","computeWeightedLoss"));const a=null==r?s:Gi(s,r);if(n===Qd.NONE)return a;if(n===Qd.SUM)return zu(a);if(n===Qd.MEAN){if(null==r)return Ic(a);{const e=s.size/r.size,t=Ui(zu(a),zu(r));return e>1?Ui(t,Xi(e)):t}}if(n===Qd.SUM_BY_NONZERO_WEIGHTS){if(null==r)return Ui(zu(a),Xi(s.size));{const e=Gi(r,Sc(s.shape)),t=zi(zu(Fc(e,Xi(0))),"float32");return Ui(zu(a),t)}}throw Error(`Unknown reduction: ${n}`)}}),tp=Na({absoluteDifference_:function(e,t,n,s=Qd.SUM_BY_NONZERO_WEIGHTS){const r=va(e,"labels","absoluteDifference"),a=va(t,"predictions","absoluteDifference");let i=null;null!=n&&(i=va(n,"weights","absoluteDifference")),oe(r.shape,a.shape,"Error in absoluteDifference: ");const o=lo(io(r,a));return ep(o,i,s)}}),np=Na({cosineDistance_:function(e,t,n,s,r=Qd.SUM_BY_NONZERO_WEIGHTS){const a=va(e,"labels","cosineDistance"),i=va(t,"predictions","cosineDistance");let o=null;null!=s&&(o=va(s,"weights","cosineDistance")),oe(a.shape,i.shape,"Error in cosineDistance: ");const l=Xi(1),u=io(l,zu(Gi(a,i),n,!0));return ep(u,o,r)}}),sp=Na({hingeLoss_:function(e,t,n,s=Qd.SUM_BY_NONZERO_WEIGHTS){let r=va(e,"labels","hingeLoss");const a=va(t,"predictions","hingeLoss");let i=null;null!=n&&(i=va(n,"weights","hingeLoss")),oe(r.shape,a.shape,"Error in hingeLoss: ");const o=Xi(1);r=io(Gi(Xi(2),r),o);const l=lh(io(o,Gi(r,a)));return ep(l,i,s)}}),rp=Na({huberLoss_:function(e,t,n,s=1,r=Qd.SUM_BY_NONZERO_WEIGHTS){const a=va(e,"labels","huberLoss"),i=va(t,"predictions","huberLoss");let o=null;null!=n&&(o=va(n,"weights","huberLoss")),oe(a.shape,i.shape,"Error in huberLoss: ");const l=Xi(s),u=lo(io(i,a)),c=Cc(u,l),h=io(u,c),d=Wi(Gi(Xi(.5),Hi(c)),Gi(l,h));return ep(d,o,r)}}),ap=Na({logLoss_:function(e,t,n,s=1e-7,r=Qd.SUM_BY_NONZERO_WEIGHTS){const a=va(e,"labels","logLoss"),i=va(t,"predictions","logLoss");let o=null;null!=n&&(o=va(n,"weights","logLoss")),oe(a.shape,i.shape,"Error in logLoss: ");const l=Xi(1),u=Xi(s),c=lc(Gi(a,ic(Wi(i,u)))),h=Gi(io(l,a),ic(Wi(io(l,i),u))),d=io(c,h);return ep(d,o,r)}}),ip=Na({meanSquaredError_:function(e,t,n,s=Qd.SUM_BY_NONZERO_WEIGHTS){const r=va(e,"labels","meanSquaredError"),a=va(t,"predictions","meanSquaredError");let i=null;null!=n&&(i=va(n,"weights","meanSquaredError")),oe(r.shape,a.shape,"Error in meanSquaredError: ");const o=Fh(r,a);return ep(o,i,s)}}),op=Na({sigmoidCrossEntropy_:function(e,t,n,s=0,r=Qd.SUM_BY_NONZERO_WEIGHTS){let a=va(e,"multiClassLabels","sigmoidCrossEntropy");const i=va(t,"logits","sigmoidCrossEntropy");let o=null;if(null!=n&&(o=va(n,"weights","sigmoidCrossEntropy")),oe(a.shape,i.shape,"Error in sigmoidCrossEntropy: "),s>0){const e=Xi(s),t=Xi(1),n=Xi(.5);a=Wi(Gi(a,io(t,e)),Gi(n,e))}const l=function(e,t){const n=va(e,"labels","sigmoidCrossEntropyWithLogits"),s=va(t,"logits","sigmoidCrossEntropyWithLogits");oe(n.shape,s.shape,"Error in sigmoidCrossEntropyWithLogits: ");const r=lh(s),a=Gi(s,n),i=oc(Vu(lc(lo(s))));return Wi(io(r,a),i)}(a,i);return ep(l,o,r)}}),lp=Na({softmaxCrossEntropy_:function(e,t,n,s=0,r=Qd.SUM_BY_NONZERO_WEIGHTS){let a=va(e,"onehotLabels","softmaxCrossEntropy");const i=va(t,"logits","softmaxCrossEntropy");let o=null;if(null!=n&&(o=va(n,"weights","softmaxCrossEntropy")),oe(a.shape,i.shape,"Error in softmaxCrossEntropy: "),s>0){const e=Xi(s),t=Xi(1),n=Xi(a.shape[1]);a=Wi(Gi(a,io(t,e)),Ui(e,n))}const l=function(e,t,n=-1){if(-1===n&&(n=t.rank-1),n!==t.rank-1)throw Error(`Softmax cross entropy along a non-last dimension is not yet supported. Labels / logits was rank ${t.rank} and dim was ${n}`);const s=Ki(((e,t,s)=>{const r=dc(t,[n],!0),a=io(zi(t,"float32"),r);s([e,a]);const i=lc(Gi(a,e));return{value:zu(i,[n]),gradFunc:(e,t)=>{const[s,r]=t,a=Ru(e.shape,[n]);return[Gi(Dl(e,a),io(zi(s,"float32"),Vu(r))),Gi(Dl(e,a),io(Vu(r),zi(s,"float32")))]}}}));return s(e,t)}(a,i);return ep(l,o,r)}}),up=Na({sparseFillEmptyRows_:function(e,t,n,s){const r=va(e,"indices","sparseFillEmptyRows","int32"),a=va(t,"values","sparseFillEmptyRows"),i=va(n,"denseShape","sparseFillEmptyRows","int32"),o=va(s,"defaultValue","sparseFillEmptyRows",a.dtype);if(2!==r.rank)throw new Error(`Indices should be Tensor2D but received shape\n        ${r.shape}`);if(1!==a.rank)throw new Error(`Values should be Tensor1D but received shape ${a.shape}`);if(1!==i.rank)throw new Error(`Dense shape should be Tensor1D but received shape ${i.shape}`);if(0!==o.rank)throw new Error(`Default value should be a scalar but received shape ${o.shape}`);const l={indices:r,values:a,denseShape:i,defaultValue:o},u=pa.runKernel(Cs,l);return{outputIndices:u[0],outputValues:u[1],emptyRowIndicator:u[2],reverseIndexMap:u[3]}}}),cp=Na({sparseReshape_:function(e,t,n){const s=va(e,"inputIndices","sparseReshape","int32"),r=va(t,"inputShape","sparseReshape","int32"),a=va(n,"newShape","sparseReshape","int32");if(2!==s.rank)throw new Error(`Input indices should be Tensor2D but received shape\n        ${s.shape}`);if(1!==r.rank)throw new Error(`Input shape should be Tensor1D but received shape ${r.shape}`);if(1!==a.rank)throw new Error(`New shape should be Tensor1D but received shape ${a.shape}`);const i={inputIndices:s,inputShape:r,newShape:a},o=pa.runKernel($s,i);return{outputIndices:o[0],outputShape:o[1]}}}),hp=Na({sparseSegmentMean_:function(e,t,n){const s=va(e,"data","sparseSegmentMean"),r=va(t,"indices","sparseSegmentMean","int32"),a=va(n,"segmentIds","sparseSegmentMean","int32");if(s.rank<1)throw new Error("Data should be at least 1 dimensional but received scalar");if(1!==r.rank)throw new Error(`Indices should be Tensor1D but received shape\n          ${r.shape}`);if(1!==a.rank)throw new Error(`Segment ids should be Tensor1D but received shape\n          ${a.shape}`);const i={data:s,indices:r,segmentIds:a};return pa.runKernel(Es,i)}}),dp=Na({sparseSegmentSum_:function(e,t,n){const s=va(e,"data","sparseSegmentSum"),r=va(t,"indices","sparseSegmentSum","int32"),a=va(n,"segmentIds","sparseSegmentSum","int32");if(s.rank<1)throw new Error("Data should be at least 1 dimensional but received scalar");if(1!==r.rank)throw new Error(`Indices should be Tensor1D but received shape\n         ${r.shape}`);if(1!==a.rank)throw new Error(`Segment ids should be Tensor1D but received shape\n         ${a.shape}`);const i={data:s,indices:r,segmentIds:a};return pa.runKernel(As,i)}}),pp=Na({stringNGrams_:function(e,t,n,s,r,a,i,o){const l=va(e,"data","stringNGrams","string");if("string"!==l.dtype)throw new Error("Data must be of datatype string");if(1!==l.shape.length)throw new Error(`Data must be a vector, saw: ${l.shape}`);const u=va(t,"dataSplits","stringNGrams");if("int32"!==u.dtype)throw new Error("Data splits must be of datatype int32");const c={separator:n,nGramWidths:s,leftPad:r,rightPad:a,padWidth:i,preserveShortSequences:o},h={data:l,dataSplits:u},d=pa.runKernel(Ms,h,c);return{nGrams:d[0],nGramsSplits:d[1]}}}),fp={fft:$h,ifft:Eh,rfft:_h,irfft:Ah},mp={hammingWindow:Id,hannWindow:Nd,frame:Sd,stft:Td},gp={flipLeftRight:$d,grayscaleToRGB:Ed,resizeNearestNeighbor:Hd,resizeBilinear:jd,rgbToGrayscale:Ad,rotateWithOffset:Rd,cropAndResize:Cd,nonMaxSuppression:Fd,nonMaxSuppressionAsync:async function(e,t,n,s=.5,r=Number.NEGATIVE_INFINITY){const a=va(e,"boxes","nonMaxSuppressionAsync"),i=va(t,"scores","nonMaxSuppressionAsync"),o=_d(a,i,n,s,r);n=o.maxOutputSize,s=o.iouThreshold,r=o.scoreThreshold;const l=await Promise.all([a.data(),i.data()]),u=l[0],c=l[1],{selectedIndices:h}=Md(u,c,n,s,r);return a!==e&&a.dispose(),i!==t&&i.dispose(),Bh(h,"int32")},nonMaxSuppressionWithScore:Ud,nonMaxSuppressionWithScoreAsync:async function(e,t,n,s=.5,r=Number.NEGATIVE_INFINITY,a=0){const i=va(e,"boxes","nonMaxSuppressionAsync"),o=va(t,"scores","nonMaxSuppressionAsync"),l=_d(i,o,n,s,r,a);n=l.maxOutputSize,s=l.iouThreshold,r=l.scoreThreshold,a=l.softNmsSigma;const u=await Promise.all([i.data(),o.data()]),c=u[0],h=u[1],{selectedIndices:d,selectedScores:p}=zd(c,h,n,s,r,a);return i!==e&&i.dispose(),o!==t&&o.dispose(),{selectedIndices:Bh(d,"int32"),selectedScores:Bh(p)}},nonMaxSuppressionPadded:Gd,nonMaxSuppressionPaddedAsync:async function(e,t,n,s=.5,r=Number.NEGATIVE_INFINITY,a=!1){const i=va(e,"boxes","nonMaxSuppressionAsync"),o=va(t,"scores","nonMaxSuppressionAsync"),l=_d(i,o,n,s,r,null),u=l.maxOutputSize,c=l.iouThreshold,h=l.scoreThreshold,[d,p]=await Promise.all([i.data(),o.data()]),{selectedIndices:f,validOutputs:m}=Ld(d,p,u,c,h,a);return i!==e&&i.dispose(),o!==t&&o.dispose(),{selectedIndices:Bh(f,"int32"),validOutputs:Xi(m,"int32")}},threshold:qd,transform:Kd},yp={bandPart:Xd,gramSchmidt:Yd,qr:Zd},bp={absoluteDifference:tp,computeWeightedLoss:ep,cosineDistance:np,hingeLoss:sp,huberLoss:rp,logLoss:ap,meanSquaredError:ip,sigmoidCrossEntropy:op,softmaxCrossEntropy:lp},xp={sparseFillEmptyRows:up,sparseReshape:cp,sparseSegmentMean:hp,sparseSegmentSum:dp},wp={stringNGrams:pp,stringSplit:Na({stringSplit_:function(e,t,n=!0){const s=va(e,"input","stringSplit","string"),r=va(t,"delimiter","stringSplit","string");if(1!==s.rank)throw new Error(`Input should be Tensor1D but received shape ${s.shape}`);if(0!==r.rank)throw new Error(`Delimiter should be a scalar but received shape ${r.shape}`);const a={skipEmpty:n},i={input:s,delimiter:r},o=pa.runKernel(Ls,i,a);return{indices:o[0],values:o[1],shape:o[2]}}}),stringToHashBucketFast:Na({stringToHashBucketFast_:function(e,t){const n=va(e,"input","stringToHashBucketFast","string"),s={numBuckets:t};if(t<=0)throw new Error("Number of buckets must be at least 1");const r={input:n};return pa.runKernel(zs,r,s)}}),staticRegexReplace:Na({staticRegexReplace_:function(e,t,n,s=!0){const r=va(e,"input","staticRegexReplace","string"),a={pattern:t,rewrite:n,replaceGlobal:s};return pa.runKernel(Ds,{x:r},a)}})},vp=class{static sgd(e){return new mo(e)}static momentum(e,t,n=!1){return new go(e,t,n)}static rmsprop(e,t=.9,n=0,s=null,r=!1){return new yo(e,t,n,s,r)}static adam(e=.001,t=.9,n=.999,s=null){return new oo(e,t,n,s)}static adadelta(e=.001,t=.95,n=null){return new no(e,t,n)}static adamax(e=.002,t=.9,n=.999,s=null,r=0){return new fo(e,t,n,s,r)}static adagrad(e,t=.1){return new ro(e,t)}},kp="undefined"!=typeof requestAnimationFrame?requestAnimationFrame:"undefined"!=typeof setImmediate?setImmediate:e=>e();function Ip(){return new Promise((e=>kp((()=>e()))))}function Np(e,t){const n=e[0].length;e.forEach(((e,t)=>{ie(e.length===n,(()=>`Error in concat${n}D: rank of tensors[${t}] must be the same as the rank of the rest (${n})`))})),ie(t>=0&&t<n,(()=>`Error in concat${n}D: axis must be between 0 and ${n-1}.`));const s=e[0];e.forEach(((e,r)=>{for(let a=0;a<n;a++)ie(a===t||e[a]===s[a],(()=>`Error in concat${n}D: Shape of tensors[${r}] (${e}) does not match the shape of the rest (${s}) along the non-concatenated axis ${r}.`))}))}function Sp(e,t){const n=e[0].slice();for(let s=1;s<e.length;s++)n[t]+=e[s][t];return n}var Tp;function Cp(e,t,n){let s=new Array;if(null==n&&null==t)return s;if(null==t)for(;s.length<e+n.length;)s.push(-1);else s=t.slice();if(null==n)return s;if(e+n.length!==s.length)throw new Error(`rt input.shape and shape=${t} are incompatible: rt input.rank = ${e+n.length}, but shape.rank = ${s.length}`);for(let r=1;r<n.length;++r){const a=n[r],i=s[s.length-n.length+r],o=s[i];if(a>=0)if(o>=0){if(o!==a)throw new Error(`rt input.shape and shape=${t} are incompatible: rt input.shape[${r+e}] = ${a} but shape[${r+e}] = ${o}`)}else s[i]=a}return s}function $p(e){const t={FIRST_DIM_SIZE:Tp.FIRST_DIM_SIZE,VALUE_ROWIDS:Tp.VALUE_ROWIDS,ROW_LENGTHS:Tp.ROW_LENGTHS,ROW_SPLITS:Tp.ROW_SPLITS,ROW_LIMITS:Tp.ROW_LIMITS,ROW_STARTS:Tp.ROW_STARTS},n=[];for(const s of e){if(!(s in t))break;n.push(t[s])}return n}function Ep(e){return 0===e.length?0:e[0]===Tp.FIRST_DIM_SIZE?e.length-1:e.length}function Ap(e,t){if(null==e||null==t)return;const n=e.length,s=t.length;if(n>=s)throw new Error(`defaultValue.shape=${e} and ragged tensor flatValues.shape=${t}, are incompatible: defaultValue.rank = ${n} must be less than ragged tensor input flatValues.rank = ${s})`);for(let r=0;r<Math.min(n,s-1);++r){const n=e[r],s=t[r+1];if(n>=0&&s>=0&&1!==n&&n!==s)throw new Error(`defaultValue.shape=${e}, and ragged tensor input flatValues.shape=${t} are incompatible: defaultValue.shape[${r-e.length}] = ${n} but ragged tensor input.flatValues.shape[${r-e.length}] = ${s}`)}}!function(e){e[e.FIRST_DIM_SIZE=0]="FIRST_DIM_SIZE",e[e.VALUE_ROWIDS=1]="VALUE_ROWIDS",e[e.ROW_LENGTHS=2]="ROW_LENGTHS",e[e.ROW_SPLITS=3]="ROW_SPLITS",e[e.ROW_LIMITS=4]="ROW_LIMITS",e[e.ROW_STARTS=5]="ROW_STARTS"}(Tp||(Tp={}));const Rp=30;function _p(e){return e<=Rp?e:Te(e,Math.floor(Math.sqrt(e)))}function Fp(e,t,n){return[n*("number"==typeof e?e:e[0]),t*("number"==typeof e?e:e[1])]}function Dp(e,t,n,s=!0){let r=[];if(s)r=r.concat(t.slice(0)),r.push(e[0]/n),r=r.concat(e.slice(1));else{r=r.concat(e[0]);const n=t.length;for(let s=0;s<n;++s)r=r.concat([e[s+1]/t[s],t[s]]);r=r.concat(e.slice(n+1))}return r}function Op(e,t,n=!0){const s=[];if(n){s.push(t);for(let n=t+1;n<e;++n)n<=2*t?(s.push(n),s.push(n-(t+1))):s.push(n)}else{const n=[],r=[];for(let s=1;s<e;++s)s>=2*t+1||s%2==1?r.push(s):n.push(s);s.push(...n),s.push(0),s.push(...r)}return s}function Mp(e,t,n,s=!0){const r=[];s?r.push(e[0]/n):r.push(e[0]*n);for(let n=1;n<e.length;++n)n<=t.length?s?r.push(t[n-1]*e[n]):r.push(e[n]/t[n-1]):r.push(e[n]);return r}function Lp(e,t){const n=[0];for(let s=0;s<t;++s)n.push(e[s][0]);return n}function zp(e,t,n){const s=e.slice(0,1);for(let r=0;r<n;++r)s.push(e[r+1]-t[r][0]-t[r][1]);return s}function Bp(e,t){const n=e.shape.length,s=t.shape.length;if(n<1)throw new Error(`tf.gatherND() expects the input to be rank 1 or higher, but the rank was ${n}.`);if(s<1)throw new Error(`tf.gatherND() expects the indices to be rank 1 or higher, but the rank was ${s}.`);if("int32"!==t.dtype)throw new Error(`tf.gatherND() expects the indices to be int32 type, but the dtype was ${t.dtype}.`);if(t.shape[s-1]>n)throw new Error(`index innermost dimension length must be <= tensor rank; saw: ${t.shape[s-1]} vs. ${n}`);if(0===ue(e.shape))throw new Error(`Requested more than 0 entries, but input is empty. Input shape: ${e.shape}.`);const r=t.shape,a=r[r.length-1];let i=1;for(let e=0;e<r.length-1;++e)i*=r[e];const o=e.shape,l=r.slice();l.pop();let u=1;for(let e=a;e<n;++e)u*=o[e],l.push(o[e]);const c=[...Ce(e.shape).map((e=>e/u)),1].slice(0,a);return[l,i,u,c]}const Pp=1.7580993408473768,Wp=1.0507009873554805,Vp=.3275911,Up=.254829592,Gp=-.284496736,jp=1.421413741,Hp=-1.453152027,qp=1.061405429;function Kp(e,t){if(e.length!==t.length)throw new Error(`Cannot merge real and imag arrays of different lengths. real:${e.length}, imag: ${t.length}.`);const n=new Float32Array(2*e.length);for(let s=0;s<n.length;s+=2)n[s]=e[s/2],n[s+1]=t[s/2];return n}function Xp(e){const t=new Float32Array(e.length/2),n=new Float32Array(e.length/2);for(let s=0;s<e.length;s+=2)t[s/2]=e[s],n[s/2]=e[s+1];return{real:t,imag:n}}function Yp(e){const t=Math.ceil(e.length/4),n=new Float32Array(t),s=new Float32Array(t);for(let t=0;t<e.length;t+=4)n[Math.floor(t/4)]=e[t],s[Math.floor(t/4)]=e[t+1];return{real:n,imag:s}}function Jp(e){const t=Math.floor(e.length/4),n=new Float32Array(t),s=new Float32Array(t);for(let t=2;t<e.length;t+=4)n[Math.floor(t/4)]=e[t],s[Math.floor(t/4)]=e[t+1];return{real:n,imag:s}}function Zp(e,t){return{real:e[2*t],imag:e[2*t+1]}}function Qp(e,t,n,s){e[2*s]=t,e[2*s+1]=n}function ef(e,t){const n=new Float32Array(e/2),s=new Float32Array(e/2);for(let r=0;r<Math.ceil(e/2);r++){const a=(t?2:-2)*Math.PI*(r/e);n[r]=Math.cos(a),s[r]=Math.sin(a)}return{real:n,imag:s}}function tf(e,t,n){const s=(n?2:-2)*Math.PI*(e/t);return{real:Math.cos(s),imag:Math.sin(s)}}const nf="->",sf=/->/g,rf=",",af="...";function of(e,t){const n=((e=e.replace(/\s/g,"")).length-e.replace(sf,"").length)/nf.length;if(n<1)throw new Error("Equations without an arrow are not supported.");if(n>1)throw new Error(`Equation must contain exactly one arrow ("${nf}").`);const[s,r]=e.split(nf);ie(-1===s.indexOf(af),(()=>`The ellipsis notation ("${af}") is not supported yet.`));const a=s.split(rf),i=a.length;if(t!==i)throw new Error(`Expected ${i} input tensors, received ${t}`);if(i>2)throw new Error("Support for more than 2 input tensors is not implemented yet.");const o=[];for(let e=0;e<r.length;++e){const t=r[e];if(!a.some((e=>-1!==e.indexOf(t))))throw new Error(`Output subscripts contain the label ${t} not present in the input subscripts.`);-1===o.indexOf(t)&&o.push(t)}for(let e=0;e<s.length;++e){const t=s[e];-1===o.indexOf(t)&&t!==rf&&o.push(t)}const l=new Array(a.length);for(let e=0;e<i;++e){if(new Set(a[e].split("")).size!==a[e].length)throw new Error(`Found duplicate axes in input component ${a[e]}. Support for duplicate axes in input is not implemented yet.`);l[e]=[];for(let t=0;t<a[e].length;++t)l[e].push(o.indexOf(a[e][t]))}const u=o.length,c=[];for(let e=r.length;e<u;++e)c.push(e);return{allDims:o,summedDims:c,idDims:l}}function lf(e,t){let n=new Array(e);n.fill(-1);for(let e=0;e<t.length;++e)n[t[e]]=e;const s=[];for(let t=0;t<e;++t)-1===n[t]&&s.push(t);return n=n.filter((e=>-1!==e)),{permutationIndices:n,expandDims:s}}function uf(e,t,n){const s=new Array(e);for(let e=0;e<n.length;++e){const r=n[e].shape;for(let n=0;n<t[e].length;++n)void 0===s[t[e][n]]?s[t[e][n]]=r[n]:ie(s[t[e][n]]===r[n],(()=>`Expected dimension ${s[t[e][n]]} at axis ${n} of input shaped ${JSON.stringify(r)}, but got dimension ${r[n]}`))}}function cf(e,t){const n=e,s=[];let r=0;0===e.length&&n.push(-1),r=e.length+1;for(let e=0;e<r;++e)s.push([]);const a=[];for(let e=0;e<n.length;++e){const r=df(t,n[e]);for(const t of r)-1===a.indexOf(t)&&(s[e].push(t),a.push(t))}return{path:n,steps:s}}function hf(e){return e.every(((e,t)=>e===t))}function df(e,t){const n=[];for(let s=0;s<e.length;++s)0!==e[s].length&&-1===e[s].indexOf(t)&&-1!==t||n.push(s);return n}function pf(e,t,n=0){let s=[];if("number"==typeof t)ie(e.shape[n]%t===0,(()=>"Number of splits must evenly divide the axis.")),s=new Array(t).fill(e.shape[n]/t);else{const r=t.reduce(((e,t)=>(-1===t&&(e+=1),e)),0);ie(r<=1,(()=>"There should be only one negative value in split array."));const a=t.indexOf(-1);if(-1!==a){const s=t.reduce(((e,t)=>t>0?e+t:e));t[a]=e.shape[n]-s}ie(e.shape[n]===t.reduce(((e,t)=>e+t)),(()=>"The sum of sizes must match the size of the axis dimension.")),s=t}return s}function ff(e){return`Received SparseTensor with denseShape[0] = 0 but\n  indices.shape[0] = ${e}`}function mf(e,t){return`indices(${e}, 0) is invalid: ${t} < 0`}function gf(e,t,n){return`indices(${e}, 0) is invalid: ${t} >= ${n}`}function yf(e,t){return`only one output dimension may be -1, not both ${e} and ${t}`}function bf(e,t){return`size ${e} must be non-negative, not ${t}`}function xf(){return"reshape cannot infer the missing input size for an empty tensor unless all specified input sizes are non-zero"}function wf(e,t){return`Input to reshape is a SparseTensor with ${ue(e)}\n  dense values, but the requested shape requires a multiple of ${ue(t)}. inputShape=${e} outputShape= ${t}`}function vf(e,t){return`Input to reshape is a tensor with ${ue(e)} dense values, but the requested shape has ${ue(t)}. inputShape=${e} outputShape=${t}`}function kf(){return"segment ids must be >= 0"}function If(){return"segment ids are not increasing"}function Nf(e,t){return`Segment id ${e} out of range [0, ${t}), possibly because segmentIds input is not sorted.`}function Sf(e,t,n){return`Bad: indices[${e}] == ${t} out of range [0, ${n})`}function Tf(e,t){let n,s=!1;for(e<=Rp?(n=e,s=!0):n=Te(e,Math.floor(Math.sqrt(e)));!s;)n>t||n===e?s=!0:n=Te(e,n+1);return n}function Cf(e,t,n){const s=[],r=e.length;for(let a=0;a<r;a++)a!==t?s.push(e[a]):s.push(n);return s}function $f(e,t,n,s){const r=t.shape.length,a=e.shape.length;if(0!==s&&(s<-r||s>r))throw new Error(`Expect batchDims in the range of [-${r}, ${r}], but got ${s}`);if(s<0&&(s+=r),s>a)throw new Error(`batchDims (${s}) must be less than rank(x) (\n    ${a}).`);if(n<s)throw new Error(`batchDims (${s}) must be less than or equal to axis (${n}).`);for(let n=0;n<s;++n)if(e.shape[n]!==t.shape[n])throw new Error(`x.shape[${n}]: ${e.shape[n]} should be equal to indices.shape[${n}]: ${t.shape[n]}.`);const i=e.shape[n],o=[];let l=1,u=1,c=1;for(let t=0;t<s;++t)o.push(e.shape[t]),l*=e.shape[t];for(let t=s;t<n;t++)o.push(e.shape[t]),u*=e.shape[t];for(let e=s;e<r;e++)o.push(t.shape[e]);for(let t=n+1;t<a;t++)o.push(e.shape[t]),c*=e.shape[t];return{batchSize:l,sliceSize:c,outerSize:u,dimSize:i,outputShape:o}}function Ef(e){try{return e.map((e=>Rr(e)))}catch(e){throw new Error(`Failed to decode encoded string bytes into utf-8, error: ${e}`)}}function Af(e){return e.map((e=>Ar(e)))}!function(){for(const e of bo)eo(e)}();const Rf={kernelName:je,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>Gi(e,Mh(zi(n,"float32"),-1))}}},_f={kernelName:He,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>{const t=Hi(zi(n,"float32")),s=ji(io(Xi(1),t));return lc(Ui(e,s))}}}},Ff={kernelName:qe,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>{const t=ji(io(Hi(zi(n,"float32")),1));return Ui(e,t)}}}},Df={kernelName:Ke,inputsToSave:["a","b"],gradFunc:(e,t)=>{const[n,s]=t,r=ho(n.shape,s.shape);return{a:()=>{let t=e;const s=co(n.shape,r);return s.length>0&&(t=zu(t,s)),Dl(t,n.shape)},b:()=>{let t=e;const n=co(s.shape,r);return n.length>0&&(t=zu(t,n)),Dl(t,s.shape)}}}},Of={kernelName:Xe,saveAllInputs:!0,gradFunc:(e,t)=>{const n={};return t.forEach(((t,s)=>{n[s]=()=>e.clone()})),n}},Mf={kernelName:Ze,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>qi(n)}}},Lf={kernelName:Qe,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>qi(n)}}},zf={kernelName:et,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>Ui(e,ji(io(Xi(1),Hi(zi(n,"float32")))))}}},Bf={kernelName:tt,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>{const t=ji(Wi(Xi(1),Hi(zi(n,"float32"))));return Ui(e,t)}}}},Pf={kernelName:rt,inputsToSave:["a","b"],gradFunc:(e,t)=>{const[n,s]=t,r=ho(n.shape,s.shape);return{a:()=>{const t=Wi(Hi(n),Hi(s));let a=Gi(e,Ui(s,t));const i=co(n.shape,r);return i.length>0&&(a=zu(a,i)),Dl(a,n.shape)},b:()=>{const t=Wi(Hi(n),Hi(s));let a=lc(Gi(e,Ui(n,t)));const i=co(s.shape,r);return i.length>0&&(a=zu(a,i)),Dl(a,s.shape)}}}},Wf={kernelName:nt,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>Ui(e,Wi(Hi(zi(n,"float32")),1))}}},Vf={kernelName:st,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>Ui(e,io(Xi(1),Hi(zi(n,"float32"))))}}},Uf=Na({avgPool3dGrad_:function(e,t,n,s,r,a){const i=va(e,"dy","avgPool3dGrad"),o=va(t,"input","avgPool3dGrad");let l=i,u=o,c=!1;4===o.rank&&(c=!0,l=Dl(i,[1,i.shape[0],i.shape[1],i.shape[2],i.shape[3]]),u=Dl(o,[1,o.shape[0],o.shape[1],o.shape[2],o.shape[3]])),ie(5===l.rank,(()=>`Error in avgPool3dGrad: dy must be rank 5 but got rank ${l.rank}.`)),ie(5===u.rank,(()=>`Error in avgPool3dGrad: input must be rank 5 but got rank ${u.rank}.`)),Fl("avgPool3dGrad",r,a);const h={dy:l,input:u},d={filterSize:n,strides:s,pad:r,dimRoundingMode:a},p=pa.runKernel(lt,h,d);return c?Dl(p,[p.shape[1],p.shape[2],p.shape[3],p.shape[4]]):p}}),Gf={kernelName:ot,inputsToSave:["x"],gradFunc:(e,t,n)=>{const[s]=t,{filterSize:r,strides:a,pad:i,dimRoundingMode:o}=n;return{x:()=>Uf(e,s,r,a,i,o)}}},jf=Na({avgPoolGrad_:function(e,t,n,s,r){const a=va(e,"dy","avgPoolGrad"),i=va(t,"input","avgPoolGrad");ie(i.rank===a.rank,(()=>`Rank of input (${i.rank}) does not match rank of dy (${a.rank})`));let o=i,l=a,u=!1;3===i.rank&&(u=!0,o=Dl(i,[1,i.shape[0],i.shape[1],i.shape[2]]),l=Dl(a,[1,a.shape[0],a.shape[1],a.shape[2]])),ie(4===l.rank,(()=>`Error in avgPoolGrad: dy must be rank 4 but got rank ${l.rank}.`)),ie(4===o.rank,(()=>`Error in avgPoolGrad: input must be rank 4 but got rank ${o.rank}.`));const c={dy:l,input:o},h={filterSize:n,strides:s,pad:r},d=pa.runKernel(it,c,h);return u?Dl(d,[d.shape[1],d.shape[2],d.shape[3]]):d}}),Hf={kernelName:at,inputsToSave:["x"],gradFunc:(e,t,n)=>{const[s]=t,{filterSize:r,strides:a,pad:i}=n;return{x:()=>jf(e,s,r,a,i)}}},qf={kernelName:ut,inputsToSave:["a","b"],gradFunc:(e,t,n)=>{const[s,r]=t,{transposeA:a,transposeB:i}=n;return a||i?!a&&i?{a:()=>zl(e,r,!1,!1),b:()=>zl(e,s,!0,!1)}:a&&!i?{a:()=>zl(r,e,!1,!0),b:()=>zl(s,e,!1,!1)}:{a:()=>zl(r,e,!0,!0),b:()=>zl(e,s,!0,!0)}:{a:()=>zl(e,r,!1,!0),b:()=>zl(s,e,!0,!1)}}},Kf={kernelName:ct,gradFunc:(e,t,n)=>{const{blockShape:s,crops:r}=n;return{x:()=>Vc(e,s,r)}}},Xf={kernelName:"BroadcastTo",gradFunc:(e,t,n)=>{const s=n,r=s.inputShape,a=s.shape,i=Array.from(a);for(let e=r.length-1;e>=0;e--)if(r[e]===a[e])i[e]=1;else if(1!==r[e])throw new Error(`broadcastTo(): [${r}] cannot be broadcast to [${a}].`);const o=[];for(let e=0;e<i.length;e++)i[e]>1&&o.push(e);return{x:()=>zu(e,o,!0)}}},Yf={kernelName:ft,gradFunc:e=>({x:()=>e.clone()})},Jf={kernelName:mt,gradFunc:e=>({x:()=>qi(e)})},Zf={kernelName:gt,inputsToSave:["x"],gradFunc:(e,t,n)=>{const[s]=t,{clipValueMin:r,clipValueMax:a}=n;return{x:()=>vu(pc(Yu(s,r),sc(s,a)),e,qi(e))}}},Qf={kernelName:bt,inputsToSave:["x"],gradFunc:Rf.gradFunc},em={kernelName:xt,saveAllInputs:!0,gradFunc:(e,t,n)=>{const s=t.map((e=>e.shape)),{axis:r}=n,a=ge(r,t[0].shape)[0],i=s.map((e=>e[a]));return Rh(e,i,a).map((e=>()=>e))}},tm={kernelName:wt,inputsToSave:["x","filter"],gradFunc:(e,t,n)=>{const[s,r]=t,{dilations:a,strides:i,pad:o,dataFormat:l}=n;return ie(El(a),(()=>`Error in gradient of conv2D: dilation rates greater than 1 are not yet supported in gradients. Got dilations '${a}'`)),{x:()=>iu(s.shape,e,r,i,o,l),filter:()=>pd(s,e,r.shape,i,o,l)}}},nm={kernelName:kt,inputsToSave:["dy","filter"],gradFunc:(e,t,n)=>{const[s,r]=t,{strides:a,pad:i,dataFormat:o,dimRoundingMode:l}=n;return{dy:()=>ru(e,r,a,i,o,1,l),filter:()=>pd(e,s,r.shape,a,i,o,l)}}},sm=Na({conv3DBackpropFilter_:function(e,t,n,s,r){let a=e;4===e.rank&&(a=Dl(e,[1,e.shape[0],e.shape[1],e.shape[2],e.shape[3]]));let i=t;4===i.rank&&(i=Dl(t,[1,t.shape[0],t.shape[1],t.shape[2],t.shape[3]])),ie(5===a.rank,(()=>`Error in conv3dDerFilter: input must be rank 5, but got shape ${a.shape}.`)),ie(5===i.rank,(()=>`Error in conv3dDerFilter: dy must be rank 5, but got shape ${i.shape}.`)),ie(5===n.length,(()=>`Error in conv3dDerFilter: filterShape must be length 5, but got ${n}.`)),ie(a.shape[4]===n[3],(()=>`Error in conv3dDerFilter: depth of input ${a.shape[4]}) must match input depth in filter (${n[3]}.`)),ie(i.shape[4]===n[4],(()=>`Error in conv3dDerFilter: depth of dy (${i.shape[4]}) must match output depth for filter (${n[4]}).`));const o={x:a,dy:i},l={strides:s,pad:r,filterShape:n};return pa.runKernel(Nt,o,l)}}),rm={kernelName:It,inputsToSave:["x","filter"],gradFunc:(e,t,n)=>{const{dilations:s,strides:r,pad:a}=n;ie(El(s),(()=>`Error in gradient of conv3D: dilation rates greater than 1 are not yet supported in gradients. Got dilations '${s}'`));const[i,o]=t;return{x:()=>uu(i.shape,e,o,r,a),filter:()=>sm(i,e,o.shape,r,a)}}},am={kernelName:Tt,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>Gi(lc(vh(zi(n,"float32"))),e)}}},im={kernelName:Ct,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>Gi(kh(zi(n,"float32")),e)}}},om={kernelName:Et,inputsToSave:["x"],gradFunc:(e,t,n)=>{const[s]=t,{axis:r,exclusive:a,reverse:i}=n;return{x:()=>{const t=Fu([r],s.rank);let n=fu(e,r,a,!i);return null!=t&&(n=rd(n,t)),n}}}},lm={kernelName:Ft,inputsToSave:["x","filter"],gradFunc:(e,t,n)=>{const{dilations:s,strides:r,pad:a,dimRoundingMode:i}=n,o=null==s?[1,1]:s;ie(El(o),(()=>`Error in gradient of depthwiseConv2dNative: dilation rates greater than 1 are not yet supported. Got dilations '${o}'`));const[l,u]=t;return ie(4===l.rank,(()=>`Error in gradient of depthwiseConv2dNative: input must be rank 4, but got rank ${l.rank}.`)),ie(4===u.rank,(()=>`Error in gradient of depthwiseConv2dNative: filter must be rank 4, but got rank ${u.rank}.`)),ie(l.shape[3]===u.shape[2],(()=>`Error in gradient of depthwiseConv2d: number of input channels (${l.shape[3]}) must match the inChannels dimension in filter ${u.shape[2]}.`)),ie(Al(r,o),(()=>`Error in gradient of depthwiseConv2d: Either strides or dilations must be  1. Got strides ${r} and dilations '${o}'.`)),Fl("depthwiseConv2d",a,i),{x:()=>wd(l.shape,e,u,r,a,o,i),filter:()=>xd(l,e,u.shape,r,a,o,i)}}},um={kernelName:Lt,inputsToSave:["x","filter"],gradFunc:(e,t,n)=>{const[s,r]=t,a={x:s,filter:r,dy:e},i={x:s,filter:r,dy:e};return{x:()=>pa.runKernel(zt,a,n),filter:()=>pa.runKernel(Bt,i,n)}}},cm={kernelName:Vt,outputsToSave:[!0],gradFunc:(e,t)=>{const[n]=t,s={dy:e,y:n};return{x:()=>pa.runKernel(Ut,s)}}},hm={kernelName:Gt,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t,s=Gi(Vu(lc(Hi(n))),2/Math.sqrt(Math.PI));return{x:()=>Gi(e,s)}}},dm={kernelName:Ht,outputsToSave:[!0],gradFunc:(e,t)=>{const[n]=t;return{x:()=>Gi(e,n)}}},pm={kernelName:qt,inputsToSave:["input"],gradFunc:(e,t)=>{const[n]=t;return{input:()=>Dl(e,n.shape)}}},fm={kernelName:Kt,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>Gi(e,Vu(n))}}},mm={kernelName:Zt,gradFunc:e=>({x:()=>qi(e)})},gm={kernelName:Qt,inputsToSave:["a","b"],gradFunc:(e,t)=>{const[n,s]=t,r=ho(n.shape,s.shape);return{a:()=>{const t=Ui(e,zi(s,"float32")),a=co(n.shape,r);return a.length>0?Dl(zu(t,a),n.shape):t},b:()=>{let t=Gi(e,zi(n,"float32"));const a=co(s.shape,r);a.length>0&&(t=Dl(zu(t,a),s.shape));const i=Hi(s);return lc(Ui(t,zi(i,"float32")))}}}},ym={kernelName:en,inputsToSave:["x","mean","variance","scale"],gradFunc:(e,t,n)=>{const{varianceEpsilon:s}=n,[r,a,i,o]=t,l=null==o?Xi(1):o,u=co(a.shape,r.shape),c=[];if(1===a.rank){for(let e=0;e<r.shape.length-1;++e)c.push(r.shape[e]);c.push(1)}const h=io(r,a),d=Gi(e,l),p=gh(Wi(i,Xi(s))),f=Gi(Gi(Gi(p,p),p),Xi(-.5));return{x:()=>1===a.rank?Dl(Gi(Gi(e,ju(Dl(p,[1,1,1,a.shape[0]]),c)),l),r.shape):Dl(Gi(Gi(e,p),l),r.shape),mean:()=>{let e=Gi(Gi(p,Xi(-1)),d);return 1===a.rank&&(e=zu(e,u)),Dl(e,a.shape)},variance:()=>{let e=Gi(Gi(f,h),d);return 1===a.rank&&(e=zu(e,u)),Dl(e,a.shape)},scale:()=>{const t=Gi(h,p);let n=Gi(e,t);return 1===a.rank&&(n=zu(n,u)),Dl(n,a.shape)},offset:()=>{let t=e;return 1===a.rank&&(t=zu(t,u)),Dl(t,a.shape)}}}},bm={kernelName:tn,inputsToSave:["x","indices"],gradFunc:(e,t,n)=>{const[s,r]=t,{axis:a,batchDims:i}=n,o=ge(a,s.shape)[0],l=(e,t,n)=>()=>{const s=e.shape,r=t.size,i=s.slice(0,o),l=i.length,u=s.slice(a,s.length).slice(1),c=u.length,h=xm(0,l),d=xm(l+1,l+1+c),p=wm([i,[r],u]),f=Dl(n,p),m=Dl(t,[r]),g=wm([[l],h,d]),y=rd(f,g);let b=Jh(y,m,e.shape[o]);const x=Du(g);return b=rd(b,x),b};if(1===i){const t=s.shape[0],n=s.split(t,0);return{x:()=>{const t=Oh(n.map(((t,n)=>l(t,r.slice(n,1),e.slice(n,1))())));return t.reshape(s.shape)},indices:()=>r}}return{x:l(s,r,e),indices:()=>r}}};function xm(e,t){const n=[];for(let s=e;s<t;++s)n.push(s);return n}function wm(e){const t=[];for(let n=0;n<e.length;++n)for(let s=0;s<e[n].length;++s)t.push(e[n][s]);return t}const vm={kernelName:rn,inputsToSave:["a","b"],gradFunc:(e,t)=>{const[n,s]=t;return{a:()=>qi(n),b:()=>qi(s)}}},km={kernelName:an,gradFunc:e=>({x:()=>zi(e,"float32")})},Im={kernelName:un,gradFunc:e=>({x:()=>qi(e)})},Nm={kernelName:cn,gradFunc:e=>({x:()=>qi(e)})},Sm={kernelName:hn,gradFunc:e=>({x:()=>qi(e)})},Tm={kernelName:dn,inputsToSave:["x"],gradFunc:(e,t,n)=>{const[s]=t,{alpha:r}=n,a=Xu(s,0);return{x:()=>vu(a,e,Gi(e,r))}}},Cm={kernelName:yn,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>Ui(e,Wi(n,1))}}},$m={kernelName:gn,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>Ui(e,zi(n,"float32"))}}},Em={kernelName:"LogSoftmax",inputsToSave:[],outputsToSave:[!0],gradFunc:(e,t,n)=>{const[s]=t,{axis:r}=n;return{logits:()=>{const t=Vu(s);return io(e,Gi(zu(e,r,!0),t))}}}},Am=Na({localResponseNormalizationBackprop_:function(e,t,n,s=5,r=1,a=1,i=.5){const o={x:e,y:t,dy:n},l={depthRadius:s,bias:r,alpha:a,beta:i};return pa.runKernel(kn,o,l)}}),Rm={kernelName:vn,inputsToSave:["x"],outputsToSave:[!0],gradFunc:(e,t,n)=>{const[s,r]=t,{depthRadius:a,bias:i,alpha:o,beta:l}=n;return{x:()=>Am(s,r,e,a,i,o,l)}}};function _m(e,t,n,s){return t.rank<n.rank&&(t=Dl(t,Ru(t.shape,s))),e.rank<n.rank&&(e=Dl(e,Ru(e.shape,s))),{x:()=>Gi(e,zi(wu(n,t),e.dtype))}}const Fm={kernelName:In,inputsToSave:["x"],outputsToSave:[!0],gradFunc:(e,t,n)=>{const s=n,{reductionIndices:r}=s,a=t[0],i=_m(e,t[1],a,ge(r,a.shape));return{x:()=>i.x()}}},Dm={kernelName:Nn,inputsToSave:["a","b"],gradFunc:(e,t)=>{const[n,s]=t;return{a:()=>Gi(e,zi(Yu(n,s),"float32")),b:()=>Gi(e,zi(nc(n,s),"float32"))}}},Om=Na({maxPool3dGrad_:function(e,t,n,s,r,a,i){const o=va(e,"dy","maxPool3dGrad"),l=va(t,"input","maxPool3dGrad"),u=va(n,"output","maxPool3dGrad");let c=o,h=l,d=u,p=!1;4===l.rank&&(p=!0,c=Dl(o,[1,o.shape[0],o.shape[1],o.shape[2],o.shape[3]]),h=Dl(l,[1,l.shape[0],l.shape[1],l.shape[2],l.shape[3]]),d=Dl(u,[1,u.shape[0],u.shape[1],u.shape[2],u.shape[3]])),ie(5===c.rank,(()=>`Error in maxPool3dGrad: dy must be rank 5 but got rank ${c.rank}.`)),ie(5===h.rank,(()=>`Error in maxPool3dGrad: input must be rank 5 but got rank ${h.rank}.`)),ie(5===d.rank,(()=>`Error in maxPool3dGrad: output must be rank 5 but got rank ${d.rank}.`)),Fl("maxPool3dGrad",a,i);const f={dy:c,input:h,output:d},m={filterSize:s,strides:r,pad:a,dimRoundingMode:i},g=pa.runKernel($n,f,m);return p?Dl(g,[g.shape[1],g.shape[2],g.shape[3],g.shape[4]]):g}}),Mm={kernelName:Cn,inputsToSave:["x"],outputsToSave:[!0],gradFunc:(e,t,n)=>{const[s,r]=t,{filterSize:a,strides:i,pad:o,dimRoundingMode:l}=n;return{x:()=>Om(e,s,r,a,i,o,l)}}},Lm=Na({maxPoolGrad_:function(e,t,n,s,r,a,i){const o=va(e,"dy","maxPoolGrad"),l=va(t,"input","maxPoolGrad"),u=va(n,"output","maxPoolGrad");ie(l.rank===o.rank,(()=>`Rank of input (${l.rank}) does not match rank of dy (${o.rank})`)),ie(4===o.rank,(()=>`Error in maxPoolGrad: dy must be rank 4 but got rank ${o.rank}.`)),ie(4===l.rank,(()=>`Error in maxPoolGrad: input must be rank 4 but got rank ${l.rank}.`)),Fl("maxPoolGrad",a,i);const c={dy:o,input:l,output:u},h={filterSize:s,strides:r,pad:a,dimRoundingMode:i};return pa.runKernel(Tn,c,h)}}),zm={kernelName:Sn,inputsToSave:["x"],outputsToSave:[!0],gradFunc:(e,t,n)=>{const[s,r]=t,{filterSize:a,strides:i,pad:o}=n;return{x:()=>Lm(e,s,r,a,i,o)}}},Bm={kernelName:Fn,inputsToSave:["x"],gradFunc:(e,t,n)=>{const s=t[0],{paddings:r}=n,a=r.map((e=>e[0]));return{x:()=>Pl(e,a,s.shape)}}},Pm={kernelName:jn,inputsToSave:["x"],gradFunc:(e,t,n)=>{const s=t[0],{paddings:r}=n,a=r.map((e=>e[0]));return{x:()=>Pl(e,a,s.shape)}}},Wm={kernelName:Hn,inputsToSave:["a","b"],outputsToSave:[!0],gradFunc:(e,t)=>{const[n,s,r]=t,a=n,i=s,o=ho(a.shape,i.shape);return{a:()=>{const t=zi(i,"float32");let n=Gi(e,Gi(t,ao(a,io(t,Xi(1)))));const s=co(a.shape,o);return s.length>0&&(n=zu(n,s)),Dl(n,a.shape)},b:()=>{const t=Xu(a,0),n=vu(t,ic(a),qi(a));let s=Gi(e,Gi(r,n));const l=co(i.shape,o);return l.length>0&&(s=zu(s,l)),Dl(s,i.shape)}}}};const Vm={kernelName:ms,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>{const t=Xu(n,Xi(0)),s=Xi(Pp),r=Xi(Wp),a=Gi(e,r),i=Gi(Gi(e,s),Vu(zi(n,"float32")));return vu(t,a,i)}}}},Um={kernelName:Ns,gradFunc:(e,t,n)=>{const{blockShape:s,paddings:r}=n;return{x:()=>Ul(e,s,r)}}},Gm={kernelName:Ss,gradFunc:(e,t,n)=>{const{axis:s}=n;return{x:()=>Ll(e,s)}}},jm=[Rf,_f,Ff,Df,Of,Mf,Lf,zf,Bf,Pf,Wf,Vf,Gf,Hf,qf,Kf,Xf,Yf,Jf,Zf,Qf,em,nm,tm,rm,am,im,om,lm,um,{kernelName:Pt,inputsToSave:["a","b"],gradFunc:(e,t)=>{const[n,s]=t,r=ho(n.shape,s.shape);return{a:()=>{const t=Ui(e,zi(s,"float32")),a=co(n.shape,r);return a.length>0?Dl(zu(t,a),n.shape):t},b:()=>{let t=Gi(e,zi(n,"float32"));const a=co(s.shape,r);a.length>0&&(t=Dl(zu(t,a),s.shape));const i=Hi(s);return lc(Ui(t,zi(i,"float32")))}}}},cm,hm,dm,pm,fm,gm,mm,ym,bm,vm,km,Im,Nm,Sm,Tm,Cm,$m,Em,Rm,Fm,Fm,Dm,Mm,zm,{kernelName:An,inputsToSave:["x"],gradFunc:(e,t,n)=>{const[s]=t,{axis:r}=n,a=ge(r,s.shape),i=ue(Au(s.shape,a)[1]);return{x:()=>{const t=s.shape.slice();a.forEach((e=>{t[e]=1}));const n=Dl(e,t);return Ui(Gi(n,Sc(s.shape,"float32")),i)}}}},{kernelName:Rn,inputsToSave:["x"],outputsToSave:[!0],gradFunc:(e,t,n)=>{const s=n,{axis:r}=s,[a,i]=t,o=_m(e,i,a,ge(r,a.shape));return{x:()=>o.x()}}},{kernelName:_n,inputsToSave:["a","b"],gradFunc:(e,t)=>{const[n,s]=t;return{a:()=>Gi(e,zi(sc(n,s),"float32")),b:()=>Gi(e,zi(Xu(n,s),"float32"))}}},Bm,{kernelName:Dn,inputsToSave:["a","b"],gradFunc:(e,t)=>{const[n,s]=t,r=ho(n.shape,s.shape);return{a:()=>{const t=co(n.shape,r);return t.length>0?Dl(zu(e,t),n.shape):e},b:()=>{const t=Gi(e,lc(qu(Ui(n,s)))),a=co(s.shape,r);return a.length>0?Dl(zu(t,a),s.shape):t}}}},{kernelName:Mn,inputsToSave:["a","b"],gradFunc:(e,t)=>{const[n,s]=t,r=ho(n.shape,s.shape);return{a:()=>{const t=Gi(e,zi(s,"float32")),a=co(n.shape,r);return a.length>0?Dl(zu(t,a),n.shape):t},b:()=>{const t=Gi(e,zi(n,"float32")),a=co(s.shape,r);return a.length>0?Dl(zu(t,a),s.shape):t}}}},{kernelName:Ln,gradFunc:e=>({x:()=>lc(e)})},{kernelName:Un,inputsToSave:["indices"],gradFunc:(e,t)=>{const n=t[0];return{indices:()=>Nc(n.shape,"float32")}}},{kernelName:Vn,gradFunc:e=>({x:()=>qi(e)})},{kernelName:Gn,saveAllInputs:!0,gradFunc:(e,t,n)=>{const{axis:s}=n;return Zh(e,s).map((e=>()=>e))}},Pm,Pm,Wm,{kernelName:qn,inputsToSave:["x","alpha"],gradFunc:(e,t)=>{const[n,s]=t,r=Xu(n,0);return{x:()=>vu(r,e,Gi(e,s)),alpha:()=>{let t=vu(r,qi(e),Gi(e,n));const a=co(s.shape,e.shape);return a.length>0&&(t=zu(t,a)),Dl(t,s.shape)}}}},{kernelName:Kn,inputsToSave:["x"],gradFunc:(e,t,n)=>{const[s]=t,{axis:r}=n;let a=[];return a=null==r?s.shape.map(((e,t)=>t)):"number"==typeof r?[r]:r,{x:()=>function(e,t,n){const s=e.shape.length,r=s-n.length,a=Fu(n,s);let i=e;null!=a&&(i=rd(e,a));const o=i.shape.slice(),l=o.splice(s-n.length,n.length).reduce(((e,t)=>e*t),1);o.push(l);let u=function(e,t,n){const s=e.shape.slice();s[n]=1;const r=Dl(t,s),a=pu(e,n,!0,!1),i=pu(e,n,!0,!0),o=Gi(a,i);return Gi(r,o)}(i.reshape(o),t,r);if(u=u.reshape(i.shape),null!=a){const e=Du(a);u=rd(u,e)}return u}(s,e,a)}}},{kernelName:es,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>Ui(e,lc(Hi(n)))}}},{kernelName:os,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t,s=Gi(sc(n,6),Mh(n));return{x:()=>Gi(e,zi(s,"float32"))}}},{kernelName:ts,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>Gi(e,zi(Mh(n),"float32"))}}},{kernelName:ns,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>Dl(e,n.shape)}}},{kernelName:as,inputsToSave:["images"],gradFunc:(e,t,n)=>{const[s]=t,r={dy:e,images:s};return{images:()=>pa.runKernel(is,r,n)}}},{kernelName:ss,inputsToSave:["images"],gradFunc:(e,t,n)=>{const[s]=t,r={dy:e,images:s};return{images:()=>pa.runKernel(rs,r,n)}}},{kernelName:ls,gradFunc:(e,t,n)=>{const{dims:s}=n,r=ge(s,e.shape);return{x:()=>ch(e,r)}}},{kernelName:us,gradFunc:e=>({x:()=>qi(e)})},{kernelName:cs,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>lc(Ui(e,Gi(ao(n,1.5),2)))}}},{kernelName:fs,inputsToSave:["condition"],gradFunc:(e,t)=>{const[n]=t;return{condition:()=>zi(qi(n),"float32"),t:()=>Gi(e,zi(n,e.dtype)),e:()=>Gi(e,zi(fc(n),e.dtype))}}},Vm,{kernelName:ws,outputsToSave:[!0],gradFunc:(e,t)=>{const[n]=t;return{x:()=>Gi(e,Gi(n,io(Xi(1),n)))}}},{kernelName:xs,gradFunc:e=>({x:()=>qi(e)})},{kernelName:ys,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>Gi(hu(zi(n,"float32")),e)}}},{kernelName:bs,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>Gi(du(zi(n,"float32")),e)}}},{kernelName:gs,inputsToSave:["x"],gradFunc:(e,t,n)=>{const[s]=t,{begin:r,size:a}=n,i=s.shape,[o,l]=rl(s,r,a),u=[];for(let t=0;t<e.rank;t++)u.push([o[t],i[t]-o[t]-l[t]]);return{x:()=>Lc(e,u)}}},{kernelName:Ts,outputsToSave:[!0],gradFunc:(e,t,n)=>{const[s]=t,{dim:r}=n,a=Gi(e,s);return{logits:()=>io(a,Gi(zu(a,[r],!0),s))}}},{kernelName:vs,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>Gi(e,Bl(n))}}},Um,Um,Gm,Gm,{kernelName:ks,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>Ui(e,Gi(ji(zi(n,"float32")),2))}}},{kernelName:_s,inputsToSave:["a","b"],gradFunc:(e,t)=>{const[n,s]=t,r=Xi(2);return{a:()=>Gi(e,Gi(r,io(n,s))),b:()=>Gi(e,Gi(r,io(s,n)))}}},{kernelName:Fs,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>Gi(e,Gi(zi(n,"float32"),2))}}},{kernelName:Ys,gradFunc:e=>({x:()=>qi(e)})},{kernelName:Bs,inputsToSave:["a","b"],gradFunc:(e,t)=>{const[n,s]=t,r=ho(n.shape,s.shape);return{a:()=>{let t=e;const s=co(n.shape,r);return s.length>0&&(t=zu(t,s)),Dl(t,n.shape)},b:()=>{let t=e;const n=co(s.shape,r);return n.length>0&&(t=zu(t,n)),Dl(lc(t),s.shape)}}}},{kernelName:Is,inputsToSave:["x"],gradFunc:(e,t,n)=>{const[s]=t,r=s.shape.slice(),{axis:a}=n;ge(a,s.shape).forEach((e=>{r[e]=1}));const i=Dl(e,r),o=Gi(i,Sc(s.shape,"float32"));return{x:()=>o}}},{kernelName:Ps,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>Ui(e,Hi(hu(n)))}}},{kernelName:Ws,outputsToSave:[!0],gradFunc:(e,t)=>{const[n]=t;return{x:()=>Gi(io(Xi(1),Hi(n)),e)}}},{kernelName:Vs,inputsToSave:["x"],gradFunc:(e,t,n)=>{const[s]=t,{reps:r}=n;return{x:()=>{let t=qi(s);if(1===s.rank)for(let n=0;n<r[0];++n)t=Wi(t,Pl(e,[n*s.shape[0]],[s.shape[0]]));else if(2===s.rank)for(let n=0;n<r[0];++n)for(let a=0;a<r[1];++a)t=Wi(t,Pl(e,[n*s.shape[0],a*s.shape[1]],[s.shape[0],s.shape[1]]));else if(3===s.rank)for(let n=0;n<r[0];++n)for(let a=0;a<r[1];++a)for(let i=0;i<r[2];++i)t=Wi(t,Pl(e,[n*s.shape[0],a*s.shape[1],i*s.shape[2]],[s.shape[0],s.shape[1],s.shape[2]]));else{if(4!==s.rank)throw new Error(`Gradient for tile operation is not implemented for rank-${s.rank} tensors yet.`);for(let n=0;n<r[0];++n)for(let a=0;a<r[1];++a)for(let i=0;i<r[2];++i)for(let o=0;o<r[3];++o)t=Wi(t,Pl(e,[n*s.shape[0],a*s.shape[1],i*s.shape[2],o*s.shape[3]],[s.shape[0],s.shape[1],s.shape[2],s.shape[3]]))}return t}}}},{kernelName:js,gradFunc:(e,t,n)=>{const s=n,{perm:r}=s,a=Du(r);return{x:()=>rd(e,a)}}},{kernelName:qs,gradFunc:(e,t,n)=>{const s=n,{axis:r}=s;return{value:()=>Oh(e,r)}}},{kernelName:Ks,inputsToSave:["segmentIds"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>function(e,t){const n=po(t,qi(t)),s=Ku(e,n);let r=Yu(t,Xi(0,"int32"));const a=s.rank-r.rank;for(let e=0;e<a;++e)r=Uu(r,e+1);r=pc(r,Sc(s.shape,"bool"));const i=qi(s);return vu(r,s,i)}(e,n)}}},{kernelName:Xs,gradFunc:e=>({x:()=>qi(e)})}];for(const e of jm)cr(e);qr().prototype.abs=function(){return this.throwIfDisposed(),lo(this)},qr().prototype.acos=function(){return this.throwIfDisposed(),ol(this)},qr().prototype.acosh=function(){return this.throwIfDisposed(),ll(this)},qr().prototype.add=function(e){return this.throwIfDisposed(),Wi(this,e)},qr().prototype.all=function(e,t){return this.throwIfDisposed(),cl(this,e,t)},qr().prototype.any=function(e,t){return this.throwIfDisposed(),hl(this,e,t)},qr().prototype.argMax=function(e){return this.throwIfDisposed(),dl(this,e)},qr().prototype.argMin=function(e){return this.throwIfDisposed(),pl(this,e)},qr().prototype.asScalar=function(){return this.throwIfDisposed(),ie(1===this.size,(()=>"The array must have only 1 element.")),Dl(this,[])},qr().prototype.asType=function(e){return this.throwIfDisposed(),zi(this,e)},qr().prototype.as1D=function(){return this.throwIfDisposed(),Dl(this,[this.size])},qr().prototype.as2D=function(e,t){return this.throwIfDisposed(),Dl(this,[e,t])},qr().prototype.as3D=function(e,t,n){return this.throwIfDisposed(),Dl(this,[e,t,n])},qr().prototype.as4D=function(e,t,n,s){return this.throwIfDisposed(),Dl(this,[e,t,n,s])},qr().prototype.as5D=function(e,t,n,s,r){return this.throwIfDisposed(),Dl(this,[e,t,n,s,r])},qr().prototype.asin=function(){return this.throwIfDisposed(),fl(this)},qr().prototype.asinh=function(){return this.throwIfDisposed(),ml(this)},qr().prototype.atan=function(){return this.throwIfDisposed(),gl(this)},qr().prototype.atan2=function(e){return this.throwIfDisposed(),yl(this,e)},qr().prototype.atanh=function(){return this.throwIfDisposed(),bl(this)},qr().prototype.avgPool=function(e,t,n,s){return this.throwIfDisposed(),Ol(this,e,t,n,s)},qr().prototype.batchToSpaceND=function(e,t){return this.throwIfDisposed(),Ul(this,e,t)},qr().prototype.batchNorm=function(e,t,n,s,r){return this.throwIfDisposed(),Gl(this,e,t,n,s,r)},qr().prototype.broadcastTo=function(e){return this.throwIfDisposed(),Jl(this,e)},qr().prototype.cast=function(e){return this.throwIfDisposed(),zi(this,e)},qr().prototype.ceil=function(){return this.throwIfDisposed(),Zl(this)},qr().prototype.clipByValue=function(e,t){return this.throwIfDisposed(),Ql(this,e,t)},qr().prototype.concat=function(e,t){return this.throwIfDisposed(),e instanceof Hr&&(e=[e]),Ll([this,...e],t)},qr().prototype.conv1d=function(e,t,n,s,r,a){return this.throwIfDisposed(),au(this,e,t,n,s,r,a)},qr().prototype.conv2dTranspose=function(e,t,n,s,r){return this.throwIfDisposed(),ou(this,e,t,n,s,r)},qr().prototype.conv2d=function(e,t,n,s,r,a){return this.throwIfDisposed(),ru(this,e,t,n,s,r,a)},qr().prototype.cos=function(){return this.throwIfDisposed(),hu(this)},qr().prototype.cosh=function(){return this.throwIfDisposed(),du(this)},qr().prototype.cumprod=function(e,t,n){return this.throwIfDisposed(),pu(this,e,t,n)},qr().prototype.cumsum=function(e,t,n){return this.throwIfDisposed(),fu(this,e,t,n)},qr().prototype.depthToSpace=function(e,t){return this.throwIfDisposed(),gu(this,e,t)},qr().prototype.depthwiseConv2d=function(e,t,n,s,r,a){return this.throwIfDisposed(),yu(this,e,t,n,s,r,a)},qr().prototype.dilation2d=function(e,t,n,s,r){return this.throwIfDisposed(),xu(this,e,t,n,s,r)},qr().prototype.divNoNan=function(e){return this.throwIfDisposed(),ku(this,e)},qr().prototype.div=function(e){return this.throwIfDisposed(),Ui(this,e)},qr().prototype.dot=function(e){return this.throwIfDisposed(),Iu(this,e)},qr().prototype.elu=function(){return this.throwIfDisposed(),Su(this)},qr().prototype.equal=function(e){return this.throwIfDisposed(),wu(this,e)},qr().prototype.erf=function(){return this.throwIfDisposed(),Cu(this)},qr().prototype.euclideanNorm=function(e,t){return this.throwIfDisposed(),Wu(this,e,t)},qr().prototype.exp=function(){return this.throwIfDisposed(),Vu(this)},qr().prototype.expandDims=function(e){return this.throwIfDisposed(),Uu(this,e)},qr().prototype.expm1=function(){return this.throwIfDisposed(),Gu(this)},qr().prototype.fft=function(){return this.throwIfDisposed(),$h(this)},qr().prototype.flatten=function(){return this.throwIfDisposed(),Dl(this,[this.size])},qr().prototype.floor=function(){return this.throwIfDisposed(),qu(this)},qr().prototype.floorDiv=function(e){return this.throwIfDisposed(),Vi(this,e)},qr().prototype.gather=function(e,t,n){return this.throwIfDisposed(),Ku(this,e,t,n)},qr().prototype.greaterEqual=function(e){return this.throwIfDisposed(),Yu(this,e)},qr().prototype.greater=function(e){return this.throwIfDisposed(),Xu(this,e)},qr().prototype.ifft=function(){return this.throwIfDisposed(),Eh(this)},qr().prototype.irfft=function(){return this.throwIfDisposed(),Ah(this)},qr().prototype.isFinite=function(){return this.throwIfDisposed(),Zu(this)},qr().prototype.isInf=function(){return this.throwIfDisposed(),Qu(this)},qr().prototype.isNaN=function(){return this.throwIfDisposed(),ec(this)},qr().prototype.leakyRelu=function(e){return this.throwIfDisposed(),tc(this,e)},qr().prototype.lessEqual=function(e){return this.throwIfDisposed(),sc(this,e)},qr().prototype.less=function(e){return this.throwIfDisposed(),nc(this,e)},qr().prototype.localResponseNormalization=function(e,t,n,s){return this.throwIfDisposed(),ac(this,e,t,n,s)},qr().prototype.logSigmoid=function(){return this.throwIfDisposed(),cc(this)},qr().prototype.logSoftmax=function(e){return this.throwIfDisposed(),hc(this,e)},qr().prototype.logSumExp=function(e,t){return this.throwIfDisposed(),dc(this,e,t)},qr().prototype.log=function(){return this.throwIfDisposed(),ic(this)},qr().prototype.log1p=function(){return this.throwIfDisposed(),oc(this)},qr().prototype.logicalAnd=function(e){return this.throwIfDisposed(),pc(this,e)},qr().prototype.logicalNot=function(){return this.throwIfDisposed(),fc(this)},qr().prototype.logicalOr=function(e){return this.throwIfDisposed(),mc(this,e)},qr().prototype.logicalXor=function(e){return this.throwIfDisposed(),gc(this,e)},qr().prototype.matMul=function(e,t,n){return this.throwIfDisposed(),zl(this,e,t,n)},qr().prototype.maxPool=function(e,t,n,s){return this.throwIfDisposed(),wc(this,e,t,n,s)},qr().prototype.max=function(e,t){return this.throwIfDisposed(),Mu(this,e,t)},qr().prototype.maximum=function(e){return this.throwIfDisposed(),po(this,e)},qr().prototype.mean=function(e,t){return this.throwIfDisposed(),Ic(this,e,t)},qr().prototype.min=function(e,t){return this.throwIfDisposed(),Lu(this,e,t)},qr().prototype.minimum=function(e){return this.throwIfDisposed(),Cc(this,e)},qr().prototype.mirrorPad=function(e,t){return this.throwIfDisposed(),$c(this,e,t)},qr().prototype.mod=function(e){return this.throwIfDisposed(),Ec(this,e)},qr().prototype.mul=function(e){return this.throwIfDisposed(),Gi(this,e)},qr().prototype.neg=function(){return this.throwIfDisposed(),lc(this)},qr().prototype.norm=function(e,t,n){return this.throwIfDisposed(),Pu(this,e,t,n)},qr().prototype.notEqual=function(e){return this.throwIfDisposed(),Fc(this,e)},qr().prototype.oneHot=function(e,t=1,n=0){return this.throwIfDisposed(),Dc(this,e,t,n)},qr().prototype.onesLike=function(){return this.throwIfDisposed(),Oc(this)},qr().prototype.pad=function(e,t){return this.throwIfDisposed(),Lc(this,e,t)},qr().prototype.pool=function(e,t,n,s,r,a){return this.throwIfDisposed(),Uc(this,e,t,n,s,r,a)},qr().prototype.pow=function(e){return this.throwIfDisposed(),ao(this,e)},qr().prototype.prelu=function(e){return this.throwIfDisposed(),Gc(this,e)},qr().prototype.prod=function(e,t){return this.throwIfDisposed(),jc(this,e,t)},qr().prototype.reciprocal=function(){return this.throwIfDisposed(),oh(this)},qr().prototype.relu=function(){return this.throwIfDisposed(),lh(this)},qr().prototype.relu6=function(){return this.throwIfDisposed(),uh(this)},qr().prototype.reshapeAs=function(e){return this.throwIfDisposed(),Dl(this,e.shape)},qr().prototype.reshape=function(e){return this.throwIfDisposed(),Dl(this,e)},qr().prototype.resizeBilinear=function(e,t,n){return this.throwIfDisposed(),jd(this,e,t,n)},qr().prototype.resizeNearestNeighbor=function(e,t,n){return this.throwIfDisposed(),Hd(this,e,t,n)},qr().prototype.reverse=function(e){return this.throwIfDisposed(),ch(this,e)},qr().prototype.rfft=function(){return this.throwIfDisposed(),_h(this)},qr().prototype.round=function(){return this.throwIfDisposed(),mh(this)},qr().prototype.rsqrt=function(){return this.throwIfDisposed(),gh(this)},qr().prototype.selu=function(){return this.throwIfDisposed(),yh(this)},qr().prototype.separableConv2d=function(e,t,n,s,r,a){return this.throwIfDisposed(),bh(this,e,t,n,s,r,a)},qr().prototype.sigmoid=function(){return this.throwIfDisposed(),Bl(this)},qr().prototype.sign=function(){return this.throwIfDisposed(),wh(this)},qr().prototype.sin=function(){return this.throwIfDisposed(),vh(this)},qr().prototype.sinh=function(){return this.throwIfDisposed(),kh(this)},qr().prototype.slice=function(e,t){return this.throwIfDisposed(),Pl(this,e,t)},qr().prototype.softmax=function(e){return this.throwIfDisposed(),Ch(this,e)},qr().prototype.softplus=function(){return this.throwIfDisposed(),uc(this)},qr().prototype.spaceToBatchND=function(e,t){return this.throwIfDisposed(),Vc(this,e,t)},qr().prototype.split=function(e,t){return this.throwIfDisposed(),Rh(this,e,t)},qr().prototype.sqrt=function(){return this.throwIfDisposed(),ji(this)},qr().prototype.square=function(){return this.throwIfDisposed(),Hi(this)},qr().prototype.squaredDifference=function(e){return this.throwIfDisposed(),Fh(this,e)},qr().prototype.squeeze=function(e){return this.throwIfDisposed(),Dh(this,e)},qr().prototype.stack=function(e,t){this.throwIfDisposed();const n=e instanceof Hr?[this,e]:[this,...e];return Oh(n,t)},qr().prototype.step=function(e){return this.throwIfDisposed(),Mh(this,e)},qr().prototype.stridedSlice=function(e,t,n,s,r,a,i,o){return this.throwIfDisposed(),Lh(this,e,t,n,s,r,a,i,o)},qr().prototype.sub=function(e){return this.throwIfDisposed(),io(this,e)},qr().prototype.sum=function(e,t){return this.throwIfDisposed(),zu(this,e,t)},qr().prototype.tan=function(){return this.throwIfDisposed(),zh(this)},qr().prototype.tanh=function(){return this.throwIfDisposed(),Wl(this)},qr().prototype.tile=function(e){return this.throwIfDisposed(),ju(this,e)},qr().prototype.toBool=function(){return this.throwIfDisposed(),zi(this,"bool")},qr().prototype.toFloat=function(){return this.throwIfDisposed(),zi(this,"float32")},qr().prototype.toInt=function(){return this.throwIfDisposed(),zi(this,"int32")},qr().prototype.topk=function(e,t){return this.throwIfDisposed(),Kh(this,e,t)},qr().prototype.transpose=function(e){return this.throwIfDisposed(),rd(this,e)},qr().prototype.unique=function(e){return this.throwIfDisposed(),Yh(this,e)},qr().prototype.unsortedSegmentSum=function(e,t){return this.throwIfDisposed(),Jh(this,e,t)},qr().prototype.unstack=function(e){return this.throwIfDisposed(),Zh(this,e)},qr().prototype.where=function(e,t){return this.throwIfDisposed(),vu(e,this,t)},qr().prototype.zerosLike=function(){return this.throwIfDisposed(),qi(this)};class Hm extends Error{constructor(e){super(e),Object.setPrototypeOf(this,Hm.prototype)}}class qm extends Error{constructor(e){super(e),Object.setPrototypeOf(this,qm.prototype)}}class Km extends Error{constructor(e){super(e),Object.setPrototypeOf(this,Km.prototype)}}class Xm extends Error{constructor(e){super(e),Object.setPrototypeOf(this,Xm.prototype)}}class Ym extends Error{constructor(e){super(e),Object.setPrototypeOf(this,Ym.prototype)}}Error;class Jm{constructor(e){this.maxEntries=e||100,this.cache=new Map}get(e){let t;return this.cache.has(e)&&(t=this.cache.get(e),this.cache.delete(e),this.cache.set(e,t)),t}put(e,t){if(this.cache.has(e))this.cache.delete(e);else if(this.cache.size>=this.maxEntries){const e=this.cache.keys().next().value;this.cache.delete(e)}this.cache.set(e,t)}getMaxEntries(){return this.maxEntries}setMaxEntries(e){if(e<0)throw new Error(`The maxEntries of LRU caches must be at least 0, but got ${e}.`);if(this.maxEntries>e)for(let t=0;t<this.maxEntries-e;t++){const e=this.cache.keys().next().value;this.cache.delete(e)}this.maxEntries=e}}function Zm(e,t){if(Array.isArray(e)){let n=[];for(let s=0;s<t;s++)n=n.concat(e);return n}{const n=new Array(t);return n.fill(e),n}}function Qm(e,t){if(!e)throw new Ym(t)}function eg(e,t){let n=0;for(const s of e)s===t&&n++;return n}function tg(e){return 1===e.length?e[0]:e}function ng(e){return Array.isArray(e)?e:[e]}function sg(e){const t=e.replace(/(.)([A-Z][a-z0-9]+)/g,"$1_$2").replace(/([a-z])([A-Z])/g,"$1_$2").toLowerCase();return"_"!==t[0]?t:"private"+t}function rg(e){return e.length<=1||-1===e.indexOf("_")?e:e.replace(/[_]+(\w|$)/g,((e,t)=>t.toUpperCase()))}let ag={};function ig(e){if(null==e)return null;const t={};return t.className=e.getClassName(),t.config=e.getConfig(),t}function og(e){if(null!=e&&"object"==typeof e)if(Array.isArray(e))e.forEach((e=>og(e)));else{const t=Object.keys(e);for(const n of t){const t=e[n];null!=t&&"object"==typeof t&&(Array.isArray(t)||"ndarray"!==t.type||"number"!=typeof t.value?og(t):e[n]=t.value)}}}function lg(e,t={},n={},s="object",r=!1){if("string"==typeof e){const r=e;let a;if(r in n)a=n[r];else if(r in ag)a=ag[r];else if(a=t[r],null==a)throw new Km(`Unknown ${s}: ${e}. This may be due to one of the following reasons:\n1. The ${s} is defined in Python, in which case it needs to be ported to TensorFlow.js or your JavaScript code.\n2. The custom ${s} is defined in JavaScript, but is not registered properly with tf.serialization.registerClass().`);return a}{const a=e;if(null==a.className||null==a.config)throw new Km(`${s}: Improper config format: ${JSON.stringify(a)}.\n'className' and 'config' must set.`);const i=a.className;let o,l;if(i in n?[o,l]=n[i]:i in ag?[o,l]=ag.className:i in t&&([o,l]=t[i]),null==o)throw new Km(`Unknown ${s}: ${i}. This may be due to one of the following reasons:\n1. The ${s} is defined in Python, in which case it needs to be ported to TensorFlow.js or your JavaScript code.\n2. The custom ${s} is defined in JavaScript, but is not registered properly with tf.serialization.registerClass().`);if(null!=l){const e={};for(const t of Object.keys(ag))e[t]=ag[t];for(const t of Object.keys(n))e[t]=n[t];a.config.customObjects=e;const t=Object.assign({},ag);for(const e of Object.keys(n))ag[e]=n[e];og(a.config);const s=l(o,a.config,n,r);return ag=Object.assign({},t),s}{const e=Object.assign({},ag);for(const e of Object.keys(n))ag[e]=n[e];const t=new o(a.config);return ag=Object.assign({},e),t}}}function ug(e,t){return-1*function(e,t){return e<t?-1:e>t?1:0}(e,t)}function cg(e){if(null==e)return e;const t=[];for(const n of e)-1===t.indexOf(n)&&t.push(n);return t}function hg(e){if(null==e)throw new Km(`Invalid value in obj: ${JSON.stringify(e)}`);for(const t in e)if(e.hasOwnProperty(t))return!1;return!0}function dg(e,t,n){if(null!=n&&e.indexOf(n)<0)throw new Km(`${n} is not a valid ${t}.  Valid values are ${e} or null/undefined.`)}function pg(e,t,n=0,s=1/0){return Qm(n>=0),Qm(s>=n),Array.isArray(e)&&e.length>=n&&e.length<=s&&e.every((e=>typeof e===t))}function fg(e,t){Array.isArray(e)?(ie(e.length>0,(()=>`${t} is unexpectedly an empty array.`)),e.forEach(((e,n)=>fg(e,`element ${n+1} of ${t}`)))):ie(Number.isInteger(e)&&e>0,(()=>`Expected ${t} to be a positive integer, but got ${mg(e)}.`))}function mg(e){return null===e?"null":Array.isArray(e)?"["+e.map((e=>mg(e))).join(",")+"]":"string"==typeof e?`"${e}"`:`${e}`}function gg(e){return"relu"===e?"relu":"linear"===e?"linear":"elu"===e?"elu":null}let yg=0;function bg(){return yg++}const xg={};function wg(e=""){return e in xg||(xg[e]=0),xg[e]+=1,e+xg[e].toString()}const vg=["channelsFirst","channelsLast"],kg=["nearest","bilinear"],Ig=["valid","same","causal"],Ng=["max","avg"],Sg=["sum","mul","concat","ave"],Tg=new Map;function Cg(e){dg(vg,"DataFormat",e)}function $g(e){dg(Ig,"PaddingMode",e)}function Eg(e){dg(Ng,"PoolMode",e)}const Ag=[];function Rg(e,t){Ag.push(e);try{const e=t();return Ag.pop(),e}catch(e){throw Ag.pop(),e}}function _g(e){if(!Og(e))throw new Error("Not a valid tensor name: '"+e+"'");return(0===Ag.length?"":Ag.join("/")+"/")+e}function Fg(e){if(!Og(e))throw new Error("Not a valid tensor name: '"+e+"'");Tg.has(e)||Tg.set(e,0);const t=Tg.get(e);if(Tg.set(e,Tg.get(e)+1),t>0){const n=`${e}_${t}`;return Tg.set(n,1),n}return e}const Dg=new RegExp(/^[A-Za-z0-9][-A-Za-z0-9\._\/]*$/);function Og(e){return!!e.match(Dg)}function Mg(e,t,n){null==t&&(t=0),null==n&&(n=e.length);let s=1;for(let r=t;r<n;++r)s*=e[r];return s}function Lg(e){if(0===e.length)return Number.NaN;let t=Number.POSITIVE_INFINITY;for(let n=0;n<e.length;n++){const s=e[n];s<t&&(t=s)}return t}function zg(e){if(0===e.length)return Number.NaN;let t=Number.NEGATIVE_INFINITY;for(let n=0;n<e.length;n++){const s=e[n];s>t&&(t=s)}return t}function Bg(e,t){if(t<e)throw new Km(`end (${t}) < begin (${e}) is forbidden.`);const n=[];for(let s=e;s<t;++s)n.push(s);return n}let Pg;function Wg(){return null==Pg&&(Pg=Ma().epsilon()),Pg}function Vg(e,t){return zi(e,t)}function Ug(e,t=-1){const n=e.shape.slice();return t<0&&(t=n.length+t+1),n.splice(t,0,1),Dl(e,n)}function Gg(e,t,n){return _a((()=>{switch(e.rank){case 1:return Ih(e,t,n);case 2:return Nh(e,[t,0],[n,e.shape[1]]);case 3:return Sh(e,[t,0,0],[n,e.shape[1],e.shape[2]]);case 4:return Th(e,[t,0,0,0],[n,e.shape[1],e.shape[2],e.shape[3]]);case 5:return Pl(e,[t,0,0,0,0],[n,e.shape[1],e.shape[2],e.shape[3],e.shape[4]]);case 6:return Pl(e,[t,0,0,0,0,0],[n,e.shape[1],e.shape[2],e.shape[3],e.shape[4],e.shape[5]]);default:throw new Km(`sliceAlongFirstAxis() received an unsupported tensor rank: ${e.rank}`)}}))}function jg(e,t,n){return _a((()=>{switch(e.rank){case 1:return Ih(e,t,n);case 2:return Nh(e,[0,t],[e.shape[0],n]);case 3:return Sh(e,[0,0,t],[e.shape[0],e.shape[1],n]);case 4:return Th(e,[0,0,0,t],[e.shape[0],e.shape[1],e.shape[2],n]);default:throw new Km(`sliceAlongLastAxis() received an unsupported tensor rank: ${e.rank}`)}}))}function Hg(e,t,n,s){return _a((()=>{switch(e.rank){case 1:return Ih(e,t,n);case 2:switch(s){case 1:return Gg(e,t,n);case 2:return jg(e,t,n);default:throw new Km(`The axis is not within the rank of the tensor ${s}`)}case 3:switch(s){case 1:return Gg(e,t,n);case 2:return Sh(e,[0,t,0],[e.shape[0],n,e.shape[2]]);case 3:return jg(e,t,n);default:throw new Km(`The axis is not within the rank of the tensor ${s}`)}case 4:switch(s){case 1:return Gg(e,t,n);case 2:return Th(e,[0,t,0,0],[e.shape[0],n,e.shape[2],e.shape[3]]);case 3:return Th(e,[0,0,t,0],[e.shape[0],e.shape[1],n,e.shape[3]]);case 4:return jg(e,t,n);default:throw new Km(`The axis is not within the rank of the tensor ${s}`)}default:throw new Km(`sliceAlongLastAxis() received an unsupported tensor rank: ${e.rank}`)}}))}function qg(e,t=-1){let n;return t<0&&(n=e[0].rank,t=0!==n?n:0),t===e[0].rank&&(t=-1),Ll(e,t)}function Kg(e,t){switch(e.rank){case 1:return eu([e,t]);case 2:return tu([e,t],0);case 3:return nu([e,t],0);case 4:return su([e,t],0);default:throw new Km(`concatAlongFirstAxis() received an unsupported tensor rank: ${e.rank}`)}}function Xg(e,t){if(Array.isArray(t)||(t=[t]),e.rank!==t.length)throw new Km(`The length of input n (${t.length}) does not match the number of dimensions in input x (${e.rank})`);return ju(e,t)}function Yg(e,t=0,n=1,s,r){return th(e,t,n,s,r)}function Jg(e,t,n,s){if(e.rank<2||t.rank<2)throw new Xm(`dot requires both inputs to be rank >= 2 but got x shape = ${e.shape} and y shape = ${t.shape}`);if(t.rank>=3&&e.shape.slice(-1)[0]!==t.shape.slice(-2)[0])throw new Xm(`If rank y >= 3, then the second last dim of y must equal the last dim of x but got x shape = ${e.shape} and  y shape = ${t.shape}`);if(2===e.rank&&2===t.rank)return kd({a:e,b:t,transposeA:!1,transposeB:!1,bias:s?ey(e.rank,s,"channelsLast"):null,activation:n});{const r=e.shape.slice(),a=r.pop();e=Dl(e,[-1,a]);const i=t.shape.slice(),o=i.pop(),l=i.pop(),u=[...i,o],c=Array.from({length:t.rank},((e,n)=>0===n?t.rank-2:n<=t.rank-2?n-1:n));t=Dl(rd(t,c),[l,-1]);const h=[...r,...u];return Dl(kd({a:e,b:t,transposeA:!1,transposeB:!1,bias:s?ey(e.rank,s,"channelsLast"):null,activation:n}),h)}}function Zg(e,t,n){return _a((()=>(t=Array.isArray(t)?Bh(t,"int32"):zi(t,"int32"),Ku(e,t,n))))}function Qg(e){return Gi(e,e)}function ey(e,t,n){const s=t.shape;if(1!==t.rank&&t.rank!==e)throw new Km(`Unexpected bias dimensions: ${t.rank}; expected it to be 1 or ${e}`);if(5===e){if("channelsFirst"===n)return 1===s.length?Dl(t,[1,s[0],1,1,1]):Dl(t,[1,s[3],s[0],s[1],s[2]]);if("channelsLast"===n)return 1===s.length?Dl(t,[1,1,1,1,s[0]]):Dl(t,[1].concat(s))}else if(4===e){if("channelsFirst"===n)return 1===s.length?Dl(t,[1,s[0],1,1]):Dl(t,[1,s[2],s[0],s[1]]);if("channelsLast"===n)return 1===s.length?Dl(t,[1,1,1,s[0]]):Dl(t,[1].concat(s))}else if(3===e){if("channelsFirst"===n)return 1===s.length?Dl(t,[1,s[0],1]):Dl(t,[1,s[1],s[0]]);if("channelsLast"===n)return 1===s.length?Dl(t,[1,1,s[0]]):Dl(t,[1].concat(s))}else if(e<3)return t;throw new Km(`Unsupported input rank by biasAdd: ${t.rank}`)}function ty(e,t,n){return _a((()=>(null==n&&(n="channelsLast"),Cg(n),Wi(e,ey(e.rank,t,n)))))}function ny(e,t,n,s){return _a((()=>ud(e,t,n,s)))}function sy(e,t,n=!1){return n?e():t()}const ry=["fanIn","fanOut","fanAvg"],ay=["normal","uniform","truncatedNormal"];class iy extends Zi{fromConfigUsesCustomObjects(){return!1}getConfig(){return{}}}class oy extends iy{apply(e,t){return Nc(e,t)}}oy.className="Zeros",eo(oy);class ly extends iy{apply(e,t){return Sc(e,t)}}ly.className="Ones",eo(ly);class uy extends iy{constructor(e){if(super(),"object"!=typeof e)throw new Km(`Expected argument of type ConstantConfig but got ${e}`);if(void 0===e.value)throw new Km(`config must have value set but got ${e}`);this.value=e.value}apply(e,t){return _a((()=>Gi(Xi(this.value),Sc(e,t))))}getConfig(){return{value:this.value}}}uy.className="Constant",eo(uy);class cy extends iy{constructor(e){super(),this.DEFAULT_MINVAL=-.05,this.DEFAULT_MAXVAL=.05,this.minval=e.minval||this.DEFAULT_MINVAL,this.maxval=e.maxval||this.DEFAULT_MAXVAL,this.seed=e.seed}apply(e,t){return sh(e,this.minval,this.maxval,t,this.seed)}getConfig(){return{minval:this.minval,maxval:this.maxval,seed:this.seed}}}cy.className="RandomUniform",eo(cy);class hy extends iy{constructor(e){super(),this.DEFAULT_MEAN=0,this.DEFAULT_STDDEV=.05,this.mean=e.mean||this.DEFAULT_MEAN,this.stddev=e.stddev||this.DEFAULT_STDDEV,this.seed=e.seed}apply(e,t){if("float32"!==(t=t||"float32")&&"int32"!==t)throw new Xm(`randomNormal does not support dType ${t}.`);return Yg(e,this.mean,this.stddev,t,this.seed)}getConfig(){return{mean:this.mean,stddev:this.stddev,seed:this.seed}}}hy.className="RandomNormal",eo(hy);class dy extends iy{constructor(e){super(),this.DEFAULT_MEAN=0,this.DEFAULT_STDDEV=.05,this.mean=e.mean||this.DEFAULT_MEAN,this.stddev=e.stddev||this.DEFAULT_STDDEV,this.seed=e.seed}apply(e,t){if("float32"!==(t=t||"float32")&&"int32"!==t)throw new Xm(`truncatedNormal does not support dType ${t}.`);return Xh(e,this.mean,this.stddev,t,this.seed)}getConfig(){return{mean:this.mean,stddev:this.stddev,seed:this.seed}}}dy.className="TruncatedNormal",eo(dy);class py extends iy{constructor(e){super(),this.gain=null!=e.gain?e.gain:1}apply(e,t){return _a((()=>{if(2!==e.length||e[0]!==e[1])throw new Km("Identity matrix initializer can only be used for 2D square matrices.");return Gi(this.gain,Hu(e[0]))}))}getConfig(){return{gain:this.gain}}}py.className="Identity",eo(py);class fy extends iy{constructor(e){if(super(),e.scale<0)throw new Km(`scale must be a positive float. Got: ${e.scale}`);var t;this.scale=null==e.scale?1:e.scale,this.mode=null==e.mode?"fanIn":e.mode,t=this.mode,dg(ry,"FanMode",t),this.distribution=null==e.distribution?"normal":e.distribution,function(e){dg(ay,"Distribution",e)}(this.distribution),this.seed=e.seed}apply(e,t){const n=function(e,t="channelsLast"){let n,s;if(Cg(t),2===e.length)n=e[0],s=e[1];else if(-1!==[3,4,5].indexOf(e.length)){if("channelsFirst"===t){const t=Mg(e,2);n=e[1]*t,s=e[0]*t}else if("channelsLast"===t){const t=Mg(e,0,e.length-2);n=e[e.length-2]*t,s=e[e.length-1]*t}}else{const t=Mg(e);n=Math.sqrt(t),s=Math.sqrt(t)}return[n,s]}(e),s=n[0],r=n[1];let a=this.scale;if("fanIn"===this.mode?a/=Math.max(1,s):"fanOut"===this.mode?a/=Math.max(1,r):a/=Math.max(1,(s+r)/2),"normal"===this.distribution){const n=Math.sqrt(a);if("float32"!==(t=t||"float32")&&"int32"!==t)throw new Xm(`${this.getClassName()} does not support dType ${t}.`);return Xh(e,0,n,t,this.seed)}{const n=Math.sqrt(3*a);return sh(e,-n,n,t,this.seed)}}getConfig(){return{scale:this.scale,mode:this.mode,distribution:this.distribution,seed:this.seed}}}fy.className="VarianceScaling",eo(fy);class my extends fy{constructor(e){super({scale:1,mode:"fanAvg",distribution:"uniform",seed:null==e?null:e.seed})}getClassName(){return fy.className}}my.className="GlorotUniform",eo(my);class gy extends fy{constructor(e){super({scale:1,mode:"fanAvg",distribution:"normal",seed:null==e?null:e.seed})}getClassName(){return fy.className}}gy.className="GlorotNormal",eo(gy);class yy extends fy{constructor(e){super({scale:2,mode:"fanIn",distribution:"normal",seed:null==e?null:e.seed})}getClassName(){return fy.className}}yy.className="HeNormal",eo(yy);class by extends fy{constructor(e){super({scale:2,mode:"fanIn",distribution:"uniform",seed:null==e?null:e.seed})}getClassName(){return fy.className}}by.className="HeUniform",eo(by);class xy extends fy{constructor(e){super({scale:1,mode:"fanIn",distribution:"normal",seed:null==e?null:e.seed})}getClassName(){return fy.className}}xy.className="LeCunNormal",eo(xy);class wy extends fy{constructor(e){super({scale:1,mode:"fanIn",distribution:"uniform",seed:null==e?null:e.seed})}getClassName(){return fy.className}}wy.className="LeCunUniform",eo(wy);class vy extends iy{constructor(e){super(),this.DEFAULT_GAIN=1,this.ELEMENTS_WARN_SLOW=2e3,this.gain=null==e.gain?this.DEFAULT_GAIN:e.gain,this.seed=e.seed}apply(e,t){return _a((()=>{if(e.length<2)throw new Xm("Shape must be at least 2D.");if("int32"!==t&&"float32"!==t&&void 0!==t)throw new TypeError(`Unsupported data type ${t}.`);const n=ue(e.slice(0,-1)),s=e[e.length-1],r=n*s;r>this.ELEMENTS_WARN_SLOW&&console.warn(`Orthogonal initializer is being called on a matrix with more than ${this.ELEMENTS_WARN_SLOW} (${r}) elements: Slowness may result.`);const a=Yg([Math.max(s,n),Math.min(s,n)],0,1,t,this.seed),i=yp.qr(a,!1);let o=i[0];const l=i[1].flatten().stridedSlice([0],[Math.min(s,n)*Math.min(s,n)],[Math.min(s,n)+1]);return o=Gi(o,l.sign()),n<s&&(o=o.transpose()),Gi(Xi(this.gain),o.reshape(e))}))}getConfig(){return{gain:this.gain,seed:this.seed}}}vy.className="Orthogonal",eo(vy);const ky={constant:"Constant",glorotNormal:"GlorotNormal",glorotUniform:"GlorotUniform",heNormal:"HeNormal",heUniform:"HeUniform",identity:"Identity",leCunNormal:"LeCunNormal",leCunUniform:"LeCunUniform",ones:"Ones",orthogonal:"Orthogonal",randomNormal:"RandomNormal",randomUniform:"RandomUniform",truncatedNormal:"TruncatedNormal",varianceScaling:"VarianceScaling",zeros:"Zeros"};function Iy(e,t={}){return lg(e,Qi.getMap().classNameMap,t,"initializer")}function Ny(e){return ig(e)}function Sy(e){if("string"==typeof e){const t=e in ky?ky[e]:e;if("GlorotNormal"===t)return new gy;if("GlorotUniform"===t)return new my;if("HeNormal"===t)return new yy;if("HeUniform"===t)return new by;if("LeCunNormal"===t)return new xy;if("LeCunUniform"===t)return new wy;{const e={};return e.className=t,e.config={},Iy(e)}}return e instanceof iy?e:Iy(e)}function Ty(e){return Array.isArray(e)&&Array.isArray(e[0])}function Cy(e){return 0===e.length?[]:Array.isArray(e[0])?e:[e]}function $y(e){let t;if(Array.isArray(e)){if(1!==e.length)throw new Km(`Expected Tensor length to be 1; got ${e.length}`);t=e[0]}else t=e;return t}function Ey(e){if(Array.isArray(e)&&Array.isArray(e[0])){if(1===e.length)return e[0];throw new Km(`Expected exactly 1 Shape; got ${e.length}`)}return e}function Ay(e){let t=0;for(const n of e)0===n.shape.length?t+=1:t+=n.shape.reduce(((e,t)=>e*t));return t}const Ry="Variable";class _y{constructor(e,t="float32",n=Ry,s=!0,r=null){this.dtype=null==t?"float32":t,this.shape=e.shape,this.id=bg(),n=null==n?Ry:n,this.originalName=_g(n),this.name=Fg(this.originalName),this.trainable_=s,this.constraint=r,this.val=ed(e,this.trainable_,this.name,this.dtype)}read(){return this.assertNotDisposed(),this.val}write(e){return this.assertNotDisposed(),function(e,t){if(e.shape.toString()!==t.shape.toString())throw new Error("Shape mismatch: "+JSON.stringify(e.shape)+" vs. "+JSON.stringify(t.shape))}(this.val,e),this.val.id!==e.id&&(this.val.assign(e),null!=this.constraint&&this.val.assign(this.constraint.apply(this.val))),this}dispose(){this.assertNotDisposed(),this.val.dispose()}assertNotDisposed(){if(this.val.isDisposed)throw new Error(`LayersVariable ${this.name} is already disposed.`)}get trainable(){return this.trainable_}set trainable(e){this.trainable_=e,this.val.trainable=e}}function Fy(e){return e.map((e=>e.read()))}function Dy(e){e.forEach((e=>{e[0].write(e[1])}))}class Oy{constructor(e){this.dtype=e.dtype,this.shape=e.shape,null!=e.shape?this.ndim=e.shape.length:this.ndim=e.ndim,this.maxNDim=e.maxNDim,this.minNDim=e.minNDim,this.axes=e.axes||{}}}class My{constructor(e,t,n,s,r,a,i){this.dtype=e,this.shape=t,this.sourceLayer=n,this.inputs=s,this.callArgs=r,this.outputTensorIndex=i,this.id=bg(),null!=a&&(this.originalName=_g(a),this.name=Fg(this.originalName)),this.rank=t.length}}let Ly=0;class zy{constructor(e,t){this.callArgs=t,this.id=Ly++,this.outboundLayer=e.outboundLayer,this.inboundLayers=e.inboundLayers,this.nodeIndices=e.nodeIndices,this.tensorIndices=e.tensorIndices,this.inputTensors=e.inputTensors,this.outputTensors=e.outputTensors,this.inputMasks=e.inputMasks,this.outputMasks=e.outputMasks,this.inputShapes=e.inputShapes,this.outputShapes=e.outputShapes;for(const t of e.inboundLayers)null!=t&&t.outboundNodes.push(this);e.outboundLayer.inboundNodes.push(this)}getConfig(){const e=[];for(const t of this.inboundLayers)null!=t?e.push(t.name):e.push(null);return{outboundLayer:this.outboundLayer?this.outboundLayer.name:null,inboundLayers:e,nodeIndices:this.nodeIndices,tensorIndices:this.tensorIndices}}}let By=0;class Py extends Zi{constructor(e={}){super(),this._callHook=null,this._addedWeightNames=[],this._stateful=!1,this.id=By++,this.activityRegularizer=null,this.inputSpec=null,this.supportsMasking=!1,this._trainableWeights=[],this._nonTrainableWeights=[],this._losses=[],this._updates=[],this._built=!1,this.inboundNodes=[],this.outboundNodes=[];let t=e.name;if(!t){const e=this.getClassName();t=sg(e)+"_"+wg(e)}if(this.name=t,this.trainable_=null==e.trainable||e.trainable,null!=e.inputShape||null!=e.batchInputShape){let t;if(null!=e.batchInputShape)t=e.batchInputShape;else if(null!=e.inputShape){let n=null;null!=e.batchSize&&(n=e.batchSize),t=[n].concat(e.inputShape)}this.batchInputShape=t;let n=e.dtype;null==n&&(n=e.inputDType),null==n&&(n="float32"),this.dtype=n}null!=e.weights?this.initialWeights=e.weights:this.initialWeights=null,this._refCount=null,this.fastWeightInitDuringBuild=!1}static nodeKey(e,t){return e.name+"_ib-"+t.toString()}getNodeAtIndex(e,t){if(0===this.inboundNodes.length)throw new qm(`The layer has never been called and thus has no defined ${t}.`);if(this.inboundNodes.length<=e)throw new Km(`Asked to get ${t} at node ${e}, but the layer has only ${this.inboundNodes.length} inbound nodes.`);return this.inboundNodes[e]}getInputAt(e){return tg(this.getNodeAtIndex(e,"input").inputTensors)}getOutputAt(e){return tg(this.getNodeAtIndex(e,"output").outputTensors)}get input(){if(this.inboundNodes.length>1)throw new Hm(`Layer ${this.name} has multiple inbound nodes, hence the notion of "layer input" is ill-defined. Use \`getInputAt(nodeIndex)\` instead.`);if(0===this.inboundNodes.length)throw new Hm(`Layer ${this.name} is not connected, no input to return.`);return tg(this.getNodeAtIndex(0,"input").inputTensors)}get output(){if(0===this.inboundNodes.length)throw new Hm(`Layer ${this.name} has no inbound nodes.`);if(this.inboundNodes.length>1)throw new Hm(`Layer ${this.name} has multiple inbound nodes, hence the notion of "layer output" is ill-defined. Use \`getOutputAt(nodeIndex)\` instead.`);return tg(this.getNodeAtIndex(0,"output").outputTensors)}get losses(){return this._losses}calculateLosses(){return this.losses.map((e=>e()))}get updates(){return this._updates}get built(){return this._built}set built(e){this._built=e}get trainable(){return this.trainable_}set trainable(e){this._trainableWeights.forEach((t=>t.trainable=e)),this.trainable_=e}get trainableWeights(){return this.trainable_?this._trainableWeights.filter((e=>e.trainable)):[]}set trainableWeights(e){this._trainableWeights=e}get nonTrainableWeights(){return this.trainable?this._trainableWeights.filter((e=>!e.trainable)).concat(this._nonTrainableWeights):this._trainableWeights.concat(this._nonTrainableWeights)}set nonTrainableWeights(e){this._nonTrainableWeights=e}get weights(){return this.trainableWeights.concat(this.nonTrainableWeights)}get stateful(){return this._stateful}resetStates(){if(!this.stateful)throw new Error("Cannot call the resetStates() method of a non-stateful Layer object.")}assertInputCompatibility(e){const t=ng(e);if(null==this.inputSpec||0===this.inputSpec.length)return;const n=ng(this.inputSpec);if(t.length!==n.length)throw new Km(`Layer ${this.name} expects ${n.length} inputs, but it received ${t.length} input tensors. Input received: ${e}`);for(let e=0;e<t.length;e++){const s=t[e],r=n[e];if(null==r)continue;const a=s.rank;if(null!=r.ndim&&a!==r.ndim)throw new Km(`Input ${e} is incompatible with layer ${this.name}: expected ndim=${r.ndim}, found ndim=${a}`);if(null!=r.maxNDim&&a>r.maxNDim)throw new Km(`Input ${e} is incompatible with layer ${this.name}: expected max_ndim=${r.maxNDim}, found ndim=${a}`);if(null!=r.minNDim&&a<r.minNDim)throw new Km(`Input ${e} is incompatible with layer ${this.name}: expected min_ndim=${r.minNDim}, found ndim=${a}.`);if(null!=r.dtype&&s.dtype!==r.dtype)throw new Km(`Input ${e} is incompatible with layer ${this.name} : expected dtype=${r.dtype}, found dtype=${s.dtype}.`);if(r.axes){const t=s.shape;for(const n in r.axes){const s=Number(n),a=r.axes[n],i=s>=0?t[s]:t[t.length+s];if(null!=a&&-1===[a,null].indexOf(i))throw new Km(`Input ${e} is incompatible with layer ${this.name}: expected axis ${s} of input shape to have value ${a} but got shape ${t}.`)}}if(null!=r.shape)for(let t=0;t<r.shape.length;++t){const n=r.shape[t],a=s.shape[t];if(null!=n&&null!=a&&n!==a)throw new Km(`Input ${e} is incompatible with layer ${this.name}: expected shape=${r.shape}, found shape=${s.shape}.`)}}}call(e,t){return e}invokeCallHook(e,t){null!=this._callHook&&this._callHook(e,t)}setCallHook(e){this._callHook=e}clearCallHook(){this._callHook=null}apply(e,t){t=t||{},this.assertNotDisposed();const n=ng(e),s=function(e){let t=!0;for(const n of ng(e))if(!(n instanceof My)){t=!1;break}return t}(e),r=function(e){let t=!0;for(const n of ng(e))if(n instanceof My){t=!1;break}return t}(e);if(s===r)throw new Km("Arguments to apply() must be all SymbolicTensors or all Tensors");return Rg(this.name,(()=>{if(!this.built){this.assertInputCompatibility(e);const t=[];for(const n of ng(e))t.push(n.shape);this.build(tg(t)),this.built=!0,this.initialWeights&&this.setWeights(this.initialWeights),null===this._refCount&&r&&(this._refCount=1)}if(this.assertInputCompatibility(e),r){let s=this.call(e,t);this.supportsMasking&&this.setMaskMetadata(e,s);const r=ng(s),a=[];for(let e of r)-1!==n.indexOf(e)&&(e=e.clone()),a.push(e);if(s=tg(a),null!=this.activityRegularizer)throw new Xm("Layer invocation in the presence of activity regularizer(s) is not supported yet.");return s}{const n=function(e){e=ng(e);const t=[];for(const n of e)t.push(n.shape);return tg(t)}(e),s=this.computeOutputShape(n);let r;const a="float32";if(this.warnOnIncompatibleInputShape(Array.isArray(e)?n[0]:n),r=null!=s&&s.length>0&&Array.isArray(s[0])?s.map(((n,s)=>new My(a,n,this,ng(e),t,this.name,s))):new My(a,s,this,ng(e),t,this.name),this.addInboundNode(e,r,null,null,n,s,t),this._refCount++,null!=this.activityRegularizer)throw new Xm("Layer invocation in the presence of activity regularizer(s) is not supported yet.");return r}}))}warnOnIncompatibleInputShape(e){if(null!=this.batchInputShape)if(e.length!==this.batchInputShape.length)console.warn(`The rank of the input tensor provided (shape: ${JSON.stringify(e)}) does not match that of the batchInputShape (${JSON.stringify(this.batchInputShape)}) of the layer ${this.name}`);else{let t=!1;this.batchInputShape.forEach(((n,s)=>{null!=n&&null!=e[s]&&e[s]!==n&&(t=!0)})),t&&console.warn(`The shape of the input tensor (${JSON.stringify(e)}) does not match the expectation of layer ${this.name}: ${JSON.stringify(this.batchInputShape)}`)}}get outputShape(){if(null==this.inboundNodes||0===this.inboundNodes.length)throw new Hm(`The layer ${this.name} has never been called and thus has no defined output shape.`);const e=[];for(const t of this.inboundNodes){const n=JSON.stringify(t.outputShapes);-1===e.indexOf(n)&&e.push(n)}if(1===e.length){const e=this.inboundNodes[0].outputShapes;return Array.isArray(e)&&Array.isArray(e[0])&&1===e.length?e[0]:e}throw new Hm(`The layer ${this.name} has multiple inbound nodes with different output shapes. Hence the notion of "output shape" is ill-defined for the layer.`)}countParams(){if(!this.built)throw new qm(`You tried to call countParams() on ${this.name}, but the layer is not built yet. Build it first by calling build(batchInputShape).`);return Ay(this.weights)}build(e){this.built=!0}getWeights(e=!1){return Fy(e?this.trainableWeights:this.weights)}setWeights(e){_a((()=>{const t=this.weights;if(t.length!==e.length)throw new Km(`You called setWeights(weights) on layer "${this.name}" with a weight list of length ${e.length}, but the layer was expecting ${t.length} weights. Provided weights: ${e}...`);if(0===t.length)return;const n=[],s=Fy(t);for(let r=0;r<s.length;++r){const a=s[r],i=t[r],o=e[r];if(!ce(a.shape,o.shape))throw new Km(`Layer weight shape ${a.shape} not compatible with provided weight shape ${o.shape}`);n.push([i,o])}Dy(n)}))}addWeight(e,t,n,s,r,a,i,o){if(-1!==this._addedWeightNames.indexOf(e))throw new Km(`Duplicate weight name ${e} for layer ${this.name}`);this._addedWeightNames.push(e),null==n&&(n="float32"),this.fastWeightInitDuringBuild&&(s=null!=o?o():Sy("zeros"));const l=s.apply(t,n),u=new _y(l,n,e,a,i);return l.dispose(),null!=r&&this.addLoss((()=>r.apply(u.read()))),null==a&&(a=!0),a?this._trainableWeights.push(u):this._nonTrainableWeights.push(u),u}setFastWeightInitDuringBuild(e){this.fastWeightInitDuringBuild=e}addLoss(e){null==e||Array.isArray(e)&&0===e.length||(e=ng(e),void 0!==this._losses&&null!==this._losses&&this.losses.push(...e))}computeOutputShape(e){return e}computeMask(e,t){if(!this.supportsMasking){if(null!=t){if(!Array.isArray(t))throw new TypeError(`Layer ${this.name} does not support masking, but was passed an inputMask.`);t.forEach((e=>{if(null!=e)throw new TypeError(`Layer ${this.name} does not support masking, but was passed an inputMask.`)}))}return null}return t}setMaskMetadata(e,t,n){if(!this.supportsMasking)return;const s=this.computeMask(e,n),r=ng(t),a=ng(s);if(r.length!==a.length)throw new Error(`${this.name} outputs ${r.length} tensors but ${r.length} masks for those tensors`);for(let e=0;e<r.length;e++)r[e].kerasMask=a[e]}addInboundNode(e,t,n,s,r,a,i=null){const o=ng(e);t=ng(t),n=ng(n),s=ng(s),r=Cy(r),a=Cy(a);const l=[],u=[],c=[];for(const e of o)l.push(e.sourceLayer),u.push(e.nodeIndex),c.push(e.tensorIndex);new zy({outboundLayer:this,inboundLayers:l,nodeIndices:u,tensorIndices:c,inputTensors:o,outputTensors:t,inputMasks:n,outputMasks:s,inputShapes:r,outputShapes:a},i);for(let e=0;e<t.length;e++)t[e].sourceLayer=this,t[e].nodeIndex=this.inboundNodes.length-1,t[e].tensorIndex=e}getConfig(){const e={name:this.name,trainable:this.trainable};return null!=this.batchInputShape&&(e.batchInputShape=this.batchInputShape),null!=this.dtype&&(e.dtype=this.dtype),e}disposeWeights(){return this.weights.forEach((e=>e.dispose())),this.weights.length}assertNotDisposed(){if(0===this._refCount)throw new Error(`Layer '${this.name}' is already disposed.`)}dispose(){if(!this.built)throw new Error(`Cannot dispose Layer ${this.name} because it has not been built yet.`);if(null===this._refCount)throw new Error(`Cannot dispose Layer ${this.name} because it has not been used yet.`);this.assertNotDisposed();let e=0;return 0===--this._refCount&&(e=this.disposeWeights()),{refCountAfterDispose:this._refCount,numDisposedVariables:e}}}function Wy(e,t,n){if((null==t||null!=n&&n>0)&&(t=e.sourceLayer,n=e.nodeIndex),0===t.inboundNodes.length)return[e];{const e=t.inboundNodes[n];if(0===e.inboundLayers.length)return e.inputTensors;{const t=[];for(let n=0;n<e.inboundLayers.length;n++){const s=Wy(e.inputTensors[n],e.inboundLayers[n],e.nodeIndices[n]);for(const e of s)-1===t.indexOf(e)&&t.push(e)}return t}}}class Vy extends Py{constructor(e){if(super({dtype:e.dtype,name:null!=e.name?e.name:wg("input").toString()}),null==e.batchSize&&(e.batchSize=null),null==e.sparse&&(e.sparse=!1),this.trainable=!1,this.built=!0,this.sparse=e.sparse,null!=e.inputShape&&null!=e.batchInputShape)throw new Km("Only provide the inputShape OR batchInputShape argument to inputLayer, not both at the same time.");let t=e.batchInputShape;if(null==t){if(null==e.inputShape)throw new Km("An InputLayer should be passed either a `batchInputShape` or an `inputShape`.");t=[e.batchSize].concat(e.inputShape)}else if(null!=e.batchSize)throw new Km("Cannot specify batchSize if batchInputShape is specified when creating an InputLayer.");const n=e.dtype||"float32";this.batchInputShape=t,this.dtype=n,this.inputSpec=[{shape:t}];const s=new My(this.dtype,this.batchInputShape,this,[],{},this.name);s.nodeIndex=0,s.tensorIndex=0,new zy({outboundLayer:this,inboundLayers:[],nodeIndices:[],tensorIndices:[],inputTensors:[s],outputTensors:[s],inputMasks:[null],outputMasks:[null],inputShapes:[t],outputShapes:[t]})}apply(e,t){throw new Km(`Cannot pass any input to an InputLayer's apply() method. InputLayer name: ${this.name}`)}dispose(){return{refCountAfterDispose:this._refCount,numDisposedVariables:0}}getConfig(){return{batchInputShape:this.batchInputShape,dtype:this.dtype,sparse:this.sparse,name:this.name}}}Vy.className="InputLayer",eo(Vy);class Uy{constructor(e){if(this.id2Value={},this.id2Mask={},this.name2Id={},e instanceof Uy)for(const t in e.id2Value)this.id2Value[t]=e.id2Value[t],t in e.id2Mask&&(this.id2Mask[t]=e.id2Mask[t]);else{if(null==e)return;for(const t of e)this.add(t.key,t.value)}}add(e,t,n){if(null!=this.id2Value[e.id])throw new Km(`Duplicate key: name=${e.name}, id=${e.id}`);return this.id2Value[e.id]=function(e,t){if(null==e.dtype||e.dtype===t.dtype)return t;try{return zi(t,e.dtype)}catch(n){throw new Km(`The dtype of the feed (${t.dtype}) can not be cast to the dtype of the key '${e.name}' (${e.dtype}).`)}}(e,t),this.name2Id[e.name]=e.id,null!=n&&(this.id2Mask[e.id]=n),this}addFeed(e){this.add(e.key,e.value)}hasKey(e){return null!=this.id2Value[e.id]}names(){return Object.keys(this.name2Id)}getValue(e){if(e instanceof My){if(null==this.id2Value[e.id])throw new Km(`Nonexistent key: ${e.name}`);return this.id2Value[e.id]}{const t=this.name2Id[e];if(null==t)throw new Km(`Feed dict has no SymbolicTensor name: ${e}`);return this.id2Value[t]}}getMask(e){if(e instanceof My){if(null==this.id2Value[e.id])throw new Km(`Nonexistent key: ${e.name}`);return this.id2Mask[e.id]}{const t=this.name2Id[e];if(null==t)throw new Km(`Feed dict has no SymbolicTensor name: ${e}`);return this.id2Mask[t]}}disposeMasks(){null!=this.id2Mask&&Fa(this.id2Mask)}}const Gy=new Jm,jy=new Jm;function Hy(e,t,n,s){const r=null!=n&&n.training,a=Array.isArray(e),i=a?e:[e],o=i.map((e=>e.name)),l=[],u=t.names();for(const e of o)-1!==u.indexOf(e)?l.push(t.getValue(e)):l.push(null);null!=s&&(s.maxNumTensors=-1/0,s.minNumTensors=1/0);const c=o.join(",")+"|"+t.names().sort().join(",");let h,d=Gy.get(c);if(null==d){const e=function(e,t){ie(null!=e&&e.length>0,(()=>"Expected at least one fetch, got none"));let n=[],s={};if(1===e.length){const r=Ky(e[0],t);n=r.sorted,s=r.recipientMap}else{const r=new Set;for(const a of e){const{sorted:e,recipientMap:i}=Ky(a,t);for(const t of e)r.has(t.name)||(n.push(t),r.add(t.name));for(const e in i)null==s[e]&&(s[e]=new Set),i[e].forEach((t=>s[e].add(t)))}}return{sorted:n,recipientCounts:qy(s)}}(i,t);d=e.sorted,h=e.recipientCounts,Gy.put(c,d),jy.put(c,h)}h={},r||Object.assign(h,jy.get(c));const p=new Uy(t);for(let e=0;e<d.length;++e){if(null!=s){const e=Ra().numTensors;e>s.maxNumTensors&&(s.maxNumTensors=e),e<s.minNumTensors&&(s.minNumTensors=e)}const a=d[e],i=a.sourceLayer;if(i instanceof Vy)continue;const u=[],c=[],f=[];let m=!1;for(const e of a.inputs){const n=p.getValue(e),s=p.getMask(e);u.push(n),c.push(s),null!=s&&(m=!0),r||(h[e.name]--,0!==h[e.name]||t.hasKey(e)||-1!==o.indexOf(e.name)||n.isDisposed||!0===e.sourceLayer.stateful||f.push(n))}m&&((n=n||{}).mask=c[0]);const g=ng(i.apply(u,n));let y=null;i.supportsMasking&&(y=i.computeMask(u,c));const b=Xy(a),x=Array.isArray(b)?b:[b];for(let e=0;e<x.length;++e){p.hasKey(x[e])||p.add(x[e],g[e],Array.isArray(y)?y[0]:y);const t=o.indexOf(x[e].name);-1!==t&&(l[t]=g[e])}r||Fa(f)}return p.disposeMasks(),a?l:l[0]}function qy(e){const t={};for(const n in e)t[n]=e[n].size;return t}function Ky(e,t){const n=new Set,s=[],r={};for(const e of t.names())n.add(e);const a=[],i=[];for(a.push(e);a.length>0;){const e=a[a.length-1];if(n.has(e.name)){a.pop();continue}const t=i[i.length-1]===a.length-1;if(0===e.inputs.length||t)a.pop(),s.push(e),n.add(e.name),t&&i.pop();else{i.push(a.length-1);for(const t of e.inputs)null==r[t.name]&&(r[t.name]=new Set),r[t.name].add(e.name),n.has(t.name)||a.push(t)}}return{sorted:s,recipientMap:r}}function Xy(e){let t;if(1===e.sourceLayer.inboundNodes.length)t=e.sourceLayer.output;else{let n=null;for(let t=0;t<e.sourceLayer.inboundNodes.length;++t)for(const s of e.sourceLayer.inboundNodes[t].outputTensors)if(s.id===e.id){n=t;break}t=e.sourceLayer.getOutputAt(n)}return t}function Yy(e,t){return _a((()=>ji(zu(Gi(e,e),t,!0))))}Pe().registerFlag("TOPOLOGICAL_SORT_CACHE_MAX_ENTRIES",(()=>100),(function(e){null!=Gy&&Gy.setMaxEntries(e),null!=jy&&jy.setMaxEntries(e)}));class Jy extends Zi{getConfig(){return{}}}class Zy extends Jy{constructor(e){super(),this.defaultMaxValue=2,this.defaultAxis=0,this.maxValue=null!=e.maxValue?e.maxValue:this.defaultMaxValue,this.axis=null!=e.axis?e.axis:this.defaultAxis}apply(e){return _a((()=>{const t=Yy(e,this.axis),n=Ql(t,0,this.maxValue);return Gi(e,Ui(n,Wi(Wg(),t)))}))}getConfig(){return{maxValue:this.maxValue,axis:this.axis}}}Zy.className="MaxNorm",eo(Zy);class Qy extends Jy{constructor(e){super(),this.defaultAxis=0,this.axis=null!=e.axis?e.axis:this.defaultAxis}apply(e){return _a((()=>Ui(e,Wi(Wg(),Yy(e,this.axis)))))}getConfig(){return{axis:this.axis}}}Qy.className="UnitNorm",eo(Qy);class eb extends Jy{apply(e){return lh(e)}}eb.className="NonNeg",eo(eb);class tb extends Jy{constructor(e){super(),this.defaultMinValue=0,this.defaultMaxValue=1,this.defaultRate=1,this.defaultAxis=0,this.minValue=null!=e.minValue?e.minValue:this.defaultMinValue,this.maxValue=null!=e.maxValue?e.maxValue:this.defaultMaxValue,this.rate=null!=e.rate?e.rate:this.defaultRate,this.axis=null!=e.axis?e.axis:this.defaultAxis}apply(e){return _a((()=>{const t=Yy(e,this.axis),n=Wi(Gi(this.rate,Ql(t,this.minValue,this.maxValue)),Gi(1-this.rate,t));return Gi(e,Ui(n,Wi(Wg(),t)))}))}getConfig(){return{minValue:this.minValue,maxValue:this.maxValue,rate:this.rate,axis:this.axis}}}tb.className="MinMaxNorm",eo(tb);const nb={maxNorm:"MaxNorm",minMaxNorm:"MinMaxNorm",nonNeg:"NonNeg",unitNorm:"UnitNorm"};function sb(e){return ig(e)}function rb(e,t={}){return lg(e,Qi.getMap().classNameMap,t,"constraint")}function ab(e){return null==e?null:"string"==typeof e?rb({className:e in nb?nb[e]:e,config:{}}):e instanceof Jy?e:rb(e)}async function ib(e){if(null==e)return;const t=[],n=[],s=[];for(const r in e){const a=e[r];if("number"!=typeof a){const e=a;t.push(e.data()),n.push(r),s.push(e)}}if(t.length>0){const r=await Promise.all(t);for(let t=0;t<r.length;++t)e[n[t]]=r[t][0];Fa(s)}}function ob(e){if(null!=e)for(const t in e){const n=e[t];"number"!=typeof n&&n.dispose()}}var lb;!function(e){e[e.SILENT=0]="SILENT",e[e.VERBOSE=1]="VERBOSE"}(lb||(lb={}));class ub{constructor(){this.validationData=null}setParams(e){this.params=e}async onEpochBegin(e,t){}async onEpochEnd(e,t){}async onBatchBegin(e,t){}async onBatchEnd(e,t){}async onTrainBegin(e){}async onTrainEnd(e){}setModel(e){}}class cb{constructor(e,t=10){null==e&&(e=[]),this.callbacks=e,this.queueLength=t}append(e){this.callbacks.push(e)}setParams(e){for(const t of this.callbacks)t.setParams(e)}setModel(e){for(const t of this.callbacks)t.setModel(e)}async onEpochBegin(e,t){null==t&&(t={});for(const n of this.callbacks)await n.onEpochBegin(e,t)}async onEpochEnd(e,t){null==t&&(t={});for(const n of this.callbacks)await n.onEpochEnd(e,t)}async onBatchBegin(e,t){null==t&&(t={});for(const n of this.callbacks)await n.onBatchBegin(e,t)}async onBatchEnd(e,t){null==t&&(t={});for(const n of this.callbacks)await n.onBatchEnd(e,t)}async onTrainBegin(e){null==e&&(e={});for(const t of this.callbacks)await t.onTrainBegin(e)}async onTrainEnd(e){null==e&&(e={});for(const t of this.callbacks)await t.onTrainEnd(e)}}class hb extends ub{constructor(){super()}async onEpochBegin(e){this.seen=0,this.totals={}}async onBatchEnd(e,t){null==t&&(t={});const n=null==t.size?0:t.size;this.seen+=n;for(const e in t){const s=t[e];if("number"==typeof s)this.totals.hasOwnProperty(e)||(this.totals[e]=0),this.totals[e]=this.totals[e]+s*n;else{let t;e in this.totals?t=this.totals[e]:this.totals[e]=0;const r=_a((()=>Wi(this.totals[e],Gi(s,n))));this.totals[e]=r,null!=t&&t.dispose()}}}async onEpochEnd(e,t){if(null!=t)for(const e of this.params.metrics)null!=this.totals[e]&&("number"==typeof this.totals[e]?t[e]=this.totals[e]/this.seen:_a((()=>{const n=Gi(Ui(1,this.seen),this.totals[e]);t[e]=n,this.totals[e].dispose(),Da(t[e])})))}}class db extends ub{async onTrainBegin(e){this.epoch=[],this.history={}}async onEpochEnd(e,t){null==t&&(t={}),this.epoch.push(e);for(const e in t)null==this.history[e]&&(this.history[e]=[]),this.history[e].push(t[e])}async syncData(){const e=[],t=[],n=[];for(const s in this.history){const r=this.history[s];for(let a=0;a<r.length;++a)if("number"!=typeof r[a]){const i=r[a];e.push(i.data()),t.push(s),n.push(a)}}const s=await Promise.all(e);for(let e=0;e<s.length;++e)this.history[t[e]][n[e]].dispose(),this.history[t[e]][n[e]]=s[e][0]}}class pb extends ub{constructor(e,t){if(super(),this.currentEpoch=0,this.nowFunc=e.nowFunc,this.nextFrameFunc=e.nextFrameFunc||Ip,this.yieldEvery=t||"auto","auto"===this.yieldEvery&&(this.yieldEvery=125),"never"===this.yieldEvery&&null!=e.onYield)throw new Error("yieldEvery is `never` but you provided an `onYield` callback. Either change `yieldEvery` or remove the callback");Ie(this.yieldEvery)&&(this.maybeWait=function(e,t,n){let s,r=null!=n?n():Er();return(...a)=>{const i=null!=n?n():Er();return i-r<t||(r=i,s=e(...a)),s}}(this.maybeWait.bind(this),this.yieldEvery,this.nowFunc)),this.trainBegin=e.onTrainBegin,this.trainEnd=e.onTrainEnd,this.epochBegin=e.onEpochBegin,this.epochEnd=e.onEpochEnd,this.batchBegin=e.onBatchBegin,this.batchEnd=e.onBatchEnd,this.yield=e.onYield}async maybeWait(e,t,n){const s=[];null!=this.yield&&(await ib(n),s.push(this.yield(e,t,n))),s.push(this.nextFrameFunc()),await Promise.all(s)}async onEpochBegin(e,t){this.currentEpoch=e,null!=this.epochBegin&&(await ib(t),await this.epochBegin(e,t))}async onEpochEnd(e,t){const n=[];null!=this.epochEnd&&(await ib(t),n.push(this.epochEnd(e,t))),"epoch"===this.yieldEvery&&n.push(this.nextFrameFunc()),await Promise.all(n)}async onBatchBegin(e,t){null!=this.batchBegin&&(await ib(t),await this.batchBegin(e,t))}async onBatchEnd(e,t){const n=[];null!=this.batchEnd&&(await ib(t),n.push(this.batchEnd(e,t))),"batch"===this.yieldEvery?n.push(this.nextFrameFunc()):Ie(this.yieldEvery)&&n.push(this.maybeWait(this.currentEpoch,e,t)),await Promise.all(n)}async onTrainBegin(e){null!=this.trainBegin&&(await ib(e),await this.trainBegin(e))}async onTrainEnd(e){null!=this.trainEnd&&(await ib(e),await this.trainEnd(e))}}function fb(e,t){return null==e&&(e={}),e instanceof ub?[e]:Array.isArray(e)&&e[0]instanceof ub?e:ng(e).map((e=>new pb(e,t)))}class mb{constructor(){}static registerCallbackConstructor(e,t){ie(e>=0&&Number.isInteger(e),(()=>`Verbosity level is expected to be an integer >= 0, but got ${e}`)),mb.checkForDuplicate(t),null==mb.constructors[e]&&(mb.constructors[e]=[]),mb.constructors[e].push(t)}static checkForDuplicate(e){for(const t in mb.constructors)mb.constructors[+t].forEach((t=>{if(t===e)throw new Km("Duplicate callback constructor.")}))}static clear(){mb.constructors={}}static createCallbacks(e){const t=[];for(const n in mb.constructors){const s=+n;e>=s&&t.push(...mb.constructors[s])}return t.map((e=>new e))}}function gb(e,t,n,s,r,a,i,o,l){const u=new db,c=[new hb,...mb.createCallbacks(t)];null!=e&&c.push(...e),c.push(u);const h=new cb(c);return h.setParams({epochs:n,initialEpoch:s,samples:r,steps:a,batchSize:i,verbose:t,doValidation:o,metrics:l}),{callbackList:h,history:u}}function yb(e,t={},n=!1){return lg(e,Qi.getMap().classNameMap,t,"layer",n)}function bb(e,t){return _a((()=>{"float32"!==e.dtype&&(e=zi(e,"float32"));const n=zu(Qg(e),t,!0),s=so(n.shape,Wg()),r=ji(po(n,s));return Ui(e,r)}))}function xb(e,t){return _a((()=>Ic(Qg(io(t,e)),-1)))}function wb(e,t){return _a((()=>Ic(lo(io(t,e)),-1)))}function vb(e,t){return _a((()=>{const n=io(e,t),s=Ql(lo(e),Wg(),Number.MAX_VALUE),r=lo(Ui(n,s));return Gi(100,Ic(r,-1))}))}function kb(e,t,n=!1){return _a((()=>{if(n)t=Ch(t);else{const e=zu(t,t.shape.length-1,!0);t=Ui(t,e)}return t=Ql(t,Wg(),1-Wg()),lc(zu(Gi(zi(e,"float32"),ic(t)),t.shape.length-1))}))}function Ib(e,t,n=!1){return _a((()=>{const s=zi(qu(function(e){const t=[Mg(e.shape)];return Dl(e,t)}(e)),"int32"),r=(t=Ql(t,Wg(),1-Wg())).shape;return kb(Dl(Dc(s,r[r.length-1]),r),t,n)}))}function Nb(e,t){return _a((()=>{let n;return n=Ql(t,Wg(),1-Wg()),n=ic(Ui(n,io(1,n))),Ic(function(e,t){if(!ce(e.shape,t.shape))throw new Km(`logits and labels must have the same shape, but got shapes ${JSON.stringify(e.shape)} and ${JSON.stringify(t.shape)}`);return _a((()=>{const n=lh(t),s=lc(lo(t));return Wi(io(n,Gi(t,e)),oc(Vu(s)))}))}(e,n),-1)}))}function Sb(e,t){return _a((()=>{const n=bb(e,-1),s=bb(t,-1),r=Gi(n,s);return lc(zu(r,-1))}))}mb.constructors={};const Tb={meanSquaredError:xb,meanAbsoluteError:wb,meanAbsolutePercentageError:vb,meanSquaredLogarithmicError:function(e,t){return _a((()=>{const n=Ql(t,Wg(),Number.MAX_VALUE),s=ic(Wi(1,n)),r=Ql(e,Wg(),Number.MAX_VALUE),a=ic(Wi(1,r));return Ic(Qg(io(s,a)),-1)}))},squaredHinge:function(e,t){return _a((()=>{const n=po(0,io(1,Gi(e,t)));return Ic(Qg(n),-1)}))},hinge:function(e,t){return _a((()=>{const n=po(0,io(1,Gi(e,t)));return Ic(n,-1)}))},categoricalHinge:function(e,t){return _a((()=>{const n=zu(Gi(e,t),-1),s=Mu(Gi(io(1,e),t),-1);return po(0,Wi(1,io(s,n)))}))},logcosh:function(e,t){return _a((()=>{const n=Math.log(2),s=io(t,e),r=io(Wi(s,uc(Gi(-2,s))),n);return Ic(r,-1)}))},categoricalCrossentropy:kb,sparseCategoricalCrossentropy:Ib,binaryCrossentropy:Nb,kullbackLeiblerDivergence:function(e,t){return _a((()=>{const n=Ql(e,Wg(),1),s=Ql(t,Wg(),1);return zu(Gi(e,ic(Ui(n,s))),-1)}))},poisson:function(e,t){return _a((()=>{const n=ic(Wi(Wg(),t));return Ic(io(t,Gi(e,n)),-1)}))},cosineProximity:Sb};function Cb(e){if("string"==typeof e){if(e in Tb)return Tb[e];let t=`Unknown loss ${e}`;throw e.toLowerCase().includes("softmaxcrossentropy")&&(t=`Unknown loss ${e}. Use "categoricalCrossentropy" as the string name for tf.losses.softmaxCrossEntropy`),new Km(t)}return e}function $b(e,t){return _a((()=>{const n=Gi(.5,Oc(t)),s=Vg(Xu(t,n),e.dtype);return Ic(wu(e,s),-1)}))}function Eb(e,t){return _a((()=>Vg(wu(dl(e,-1),dl(t,-1)),"float32")))}function Ab(e,t){return Nb(e,t)}function Rb(e,t){return e.rank===t.rank&&(e=Dh(e,[e.rank-1])),(t=dl(t,-1)).dtype!==e.dtype&&(t=zi(t,e.dtype)),zi(wu(e,t),"float32")}const _b=kb,Fb=Ib,Db={binaryAccuracy:$b,categoricalAccuracy:Eb,precision:function(e,t){return _a((()=>{const n=function(e,t){return _a((()=>zi(zu(pc(wu(e,1),wu(t,1))),"float32")))}(e,t),s=function(e,t){return _a((()=>zi(zu(pc(wu(e,0),wu(t,1))),"float32")))}(e,t),r=Wi(n,s);return zi(vu(Xu(r,0),Ui(n,r),0),"float32")}))},categoricalCrossentropy:_b,sparseCategoricalCrossentropy:Fb,mse:xb,MSE:xb,mae:wb,MAE:wb,mape:vb,MAPE:vb,cosine:Sb};function Ob(e){if("string"==typeof e&&e in Db)return Db[e];if("string"!=typeof e&&null!=e)return e;throw new Km(`Unknown metric ${e}`)}function Mb(e){if(Qm(null!==e,`Unknown LossOrMetricFn ${e}`),"string"==typeof e)return e;{let t;for(const n of Object.keys(Tb))if(Tb[n]===e){t=n;break}if(void 0!==t)return t;for(const n of Object.keys(Db))if(Db[n]===e){t=n;break}return void 0!==t?t:e.name}}function Lb(e,t,n=!1){if(null==e||"object"!=typeof e||Object.getPrototypeOf(e)!==Object.prototype||!zb(e))throw new Error("User-defined metadata is expected to be a JSON object, but is not.");if(n){const n=JSON.stringify(e);n.length>1048576&&console.warn(`User-defined metadata of model "${t}" is too large in size (length=${n.length} when serialized). It is not recommended to store such large objects in user-defined metadata. Please make sure its serialized length is <= 1048576.`)}}function zb(e){if(null===e)return!0;if("object"==typeof e){if(Object.getPrototypeOf(e)===Object.prototype){const t=Object.keys(e);for(const n of t){if("string"!=typeof n)return!1;if(!zb(e[n]))return!1}return!0}if(Array.isArray(e)){for(const t of e)if(!zb(t))return!1;return!0}return!1}{const t=typeof e;return"string"===t||"number"===t||"boolean"===t}}function Bb(e,t,n=console.log){let s="";for(let n=0;n<e.length;++n)n>0&&(s=s.slice(0,s.length-1)+" "),s+=e[n],s=s.slice(0,t[n]),s+=" ".repeat(t[n]-s.length);n(s)}function Pb(e,t,n){let s,r;try{r=e.inboundNodes.map((e=>JSON.stringify(e.inputShapes))).join(",")}catch(e){r="multiple"}try{s=JSON.stringify(e.outputShape)}catch(e){s="multiple"}Bb([`${e.name} (${e.getClassName()})`,r,s,e.countParams().toString()],t,n)}function Wb(e,t,n,s){let r,a;try{a=e.inboundNodes.map((e=>JSON.stringify(e.inputShapes))).join(",")}catch(e){a="multiple"}try{r=JSON.stringify(e.outputShape)}catch(e){r="multiple"}const i=[];for(const t of e.inboundNodes)if(!(null!=n&&n.length>0&&-1===n.indexOf(t)))for(let e=0;e<t.inboundLayers.length;++e){const n=t.inboundLayers[e].name,s=t.nodeIndices[e],r=t.tensorIndices[e];i.push(`${n}[${s}][${r}]`)}const o=e.name,l=e.getClassName(),u=0===i.length?"":i[0];Bb([`${o} (${l})`,a,r,e.countParams().toString(),u],t,s);for(let e=1;e<i.length;++e)Bb(["","","","",i[e]],t,s)}function Vb(e,t,n){return("inboundNodes"===e||"outputLayers"===e||"inputLayers"===e)&&0===t&&"string"==typeof n}function Ub(e,t){if(null===e)return null;if("string"==typeof e)return rg(e);if("number"==typeof e||"boolean"==typeof e)return e;if(e instanceof Array){const n=[],s=e.length;for(let r=0;r<s;++r){const s=e[r];Vb(t,r,s)?n.push(s):n.push(Ub(s,t))}return n}{const t={};for(const n of Object.keys(e)){const s=e[n];if("name"===n&&"string"==typeof s)t[n]=s;else{const e=rg(n);t[e]=Ub(s,e)}}return t}}function Gb(e,t){if(null==e)return null;if("string"==typeof e)return sg(e);if("number"==typeof e||"boolean"==typeof e)return e;if(e instanceof Array){const n=[],s=e.length;for(let r=0;r<s;++r){const s=e[r];Vb(t,r,s)?n.push(s):n.push(Gb(s,t))}return n}{const t={};for(const n of Object.keys(e)){const s=e[n];t[sg(n)]="name"!==n&&"className"!==n||"string"!=typeof s?Gb(s,n):s}return t}}const jb="4.22.0";class Hb extends Py{constructor(e){if(super({}),this.containerNodes=new Set,this.name=e.name,null==this.name){const e=this.getClassName().toLowerCase();this.name=wg(e)}if(this.supportsMasking=!1,this.trainable_=!0,Array.isArray(e.inputs)?this.inputs=e.inputs.slice():this.inputs=[e.inputs],Array.isArray(e.outputs)?this.outputs=e.outputs.slice():this.outputs=[e.outputs],cg(this.inputs).length!==this.inputs.length)throw new Km(`The list of inputs passed to the model is redundant. All inputs should only appear once. Found: ${this.inputs.map((e=>e.name))}`);cg(this.outputs).length!==this.outputs.length&&console.warn(`The list of outputs passed to the model is redundant. All outputs should only appear once. Found: ${this.outputs.map((e=>e.name))}`),this.inputLayers=[],this.inputLayersNodeIndices=[],this.inputLayersTensorIndices=[],this.outputLayers=[],this.outputLayersNodeIndices=[],this.outputLayersTensorIndices=[],this.layers=[],this.internalContainerRefs=[];for(const e of this.outputs){const t=e.sourceLayer,n=e.nodeIndex,s=e.tensorIndex;this.outputLayers.push(t),this.outputLayersNodeIndices.push(n),this.outputLayersTensorIndices.push(s)}for(const e of this.inputs){const t=e.sourceLayer,n=e.nodeIndex,s=e.tensorIndex;Qm(0===n,"input layer has >1 nodes"),Qm(0===s,"input layer has >1 tensors"),this.inputLayers.push(t),this.inputLayersNodeIndices.push(n),this.inputLayersTensorIndices.push(s)}this.inputNames=[],this.outputNames=[],this.feedInputShapes=[],this.feedInputNames=[],this.feedOutputNames=[];for(let t=0;t<this.inputLayers.length;t++){const n=this.inputLayers[t];if(!(n instanceof Vy))throw new TypeError(`Input layers to a LayersModel must be InputLayer objects. Received inputs: ${e.inputs}. Input ${t} (0-based) originates from layer type ${n.getClassName()}.`);this.inputNames.push(n.name),this.feedInputShapes.push(n.batchInputShape),this.feedInputNames.push(n.name)}for(const e of this.outputLayers)this.outputNames.push(e.name);this.internalInputShapes=this.inputs.map((e=>e.shape)),this.internalOutputShapes=this.outputs.map((e=>e.shape));const t={},n={},s={},r={},a={},i=[],o=(e,t,n,s,r,l)=>{null!=s&&null!=r&&null!=l||(s=e.sourceLayer,r=e.nodeIndex,l=e.tensorIndex);const u=s.inboundNodes[r];if(-1!==n.indexOf(u))throw new qm(`The tensor ${e.name} at layer "${s.name}" is part of a cycle.`);if(-1!==t.indexOf(u))return;this.containerNodes.add(Hb.nodeKey(s,r)),s.id in a||(a[s.id]=Object.keys(a).length),-1===n.indexOf(u)&&n.push(u);const c=u.inboundLayers.length;for(let e=0;e<c;e++){const s=u.inputTensors[e],r=u.inboundLayers[e],a=u.nodeIndices[e],i=u.tensorIndices[e];o(s,t,n,r,a,i)}for(t.push(u);n.indexOf(u)>=0;)n.splice(n.indexOf(u),1);i.push(u)},l=[],u=[];for(const e of this.outputs)o(e,l,u);const c=i.slice().reverse();for(const e of c){n[e.id]=e,e.id in t||(t[e.id]=0);let a=t[e.id];const i=null==s[e.outboundLayer.id]?0:s[e.outboundLayer.id];a=Math.max(a,i),s[e.outboundLayer.id]=a,r[e.outboundLayer.id]=e.outboundLayer,t[e.id]=a;for(let s=0;s<e.inboundLayers.length;s++){const r=e.inboundLayers[s],i=e.nodeIndices[s],o=r.inboundNodes[i],l=null==t[o.id]?0:t[o.id];t[o.id]=Math.max(a+1,l),n[o.id]=o}}const h={};for(const e in t){const s=t[e];s in h||(h[s]=[]),h[s].push(n[e])}const d={};for(const e in s){const t=s[e];t in d||(d[t]=[]),d[t].push(r[e])}let p=Object.keys(d).map((e=>parseInt(e,10))).sort(ug);this.layers=[];for(const e of p){const t=d[e];t.sort(((e,t)=>{const n=a[e.id],s=a[t.id];return n<s?-1:n>s?1:0}));for(const e of t)e instanceof Hb&&this.internalContainerRefs.push(e),this.layers.push(e)}this.layersByDepth=d,p=Object.keys(h).map((e=>parseInt(e,10))).sort(ug);const f=this.inputs.slice(),m=[];for(const e of p)for(const t of h[e]){const e=t.outboundLayer;if(null!=e){for(const n of t.inputTensors)if(-1===f.indexOf(n))throw new qm(`Graph disconnected: cannot obtain value for tensor ${n} at layer "${e.name}". The following previous layers were accessed without issue: ${m}`);for(const e of t.outputTensors)f.push(e);m.push(e.name)}}this.nodesByDepth=h;const g=this.layers.map((e=>e.name));for(const e of g){const t=g.filter((t=>t===e)).length;if(1!==t)throw new qm(`The name "${e}" is used ${t} times in the model. All layer names should be unique. Layer names: `+JSON.stringify(g))}this.outboundNodes=[],this.inboundNodes=[],new zy({outboundLayer:this,inboundLayers:[],nodeIndices:[],tensorIndices:[],inputTensors:this.inputs,outputTensors:this.outputs,inputMasks:this.inputs.map((e=>null)),outputMasks:this.outputs.map((e=>null)),inputShapes:this.inputs.map((e=>e.shape)),outputShapes:this.outputs.map((e=>e.shape))}),this.built=!0,this._refCount=1}assertNotDisposed(){if(0===this._refCount)throw new Error(`Container '${this.name}' is already disposed.`)}dispose(){this.assertNotDisposed();const e={refCountAfterDispose:null,numDisposedVariables:0};if(0===--this._refCount){for(const t of this.layers)e.numDisposedVariables+=t.dispose().numDisposedVariables;for(const t of this.internalContainerRefs)e.numDisposedVariables+=t.dispose().numDisposedVariables}return e.refCountAfterDispose=this._refCount,e}get trainable(){return this.trainable_}set trainable(e){this.layers.forEach((t=>{t._trainableWeights.forEach((t=>t.trainable=e))})),this.trainable_=e}get trainableWeights(){if(this._trainableWeights.length>0)throw new Km("Container instance unexpectedly contains _trainableWeights.The trainable weights of a Container are a union of the trainable weights of its consituent Layers. Its own _trainableWeights must remain an empty Array.");if(!this.trainable)return[];let e=[];for(const t of this.layers)e=e.concat(t.trainableWeights);return e}get nonTrainableWeights(){const e=[];for(const t of this.layers)e.push(...t.nonTrainableWeights);if(!this.trainable){const t=[];for(const e of this.layers)t.push(...e.trainableWeights);return t.concat(e)}return e}get weights(){return this.trainableWeights.concat(this.nonTrainableWeights)}loadWeights(e,t=!0){const n={};let s=0;const r=(e=>{const t=Object.keys(e);if(0===t.length)return!1;const n=t[0].split("/");return!isNaN(parseInt(n[n.length-1],10))})(e);r&&this.parseWeights(e);for(const e of this.layers)for(const[t,a]of e.weights.entries()){const e=r?`${a.name.split("/").slice(0,-1).join("/")+"/"}${t}`:a.originalName;if(null!=n[e])throw new Km(`Duplicate weight name: ${e}`);n[e]=a,s++}const a=[];for(const s in e){let r=s;if(null==n[s]){const e=s.split("/");r=e.slice(0,-2).concat([e[e.length-1]]).join("/")}if(null!=n[r])a.push([n[r],e[s]]);else if(t)throw new Km(`Provided weight data has no target variable: ${s}`);delete n[r]}if(t){const e=[];for(const t in n)e.push(t);if(e.length>0)throw new Km(`${e.length} of ${s} weights are not set: ${e}`)}Dy(a)}parseWeights(e){for(const t in Object.keys(e)){const n=t.split("/"),s=["vars","layer_checkpoint_dependencies"],r=n.map((e=>e.startsWith("_")?e.slice(1):e)).filter((e=>!s.includes(e))).join("/");r!==t&&(e[r]=e[t],delete e[t])}}updatedConfig(){const e=this.getConfig(),t={};return t.className=this.getClassName(),t.config=e,t.kerasVersion=`tfjs-layers ${jb}`,t.backend="TensorFlow.js",t}toJSON(e,t=!0){const n=Gb(this.updatedConfig());return t?JSON.stringify(n):n}call(e,t){return _a((()=>{e=ng(e);const n=new Uy;for(let t=0;t<this.inputs.length;++t)n.add(this.inputs[t],e[t]);return Hy(this.outputs,n,t)}))}computeMask(e,t){return _a((()=>{let n;return e=ng(e),n=null==t?Zm(null,e.length):ng(t),this.runInternalGraph(e,n)[1]}))}computeOutputShape(e){const t=Cy(e);if(t.length!==this.inputLayers.length)throw new Km(`Invalid inputShape argument ${e}: model has ${this.inputLayers.length} tensor inputs.`);const n={};for(let e=0;e<t.length;e++){const s=this.inputLayers[e],r=t[e];n[s.name+"_0_0"]=r}const s=Object.keys(this.nodesByDepth).map((e=>parseInt(e,10))).sort(ug);if(s.length>1)for(const e of s){const t=this.nodesByDepth[e];for(const e of t){const t=e.outboundLayer;if(-1!==this.inputLayers.map((e=>e.id)).indexOf(t.id))continue;const s=[];for(let t=0;t<e.inboundLayers.length;t++){const r=e.inboundLayers[t],a=e.nodeIndices[t],i=e.tensorIndices[t],o=n[`${r.name}_${a}_${i}`];s.push(o)}const r=Cy(t.computeOutputShape(tg(s))),a=t.inboundNodes.indexOf(e);for(let e=0;e<r.length;e++)n[`${t.name}_${a}_${e}`]=r[e]}}const r=[],a=[];for(let e=0;e<this.outputLayers.length;e++){const t=this.outputLayers[e],n=this.outputLayersNodeIndices[e],s=this.outputLayersTensorIndices[e],r=`${t.name}_${n}_${s}`;a.push(r)}for(let e=0;e<a.length;e++){const t=a[e];Qm(t in n),r.push(n[t])}return tg(r)}runInternalGraph(e,t){null==t&&(t=Zm(null,e.length));const n={};for(let s=0;s<this.inputs.length;++s){const r=this.inputs[s],a=e[s],i=t[s];n[r.id]=[a,i]}const s=Object.keys(this.nodesByDepth).map((e=>parseInt(e,10))).sort(ug);for(const e of s){const t=this.nodesByDepth[e];for(const e of t){const t=e.outboundLayer,s=e.inputTensors,r=e.outputTensors,a=new Array;for(const e of s)e.id in n&&a.push(n[e.id]);if(a.length===s.length){let s,i,o,l,u={};if(null!=e.callArgs&&(u=e.callArgs),1===a.length){const[e,n]=a[0];null==u.mask&&(u.mask=n),o=ng(t.call(e,u)),l=ng(t.computeMask(e,n)),s=[e],i=[n]}else s=a.map((e=>e[0])),i=a.map((e=>e[1])),null==u.mask&&(u.mask=i),o=ng(t.call(s,u)),l=ng(t.computeMask(s,i));if(t.activityRegularizer)throw new Xm("LayersModel invocation with concrete Tensor value(s) in the presence of activity regularizer(s) is not supported yet.");for(let e=0;e<r.length;++e){const t=r[e],s=o[e],a=l[e];n[t.id]=[s,a]}}}}const r=[],a=[],i=[];for(const e of this.outputs){Qm(e.id in n,`Could not compute output ${e.name} : ${e.id}`);const[t,s]=n[e.id];i.push(t.shape),r.push(t),a.push(s)}return[r,a,i]}buildNodeConversionMap(e){const t={};let n;for(const e of this.layers){n=e instanceof Hb?1:0;for(let s=0;s<e.inboundNodes.length;s++){const r=Hb.nodeKey(e,s);this.containerNodes.has(r)&&(t[r]=n,n+=1)}}return t}getLayer(e,t){if(null!=t)return this.findLayer(t);if(null==e)throw new Km("Provide either a layer name or layer index");if("number"==typeof e)return this.findLayer(e);for(const t of this.layers)if(t.name===e)return t;throw new Km(`No such layer: ${e}`)}findLayer(e){if(this.layers.length<=e)throw new Km(`Was asked to retrieve layer at index ${e}, but model only has ${this.layers.length} layer(s).`);return this.layers[e]}calculateLosses(){return _a((()=>{const e=[];for(const t of this.layers)for(let n=0;n<t.inboundNodes.length;++n){const s=Hb.nodeKey(t,n);this.containerNodes.has(s)&&e.push(...t.calculateLosses())}return e}))}getConfig(){const e={name:this.name},t=this.buildNodeConversionMap(this.layers),n=[];for(const e of this.layers){const s=e.getClassName(),r=e.getConfig(),a=[];for(let n=0;n<e.inboundNodes.length;n++){const s=e.inboundNodes[n],r=Hb.nodeKey(e,n);let i={};if(this.containerNodes.has(r)){if(s.callArgs)try{JSON.stringify(s.callArgs),i=s.callArgs}catch(t){console.warn(`Layer ${e.name} was passed non-serializable keyword arguments: ${s.callArgs}. They will not be included in the serialized model (and thus will be missing at deserialization time).`),i={}}if(s.inboundLayers.length>0){const e=[];for(let n=0;n<s.inboundLayers.length;n++){const r=s.inboundLayers[n],a=s.nodeIndices[n],o=s.tensorIndices[n];let l=t[Hb.nodeKey(r,a)];null==l&&(l=0),e.push([r.name,l,o,i])}a.push(e)}}}const i={};i.name=e.name,i.className=s,i.config=r,i.inboundNodes=a,n.push(i)}e.layers=n;const s=[];for(let e=0;e<this.inputLayers.length;e++){const n=this.inputLayers[e],r=this.inputLayersNodeIndices[e],a=Hb.nodeKey(n,r);if(!this.containerNodes.has(a))continue;let i=t[a];null==i&&(i=0);const o=this.inputLayersTensorIndices[e];s.push([n.name,i,o])}e.inputLayers=s;const r=[];for(let e=0;e<this.outputLayers.length;e++){const n=this.outputLayers[e],s=this.outputLayersNodeIndices[e],a=Hb.nodeKey(n,s);if(!this.containerNodes.has(a))continue;let i=t[a];null==i&&(i=0);const o=this.outputLayersTensorIndices[e];r.push([n.name,i,o])}return e.outputLayers=r,e}static fromConfig(e,t,n={},s=!1){const r={},a={};function i(e,t){e.name in a?a[e.name].push(t):a[e.name]=[t]}function o(e,t){const n=[];let s;for(const a of t){const o=a[0],l=a[1],u=a[2];if(s=null==a[3]?{}:a[3],!(o in r))return void i(e,t);const c=r[o];if(c.inboundNodes.length<=l)return void i(e,t);const h=c.inboundNodes[l];n.push(h.outputTensors[u])}n.length>0&&e.apply(tg(n),s)}function l(e){const n=e.name,a=yb(e,null!=t.customObjects?t.customObjects:{});a.setFastWeightInitDuringBuild(s),r[n]=a,e.inboundNodes.forEach((e=>{if(!(e instanceof Array))throw new Km(`Corrupted configuration, expected array for nodeData: ${e}`);i(a,e)}))}const u=t.name,c=t.layers;for(const e of c)l(e);for(;!hg(a);)for(const e of c){const t=r[e.name];if(t.name in a){const e=a[t.name];delete a[t.name];for(const n of e)o(t,n)}}const h=[],d=[],p=t.inputLayers;for(const e of p){const t=e[0],n=e[1],s=e[2];Qm(t in r);const a=r[t].inboundNodes[n].outputTensors;h.push(a[s])}const f=t.outputLayers;for(const e of f){const t=e[0],n=e[1],s=e[2];Qm(t in r);const a=r[t].inboundNodes[n].outputTensors;d.push(a[s])}return new e({inputs:h,outputs:d,name:u})}get stateful(){if(this._stateful)throw new Km("Container instance unexpectedly has _stateful = true. The statefulness of a Container is determined by the Layers it contains. Its _stateful property must remain the default false.");for(const e of this.layers)if(e.stateful)return!0;return!1}resetStates(){_a((()=>{this.layers.forEach((e=>{e.stateful&&e.resetStates()}))}))}}function qb(e,t){return function(e,t,n){const s=t.length;if(null==e||Array.isArray(e)&&0===e.length)return t.map((e=>null));if(1===s)return Array.isArray(e)&&1===e.length?e:"object"==typeof e&&t[0]in e?[e[t[0]]]:[e];if(Array.isArray(e)){if(e.length!==s)throw new Error(`Provided ${n} is an array of ${e.length} element(s), but the model has ${s} outputs. Make sure a set of weights is provided for each model output.`);return e}if("object"==typeof e&&Object.keys(e).length>0&&"object"==typeof e[Object.keys(e)[0]]){const n=[];return t.forEach((t=>{t in e?n.push(e[t]):n.push(null)})),n}throw new Error(`The model has multiple (${s}) outputs, so ${n} must be either an array with ${s} elements or an object with ${t} keys. Provided ${n} not understood: ${JSON.stringify(e)}`)}(e,t,"classWeight")}async function Kb(e,t,n,s){if(null!=t||null!=s)throw new Error("Support sampleWeight is not implemented yet");if(null!=n){const t=_a((()=>{if(1===e.shape.length)return Bi(e);if(2===e.shape.length){if(e.shape[1]>1)return dl(e,1);if(1===e.shape[1])return Dl(e,[e.shape[0]]);throw new Error(`Encountered unexpected last-dimension size (${e.shape[1]}) during handling of class weights. The size is expected to be >= 1.`)}throw new Error(`Unexpected rank of target (y) tensor (${e.rank}) during handling of class weights. The rank is expected to be 1 or 2.`)})),s=Array.from(await t.data());Fa(t);const r=[];return s.forEach((e=>{if(null==n[e])throw new Error(`classWeight must contain all classes in the training data. The class ${e} exists in the data but not in classWeight`);r.push(n[e])})),Bh(r,"float32")}return null}function Xb(e,t){return Gi(e,t)}function Yb(e,t){let n,s;const r=t;n=r.xs,s=r.ys,ie(null!=n&&null!=s,(()=>`A Dataset iterator for fitDataset() is expected to generate objects of the form \`{xs: xVal, ys: yVal}\`, where the two values may be \`tf.Tensor\`, an array of Tensors, or a map of string to Tensor.  The provided Dataset instead generates ${t}`));const a=Jb("input",e.inputNames,n),i=Jb("output",e.outputNames,s),o=a[0].shape[0];ie(a.length===e.inputs.length,(()=>`LayersModel has ${e.inputs.length} inputs, but the dataset provides ${a.length} inputs.  (Expected input keys: ${JSON.stringify(e.inputNames)})`)),ie(i.length===e.outputs.length,(()=>`LayersModel has ${e.outputs.length} outputs, but the dataset provides ${i.length} outputs.  (Expected output keys: ${JSON.stringify(e.outputNames)})`));for(let t=0;t<a.length;t++)ie(a[t].shape[0]===o,(()=>`Batch size mismatch: input ${e.inputNames[t]} has ${a[t].shape[0]}; expected  ${o} based on input ${e.inputNames[0]}.`));for(let t=0;t<i.length;t++)ie(i[t].shape[0]===o,(()=>`Batch size mismatch: output ${e.outputNames[t]} has ${i[t].shape[0]}; expected  ${o} based on input ${e.inputNames[0]}.`));return{xs:a,ys:i}}function Jb(e,t,n){if(n instanceof Hr)return[n];if(Array.isArray(n))return ie(n.length===t.length,(()=>`Received an array of ${n.length} Tensors, but expected ${t.length} to match the ${e} keys ${t}.`)),n;{const s=[];for(const r of t){if(null==n[r])throw new Km(`The feature data generated by the dataset lacks the required ${e} key '${r}'.`);s.push(n[r])}return s}}function Zb(e){return"function"==typeof e.iterator}function Qb(e){ie(e>0&&Number.isInteger(e),(()=>`batchSize is required to be a positive integer, but got ${e}`))}function ex(e,t,n){return null==e?[null]:Array.isArray(e)?e.map((e=>Gg(e,t,n-t))):Gg(e,t,n-t)}function tx(e,t){return _a((()=>null==e?null:Array.isArray(e)?e.map((e=>tx(e,t))):Zg(e,"int32"===t.dtype?t:zi(t,"int32"))))}function nx(e,t){const n=[];let s=0,r=null;for(;s<e;)r=s+t,r>=e&&(r=e),n.push([s,r]),s=r;return n}function sx(e){const t=[];e instanceof Hr&&(e=[e]);for(let n=0;n<e.length;++n){const s=e[n];if(1===s.rank)t.push(Ug(s,1));else{if(0===s.rank)throw new Error("Expected tensor to be at least 1D, but received a 0D tensor (scalar).");t.push(s)}}return t}function rx(e,t){if(null==e)return;const n=[];if(t instanceof Hr)n.push(t.id);else if(Array.isArray(t))t.forEach((e=>n.push(e.id)));else if(null!=t)for(const e in t){const s=t[e];n.push(s.id)}const s=[];if(e instanceof Hr)-1===n.indexOf(e.id)&&s.push(e);else if(Array.isArray(e))e.forEach((e=>{-1===n.indexOf(e.id)&&s.push(e)}));else if(null!=e)for(const t in e){const r=e[t];-1===n.indexOf(r.id)&&s.push(r)}s.forEach((e=>{e.isDisposed||e.dispose()}))}function ax(e){return Array.isArray(e)}function ix(e){return!function(e){return e instanceof Hr}(e)&&!ax(e)}function ox(e,t,n,s=!0,r=""){if(null==t||0===t.length){if(null!=e){let t=!1;if(ax(e)&&e.length>0)t=!0;else if(ix(e)){for(const n in e)if(e.hasOwnProperty(n)){t=!0;break}}else t=!0;if(t)throw new Km(`Error when checking model ${r} expected no data, but got ${e}`)}return[]}if(null==e)return t.map((e=>null));let a;if(ix(e)){a=[];for(const n of t){if(null==e[n])throw new Km(`No data provided for "${n}". Need data for each key in: ${t}`);a.push(e[n])}}else if(ax(e)){if(e.length!==t.length)throw new Km(`Error when checking model ${r}: the Array of Tensors that you are passing to your model is not the size the model expected. Expected to see ${t.length} Tensor(s), but instead got the following list of Tensor(s): ${e}`);a=e}else{if(t.length>1)throw new Km(`The model ${r} expects ${t.length} Tensor(s), but only received one Tensor. Found: Tensor with shape ${e.shape}`);a=[e]}if(a=sx(a),null!=n)for(let e=0;e<t.length;++e){if(null==n[e])continue;const i=a[e];if(i.shape.length!==n[e].length)throw new Km(`Error when checking ${r}: expected ${t[e]} to have ${n[e].length} dimension(s). but got array with shape ${i.shape}`);for(let t=0;t<n[e].length;++t){if(0===t&&!s)continue;const a=i.shape[t],o=n[e][t];if(null!=o&&o>=0&&a!==o)throw new Km(`${r} expected a batch of elements where each example has shape [${n[e].slice(1,n[e].length)}] (i.e.,tensor shape [*,${n[e].slice(1,n[e].length)}]) but the ${r} received an input with ${i.shape[0]} examples, each with shape [${i.shape.slice(1,i.shape.length)}] (tensor shape [${i.shape}])`)}}return a}function lx(e,t,n,s=!0,r=""){let a;if(Array.isArray(e)){if(e.length!==t.length)throw new Km(`Error when checking model ${r}: the Array of Tensors that you are passing to your model is not the size the the model expected. Expected to see ${t.length} Tensor(s), but instead got ${e.length} Tensors(s).`);a=e}else{if(t.length>1)throw new Km(`The model expects ${t.length} ${r} Tensors, but only received one Tensor. Found: array with shape ${JSON.stringify(e.shape)}.`);a=[e]}if(null!=n)for(let e=0;e<t.length;++e){if(null==n[e])continue;const i=a[e];if(i.shape.length!==n[e].length)throw new Km(`Error when checking ${r}: expected ${t[e]} to have ${n[e].length} dimension(s), but got array with shape ${JSON.stringify(i.shape)}`);for(let a=0;a<n[e].length;++a){if(0===a&&!s)continue;const o=i.shape[a],l=n[e][a];if(null!=l&&l!==o)throw new Km(`Error when checking ${r}: expected ${t[e]} to have shape ${JSON.stringify(n[e])} but got array with shape ${JSON.stringify(i.shape)}.`)}}}class ux extends Hb{constructor(e){super(e),this.isTraining=!1}summary(e,t,n=console.log){if(!this.built)throw new Km("This model has never been called, thus its weights have not been created yet. So no summary can be displayed. Build the model first (e.g., by calling it on some test data).");!function(e,t,n,s=console.log){const r=function(e){let t=!0;const n=[],s=[];for(const t in e.nodesByDepth)n.push(e.nodesByDepth[t]);for(const e of n){if(e.length>1||1===e.length&&e[0].inboundLayers.length>1){t=!1;break}s.push(...e)}if(t)for(const n of e.layers){let e=!1;for(const r of n.inboundNodes)if(-1!==s.indexOf(r)){if(e){t=!1;break}e=!0}if(!t)break}return t}(e),a=["Layer (type)","Input Shape","Output shape","Param #"];let i;if(r?(t=t||90,n=n||[.32,.61,.89,1]):(t=t||115,n=n||[.24,.48,.7,.8,1]),n[n.length-1]<=1&&(n=n.map((e=>Math.floor(t*e)))),!r){a.push("Receives inputs"),i=[];for(const t in e.nodesByDepth)i.push(...e.nodesByDepth[t])}s("_".repeat(t)),Bb(a,n,s),s("=".repeat(t));const o=e.layers;for(let e=0;e<o.length;++e)r?Pb(o[e],n,s):Wb(o[e],n,i,s),s((e===o.length-1?"=":"_").repeat(t));e.checkTrainableWeightsConsistency();const l=function(e){let t;return t=null!=e.collectedTrainableWeights?Ay(e.collectedTrainableWeights):Ay(e.trainableWeights),t}(e),u=Ay(e.nonTrainableWeights);s(`Total params: ${l+u}`),s(`Trainable params: ${l}`),s(`Non-trainable params: ${u}`),s("_".repeat(t))}(this,e,t,n)}compile(e){if(null==e.loss&&(e.loss=[]),this.loss=e.loss,"string"==typeof e.optimizer)this.optimizer_=function(e){const t={Adagrad:()=>vp.adagrad(.01),Adadelta:()=>vp.adadelta(1,.95,Wg()),Adam:()=>vp.adam(.001,.9,.999,Wg()),Adamax:()=>vp.adamax(.002,.9,.999,Wg(),0),RMSProp:()=>vp.rmsprop(.001,.9,0,Wg()),SGD:()=>vp.sgd(.01)};if(t.adagrad=t.Adagrad,t.adadelta=t.Adadelta,t.adam=t.Adam,t.adamax=t.Adamax,t.rmsprop=t.RMSProp,t.sgd=t.SGD,e in t)return t[e]();throw new Km(`Unknown Optimizer ${e}`)}(e.optimizer),this.isOptimizerOwned=!0;else{if(!(e.optimizer instanceof to))throw new Km("User-defined optimizer must be an instance of tf.Optimizer.");this.optimizer_=e.optimizer,this.isOptimizerOwned=!1}let t=[];if(Array.isArray(e.loss)||"string"==typeof e.loss||"function"==typeof e.loss)if(Array.isArray(e.loss)){if(e.loss.length!==this.outputs.length)throw new Km(`When passing an Array as loss, it should have one entry per model output. The model has ${this.outputs.length} output(s), but you passed loss=${e.loss}.`);const n=e.loss;t=n.map((e=>Cb(e)))}else{const n=Cb(e.loss);this.outputs.forEach((e=>{t.push(n)}))}else{e.loss=e.loss;for(const t in e.loss)if(-1===this.outputNames.indexOf(t))throw new Km(`Unknown entry in loss dictionary: "${t}". Only expected the following keys: ${this.outputNames}`);for(const n of this.outputNames)null==e.loss[n]&&console.warn(`Output "${n}" is missing from loss dictionary. We assume this was done on purpose, and we will not be expecting data to be passed to ${n} during training`),t.push(Cb(e.loss[n]))}this.lossFunctions=t,this.feedOutputNames=[],this.feedOutputShapes=[],this.feedLossFns=[];for(let e=0;e<this.outputs.length;++e){const t=this.internalOutputShapes[e],n=this.outputNames[e];this.feedOutputNames.push(n),this.feedOutputShapes.push(t),this.feedLossFns.push(this.lossFunctions[e])}const n=[];this.metrics=e.metrics,this.metricsNames=["loss"],this.metricsTensors=[],Rg("loss",(()=>{for(let e=0;e<this.outputs.length;++e){if(-1!==n.indexOf(e))continue;const t=this.lossFunctions[e];this.outputs.length>1&&(this.metricsTensors.push([t,e]),this.metricsNames.push(this.outputNames[e]+"_loss"))}}));const s=function(e,t){if(null==e||Array.isArray(e)&&0===e.length)return t.map((e=>[]));let n;if("string"==typeof e||"function"==typeof e)n=[e];else{if(!Array.isArray(e)&&"object"!=typeof e)throw new TypeError(`Type of metrics argument not understood. Expected an string,function, Array, or Object, found: ${e}`);n=e}if(Array.isArray(n))return t.map((e=>n));{const e=[];for(const s of t){let t=n.hasOwnProperty(s)?n[s]:[];Array.isArray(t)||(t=[t]),e.push(t)}return e}}(e.metrics,this.outputNames),r=(e,t,n)=>{this.outputNames.length>1&&(t=this.outputNames[e]+"_"+t),this.metricsNames.push(t),this.metricsTensors.push([n,e])};Rg("metric",(()=>{for(let e=0;e<this.outputs.length;++e)-1===n.indexOf(e)&&(t=>{let n,s,a;for(const i of t){if("string"==typeof i&&-1!==["accuracy","acc","crossentropy","ce"].indexOf(i)){const t=this.internalOutputShapes[e];let r;1===t[t.length-1]||this.lossFunctions[e]===Nb?-1!==["accuracy","acc"].indexOf(i)?s=$b:-1!==["crossentropy","ce"].indexOf(i)&&(s=Ab):this.lossFunctions[e]===Ib?-1!==["accuracy","acc"].indexOf(i)?s=Rb:-1!==["crossentropy","ce"].indexOf(i)&&(s=Fb):-1!==["accuracy","acc"].indexOf(i)?s=Eb:-1!==["crossentropy","ce"].indexOf(i)&&(s=_b),-1!==["accuracy","acc"].indexOf(i)?r="acc":-1!==["crossentropy","ce"].indexOf(i)&&(r="ce"),a=s,n=""+r}else{const e=Ob(i);a=e,n=""+Mb(i)}let t;Rg(n,(()=>{t=a})),r(e,n,t)}})(s[e])})),this.collectedTrainableWeights=this.trainableWeights}checkTrainableWeightsConsistency(){null!=this.collectedTrainableWeights&&this.trainableWeights.length!==this.collectedTrainableWeights.length&&console.warn("Discrepancy between trainableweights and collected trainable weights. Did you set `model.trainable` without calling `model.compile()` afterwards?")}evaluate(e,t,n={}){const s=null==n.batchSize?32:n.batchSize;Qb(s);const r=this.standardizeUserDataXY(e,t,!0,s);try{const e=r[0].concat(r[1]);this.makeTestFunction();const t=this.testFunction;return tg(this.testLoop(t,e,s,n.verbose,n.steps))}finally{rx(r[0],e),rx(r[1],t)}}async evaluateDataset(e,t){return this.makeTestFunction(),async function(e,t,n){const s=null!=(n=n||{}).batches,r=e.testFunction;let a=[];if(n.verbose>0)throw new Xm("Verbose mode is not implemented yet.");ie(!s||n.batches>0&&Number.isInteger(n.batches),(()=>`Test loop expects \`batches\` to be a positive integer, but received ${JSON.stringify(n.batches)}`));const i="function"==typeof t.next?t:await t.iterator();let o=0,l=0;for(;!s||l<n.batches;){const t=await i.next();if(a=_a((()=>{if(t.value){const{xs:n,ys:s}=Yb(e,t.value),i=n.concat(s),u=_a((()=>r(i)));if(Fa(i),0===l)for(let e=0;e<u.length;++e)a.push(Xi(0));const c=i[0].shape[0];for(let e=0;e<u.length;++e){const t=u[e],n=a[e];a[e]=_a((()=>Wi(a[e],Gi(c,t)))),l>0&&Fa(n)}Fa(u),o+=c,++l}return a})),t.done){s&&console.warn(`Your dataset iterator ran out of data during evaluateDataset(). Interrupting evalution. Make sure that your dataset can generate at least \`batches\` batches (in this case, ${n.batches} batches). You may need to use the repeat() function when building your dataset.`);break}}for(let e=0;e<a.length;++e){const t=a[e];a[e]=Ui(a[e],o),Fa(t)}return tg(a)}(this,e,t)}checkNumSamples(e,t,n,s="steps"){let r;if(null!=n){if(r=null,null!=t)throw new Km(`If ${s} is set, batchSize must be null or undefined.Got batchSize = ${t}`)}else{if(null==e)throw new Km(`Either the input data should have a defined shape, or ${s} shoud be specified.`);r=Array.isArray(e)?e[0].shape[0]:e.shape[0]}return r}execute(e,t){if(Array.isArray(t)&&0===t.length)throw new Km("`outputs` is an empty Array, which is not allowed.");const n=Array.isArray(t),s=n?t:[t],r=this.retrieveSymbolicTensors(s),a=new Uy;if(e instanceof Hr&&(e=[e]),Array.isArray(e)){if(e.length!==this.inputs.length)throw new Km(`The number of inputs provided (${e.length}) does not match the number of inputs of this model (${this.inputs.length}).`);for(let t=0;t<this.inputs.length;++t)a.add(this.inputs[t],e[t])}else for(const t of this.inputs){const n=e[t.name];if(null==n)throw new Km(`No value is provided for the model's input ${t.name}`);a.add(t,n)}const i=Hy(r,a);return n?i:i[0]}retrieveSymbolicTensors(e){const t=Zm(null,e.length);let n=e.length;for(const s of this.layers){const r=Array.isArray(s.output)?s.output:[s.output],a=r.map((e=>e.name));for(let s=0;s<e.length;++s){const i=a.indexOf(e[s]);if(-1!==i&&(t[s]=r[i],n--),0===n)break}if(0===n)break}if(n>0){const n=[];throw t.forEach(((t,s)=>{null==t&&n.push(e[s])})),new Km(`Cannot find SymbolicTensors for output name(s): ${JSON.stringify(n)}`)}return t}predictLoop(e,t=32,n=!1){return _a((()=>{const s=this.checkNumSamples(e);if(n)throw new Xm("Verbose predictLoop() is not implemented yet.");const r=nx(s,t),a=this.outputs.map((e=>[]));for(let t=0;t<r.length;++t)_a((()=>{const n=r[t][0],s=r[t][1],a=ex(e,n,s),i=[];if(Array.isArray(a))for(let e=0;e<a.length;++e)i.push({key:this.inputs[e],value:a[e]});else i.push({key:this.inputs[0],value:a});const o=new Uy(i);return Hy(this.outputs,o)})).forEach(((e,t)=>a[t].push(e)));return tg(a.map((e=>Ll(e,0))))}))}predict(e,t={}){const n=sx(e);lx(n,this.inputNames,this.feedInputShapes,!1);try{const e=null==t.batchSize?32:t.batchSize;return Qb(e),this.predictLoop(n,e)}finally{rx(n,e)}}predictOnBatch(e){lx(e,this.inputNames,this.feedInputShapes,!0);const t=(Array.isArray(e)?e[0]:e).shape[0];return this.predictLoop(e,t)}standardizeUserDataXY(e,t,n=!0,s){if(null==this.optimizer_)throw new qm("You must compile a model before training/testing. Use LayersModel.compile(modelCompileArgs).");const r=[];for(let e=0;e<this.feedOutputShapes.length;++e){const t=this.feedOutputShapes[e];this.feedLossFns[e]===Ib?r.push(t.slice(0,t.length-1).concat([1])):r.push(t)}if(function(e,t){const n=cg(e.map((e=>e.shape[0])));n.sort();const s=cg(t.map((e=>e.shape[0])));if(s.sort(),n.length>1)throw new Km(`All input Tensors (x) should have the same number of samples. Got array shapes: ${JSON.stringify(e.map((e=>e.shape)))}`);if(s.length>1)throw new Km(`All target Tensors (y) should have the same number of samples. Got array shapes: ${JSON.stringify(t.map((e=>e.shape)))}`);if(n.length>0&&s.length>0&&!ce(n,s))throw new Km(`Input Tensors should have the same number of samples as target Tensors. Found ${n[0]} input sample(s) and ${s[0]} target sample(s).`)}(e=ox(e,this.feedInputNames,this.feedInputShapes,!1,"input"),t=ox(t,this.feedOutputNames,r,!1,"target")),function(e,t,n){const s=[xb,Nb,kb];for(let r=0;r<e.length;++r){const a=e[r],i=t[r],o=n[r];if(null!=i){if(i===kb&&1===a.shape[a.shape.length-1])throw new Km(`You are passing a target array of shape ${a.shape} while using a loss 'categorical_crossentropy'. 'categorical_crossentropy'expects targets to be binary matrices (1s and 0s) of shape [samples, classes].`);if(-1!==s.indexOf(i)){const e=a.shape.slice(1),t=o.slice(1);for(let n=0;n<e.length;++n){const s=e[n],r=t[n];if(null!=r&&s!==r)throw new Km(`A target Tensor with shape ${a.shape} was passed for an output of shape ${o}, while using a loss function that expects targets to have the same shape as the output.`)}}}}}(t,this.feedLossFns,this.feedOutputShapes),this.stateful&&null!=s&&s>0&&e[0].shape[0]%s!==0)throw new Km(`In a stateful network, you should only pass inputs with a number of samples that is divisible by the batch size ${s}. Found: ${e[0].shape[0]} sample(s).`);return[e,t]}async standardizeUserData(e,t,n,s,r=!0,a){const[i,o]=this.standardizeUserDataXY(e,t,r,a);if(null!=n)throw new Error("sample weight is not supported yet.");let l=null;if(null!=s){const e=qb(s,this.outputNames);l=[];for(let t=0;t<e.length;++t)l.push(await Kb(o[t],null,e[t]))}return[i,o,l]}testLoop(e,t,n,s=0,r){return _a((()=>{const a=this.checkNumSamples(t,n,r,"steps"),i=[];if(s>0)throw new Xm("Verbose mode is not implemented yet.");if(null!=r)throw new Xm("steps mode in testLoop() is not implemented yet");{const s=nx(a,n),r=Bh(Bg(0,a));for(let n=0;n<s.length;++n){const a=s[n][0],o=s[n][1],l=Gg(r,a,o-a),u=tx(t,l),c=e(u);if(0===n)for(let e=0;e<c.length;++e)i.push(Xi(0));for(let e=0;e<c.length;++e){const t=c[e];i[e]=Wi(i[e],Gi(o-a,t))}}for(let e=0;e<i.length;++e)i[e]=Ui(i[e],a)}return i}))}getDedupedMetricsNames(){const e=this.metricsNames,t=[];for(let n=0;n<e.length;++n){const s=e[n];let r=s;eg(e,s)>1&&(r+=`_${eg(e.slice(0,n),s)}`),t.push(r)}return t}makeTrainFunction(){return e=>{const t=[],n=e.slice(0,this.inputs.length),s=e.slice(this.inputs.length,this.inputs.length+this.outputs.length),r=e.slice(this.inputs.length+this.outputs.length,this.inputs.length+2*this.outputs.length),a=[],i=this.collectedTrainableWeights.map((e=>e.read()));return[this.optimizer_.minimize((()=>{const e=[];for(let t=0;t<this.inputs.length;++t)e.push({key:this.inputs[t],value:n[t]});const i=new Uy(e),o=Hy(this.outputs,i,{training:!0});let l;for(let e=0;e<this.lossFunctions.length;++e){let n=(0,this.lossFunctions[e])(s[e],o[e]);null!=r[e]&&(n=Xb(n,r[e]));const a=Ic(n);t.push(a),l=0===e?n:Wi(l,n)}for(let e=0;e<this.metricsTensors.length;++e){let n;if(this.outputs.length>1&&e<this.outputs.length)n=t[e];else{const t=this.metricsTensors[e][0],r=this.metricsTensors[e][1];n=Ic(t(s[r],o[r]))}Da(n),a.push(n)}return l=Ic(l),this.calculateLosses().forEach((e=>{l=Wi(l,e)})),l}),!0,i)].concat(a)}}makeTestFunction(){this.testFunction=e=>_a((()=>{const t=[];let n;const s=e.slice(0,this.inputs.length),r=e.slice(this.inputs.length,this.inputs.length+this.outputs.length),a=[];for(let e=0;e<this.inputs.length;++e)a.push({key:this.inputs[e],value:s[e]});const i=new Uy(a),o=Hy(this.outputs,i);for(let e=0;e<this.lossFunctions.length;++e){const s=this.lossFunctions[e],a=Ic(s(r[e],o[e]));n=0===e?a:Wi(n,a),t.push(n)}for(let e=0;e<this.metricsTensors.length;++e){const n=this.metricsTensors[e][0],s=this.metricsTensors[e][1],a=Ic(n(r[s],o[s]));t.push(a)}return t}))}async fit(e,t,n={}){if(this.isTraining)throw new Error("Cannot start training because another fit() call is ongoing.");let s,r,a,i,o,l,u,c,h;this.isTraining=!0;try{const d=null==n.batchSize?32:n.batchSize;Qb(d);const p=!1,f=await this.standardizeUserData(e,t,n.sampleWeight,n.classWeight,p,d);s=f[0],r=f[1],h=f[2];let m,g=!1;if(null!=n.validationData&&n.validationData.length>0){if(g=!0,2!==n.validationData.length)throw 3===n.validationData.length?new Xm("validationData including sample weights is not supported yet."):new Km(`When passing validation data, it must contain 2 (valX, valY) or 3 (valX, valY, valSampleWeight) items; ${n.validationData} is invalid.`);o=n.validationData[0],l=n.validationData[1];const e=!0,t=await this.standardizeUserData(o,l,null,null,e,d);u=t[0],c=t[1],m=u.concat(c)}else if(null!=n.validationSplit&&n.validationSplit>0&&n.validationSplit<1){g=!0;const e=Math.floor(s[0].shape[0]*(1-n.validationSplit)),t=s[0].shape[0];u=ex(s,e,t),a=s,s=ex(s,0,e),c=ex(r,e,t),i=r,r=ex(r,0,e),m=u.concat(c)}else null!=n.validationSteps&&(g=!0);const y=s.concat(r).concat(h);this.checkTrainableWeightsConsistency();const b=this.makeTrainFunction(),x=this.getDedupedMetricsNames();let w,v;g?(this.makeTestFunction(),w=this.testFunction,v=x.slice().concat(x.map((e=>"val_"+e)))):(w=null,m=[],v=x.slice());const k=fb(n.callbacks,n.yieldEvery);return await this.fitLoop(b,y,x,d,n.epochs,n.verbose,k,w,m,n.shuffle,v,n.initialEpoch,null,null)}finally{this.isTraining=!1,rx(s,e),rx(r,t),rx(a,e),rx(i,t),rx(u,o),rx(c,l),null!=h&&Fa(h)}}async fitLoop(e,t,n,s,r,a,i,o,l,u,c,h,d,p){null==s&&(s=32),null==r&&(r=1),null==u&&(u=!0),null==h&&(h=0);let f=!1;if(null!=o&&null!=l&&(f=!0),null!=p&&(f=!0,null==d))throw new Km("Can only use `validationSteps` when doing step-wise training, i.e., `stepsPerEpoch` must be set.");const m=this.checkNumSamples(t,s,d,"steps_per_epoch");let g;null!=m&&(g=Bg(0,m)),null==a&&(a=1);const{callbackList:y,history:b}=gb(i,a,r,h,m,d,s,f,c);y.setModel(this),this.history=b,await y.onTrainBegin(),this.stopTraining_=!1;for(let a=h;a<r;++a){await y.onEpochBegin(a);const r={};if(null!=d)throw new Xm("stepsPerEpoch mode is not implemented yet.");{if("batch"===u)throw new Xm("batch shuffling is not implemneted yet");u&&ne(g);const a=Bh(g),i=nx(m,s);for(let u=0;u<i.length;++u){const c={};if(await y.onBatchBegin(u,c),_a((()=>{const h=i[u][0],d=i[u][1],p=Gg(a,h,d-h);c.batch=u,c.size=d-h;const m=tx(t,p),g=e(m);for(let e=0;e<n.length;++e){const t=n[e],s=g[e];c[t]=s,Da(s)}if(u===i.length-1&&f){const e=this.testLoop(o,l,s);for(let t=0;t<n.length;++t){const s=n[t],a=e[t];Da(a),r["val_"+s]=a}}})),await y.onBatchEnd(u,c),ob(c),this.stopTraining_)break}a.dispose()}if(await y.onEpochEnd(a,r),this.stopTraining_)break}return await y.onTrainEnd(),await this.history.syncData(),this.history}async fitDataset(e,t){return async function(e,t,n){const s=null!=n.batchesPerEpoch;if(ie(null!=e.optimizer,(()=>"You must compile a model before training/testing. Use LayersModel.compile(modelCompileConfig).")),ie(null!=n,(()=>"For fitDataset(), the 2nd argument (config) is required, but it is not provided in this call.")),ie(null!=n.epochs&&n.epochs>0&&Number.isInteger(n.epochs),(()=>`For fitDataset(), config.epochs is expected to be a positive integer, but got ${n.epochs}`)),ie(!s||n.batchesPerEpoch>0&&Number.isInteger(n.batchesPerEpoch),(()=>`For fitDataset(), config.batchesPerEpoch is expected to be a positive integer if specified, but got ${n.batchesPerEpoch}`)),ie(null==n.validationSplit,(()=>"`validationSplit` is not supported by `fitDataset()`. Use validationData instead.")),e.isTraining)throw new Error("Cannot start training because another fit() call is ongoing.");e.isTraining=!0;try{const r=null!=n.validationData;let a,i;if(r)if(Zb(n.validationData))ie(null==n.validationBatches||n.validationBatches>0&&Number.isInteger(n.validationBatches),(()=>`For fitDataset() with dataset-based validation, config.validationBatches is expected not to be provided, or to be a positive integer, but got ${n.validationBatches}`));else{const e=function(e){if(3===e.length)throw new Xm("Validation with sample weights is not implemented yet.");return{xs:e[0],ys:e[1]}}(n.validationData);a=e.xs,i=e.ys}const o=e.makeTrainFunction(),l=e.getDedupedMetricsNames();let u;u=r?l.slice().concat(l.map((e=>"val_"+e))):l.slice();const c=fb(n.callbacks,n.yieldEvery),h=null==n.verbose?1:n.verbose,{callbackList:d,history:p}=gb(c,h,n.epochs,null,null,function(e,t){let n=null;return null!=t.batchesPerEpoch?n=t.batchesPerEpoch:Number.isFinite(e.size)&&(n=e.size),n}(t,n),null,r,u);d.setModel(e),e.history=p,await d.onTrainBegin(),e.stopTraining_=!1;let f=null==n.initialEpoch?0:n.initialEpoch,m=await t.iterator();for(;f<n.epochs;){const u={};await d.onEpochBegin(f);let c=0,h=0;for(s||(m=await t.iterator());!s||c<n.batchesPerEpoch;){const t=await m.next();if(s&&t.done){console.warn(`You provided \`batchesPerEpoch\` as ${n.batchesPerEpoch}, but your dataset iterator ran out of data after ${c} batches; interrupting training. Make sure that your dataset can generate at least \`batchesPerEpoch * epochs\` batches (in this case, `+n.batchesPerEpoch*n.epochs+" batches). You may need to use the repeat() function when building your dataset.");break}if(null!=t.value){const{xs:s,ys:r}=Yb(e,t.value),a={};a.batch=h,a.size=s[0].shape[0],await d.onBatchBegin(h,a);const i=[];if(null!=n.classWeight){const t=qb(n.classWeight,e.outputNames);for(let e=0;e<t.length;++e)i.push(await Kb(r[e],null,t[e]))}const u=s.concat(r).concat(i),p=o(u);Fa(u);for(let e=0;e<l.length;++e){const t=l[e],n=p[e];a[t]=n,Da(n)}await d.onBatchEnd(h,a),ob(a),h++,c++}if(s?c>=n.batchesPerEpoch:t.done){if(r){let t;t=Zb(n.validationData)?ng(await e.evaluateDataset(n.validationData,{batches:n.validationBatches})):ng(e.evaluate(a,i,{batchSize:null==n.validationBatchSize?32:n.validationBatchSize,verbose:0}));for(let n=0;n<e.metricsNames.length;++n)u[`val_${e.metricsNames[n]}`]=t[n]}break}if(e.stopTraining_)break}if(await d.onEpochEnd(f,u),f++,e.stopTraining_)break}return await d.onTrainEnd(),await e.history.syncData(),e.history}finally{e.isTraining=!1}}(this,e,t)}async trainOnBatch(e,t){const n=await this.standardizeUserData(e,t),s=n[0],r=n[1],a=this.makeTrainFunction()(s.concat(r)),i=[];for(const e of a){const t=await e.data();i.push(t[0])}return Fa(a),rx(n[0],e),rx(n[1],t),tg(i)}getNamedWeights(e){const t=[],n=null!=e&&e.trainableOnly,s=n?this.trainableWeights:this.weights,r=this.getWeights(n);for(let e=0;e<s.length;++e)n&&!s[e].trainable||t.push({name:s[e].originalName,tensor:r[e]});return t}set stopTraining(e){this.stopTraining_=e}get stopTraining(){return this.stopTraining_}get optimizer(){return this.optimizer_}set optimizer(e){this.optimizer_!==e&&(this.optimizer_=e,this.isOptimizerOwned=!1)}dispose(){const e=super.dispose();if(0===e.refCountAfterDispose&&null!=this.optimizer&&this.isOptimizerOwned){const t=Ra().numTensors;this.optimizer_.dispose(),e.numDisposedVariables+=t-Ra().numTensors}return e}getLossIdentifiers(){let e;if("string"==typeof this.loss)e=sg(this.loss);else if(Array.isArray(this.loss)){for(const e of this.loss)if("string"!=typeof e)throw new Error("Serialization of non-string loss is not supported.");e=this.loss.map((e=>sg(e)))}else{const t=Object.keys(this.loss);e={};const n=this.loss;for(const s of t){if("string"!=typeof n[s])throw new Error("Serialization of non-string loss is not supported.");e[s]=sg(n[s])}}return e}getMetricIdentifiers(){if("string"==typeof this.metrics||"function"==typeof this.metrics)return[sg(Mb(this.metrics))];if(Array.isArray(this.metrics))return this.metrics.map((e=>sg(Mb(e))));{const e={};for(const t in this.metrics)e[t]=sg(Mb(this.metrics[t]));return e}}getTrainingConfig(){return{loss:this.getLossIdentifiers(),metrics:this.getMetricIdentifiers(),optimizer_config:{class_name:this.optimizer.getClassName(),config:this.optimizer.getConfig()}}}loadTrainingConfig(e){if(null!=e.weighted_metrics)throw new Error("Loading weight_metrics is not supported yet.");if(null!=e.loss_weights)throw new Error("Loading loss_weights is not supported yet.");if(null!=e.sample_weight_mode)throw new Error("Loading sample_weight_mode is not supported yet.");const t=yb(Ub(e.optimizer_config));let n,s;if("string"==typeof e.loss)n=rg(e.loss);else if(Array.isArray(e.loss))n=e.loss.map((e=>rg(e)));else if(null!=e.loss){n={};for(const t in e.loss)n[t]=rg(e.loss[t])}if(Array.isArray(e.metrics))s=e.metrics.map((e=>rg(e)));else if(null!=e.metrics){s={};for(const t in e.metrics)s[t]=rg(e.metrics[t])}this.compile({loss:n,metrics:s,optimizer:t})}async save(e,t){if("string"==typeof e){const t=ri(e);if(0===t.length)throw new Km(`Cannot find any save handlers for URL '${e}'`);if(t.length>1)throw new Km(`Found more than one (${t.length}) save handlers for URL '${e}'`);e=t[0]}if(null==e.save)throw new Km("LayersModel.save() cannot proceed because the IOHandler provided does not have the `save` attribute defined.");const n=await za(this.getNamedWeights(t)),s={modelTopology:this.toJSON(null,!1),format:"layers-model",generatedBy:`TensorFlow.js tfjs-layers v${jb}`,convertedBy:null};if(null!=t&&t.includeOptimizer&&null!=this.optimizer){s.trainingConfig=this.getTrainingConfig();const e="optimizer",{data:t,specs:r}=await za(await this.optimizer.getWeights(),e);n.specs.push(...r),n.data=Ka([n.data,t])}if(null!=this.userDefinedMetadata){const e=!0;Lb(this.userDefinedMetadata,this.name,e),s.userDefinedMetadata=this.userDefinedMetadata}return s.weightData=n.data,s.weightSpecs=n.specs,e.save(s)}setUserDefinedMetadata(e){Lb(e,this.name),this.userDefinedMetadata=e}getUserDefinedMetadata(){return this.userDefinedMetadata}}ux.className="Model",eo(ux);class cx extends ux{}cx.className="Functional",eo(cx);class hx extends ux{constructor(e){if(super({inputs:[],outputs:[]}),e=e||{},this.trainable=!0,this.built=!1,this.name=null!=e.name?e.name:wg("sequential_"),null!=e.layers)for(const t of e.layers)this.add(t)}checkShape(e){if(e.inboundNodes[0].outputTensors[0].shape.some((e=>e<0)))throw new Km(`Negative dimension size caused by adding layer ${e.name} with input shape [${e.inboundNodes[0].inputTensors[0].shape}]`)}add(e){const t=e instanceof hx||e instanceof ux;let n;if(t){if(n=e,1!==n.outputs.length)throw new Km("All layers in a Sequential model should have a single output tensor. For multi-output layers, use the functional API.");if(1!==n.inputs.length)throw new Km("All layers in a Sequential model should have a single input tensor. For multi-input layers, use the functional API.")}if(0===this.outputs.length){if(0===e.inboundNodes.length){if(null==e.batchInputShape)throw new Km("The first layer in a Sequential model must get an `inputShape` or `batchInputShape` argument.");const t=function(e){if(null==e.batchShape&&null==e.shape)throw new Error("Please provide to Input either a `shape` or a `batchShape` argument. Note that `shape` does not include the batch dimension.");if(null!=e.batchShape&&null!=e.shape)throw new Km("Please provide either a `shape` or `batchShape` argument to Input, but not both.");let t=e.batchShape;null!=e.shape&&null==t&&(t=[null].concat(e.shape));let n=e.dtype;return null==n&&(n="float32"),new Vy({batchInputShape:t,name:e.name,dtype:n,sparse:e.sparse}).inboundNodes[0].outputTensors[0]}({batchShape:e.batchInputShape,dtype:e.dtype,name:e.name+"_input"});e.apply(t)}if(t)this.outputs=n.outputs,this.inputs=n.inputs;else{if(1!==e.inboundNodes.length)throw new Km(`A layer added to a Sequential model must not already be connected somewhere else. LayersModel received layer ${e.name} which has ${e.inboundNodes.length} pre-existing inbound connections.`);if(1!==e.inboundNodes[0].outputTensors.length)throw new Km("All layers in a Sequential model should have a single output tensor. For multi-output layers, use the functional API.");this.checkShape(e),this.outputs=[e.inboundNodes[0].outputTensors[0]],this.inputs=Wy(this.outputs[0])}this.inboundNodes=[],new zy({outboundLayer:this,inboundLayers:[],nodeIndices:[],tensorIndices:[],inputTensors:this.inputs,outputTensors:this.outputs,inputMasks:Zm(null,this.inputs.length),outputMasks:[null],inputShapes:this.inputs.map((e=>e.shape)),outputShapes:this.outputs[0].shape})}else{const t=e.apply(this.outputs[0]);if(Array.isArray(t))throw new TypeError("All layers in a Sequential model should have a single output tensor. For multi-output layers, use the functional API.");this.checkShape(e),this.outputs=[t],this.inboundNodes[0].outputTensors=this.outputs,this.inboundNodes[0].outputShapes=[this.outputs[0].shape]}this.layers.push(e),this.built=!1}pop(){if(0===this.layers.length)throw new TypeError("There are no layers in the model.");if(this.layers.pop(),0===this.layers.length)this.outputs=[],this.inboundNodes=[],this.outboundNodes=[];else{const e=this.layers.length-1;this.layers[e].outboundNodes=[],this.outputs=[this.layers[e].output],this.inboundNodes[0].outputTensors=this.outputs,this.inboundNodes[0].outputShapes=[this.outputs[0].shape]}}call(e,t){return null==this.model&&this.build(),this.model.call(e,t)}build(e){if(Ey(e),0===this.inputs.length||0===this.outputs.length)throw new TypeError("Sequential model cannot be built: model is empty. Add some layers first.");this.model=new ux({inputs:this.inputs,outputs:this.outputs[0],name:this.name+"_model"}),this.model.trainable=this.trainable,this.supportsMasking=this.model.supportsMasking,this.inputLayers=this.model.inputLayers,this.inputLayersNodeIndices=this.model.inputLayersNodeIndices,this.inputLayersTensorIndices=this.model.inputLayersTensorIndices,this.outputLayers=this.model.outputLayers,this.outputLayersNodeIndices=this.model.outputLayersNodeIndices,this.outputLayersTensorIndices=this.model.outputLayersTensorIndices,this.nodesByDepth=this.model.nodesByDepth,this.containerNodes=this.model.containerNodes,this.outputNames=this.model.outputNames,this.inputNames=this.model.inputNames,this.built=!0}countParams(){return this.built||this.build(),super.countParams()}summary(e,t,n=console.log){this.built||this.build(),super.summary(e,t,n)}setWeights(e){null==this.model&&this.build(),this.model.setWeights(e)}evaluate(e,t,n={}){if(!this.built)throw new qm("The model needs to be compiled before being used.");return this.model.evaluate(e,t,n)}async evaluateDataset(e,t){if(!this.built)throw new qm("The model needs to be compiled before being used.");return this.model.evaluateDataset(e,t)}predict(e,t={}){return null==this.model&&this.build(),this.model.predict(e,t)}predictOnBatch(e){return null==this.model&&this.build(),this.model.predictOnBatch(e)}compile(e){this.build(),this.model.compile(e),this.optimizer_=this.model.optimizer,this.isOptimizerOwned=this.model.isOptimizerOwned,this.loss=this.model.loss,this.metrics=this.model.metrics,this.metricsTensors=this.model.metricsTensors,this.metricsNames=this.model.metricsNames}get optimizer(){return null==this.model?void 0:this.model.optimizer}set optimizer(e){this.model.optimizer=e}async fit(e,t,n={}){if(!this.built)throw new qm("The model needs to be compiled before being used.");return this.model.fit(e,t,n)}async fitDataset(e,t){if(!this.built)throw new qm("The model needs to be compiled before being used.");return this.model.fitDataset(e,t)}async trainOnBatch(e,t){return this.model.trainOnBatch(e,t)}static fromConfig(e,t,n={},s=!1){let r,a={};if(t instanceof Array){if(null==t[0].className||"Merge"===t[0].className)throw new Km("Legacy serialization format not supported yet.");r=t}else ie(null!=t.layers,(()=>"When the config data for a Sequential model is not an Array, it must be an Object that contains the 'layers' field.")),r=t.layers,delete t.layers,a=t;const i=new e(a);if(!(i instanceof hx))throw new Xm(`Sequential.fromConfig called on non-Sequential input: ${i}`);for(const e of r){const t=yb(e,void 0,s);s&&t.setFastWeightInitDuringBuild(!0),i.add(t)}return i}set stopTraining(e){if(null==this.model)throw new Km("Cannot set the stopTraining property of a sequential model before it is compiled.");this.model.stopTraining=e}get stopTraining(){if(null==this.model)throw new Km("Cannot get the stopTraining property of a sequential model before it is compiled.");return this.model.stopTraining}getConfig(){const e=[];for(const t of this.layers){const n={};n.className=t.getClassName(),n.config=t.getConfig(),e.push(n)}return{name:this.name,layers:e}}}hx.className="Sequential",eo(hx);class dx extends Zi{getConfig(){return{}}}class px extends dx{apply(e,t=1){return function(e,t=1){if(1!==t)throw new Xm(`Support for alpha values other than 1 (${t}) is not implemented yet.`);return Su(e)}(e,t)}}px.className="elu",eo(px);class fx extends dx{apply(e){return yh(e)}}fx.className="selu",eo(fx);class mx extends dx{apply(e){return lh(e)}}mx.className="relu",eo(mx);class gx extends dx{apply(e){return _a((()=>Cc(6,lh(e))))}}gx.className="relu6",eo(gx);class yx extends dx{apply(e){return e}}yx.className="linear",eo(yx);class bx extends dx{apply(e){return Bl(e)}}bx.className="sigmoid",eo(bx);class xx extends dx{apply(e){return function(e){return _a((()=>{const t=Wi(.5,Gi(.2,e));return Ql(t,0,1)}))}(e)}}xx.className="hardSigmoid",eo(xx);class wx extends dx{apply(e){return uc(e)}}wx.className="softplus",eo(wx);class vx extends dx{apply(e){return function(e){return _a((()=>Ui(e,Wi(lo(e),1))))}(e)}}vx.className="softsign",eo(vx);class kx extends dx{apply(e){return Wl(e)}}kx.className="tanh",eo(kx);class Ix extends dx{apply(e,t=-1){return Ch(e,t)}}Ix.className="softmax",eo(Ix);class Nx extends dx{apply(e,t=-1){return hc(e,t)}}Nx.className="logSoftmax",eo(Nx);class Sx extends dx{apply(e){return _a((()=>_a((()=>{const t=Math.sqrt(2),n=Gi(.5,Wi(1,Cu(Ui(e,t))));return Gi(e,n)}))))}}Sx.className="gelu",eo(Sx);class Tx extends dx{apply(e){return _a((()=>Gi(.5,Gi(e,Wi(1,Wl(Gi(ji(Ui(2,Math.PI)),Wi(e,Gi(.044715,ao(e,3))))))))))}}Tx.className="gelu_new",eo(Tx);class Cx extends dx{apply(e){return _a((()=>Gi(e,Wl(uc(e)))))}}Cx.className="mish",eo(Cx);class $x extends dx{apply(e,t=1){return _a((()=>Gi(Bl(Gi(e,t)),e)))}}function Ex(e){return e.getClassName()}function Ax(e,t={}){return lg(e,Qi.getMap().classNameMap,t,"activation")}function Rx(e){if(null==e){return Ax({className:"linear",config:{}})}if("string"==typeof e){const t={};return t.className=e,t.config={},Ax(t)}return e instanceof dx?e:Ax(e)}$x.className="swish",eo($x);class _x extends Zi{}class Fx extends _x{constructor(e){super(),function(e){if(null!=e&&"object"!=typeof e)throw new Error(`Argument to L1L2 regularizer's constructor is expected to be an object, but received: ${e}`)}(e),this.l1=null==e||null==e.l1?.01:e.l1,this.l2=null==e||null==e.l2?.01:e.l2,this.hasL1=0!==this.l1,this.hasL2=0!==this.l2}apply(e){return _a((()=>{let t=Nc([1]);return this.hasL1&&(t=Wi(t,zu(Gi(this.l1,lo(e))))),this.hasL2&&(t=Wi(t,zu(Gi(this.l2,Qg(e))))),Dl(t,[])}))}getConfig(){return{l1:this.l1,l2:this.l2}}static fromConfig(e,t){return new e({l1:t.l1,l2:t.l2})}}Fx.className="L1L2",eo(Fx);const Dx={l1l2:"L1L2"};function Ox(e){return ig(e)}function Mx(e,t={}){return lg(e,Qi.getMap().classNameMap,t,"regularizer")}function Lx(e){return null==e?null:"string"==typeof e?Mx({className:e in Dx?Dx[e]:e,config:{}}):e instanceof _x?e:Mx(e)}class zx extends Py{constructor(e){super(null==e?{}:e),this.supportsMasking=!0,null!=e&&(this.maxValue=e.maxValue)}call(e,t){e=$y(e);let n=lh(e);return null!=this.maxValue&&(n=Ql(n,0,this.maxValue)),n}computeOutputShape(e){return e}getConfig(){const e={maxValue:this.maxValue},t=super.getConfig();return Object.assign(e,t),e}}zx.className="ReLU",eo(zx);class Bx extends Py{constructor(e){super(null==e?{}:e),this.DEFAULT_ALPHA=.3,null==e&&(e={}),this.alpha=null==e.alpha?this.DEFAULT_ALPHA:e.alpha}call(e,t){const n=$y(e);return tc(n,this.alpha)}computeOutputShape(e){return e}getConfig(){const e={alpha:this.alpha},t=super.getConfig();return Object.assign(e,t),e}}Bx.className="LeakyReLU",eo(Bx);class Px extends Py{constructor(e){if(super(null==e?{}:e),this.DEFAULT_ALPHA_INITIALIZER="zeros",null==e&&(e={}),this.supportsMasking=!0,this.alphaInitializer=Sy(e.alphaInitializer||this.DEFAULT_ALPHA_INITIALIZER),this.alphaRegularizer=Lx(e.alphaRegularizer),this.alphaConstraint=ab(e.alphaConstraint),null==e.sharedAxes)this.sharedAxes=null;else if(Array.isArray(e.sharedAxes))this.sharedAxes=e.sharedAxes;else{if("number"!=typeof e.sharedAxes)throw new Km(`Expected sharedAxes to be a number or an array of numbers, but got ${e.sharedAxes}`);this.sharedAxes=[e.sharedAxes]}}build(e){const t=(e=Ey(e)).slice(1);if(null!=this.sharedAxes)for(const e of this.sharedAxes)t[e-1]=1;this.alpha=this.addWeight("alpha",t,"float32",this.alphaInitializer,this.alphaRegularizer,!0,this.alphaConstraint);const n={};if(null!=this.sharedAxes)for(let t=1;t<e.length;++t)n[t]=e[t];this.inputSpec=[new Oy({ndim:e.length,axes:n})],this.built=!0}call(e,t){return e=$y(e),Gc(e,this.alpha.read())}getConfig(){const e={alphaInitializer:Ny(this.alphaInitializer),alphaRegularizer:Ox(this.alphaRegularizer),alphaConstraint:sb(this.alphaConstraint),sharedAxes:this.sharedAxes},t=super.getConfig();return Object.assign(e,t),e}}Px.className="PReLU",eo(Px);class Wx extends Py{constructor(e){if(super(null==e?{}:e),this.DEFAULT_ALPHA=1,null==e&&(e={}),null!=e.alpha&&e.alpha!==this.DEFAULT_ALPHA)throw new Xm(`Non-default alpha value (${e.alpha}) is not supported by the ELU layer yet.`);this.alpha=null==e.alpha?this.DEFAULT_ALPHA:e.alpha}call(e,t){const n=$y(e);return Su(n)}computeOutputShape(e){return e}getConfig(){const e={alpha:this.alpha},t=super.getConfig();return Object.assign(e,t),e}}Wx.className="ELU",eo(Wx);class Vx extends Py{constructor(e){super(null==e?{}:e),this.DEFAULT_THETA=1,null==e&&(e={}),this.theta=null==e.theta?this.DEFAULT_THETA:e.theta}call(e,t){const n=$y(e);return Gi(n,zi(Xu(n,this.theta),"float32"))}computeOutputShape(e){return e}getConfig(){const e={theta:this.theta},t=super.getConfig();return Object.assign(e,t),e}}Vx.className="ThresholdedReLU",eo(Vx);class Ux extends Py{constructor(e){super(null==e?{}:e),this.DEFAULT_AXIS=1,null==e&&(e={}),this.softmax=(new Ix).apply,this.axis=null==e.axis?this.DEFAULT_AXIS:e.axis}call(e,t){return _a((()=>{let n=$y(e);const s=t.mask;if(null!=s){const e=Gi(io(Sc(n.shape),zi(s,n.dtype)),Xi(-1e9));n=Wi(n,e)}return this.axis instanceof Array?this.axis.length>1?Vu(io(n,dc(n,this.axis,!0))):this.softmax(n,this.axis[0]):this.softmax(n,this.axis)}))}computeOutputShape(e){return e}getConfig(){const e={axis:this.axis},t=super.getConfig();return Object.assign(e,t),e}}function Gx(e,t,n){if("number"==typeof e)return Zm(e,t);if(e.length!==t)throw new Km(`The ${n} argument must be an integer or tuple of ${t} integers. Received: ${e.length} elements.`);for(let r=0;r<t;++r){const a=e[r];if((s=a)!==parseInt(s.toString(),10))throw new Km(`The ${n} argument must be an integer or tuple of ${t} integers. Received: ${JSON.stringify(e)} including a non-integer number ${a}`)}return e;var s}function jx(e,t,n,s,r=1){if(null==e)return e;let a;return a="same"===n?e:e-(t+(t-1)*(r-1))+1,Math.floor((a+s-1)/s)}function Hx(e,t,n,s){if(null==e)return null;if("valid"===s)e=e*t+zg([n-t,0]);else{if("same"!==s)throw new Km(`Unsupport padding mode: ${s}.`);e*=t}return e}function qx(e,t){return _a((()=>(Cg(t),"channelsFirst"===t?rd(e,[0,2,3,1]):e)))}function Kx(e,t){return _a((()=>(Cg(t),"channelsFirst"===t?rd(e,[0,2,3,4,1]):e)))}function Xx(e,t,n,s=[1,1],r="valid",a,i,o=null){return _a((()=>{if(null==a&&(a="channelsLast"),Cg(a),3!==e.rank&&4!==e.rank)throw new Km(`conv2dWithBiasActivation expects input to be of rank 3 or 4, but received ${e.rank}.`);if(3!==t.rank&&4!==t.rank)throw new Km(`conv2dWithBiasActivation expects kernel to be of rank 3 or 4, but received ${e.rank}.`);let l=qx(e,a);if("causal"===r)throw new Xm("The support for CAUSAL padding mode in conv1dWithBias is not implemented yet.");return l=bd({x:l,filter:t,strides:s,pad:"same"===r?"same":"valid",dilations:i,dataFormat:"NHWC",bias:n,activation:o}),"channelsFirst"===a&&(l=rd(l,[0,3,1,2])),l}))}Ux.className="Softmax",eo(Ux);class Yx extends Py{constructor(e,t){if(super(t),this.bias=null,this.DEFAULT_KERNEL_INITIALIZER="glorotNormal",this.DEFAULT_BIAS_INITIALIZER="zeros",Yx.verifyArgs(t),this.rank=e,fg(this.rank,"rank"),1!==this.rank&&2!==this.rank&&3!==this.rank)throw new Xm(`Convolution layer for rank other than 1, 2, or 3 (${this.rank}) is not implemented yet.`);if(this.kernelSize=Gx(t.kernelSize,e,"kernelSize"),this.strides=Gx(null==t.strides?1:t.strides,e,"strides"),this.padding=null==t.padding?"valid":t.padding,$g(this.padding),this.dataFormat=null==t.dataFormat?"channelsLast":t.dataFormat,Cg(this.dataFormat),this.activation=Rx(t.activation),this.useBias=null==t.useBias||t.useBias,this.biasInitializer=Sy(t.biasInitializer||this.DEFAULT_BIAS_INITIALIZER),this.biasConstraint=ab(t.biasConstraint),this.biasRegularizer=Lx(t.biasRegularizer),this.activityRegularizer=Lx(t.activityRegularizer),this.dilationRate=Gx(null==t.dilationRate?1:t.dilationRate,e,"dilationRate"),1===this.rank&&Array.isArray(this.dilationRate)&&1!==this.dilationRate.length)throw new Km(`dilationRate must be a number or an array of a single number for 1D convolution, but received ${JSON.stringify(this.dilationRate)}`);if(2===this.rank){if("number"==typeof this.dilationRate)this.dilationRate=[this.dilationRate,this.dilationRate];else if(2!==this.dilationRate.length)throw new Km(`dilationRate must be a number or array of two numbers for 2D convolution, but received ${JSON.stringify(this.dilationRate)}`)}else if(3===this.rank)if("number"==typeof this.dilationRate)this.dilationRate=[this.dilationRate,this.dilationRate,this.dilationRate];else if(3!==this.dilationRate.length)throw new Km(`dilationRate must be a number or array of three numbers for 3D convolution, but received ${JSON.stringify(this.dilationRate)}`)}static verifyArgs(e){if(Qm("kernelSize"in e,"required key 'kernelSize' not in config"),"number"!=typeof e.kernelSize&&!pg(e.kernelSize,"number",1,3))throw new Km(`BaseConv expects config.kernelSize to be number or number[] with length 1, 2, or 3, but received ${JSON.stringify(e.kernelSize)}.`)}getConfig(){const e={kernelSize:this.kernelSize,strides:this.strides,padding:this.padding,dataFormat:this.dataFormat,dilationRate:this.dilationRate,activation:Ex(this.activation),useBias:this.useBias,biasInitializer:Ny(this.biasInitializer),biasRegularizer:Ox(this.biasRegularizer),activityRegularizer:Ox(this.activityRegularizer),biasConstraint:sb(this.biasConstraint)},t=super.getConfig();return Object.assign(e,t),e}}class Jx extends Yx{constructor(e,t){super(e,t),this.kernel=null,Jx.verifyArgs(t),this.filters=t.filters,fg(this.filters,"filters"),this.kernelInitializer=Sy(t.kernelInitializer||this.DEFAULT_KERNEL_INITIALIZER),this.kernelConstraint=ab(t.kernelConstraint),this.kernelRegularizer=Lx(t.kernelRegularizer)}build(e){e=Ey(e);const t="channelsFirst"===this.dataFormat?1:e.length-1;if(null==e[t])throw new Km(`The channel dimension of the input should be defined. Found ${e[t]}`);const n=e[t],s=this.kernelSize.concat([n,this.filters]);this.kernel=this.addWeight("kernel",s,null,this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.useBias&&(this.bias=this.addWeight("bias",[this.filters],null,this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint)),this.inputSpec=[{ndim:this.rank+2,axes:{[t]:n}}],this.built=!0}call(e,t){return _a((()=>{let t;e=$y(e);const n=null==this.bias?null:this.bias.read(),s=gg(this.activation.getClassName());if(null!=s&&2===this.rank)t=Xx(e,this.kernel.read(),n,this.strides,this.padding,this.dataFormat,this.dilationRate,s);else{if(1===this.rank)t=function(e,t,n,s=1,r="valid",a,i=1){return _a((()=>{if(null==a&&(a="channelsLast"),Cg(a),3!==e.shape.length)throw new Km(`The input of a conv1dWithBias operation should be 3, but is ${e.shape.length} instead.`);if(3!==t.shape.length)throw new Km(`The kernel for a conv1dWithBias operation should be 3, but is ${t.shape.length} instead`);if(null!=n&&1!==n.shape.length)throw new Km(`The bias for a conv1dWithBias operation should be 1, but is ${n.shape.length} instead`);if("channelsFirst"===a&&(e=rd(e,[0,2,1])),"causal"===r)throw new Xm("The support for CAUSAL padding mode in conv1dWithBias is not implemented yet.");let o=au(e,t,s,"same"===r?"same":"valid","NWC",i);return null!=n&&(o=ty(o,n)),o}))}(e,this.kernel.read(),n,this.strides[0],this.padding,this.dataFormat,this.dilationRate[0]);else if(2===this.rank)t=Xx(e,this.kernel.read(),n,this.strides,this.padding,this.dataFormat,this.dilationRate);else{if(3!==this.rank)throw new Xm("convolutions greater than 3D are not implemented yet.");t=function(e,t,n,s=[1,1,1],r="valid",a,i){return _a((()=>{if(null==a&&(a="channelsLast"),Cg(a),4!==e.rank&&5!==e.rank)throw new Km(`conv3dWithBias expects input to be of rank 4 or 5, but received ${e.rank}.`);if(4!==t.rank&&5!==t.rank)throw new Km(`conv3dWithBias expects kernel to be of rank 4 or 5, but received ${e.rank}.`);let o=Kx(e,a);if("causal"===r)throw new Xm("The support for CAUSAL padding mode in conv3dWithBias is not implemented yet.");return o=lu(o,t,s,"same"===r?"same":"valid","NDHWC",i),null!=n&&(o=ty(o,n)),"channelsFirst"===a&&(o=rd(o,[0,4,1,2,3])),o}))}(e,this.kernel.read(),n,this.strides,this.padding,this.dataFormat,this.dilationRate)}null!=this.activation&&(t=this.activation.apply(t))}return t}))}computeOutputShape(e){e=Ey(e);const t=[],n="channelsLast"===this.dataFormat?e.slice(1,e.length-1):e.slice(2);for(let e=0;e<n.length;++e){const s=jx(n[e],this.kernelSize[e],this.padding,this.strides[e],"number"==typeof this.dilationRate?this.dilationRate:this.dilationRate[e]);t.push(s)}let s=[e[0]];return"channelsLast"===this.dataFormat?(s=s.concat(t),s.push(this.filters)):(s.push(this.filters),s=s.concat(t)),s}getConfig(){const e={filters:this.filters,kernelInitializer:Ny(this.kernelInitializer),kernelRegularizer:Ox(this.kernelRegularizer),kernelConstraint:sb(this.kernelConstraint)},t=super.getConfig();return Object.assign(e,t),e}static verifyArgs(e){if(!("filters"in e)||"number"!=typeof e.filters||e.filters<1)throw new Km(`Convolution layer expected config.filters to be a 'number' > 0 but got ${JSON.stringify(e.filters)}`)}}class Zx extends Jx{constructor(e){super(2,e),Zx.verifyArgs(e)}getConfig(){const e=super.getConfig();return delete e.rank,e}static verifyArgs(e){if("number"!=typeof e.kernelSize&&!pg(e.kernelSize,"number",1,2))throw new Km(`Conv2D expects config.kernelSize to be number or number[] with length 1 or 2, but received ${JSON.stringify(e.kernelSize)}.`)}}Zx.className="Conv2D",eo(Zx);class Qx extends Jx{constructor(e){super(3,e),Qx.verifyArgs(e)}getConfig(){const e=super.getConfig();return delete e.rank,e}static verifyArgs(e){if("number"!=typeof e.kernelSize&&(!Array.isArray(e.kernelSize)||1!==e.kernelSize.length&&3!==e.kernelSize.length))throw new Km(`Conv3D expects config.kernelSize to be number or [number, number, number], but received ${JSON.stringify(e.kernelSize)}.`)}}Qx.className="Conv3D",eo(Qx);class ew extends Zx{constructor(e){if(super(e),this.inputSpec=[new Oy({ndim:4})],"same"!==this.padding&&"valid"!==this.padding)throw new Km(`Conv2DTranspose currently supports only padding modes 'same' and 'valid', but received padding mode ${this.padding}`)}build(e){if(4!==(e=Ey(e)).length)throw new Km("Input should have rank 4; Received input shape: "+JSON.stringify(e));const t="channelsFirst"===this.dataFormat?1:e.length-1;if(null==e[t])throw new Km("The channel dimension of the inputs should be defined. Found `None`.");const n=e[t],s=this.kernelSize.concat([this.filters,n]);this.kernel=this.addWeight("kernel",s,"float32",this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.useBias&&(this.bias=this.addWeight("bias",[this.filters],"float32",this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint)),this.inputSpec=[new Oy({ndim:4,axes:{[t]:n}})],this.built=!0}call(e,t){return _a((()=>{let t=$y(e);if(4!==t.shape.length)throw new Km(`Conv2DTranspose.call() expects input tensor to be rank-4, but received a tensor of rank-${t.shape.length}`);const n=t.shape,s=n[0];let r,a;"channelsFirst"===this.dataFormat?(r=2,a=3):(r=1,a=2);const i=n[r],o=n[a],l=this.kernelSize[0],u=this.kernelSize[1],c=this.strides[0],h=this.strides[1],d=[s,Hx(i,c,l,this.padding),Hx(o,h,u,this.padding),this.filters];"channelsLast"!==this.dataFormat&&(t=rd(t,[0,2,3,1]));let p=ou(t,this.kernel.read(),d,this.strides,this.padding);return"channelsLast"!==this.dataFormat&&(p=rd(p,[0,3,1,2])),null!=this.bias&&(p=ty(p,this.bias.read(),this.dataFormat)),null!=this.activation&&(p=this.activation.apply(p)),p}))}computeOutputShape(e){const t=(e=Ey(e)).slice();let n,s,r;"channelsFirst"===this.dataFormat?(n=1,s=2,r=3):(n=3,s=1,r=2);const a=this.kernelSize[0],i=this.kernelSize[1],o=this.strides[0],l=this.strides[1];return t[n]=this.filters,t[s]=Hx(t[s],o,a,this.padding),t[r]=Hx(t[r],l,i,this.padding),t}getConfig(){const e=super.getConfig();return delete e.dilationRate,e}}ew.className="Conv2DTranspose",eo(ew);class tw extends Qx{constructor(e){if(super(e),this.inputSpec=[new Oy({ndim:5})],"same"!==this.padding&&"valid"!==this.padding)throw new Km(`Conv3DTranspose currently supports only padding modes 'same' and 'valid', but received padding mode ${this.padding}`)}build(e){if(5!==(e=Ey(e)).length)throw new Km("Input should have rank 5; Received input shape: "+JSON.stringify(e));const t="channelsFirst"===this.dataFormat?1:e.length-1;if(null==e[t])throw new Km("The channel dimension of the inputs should be defined. Found `None`.");const n=e[t],s=this.kernelSize.concat([this.filters,n]);this.kernel=this.addWeight("kernel",s,"float32",this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.useBias&&(this.bias=this.addWeight("bias",[this.filters],"float32",this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint)),this.inputSpec=[new Oy({ndim:5,axes:{[t]:n}})],this.built=!0}call(e,t){return _a((()=>{let t=$y(e);if(5!==t.shape.length)throw new Km(`Conv3DTranspose.call() expects input tensor to be rank-4, but received a tensor of rank-${t.shape.length}`);const n=t.shape,s=n[0];let r,a,i;"channelsFirst"===this.dataFormat?(i=2,r=3,a=4):(i=1,r=2,a=3);const o=n[i],l=n[r],u=n[a],c=this.kernelSize[0],h=this.kernelSize[1],d=this.kernelSize[2],p=this.strides[0],f=this.strides[1],m=this.strides[2],g=[s,Hx(o,p,c,this.padding),Hx(l,f,h,this.padding),Hx(u,m,d,this.padding),this.filters];"channelsLast"!==this.dataFormat&&(t=rd(t,[0,2,3,4,1]));let y=cu(t,this.kernel.read(),g,this.strides,this.padding);return"channelsLast"!==this.dataFormat&&(y=rd(y,[0,4,1,2,3])),null!==this.bias&&(y=ty(y,this.bias.read(),this.dataFormat)),null!==this.activation&&(y=this.activation.apply(y)),y}))}computeOutputShape(e){const t=(e=Ey(e)).slice();let n,s,r,a;"channelsFirst"===this.dataFormat?(n=1,s=2,r=3,a=4):(n=4,s=1,r=2,a=3);const i=this.kernelSize[0],o=this.kernelSize[1],l=this.kernelSize[2],u=this.strides[0],c=this.strides[1],h=this.strides[2];return t[n]=this.filters,t[s]=Hx(t[s],u,i,this.padding),t[r]=Hx(t[r],c,o,this.padding),t[a]=Hx(t[a],h,l,this.padding),t}getConfig(){const e=super.getConfig();return delete e.dilationRate,e}}tw.className="Conv3DTranspose",eo(tw);class nw extends Jx{constructor(e,t){if(super(e,t),this.DEFAULT_DEPTHWISE_INITIALIZER="glorotUniform",this.DEFAULT_POINTWISE_INITIALIZER="glorotUniform",this.depthwiseKernel=null,this.pointwiseKernel=null,null==t.filters)throw new Km("The `filters` configuration field is required by SeparableConv, but is unspecified.");if(null!=t.kernelInitializer||null!=t.kernelRegularizer||null!=t.kernelConstraint)throw new Km("Fields kernelInitializer, kernelRegularizer and kernelConstraint are invalid for SeparableConv2D. Use depthwiseInitializer, depthwiseRegularizer, depthwiseConstraint, pointwiseInitializer, pointwiseRegularizer and pointwiseConstraint instead.");if(null!=t.padding&&"same"!==t.padding&&"valid"!==t.padding)throw new Km(`SeparableConv${this.rank}D supports only padding modes: 'same' and 'valid', but received ${JSON.stringify(t.padding)}`);this.depthMultiplier=null==t.depthMultiplier?1:t.depthMultiplier,this.depthwiseInitializer=Sy(t.depthwiseInitializer||this.DEFAULT_DEPTHWISE_INITIALIZER),this.depthwiseRegularizer=Lx(t.depthwiseRegularizer),this.depthwiseConstraint=ab(t.depthwiseConstraint),this.pointwiseInitializer=Sy(t.depthwiseInitializer||this.DEFAULT_POINTWISE_INITIALIZER),this.pointwiseRegularizer=Lx(t.pointwiseRegularizer),this.pointwiseConstraint=ab(t.pointwiseConstraint)}build(e){if((e=Ey(e)).length<this.rank+2)throw new Km(`Inputs to SeparableConv${this.rank}D should have rank ${this.rank+2}, but received input shape: ${JSON.stringify(e)}`);const t="channelsFirst"===this.dataFormat?1:e.length-1;if(null==e[t]||e[t]<0)throw new Km(`The channel dimension of the inputs should be defined, but found ${JSON.stringify(e[t])}`);const n=e[t],s=this.kernelSize.concat([n,this.depthMultiplier]),r=[];for(let e=0;e<this.rank;++e)r.push(1);r.push(n*this.depthMultiplier,this.filters);const a=!0;this.depthwiseKernel=this.addWeight("depthwise_kernel",s,"float32",this.depthwiseInitializer,this.depthwiseRegularizer,a,this.depthwiseConstraint),this.pointwiseKernel=this.addWeight("pointwise_kernel",r,"float32",this.pointwiseInitializer,this.pointwiseRegularizer,a,this.pointwiseConstraint),this.useBias?this.bias=this.addWeight("bias",[this.filters],"float32",this.biasInitializer,this.biasRegularizer,a,this.biasConstraint):this.bias=null,this.inputSpec=[new Oy({ndim:this.rank+2,axes:{[t]:n}})],this.built=!0}call(e,t){return _a((()=>{let t;if(e=$y(e),1===this.rank)throw new Xm("1D separable convolution is not implemented yet.");return 2===this.rank&&("channelsFirst"===this.dataFormat&&(e=rd(e,[0,2,3,1])),t=bh(e,this.depthwiseKernel.read(),this.pointwiseKernel.read(),this.strides,this.padding,this.dilationRate,"NHWC")),this.useBias&&(t=ty(t,this.bias.read(),this.dataFormat)),null!=this.activation&&(t=this.activation.apply(t)),"channelsFirst"===this.dataFormat&&(t=rd(t,[0,3,1,2])),t}))}getConfig(){const e=super.getConfig();return delete e.rank,delete e.kernelInitializer,delete e.kernelRegularizer,delete e.kernelConstraint,e.depthwiseInitializer=Ny(this.depthwiseInitializer),e.pointwiseInitializer=Ny(this.pointwiseInitializer),e.depthwiseRegularizer=Ox(this.depthwiseRegularizer),e.pointwiseRegularizer=Ox(this.pointwiseRegularizer),e.depthwiseConstraint=sb(this.depthwiseConstraint),e.pointwiseConstraint=sb(this.pointwiseConstraint),e}}nw.className="SeparableConv";class sw extends nw{constructor(e){super(2,e)}}sw.className="SeparableConv2D",eo(sw);class rw extends Jx{constructor(e){super(1,e),rw.verifyArgs(e),this.inputSpec=[{ndim:3}]}getConfig(){const e=super.getConfig();return delete e.rank,delete e.dataFormat,e}static verifyArgs(e){if("number"!=typeof e.kernelSize&&!pg(e.kernelSize,"number",1,1))throw new Km(`Conv1D expects config.kernelSize to be number or number[] with length 1, but received ${JSON.stringify(e.kernelSize)}.`)}}rw.className="Conv1D",eo(rw);class aw extends Py{constructor(e){super(e),"number"==typeof e.cropping?this.cropping=[[e.cropping,e.cropping],[e.cropping,e.cropping]]:"number"==typeof e.cropping[0]?this.cropping=[[e.cropping[0],e.cropping[0]],[e.cropping[1],e.cropping[1]]]:this.cropping=e.cropping,this.dataFormat=void 0===e.dataFormat?"channelsLast":e.dataFormat,this.inputSpec=[{ndim:4}]}computeOutputShape(e){return"channelsFirst"===this.dataFormat?[e[0],e[1],e[2]-this.cropping[0][0]-this.cropping[0][1],e[3]-this.cropping[1][0]-this.cropping[1][1]]:[e[0],e[1]-this.cropping[0][0]-this.cropping[0][1],e[2]-this.cropping[1][0]-this.cropping[1][1],e[3]]}call(e,t){return _a((()=>{if(e=$y(e),"channelsLast"===this.dataFormat){const t=Hg(e,this.cropping[0][0],e.shape[1]-this.cropping[0][0]-this.cropping[0][1],2);return Hg(t,this.cropping[1][0],e.shape[2]-this.cropping[1][1]-this.cropping[1][0],3)}{const t=Hg(e,this.cropping[0][0],e.shape[2]-this.cropping[0][0]-this.cropping[0][1],3);return Hg(t,this.cropping[1][0],e.shape[3]-this.cropping[1][1]-this.cropping[1][0],4)}}))}getConfig(){const e={cropping:this.cropping,dataFormat:this.dataFormat},t=super.getConfig();return Object.assign(e,t),e}}aw.className="Cropping2D",eo(aw);class iw extends Py{constructor(e){var t;super(e),this.DEFAULT_SIZE=[2,2],this.inputSpec=[{ndim:4}],this.size=null==e.size?this.DEFAULT_SIZE:e.size,this.dataFormat=null==e.dataFormat?"channelsLast":e.dataFormat,Cg(this.dataFormat),this.interpolation=null==e.interpolation?"nearest":e.interpolation,t=this.interpolation,dg(kg,"InterpolationFormat",t)}computeOutputShape(e){if("channelsFirst"===this.dataFormat){const t=null==e[2]?null:this.size[0]*e[2],n=null==e[3]?null:this.size[1]*e[3];return[e[0],e[1],t,n]}{const t=null==e[1]?null:this.size[0]*e[1],n=null==e[2]?null:this.size[1]*e[2];return[e[0],t,n,e[3]]}}call(e,t){return _a((()=>{let t=$y(e);const n=t.shape;if("channelsFirst"===this.dataFormat){t=rd(t,[0,2,3,1]);const e=this.size[0]*n[2],s=this.size[1]*n[3],r="nearest"===this.interpolation?gp.resizeNearestNeighbor(t,[e,s]):gp.resizeBilinear(t,[e,s]);return rd(r,[0,3,1,2])}{const e=this.size[0]*n[1],s=this.size[1]*n[2];return"nearest"===this.interpolation?gp.resizeNearestNeighbor(t,[e,s]):gp.resizeBilinear(t,[e,s])}}))}getConfig(){const e={size:this.size,dataFormat:this.dataFormat,interpolation:this.interpolation},t=super.getConfig();return Object.assign(e,t),e}}iw.className="UpSampling2D",eo(iw);class ow extends Yx{constructor(e){super(2,e),this.depthwiseKernel=null,this.depthMultiplier=null==e.depthMultiplier?1:e.depthMultiplier,this.depthwiseInitializer=Sy(e.depthwiseInitializer||this.DEFAULT_KERNEL_INITIALIZER),this.depthwiseConstraint=ab(e.depthwiseConstraint),this.depthwiseRegularizer=Lx(e.depthwiseRegularizer)}build(e){if((e=Ey(e)).length<4)throw new Km(`Inputs to DepthwiseConv2D should have rank 4. Received input shape: ${JSON.stringify(e)}.`);const t="channelsFirst"===this.dataFormat?1:3;if(null==e[t]||e[t]<0)throw new Km(`The channel dimension of the inputs to DepthwiseConv2D should be defined, but is not (${e[t]}).`);const n=e[t],s=[this.kernelSize[0],this.kernelSize[1],n,this.depthMultiplier];this.depthwiseKernel=this.addWeight("depthwise_kernel",s,null,this.depthwiseInitializer,this.depthwiseRegularizer,!0,this.depthwiseConstraint),this.useBias?this.bias=this.addWeight("bias",[n*this.depthMultiplier],null,this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint):this.bias=null,this.built=!0}call(e,t){return _a((()=>{let t=function(e,t,n=[1,1],s="valid",r,a){return _a((()=>{null==r&&(r="channelsLast"),Cg(r);let i=qx(e,r);if(4!==e.rank)throw new Km(`Input for depthwiseConv2d is required to be 4-D, but is instead ${e.rank}-D`);if(4!==t.rank)throw new Km(`depthwiseKernel is required to be 4-D, but is instead ${t.rank}-D`);return i=yu(i,t,n,"same"===s?"same":"valid","NHWC",a),"channelsFirst"===r&&(i=rd(i,[0,3,1,2])),i}))}(e=$y(e),this.depthwiseKernel.read(),this.strides,this.padding,this.dataFormat,null);return this.useBias&&(t=ty(t,this.bias.read(),this.dataFormat)),null!=this.activation&&(t=this.activation.apply(t)),t}))}computeOutputShape(e){e=Ey(e);const t="channelsFirst"===this.dataFormat?e[2]:e[1],n="channelsFirst"===this.dataFormat?e[3]:e[2],s="channelsFirst"===this.dataFormat?e[1]*this.depthMultiplier:e[3]*this.depthMultiplier,r=jx(t,this.kernelSize[0],this.padding,this.strides[0]),a=jx(n,this.kernelSize[1],this.padding,this.strides[1]);return"channelsFirst"===this.dataFormat?[e[0],s,r,a]:[e[0],r,a,s]}getConfig(){const e=super.getConfig();return e.depthMultiplier=this.depthMultiplier,e.depthwiseInitializer=Ny(this.depthwiseInitializer),e.depthwiseRegularizer=Ox(this.depthwiseRegularizer),e.depthwiseConstraint=sb(this.depthwiseRegularizer),e}}function lw(e,t,n,s){if(Array.isArray(e)){if(null!=t||null!=n)throw new Km("When inputs is an array, neither initialState or constants should be provided");null!=s&&(n=e.slice(e.length-s,e.length),e=e.slice(0,e.length-s)),e.length>1&&(t=e.slice(1,e.length)),e=e[0]}function r(e){return null==e||Array.isArray(e)?e:[e]}return{inputs:e,initialState:t=r(t),constants:n=r(n)}}function uw(e,t,n,s=!1,r,a,i=!1,o=!1){return _a((()=>{const l=t.shape.length;if(l<3)throw new Km(`Input should be at least 3D, but is ${l}D.`);const u=[1,0].concat(Bg(2,l));if(t=rd(t,u),null!=a)throw new Xm("The rnn() functoin of the deeplearn.js backend does not support constants yet.");i&&console.warn("Backend rnn(): the unroll = true option is not applicable to the imperative deeplearn.js backend."),null!=r&&((r=zi(zi(r,"bool"),"float32")).rank===l-1&&(r=Uu(r,-1)),r=rd(r,u)),s&&(t=ch(t,0),null!=r&&(r=ch(r,0)));const c=[];let h,d=n;const p=t.shape[0],f=Zh(t);let m,g;null!=r&&(m=Zh(r));for(let t=0;t<p;++t){const n=f[t],s=_a((()=>e(n,d)));if(null==r)h=s[0],d=s[1];else{const e=_a((()=>{const e=m[t],n=io(Oc(e),e);return{output:Wi(Gi(s[0],e),Gi(d[0],n)),newStates:d.map(((t,r)=>Wi(Gi(s[1][r],e),Gi(t,n))))}}));h=e.output,d=e.newStates}o&&c.push(h)}return o&&(g=Oh(c,1)),[h,g,d]}))}ow.className="DepthwiseConv2D",eo(ow);class cw extends Py{constructor(e){let t;if(super(e),null==e.cell)throw new Km("cell property is missing for the constructor of RNN.");if(t=Array.isArray(e.cell)?new bw({cells:e.cell}):e.cell,null==t.stateSize)throw new Km("The RNN cell should have an attribute `stateSize` (tuple of integers, one integer per RNN state).");this.cell=t,this.returnSequences=null!=e.returnSequences&&e.returnSequences,this.returnState=null!=e.returnState&&e.returnState,this.goBackwards=null!=e.goBackwards&&e.goBackwards,this._stateful=null!=e.stateful&&e.stateful,this.unroll=null!=e.unroll&&e.unroll,this.supportsMasking=!0,this.inputSpec=[new Oy({ndim:3})],this.stateSpec=null,this.states_=null,this.numConstants=null,this.keptStates=[]}getStates(){return null==this.states_?Bg(0,Array.isArray(this.cell.stateSize)?this.cell.stateSize.length:1).map((e=>null)):this.states_}setStates(e){this.states_=e}computeOutputShape(e){Ty(e)&&(e=e[0]);let t=this.cell.stateSize;Array.isArray(t)||(t=[t]);const n=t[0];let s;if(s=this.returnSequences?[e[0],e[1],n]:[e[0],n],this.returnState){const n=[];for(const s of t)n.push([e[0],s]);return[s].concat(n)}return s}computeMask(e,t){return _a((()=>{Array.isArray(t)&&(t=t[0]);const e=this.returnSequences?t:null;if(this.returnState){const t=this.states.map((e=>null));return[e].concat(t)}return e}))}get states(){if(null==this.states_){const e=Array.isArray(this.cell.stateSize)?this.cell.stateSize.length:1,t=[];for(let n=0;n<e;++n)t.push(null);return t}return this.states_}set states(e){this.states_=e}build(e){if(null!=this.numConstants)throw new Xm("Constants support is not implemented in RNN yet.");Ty(e)&&(e=e[0]);const t=this.stateful?e[0]:null,n=e.slice(2);this.inputSpec[0]=new Oy({shape:[t,null,...n]});const s=[e[0]].concat(e.slice(2));let r;if(this.cell.build(s),r=Array.isArray(this.cell.stateSize)?this.cell.stateSize:[this.cell.stateSize],null!=this.stateSpec){if(!ce(this.stateSpec.map((e=>e.shape[e.shape.length-1])),r))throw new Km(`An initialState was passed that is not compatible with cell.stateSize. Received stateSpec=${this.stateSpec}; However cell.stateSize is ${this.cell.stateSize}`)}else this.stateSpec=r.map((e=>new Oy({shape:[null,e]})));this.stateful&&this.resetStates()}resetStates(e,t=!1){_a((()=>{if(!this.stateful)throw new Hm("Cannot call resetStates() on an RNN Layer that is not stateful.");const n=this.inputSpec[0].shape[0];if(null==n)throw new Km("If an RNN is stateful, it needs to know its batch size. Specify the batch size of your input tensors: \n- If using a Sequential model, specify the batch size by passing a `batchInputShape` option to your first layer.\n- If using the functional API, specify the batch size by passing a `batchShape` option to your Input layer.");if(null==this.states_)Array.isArray(this.cell.stateSize)?this.states_=this.cell.stateSize.map((e=>Nc([n,e]))):this.states_=[Nc([n,this.cell.stateSize])];else if(null==e)Fa(this.states_),null!=this.keptStates&&(Fa(this.keptStates),this.keptStates=[]),Array.isArray(this.cell.stateSize)?this.states_=this.cell.stateSize.map((e=>Nc([n,e]))):this.states_[0]=Nc([n,this.cell.stateSize]);else{if(Array.isArray(e)||(e=[e]),e.length!==this.states_.length)throw new Km(`Layer ${this.name} expects ${this.states_.length} state(s), but it received ${e.length} state value(s). Input received: ${e}`);!0===t?this.keptStates.push(this.states_.slice()):Fa(this.states_);for(let t=0;t<this.states_.length;++t){const s=e[t],r=Array.isArray(this.cell.stateSize)?this.cell.stateSize[t]:this.cell.stateSize,a=[n,r];if(!ce(s.shape,a))throw new Km(`State ${t} is incompatible with layer ${this.name}: expected shape=${a}, received shape=${s.shape}`);this.states_[t]=s}}this.states_=this.states_.map((e=>Da(e.clone())))}))}apply(e,t){let n=null==t?null:t.initialState,s=null==t?null:t.constants;null==t&&(t={});const r=lw(e,n,s,this.numConstants);e=r.inputs,n=r.initialState,s=r.constants;let a=[],i=[];if(null!=n){t.initialState=n,a=a.concat(n),this.stateSpec=[];for(const e of n)this.stateSpec.push(new Oy({shape:e.shape}));i=i.concat(this.stateSpec)}if(null!=s&&(t.constants=s,a=a.concat(s),this.numConstants=s.length),a[0]instanceof My){const n=[e].concat(a),s=this.inputSpec.concat(i),r=this.inputSpec;this.inputSpec=s;const o=super.apply(n,t);return this.inputSpec=r,o}return super.apply(e,t)}call(e,t){return _a((()=>{const n=null==t?null:t.mask,s=null==t?null:t.training;let r=null==t?null:t.initialState;e=$y(e),null==r&&(r=this.stateful?this.states_:this.getInitialState(e));const a=Array.isArray(this.cell.stateSize)?this.cell.stateSize.length:1;if(r.length!==a)throw new Km(`RNN Layer has ${a} state(s) but was passed ${r.length} initial state(s).`);this.unroll&&console.warn("Ignoring unroll = true for RNN layer, due to imperative backend.");const i={training:s},o=uw(((e,t)=>{const n=this.cell.call([e].concat(t),i);return[n[0],n.slice(1)]}),e,r,this.goBackwards,n,null,this.unroll,this.returnSequences),l=o[0],u=o[1],c=o[2];this.stateful&&this.resetStates(c,s);const h=this.returnSequences?u:l;return this.returnState?[h].concat(c):h}))}getInitialState(e){return _a((()=>{let t=Nc(e.shape);return t=zu(t,[1,2]),t=Ug(t),Array.isArray(this.cell.stateSize)?this.cell.stateSize.map((e=>e>1?Xg(t,[1,e]):t)):this.cell.stateSize>1?[Xg(t,[1,this.cell.stateSize])]:[t]}))}get trainableWeights(){return this.trainable?this.cell.trainableWeights:[]}get nonTrainableWeights(){return this.trainable?this.cell.nonTrainableWeights:this.cell.weights}setFastWeightInitDuringBuild(e){super.setFastWeightInitDuringBuild(e),null!=this.cell&&this.cell.setFastWeightInitDuringBuild(e)}getConfig(){const e=super.getConfig(),t={returnSequences:this.returnSequences,returnState:this.returnState,goBackwards:this.goBackwards,stateful:this.stateful,unroll:this.unroll};null!=this.numConstants&&(t.numConstants=this.numConstants);const n=this.cell.getConfig();return this.getClassName()===cw.className&&(t.cell={className:this.cell.getClassName(),config:n}),Object.assign(Object.assign(Object.assign({},n),e),t)}static fromConfig(e,t,n={}){const s=yb(t.cell,n);return new e(Object.assign(t,{cell:s}))}}cw.className="RNN",eo(cw);class hw extends Py{}class dw extends hw{constructor(e){super(e),this.DEFAULT_ACTIVATION="tanh",this.DEFAULT_KERNEL_INITIALIZER="glorotNormal",this.DEFAULT_RECURRENT_INITIALIZER="orthogonal",this.DEFAULT_BIAS_INITIALIZER="zeros",this.units=e.units,fg(this.units,"units"),this.activation=Rx(null==e.activation?this.DEFAULT_ACTIVATION:e.activation),this.useBias=null==e.useBias||e.useBias,this.kernelInitializer=Sy(e.kernelInitializer||this.DEFAULT_KERNEL_INITIALIZER),this.recurrentInitializer=Sy(e.recurrentInitializer||this.DEFAULT_RECURRENT_INITIALIZER),this.biasInitializer=Sy(e.biasInitializer||this.DEFAULT_BIAS_INITIALIZER),this.kernelRegularizer=Lx(e.kernelRegularizer),this.recurrentRegularizer=Lx(e.recurrentRegularizer),this.biasRegularizer=Lx(e.biasRegularizer),this.kernelConstraint=ab(e.kernelConstraint),this.recurrentConstraint=ab(e.recurrentConstraint),this.biasConstraint=ab(e.biasConstraint),this.dropout=Lg([1,zg([0,null==e.dropout?0:e.dropout])]),this.recurrentDropout=Lg([1,zg([0,null==e.recurrentDropout?0:e.recurrentDropout])]),this.dropoutFunc=e.dropoutFunc,this.stateSize=this.units,this.dropoutMask=null,this.recurrentDropoutMask=null}build(e){e=Ey(e),this.kernel=this.addWeight("kernel",[e[e.length-1],this.units],null,this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.recurrentKernel=this.addWeight("recurrent_kernel",[this.units,this.units],null,this.recurrentInitializer,this.recurrentRegularizer,!0,this.recurrentConstraint),this.useBias?this.bias=this.addWeight("bias",[this.units],null,this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint):this.bias=null,this.built=!0}call(e,t){return _a((()=>{if(2!==e.length)throw new Km(`SimpleRNNCell expects 2 input Tensors, got ${e.length}.`);let n=e[1];e=e[0];const s=null!=t.training&&t.training;let r;0<this.dropout&&this.dropout<1&&null==this.dropoutMask&&(this.dropoutMask=xw({ones:()=>Oc(e),rate:this.dropout,training:s,dropoutFunc:this.dropoutFunc})),0<this.recurrentDropout&&this.recurrentDropout<1&&null==this.recurrentDropoutMask&&(this.recurrentDropoutMask=xw({ones:()=>Oc(n),rate:this.recurrentDropout,training:s,dropoutFunc:this.dropoutFunc}));const a=this.dropoutMask,i=this.recurrentDropoutMask;r=Jg(null!=a?Gi(e,a):e,this.kernel.read()),null!=this.bias&&(r=ty(r,this.bias.read())),null!=i&&(n=Gi(n,i));let o=Wi(r,Jg(n,this.recurrentKernel.read()));return null!=this.activation&&(o=this.activation.apply(o)),[o,o]}))}getConfig(){const e=super.getConfig(),t={units:this.units,activation:Ex(this.activation),useBias:this.useBias,kernelInitializer:Ny(this.kernelInitializer),recurrentInitializer:Ny(this.recurrentInitializer),biasInitializer:Ny(this.biasInitializer),kernelRegularizer:Ox(this.kernelRegularizer),recurrentRegularizer:Ox(this.recurrentRegularizer),biasRegularizer:Ox(this.biasRegularizer),activityRegularizer:Ox(this.activityRegularizer),kernelConstraint:sb(this.kernelConstraint),recurrentConstraint:sb(this.recurrentConstraint),biasConstraint:sb(this.biasConstraint),dropout:this.dropout,recurrentDropout:this.recurrentDropout};return Object.assign(Object.assign({},e),t)}}dw.className="SimpleRNNCell",eo(dw);class pw extends cw{constructor(e){e.cell=new dw(e),super(e)}call(e,t){return _a((()=>{null!=this.cell.dropoutMask&&(Fa(this.cell.dropoutMask),this.cell.dropoutMask=null),null!=this.cell.recurrentDropoutMask&&(Fa(this.cell.recurrentDropoutMask),this.cell.recurrentDropoutMask=null);const n=null==t?null:t.mask,s=null==t?null:t.training,r=null==t?null:t.initialState;return super.call(e,{mask:n,training:s,initialState:r})}))}static fromConfig(e,t){return new e(t)}}pw.className="SimpleRNN",eo(pw);class fw extends hw{constructor(e){if(super(e),this.DEFAULT_ACTIVATION="tanh",this.DEFAULT_RECURRENT_ACTIVATION="hardSigmoid",this.DEFAULT_KERNEL_INITIALIZER="glorotNormal",this.DEFAULT_RECURRENT_INITIALIZER="orthogonal",this.DEFAULT_BIAS_INITIALIZER="zeros",e.resetAfter)throw new Km("GRUCell does not support reset_after parameter set to true.");this.units=e.units,fg(this.units,"units"),this.activation=Rx(void 0===e.activation?this.DEFAULT_ACTIVATION:e.activation),this.recurrentActivation=Rx(void 0===e.recurrentActivation?this.DEFAULT_RECURRENT_ACTIVATION:e.recurrentActivation),this.useBias=null==e.useBias||e.useBias,this.kernelInitializer=Sy(e.kernelInitializer||this.DEFAULT_KERNEL_INITIALIZER),this.recurrentInitializer=Sy(e.recurrentInitializer||this.DEFAULT_RECURRENT_INITIALIZER),this.biasInitializer=Sy(e.biasInitializer||this.DEFAULT_BIAS_INITIALIZER),this.kernelRegularizer=Lx(e.kernelRegularizer),this.recurrentRegularizer=Lx(e.recurrentRegularizer),this.biasRegularizer=Lx(e.biasRegularizer),this.kernelConstraint=ab(e.kernelConstraint),this.recurrentConstraint=ab(e.recurrentConstraint),this.biasConstraint=ab(e.biasConstraint),this.dropout=Lg([1,zg([0,null==e.dropout?0:e.dropout])]),this.recurrentDropout=Lg([1,zg([0,null==e.recurrentDropout?0:e.recurrentDropout])]),this.dropoutFunc=e.dropoutFunc,this.implementation=e.implementation,this.stateSize=this.units,this.dropoutMask=null,this.recurrentDropoutMask=null}build(e){const t=(e=Ey(e))[e.length-1];this.kernel=this.addWeight("kernel",[t,3*this.units],null,this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.recurrentKernel=this.addWeight("recurrent_kernel",[this.units,3*this.units],null,this.recurrentInitializer,this.recurrentRegularizer,!0,this.recurrentConstraint),this.useBias?this.bias=this.addWeight("bias",[3*this.units],null,this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint):this.bias=null,this.built=!0}call(e,t){return _a((()=>{if(2!==e.length)throw new Km(`GRUCell expects 2 input Tensors (inputs, h, c), got ${e.length}.`);const n=null!=t.training&&t.training;let s=e[1];e=e[0],0<this.dropout&&this.dropout<1&&null==this.dropoutMask&&(this.dropoutMask=xw({ones:()=>Oc(e),rate:this.dropout,training:n,count:3,dropoutFunc:this.dropoutFunc})),0<this.recurrentDropout&&this.recurrentDropout<1&&null==this.recurrentDropoutMask&&(this.recurrentDropoutMask=xw({ones:()=>Oc(s),rate:this.recurrentDropout,training:n,count:3,dropoutFunc:this.dropoutFunc}));const r=this.dropoutMask,a=this.recurrentDropoutMask;let i,o,l;0<this.dropout&&this.dropout<1&&(e=Gi(e,r[0]));let u=Jg(e,this.kernel.read());this.useBias&&(u=ty(u,this.bias.read())),0<this.recurrentDropout&&this.recurrentDropout<1&&(s=Gi(s,a[0]));const c=this.recurrentKernel.read(),[h,d]=Rh(c,[2*this.units,this.units],c.rank-1),p=Jg(s,h),[f,m,g]=Rh(u,3,u.rank-1),[y,b]=Rh(p,2,p.rank-1);i=this.recurrentActivation.apply(Wi(f,y)),o=this.recurrentActivation.apply(Wi(m,b));const x=Jg(Gi(o,s),d);l=this.activation.apply(Wi(g,x));const w=Wi(Gi(i,s),Gi(Wi(1,lc(i)),l));return[w,w]}))}getConfig(){const e=super.getConfig(),t={units:this.units,activation:Ex(this.activation),recurrentActivation:Ex(this.recurrentActivation),useBias:this.useBias,kernelInitializer:Ny(this.kernelInitializer),recurrentInitializer:Ny(this.recurrentInitializer),biasInitializer:Ny(this.biasInitializer),kernelRegularizer:Ox(this.kernelRegularizer),recurrentRegularizer:Ox(this.recurrentRegularizer),biasRegularizer:Ox(this.biasRegularizer),activityRegularizer:Ox(this.activityRegularizer),kernelConstraint:sb(this.kernelConstraint),recurrentConstraint:sb(this.recurrentConstraint),biasConstraint:sb(this.biasConstraint),dropout:this.dropout,recurrentDropout:this.recurrentDropout,implementation:this.implementation,resetAfter:!1};return Object.assign(Object.assign({},e),t)}}fw.className="GRUCell",eo(fw);class mw extends cw{constructor(e){0===e.implementation&&console.warn("`implementation=0` has been deprecated, and now defaults to `implementation=1`. Please update your layer call."),e.cell=new fw(e),super(e)}call(e,t){return _a((()=>{null!=this.cell.dropoutMask&&(Fa(this.cell.dropoutMask),this.cell.dropoutMask=null),null!=this.cell.recurrentDropoutMask&&(Fa(this.cell.recurrentDropoutMask),this.cell.recurrentDropoutMask=null);const n=null==t?null:t.mask,s=null==t?null:t.training,r=null==t?null:t.initialState;return super.call(e,{mask:n,training:s,initialState:r})}))}static fromConfig(e,t){return 0===t.implmentation&&(t.implementation=1),new e(t)}}mw.className="GRU",eo(mw);class gw extends hw{constructor(e){super(e),this.DEFAULT_ACTIVATION="tanh",this.DEFAULT_RECURRENT_ACTIVATION="hardSigmoid",this.DEFAULT_KERNEL_INITIALIZER="glorotNormal",this.DEFAULT_RECURRENT_INITIALIZER="orthogonal",this.DEFAULT_BIAS_INITIALIZER="zeros",this.units=e.units,fg(this.units,"units"),this.activation=Rx(void 0===e.activation?this.DEFAULT_ACTIVATION:e.activation),this.recurrentActivation=Rx(void 0===e.recurrentActivation?this.DEFAULT_RECURRENT_ACTIVATION:e.recurrentActivation),this.useBias=null==e.useBias||e.useBias,this.kernelInitializer=Sy(e.kernelInitializer||this.DEFAULT_KERNEL_INITIALIZER),this.recurrentInitializer=Sy(e.recurrentInitializer||this.DEFAULT_RECURRENT_INITIALIZER),this.biasInitializer=Sy(e.biasInitializer||this.DEFAULT_BIAS_INITIALIZER),this.unitForgetBias=e.unitForgetBias,this.kernelRegularizer=Lx(e.kernelRegularizer),this.recurrentRegularizer=Lx(e.recurrentRegularizer),this.biasRegularizer=Lx(e.biasRegularizer),this.kernelConstraint=ab(e.kernelConstraint),this.recurrentConstraint=ab(e.recurrentConstraint),this.biasConstraint=ab(e.biasConstraint),this.dropout=Lg([1,zg([0,null==e.dropout?0:e.dropout])]),this.recurrentDropout=Lg([1,zg([0,null==e.recurrentDropout?0:e.recurrentDropout])]),this.dropoutFunc=e.dropoutFunc,this.implementation=e.implementation,this.stateSize=[this.units,this.units],this.dropoutMask=null,this.recurrentDropoutMask=null}build(e){var t;const n=(e=Ey(e))[e.length-1];let s;if(this.kernel=this.addWeight("kernel",[n,4*this.units],null,this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.recurrentKernel=this.addWeight("recurrent_kernel",[this.units,4*this.units],null,this.recurrentInitializer,this.recurrentRegularizer,!0,this.recurrentConstraint),this.useBias){if(this.unitForgetBias){const e=this.biasInitializer,n=this.units;s=new((t=class extends iy{apply(t,s){const r=e.apply([n]),a=(new ly).apply([n]),i=e.apply([2*n]);return Kg(Kg(r,a),i)}}).className="CustomInit",t)}else s=this.biasInitializer;this.bias=this.addWeight("bias",[4*this.units],null,s,this.biasRegularizer,!0,this.biasConstraint)}else this.bias=null;this.built=!0}call(e,t){return _a((()=>{const n=null!=t.training&&t.training;if(3!==e.length)throw new Km(`LSTMCell expects 3 input Tensors (inputs, h, c), got ${e.length}.`);let s=e[1];const r=e[2];e=e[0],0<this.dropout&&this.dropout<1&&null==this.dropoutMask&&(this.dropoutMask=xw({ones:()=>Oc(e),rate:this.dropout,training:n,count:4,dropoutFunc:this.dropoutFunc})),0<this.recurrentDropout&&this.recurrentDropout<1&&null==this.recurrentDropoutMask&&(this.recurrentDropoutMask=xw({ones:()=>Oc(s),rate:this.recurrentDropout,training:n,count:4,dropoutFunc:this.dropoutFunc}));const a=this.dropoutMask,i=this.recurrentDropoutMask;let o,l,u,c;0<this.dropout&&this.dropout<1&&(e=Gi(e,a[0]));let h=Jg(e,this.kernel.read());0<this.recurrentDropout&&this.recurrentDropout<1&&(s=Gi(s,i[0])),h=Wi(h,Jg(s,this.recurrentKernel.read())),this.useBias&&(h=ty(h,this.bias.read()));const[d,p,f,m]=Rh(h,4,h.rank-1);o=this.recurrentActivation.apply(d),l=this.recurrentActivation.apply(p),u=Wi(Gi(l,r),Gi(o,this.activation.apply(f))),c=this.recurrentActivation.apply(m);const g=Gi(c,this.activation.apply(u));return[g,g,u]}))}getConfig(){const e=super.getConfig(),t={units:this.units,activation:Ex(this.activation),recurrentActivation:Ex(this.recurrentActivation),useBias:this.useBias,kernelInitializer:Ny(this.kernelInitializer),recurrentInitializer:Ny(this.recurrentInitializer),biasInitializer:Ny(this.biasInitializer),unitForgetBias:this.unitForgetBias,kernelRegularizer:Ox(this.kernelRegularizer),recurrentRegularizer:Ox(this.recurrentRegularizer),biasRegularizer:Ox(this.biasRegularizer),activityRegularizer:Ox(this.activityRegularizer),kernelConstraint:sb(this.kernelConstraint),recurrentConstraint:sb(this.recurrentConstraint),biasConstraint:sb(this.biasConstraint),dropout:this.dropout,recurrentDropout:this.recurrentDropout,implementation:this.implementation};return Object.assign(Object.assign({},e),t)}}gw.className="LSTMCell",eo(gw);class yw extends cw{constructor(e){0===e.implementation&&console.warn("`implementation=0` has been deprecated, and now defaults to `implementation=1`. Please update your layer call."),e.cell=new gw(e),super(e)}call(e,t){return _a((()=>{null!=this.cell.dropoutMask&&(Fa(this.cell.dropoutMask),this.cell.dropoutMask=null),null!=this.cell.recurrentDropoutMask&&(Fa(this.cell.recurrentDropoutMask),this.cell.recurrentDropoutMask=null);const n=null==t?null:t.mask,s=null==t?null:t.training,r=null==t?null:t.initialState;return super.call(e,{mask:n,training:s,initialState:r})}))}static fromConfig(e,t){return 0===t.implmentation&&(t.implementation=1),new e(t)}}yw.className="LSTM",eo(yw);class bw extends hw{constructor(e){super(e),this.cells=e.cells}get stateSize(){const e=[];for(const t of this.cells.slice().reverse())Array.isArray(t.stateSize)?e.push(...t.stateSize):e.push(t.stateSize);return e}call(e,t){return _a((()=>{let n=e.slice(1);const s=[];for(const e of this.cells.slice().reverse())Array.isArray(e.stateSize)?s.push(n.splice(0,e.stateSize.length)):s.push(n.splice(0,1));s.reverse();const r=[];let a;for(let i=0;i<this.cells.length;++i){const o=this.cells[i];n=s[i],a=0===i?[e[0]].concat(n):[a[0]].concat(n),a=o.call(a,t),r.push(a.slice(1))}n=[];for(const e of r.slice().reverse())n.push(...e);return[a[0]].concat(n)}))}build(e){let t;Ty(e)&&(e=e[0]),this.cells.forEach(((n,s)=>{Rg(`RNNCell_${s}`,(()=>{n.build(e),t=Array.isArray(n.stateSize)?n.stateSize[0]:n.stateSize,e=[e[0],t]}))})),this.built=!0}getConfig(){const e=super.getConfig(),t={cells:this.cells.map((e=>({className:e.getClassName(),config:e.getConfig()})))};return Object.assign(Object.assign({},e),t)}static fromConfig(e,t,n={}){const s=[];for(const e of t.cells)s.push(yb(e,n));return new e({cells:s})}get trainableWeights(){if(!this.trainable)return[];const e=[];for(const t of this.cells)e.push(...t.trainableWeights);return e}get nonTrainableWeights(){const e=[];for(const t of this.cells)e.push(...t.nonTrainableWeights);if(!this.trainable){const t=[];for(const e of this.cells)t.push(...e.trainableWeights);return t.concat(e)}return e}getWeights(){const e=[];for(const t of this.cells)e.push(...t.weights);return Fy(e)}setWeights(e){const t=[];for(const n of this.cells){const s=n.weights.length,r=e.splice(s);for(let e=0;e<n.weights.length;++e)t.push([n.weights[e],r[e]])}Dy(t)}}function xw(e){const{ones:t,rate:n,training:s=!1,count:r=1,dropoutFunc:a}=e,i=()=>null!=a?a(t(),n):ny(t(),n),o=()=>sy(i,t,s);return!r||r<=1?Da(o().clone()):Array(r).fill(void 0).map(o).map((e=>Da(e.clone())))}bw.className="StackedRNNCells",eo(bw);class ww extends cw{constructor(e){if(e.unroll)throw new Xm("Unrolling is not possible with convolutional RNNs.");if(Array.isArray(e.cell))throw new Xm("It is not possible at the moment to stack convolutional cells.");super(e),this.inputSpec=[new Oy({ndim:5})]}call(e,t){return _a((()=>{if(null!=this.cell.dropoutMask&&(Fa(this.cell.dropoutMask),this.cell.dropoutMask=null),null!=this.cell.recurrentDropoutMask&&(Fa(this.cell.recurrentDropoutMask),this.cell.recurrentDropoutMask=null),t&&t.constants)throw new Km("ConvRNN2D cell does not support constants");const n=null==t?null:t.mask,s=null==t?null:t.training,r=null==t?null:t.initialState;return super.call(e,{mask:n,training:s,initialState:r})}))}computeOutputShape(e){let t=this.computeSingleOutputShape(e);return this.returnSequences||(t=[t[0],...t.slice(2)]),this.returnState&&(t=[t,...Array(2).fill([e[0],...t.slice(-3)])]),t}getInitialState(e){return _a((()=>{const{stateSize:t}=this.cell,n=e.shape,s=this.computeSingleOutputShape(n),r=Nc([s[0],...s.slice(2)]);return Array.isArray(t)?Array(t.length).fill(r):[r]}))}resetStates(e,t=!1){_a((()=>{if(!this.stateful)throw new Hm("Cannot call resetStates() on an RNN Layer that is not stateful.");const n=this.inputSpec[0].shape,s=this.computeSingleOutputShape(n),r=[s[0],...s.slice(2)];if(null==n[0])throw new Km("If an RNN is stateful, it needs to know its batch size. Specify the batch size of your input tensors: \n- If using a Sequential model, specify the batch size by passing a `batchInputShape` option to your first layer.\n- If using the functional API, specify the batch size by passing a `batchShape` option to your Input layer.");if(null==this.getStates())Array.isArray(this.cell.stateSize)?this.states_=this.cell.stateSize.map((()=>Nc(r))):this.states_=[Nc(r)];else if(null==e)Fa(this.states_),null!=this.keptStates&&(Fa(this.keptStates),this.keptStates=[]),Array.isArray(this.cell.stateSize)?this.states_=this.cell.stateSize.map((()=>Nc(r))):this.states_[0]=Nc(r);else{if(Array.isArray(e)||(e=[e]),e.length!==this.states_.length)throw new Km(`Layer ${this.name} expects ${this.states_.length} state(s), but it received ${e.length} state value(s). Input received: ${e}`);t?this.keptStates.push(this.states_.slice()):Fa(this.states_);for(let t=0;t<this.states_.length;++t){const n=e[t],s=r;if(!ce(n.shape,s))throw new Km(`State ${t} is incompatible with layer ${this.name}: expected shape=${s}, received shape=${n.shape}`);this.states_[t]=n}}this.states_=this.states_.map((e=>Da(e.clone())))}))}computeSingleOutputShape(e){const{dataFormat:t,filters:n,kernelSize:s,padding:r,strides:a,dilationRate:i}=this.cell,o="channelsFirst"===t,l=e[o?3:2],u=e[o?4:3],c=jx(l,s[0],r,a[0],i[0]),h=jx(u,s[1],r,a[1],i[1]);return[...e.slice(0,2),...o?[n,c,h]:[c,h,n]]}}ww.className="ConvRNN2D";class vw extends gw{constructor(e){const{filters:t,kernelSize:n,strides:s,padding:r,dataFormat:a,dilationRate:i}=e;super(Object.assign(Object.assign({},e),{units:t})),this.filters=t,fg(this.filters,"filters"),this.kernelSize=Gx(n,2,"kernelSize"),this.kernelSize.forEach((e=>fg(e,"kernelSize"))),this.strides=Gx(s||1,2,"strides"),this.strides.forEach((e=>fg(e,"strides"))),this.padding=r||"valid",$g(this.padding),this.dataFormat=a||"channelsLast",Cg(this.dataFormat),this.dilationRate=Gx(i||1,2,"dilationRate"),this.dilationRate.forEach((e=>fg(e,"dilationRate")))}build(e){var t;e=Ey(e);const n="channelsFirst"===this.dataFormat?1:e.length-1;if(null==e[n])throw new Km(`The channel dimension of the input should be defined. Found ${e[n]}`);const s=e[n],r=this.kernelSize.concat([s,4*this.filters]);this.kernel=this.addWeight("kernel",r,null,this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint);const a=this.kernelSize.concat([this.filters,4*this.filters]);if(this.recurrentKernel=this.addWeight("recurrent_kernel",a,null,this.recurrentInitializer,this.recurrentRegularizer,!0,this.recurrentConstraint),this.useBias){let e;if(this.unitForgetBias){const n=this.biasInitializer,s=this.filters;e=new((t=class extends iy{apply(e,t){return qg([n.apply([s]),Sc([s]),n.apply([2*s])])}}).className="CustomInit",t)}else e=this.biasInitializer;this.bias=this.addWeight("bias",[4*this.filters],null,e,this.biasRegularizer,!0,this.biasConstraint)}this.built=!0}call(e,t){return _a((()=>{if(3!==e.length)throw new Km(`ConvLSTM2DCell expects 3 input Tensors (inputs, h, c), got ${e.length}.`);const n=t.training||!1,s=e[0],r=e[1],a=e[2];0<this.dropout&&this.dropout<1&&null==this.dropoutMask&&(this.dropoutMask=xw({ones:()=>Oc(s),rate:this.dropout,training:n,count:4,dropoutFunc:this.dropoutFunc}));const i=this.dropoutMask,o=(e,t,n)=>t&&t[n]?Gi(t[n],e):e;let l=o(s,i,0),u=o(s,i,1),c=o(s,i,2),h=o(s,i,3);0<this.recurrentDropout&&this.recurrentDropout<1&&null==this.recurrentDropoutMask&&(this.recurrentDropoutMask=xw({ones:()=>Oc(r),rate:this.recurrentDropout,training:n,count:4,dropoutFunc:this.dropoutFunc}));const d=this.recurrentDropoutMask;let p=o(r,d,0),f=o(r,d,1),m=o(r,d,2),g=o(r,d,3);const[y,b,x,w]=Rh(this.kernel.read(),4,3),[v,k,I,N]=this.useBias?Rh(this.bias.read(),4):[null,null,null,null];l=this.inputConv(l,y,v,this.padding),u=this.inputConv(u,b,k,this.padding),c=this.inputConv(c,x,I,this.padding),h=this.inputConv(h,w,N,this.padding);const[S,T,C,$]=Rh(this.recurrentKernel.read(),4,3);p=this.recurrentConv(p,S),f=this.recurrentConv(f,T),m=this.recurrentConv(m,C),g=this.recurrentConv(g,$);const E=this.recurrentActivation.apply(Wi(l,p)),A=this.recurrentActivation.apply(Wi(u,f)),R=Wi(Gi(A,a),Gi(E,this.activation.apply(Wi(c,m)))),_=Gi(this.recurrentActivation.apply(Wi(h,g)),this.activation.apply(R));return[_,_,R]}))}getConfig(){const e=super.getConfig(),{units:t}=e,n=function(e,t){var n={};for(var s in e)Object.prototype.hasOwnProperty.call(e,s)&&t.indexOf(s)<0&&(n[s]=e[s]);if(null!=e&&"function"==typeof Object.getOwnPropertySymbols){var r=0;for(s=Object.getOwnPropertySymbols(e);r<s.length;r++)t.indexOf(s[r])<0&&Object.prototype.propertyIsEnumerable.call(e,s[r])&&(n[s[r]]=e[s[r]])}return n}(e,["units"]),s={filters:this.filters,kernelSize:this.kernelSize,padding:this.padding,dataFormat:this.dataFormat,dilationRate:this.dilationRate,strides:this.strides};return Object.assign(Object.assign({},n),s)}inputConv(e,t,n,s){const r=ru(e,t,this.strides,s||"valid","channelsFirst"===this.dataFormat?"NCHW":"NHWC",this.dilationRate);return n?ty(r,n,this.dataFormat):r}recurrentConv(e,t){return ru(e,t,1,"same","channelsFirst"===this.dataFormat?"NCHW":"NHWC")}}vw.className="ConvLSTM2DCell",eo(vw);class kw extends ww{constructor(e){const t=new vw(e);super(Object.assign(Object.assign({},e),{cell:t}))}static fromConfig(e,t){return new e(t)}}kw.className="ConvLSTM2D",eo(kw);class Iw extends Py{constructor(e){super(e),this.rate=Math.max(Math.min(e.rate,1),0),this.noiseShape=e.noiseShape,this.seed=e.seed,this.supportsMasking=!0}getNoiseShape(e){if(null==this.noiseShape)return this.noiseShape;const t=e.shape,n=[];for(let e=0;e<this.noiseShape.length;++e)n.push(null==this.noiseShape[e]?t[e]:this.noiseShape[e]);return n}call(e,t){return _a((()=>{this.invokeCallHook(e,t);const n=$y(e);if(0<this.rate&&this.rate<1){const e=null!=t.training&&t.training,s=this.getNoiseShape(n);return sy((()=>ny(n,this.rate,s,this.seed)),(()=>n),e)}return e}))}getConfig(){const e={rate:this.rate,noiseShape:this.noiseShape,seed:this.seed},t=super.getConfig();return Object.assign(e,t),e}dispose(){return super.dispose()}}Iw.className="Dropout",eo(Iw);class Nw extends Iw{constructor(e){super(e),this.inputSpec=[{ndim:3}]}getNoiseShape(e){const t=e.shape;return[t[0],1,t[2]]}}Nw.className="SpatialDropout1D",eo(Nw);class Sw extends Py{constructor(e){if(super(e),this.activation=null,this.useBias=!0,this.kernel=null,this.bias=null,this.DEFAULT_KERNEL_INITIALIZER="glorotNormal",this.DEFAULT_BIAS_INITIALIZER="zeros",null==e.batchInputShape&&null==e.inputShape&&null!=e.inputDim){let t=null;null!=e.batchSize&&(t=e.batchSize),this.batchInputShape=[t,e.inputDim]}this.units=e.units,fg(this.units,"units"),this.activation=Rx(e.activation),null!=e.useBias&&(this.useBias=e.useBias),this.kernelInitializer=Sy(e.kernelInitializer||this.DEFAULT_KERNEL_INITIALIZER),this.biasInitializer=Sy(e.biasInitializer||this.DEFAULT_BIAS_INITIALIZER),this.kernelConstraint=ab(e.kernelConstraint),this.biasConstraint=ab(e.biasConstraint),this.kernelRegularizer=Lx(e.kernelRegularizer),this.biasRegularizer=Lx(e.biasRegularizer),this.activityRegularizer=Lx(e.activityRegularizer),this.supportsMasking=!0,this.inputSpec=[{minNDim:2}]}build(e){const t=(e=Ey(e))[e.length-1];null==this.kernel&&(this.kernel=this.addWeight("kernel",[t,this.units],null,this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.useBias&&(this.bias=this.addWeight("bias",[this.units],null,this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint))),this.inputSpec=[{minNDim:2,axes:{[-1]:t}}],this.built=!0}computeOutputShape(e){const t=(e=Ey(e)).slice();return t[t.length-1]=this.units,t}call(e,t){return _a((()=>{this.invokeCallHook(e,t);const n=$y(e),s=gg(this.activation.getClassName());let r;return null!=s?r=Jg(n,this.kernel.read(),s,this.bias?this.bias.read():null):(r=Jg(n,this.kernel.read()),null!=this.bias&&(r=ty(r,this.bias.read())),null!=this.activation&&(r=this.activation.apply(r))),r}))}getConfig(){const e={units:this.units,activation:Ex(this.activation),useBias:this.useBias,kernelInitializer:Ny(this.kernelInitializer),biasInitializer:Ny(this.biasInitializer),kernelRegularizer:Ox(this.kernelRegularizer),biasRegularizer:Ox(this.biasRegularizer),activityRegularizer:Ox(this.activityRegularizer),kernelConstraint:sb(this.kernelConstraint),biasConstraint:sb(this.biasConstraint)},t=super.getConfig();return Object.assign(e,t),e}}Sw.className="Dense",eo(Sw);class Tw extends Py{constructor(e){super(e=e||{}),this.inputSpec=[{minNDim:3}],this.dataFormat=e.dataFormat}computeOutputShape(e){e=Ey(e);for(const t of e.slice(1))if(null==t)throw new Km(`The shape of the input to "Flatten" is not fully defined (got ${e.slice(1)}). Make sure to pass a complete "input_shape" or "batch_input_shape" argument to the first layer in your model.`);return[e[0],Mg(e,1)]}call(e,t){return _a((()=>{this.invokeCallHook(e,t);let n=$y(e);if("channelsFirst"===this.dataFormat&&n.rank>1){const e=[0];for(let t=2;t<n.rank;++t)e.push(t);e.push(1),n=rd(n,e)}return function(e){if(e.rank<=1)throw new Km(`batchFlatten requires a minimum rank of 2. Got rank: ${e.rank}.`);const t=[e.shape[0],Mg(e.shape,1)];return Dl(e,t)}(n)}))}getConfig(){const e={};null!=this.dataFormat&&(e.dataFormat=this.dataFormat);const t=super.getConfig();return Object.assign(e,t),e}}Tw.className="Flatten",eo(Tw);class Cw extends Py{constructor(e){super(e),this.supportsMasking=!0,this.activation=Rx(e.activation)}call(e,t){return _a((()=>{this.invokeCallHook(e,t);const n=$y(e);return this.activation.apply(n)}))}getConfig(){const e={activation:Ex(this.activation)},t=super.getConfig();return Object.assign(e,t),e}}Cw.className="Activation",eo(Cw);class $w extends Py{constructor(e){super(e),this.n=e.n,this.inputSpec=[{ndim:2}]}computeOutputShape(e){return[e[0],this.n,e[1]]}call(e,t){return _a((()=>{return e=$y(e),t=e,n=this.n,_a((()=>{if(2!==t.shape.length)throw new Km(`repeat() expects a rank-2 tensor, but received a rank-${t.shape.length} tensor.`);return Xg(Ug(t,1),[1,n,1])}));var t,n}))}getConfig(){const e={n:this.n},t=super.getConfig();return Object.assign(e,t),e}}$w.className="RepeatVector",eo($w);class Ew extends Py{constructor(e){super(e),this.targetShape=e.targetShape;for(let e=0;e<this.targetShape.length;++e)this.isUnknown(this.targetShape[e])&&(this.targetShape[e]=null)}isUnknown(e){return e<0||null==e}fixUnknownDimension(e,t){const n="Total size of new array must be unchanged.",s=t.slice();let r=1,a=null;for(let e=0;e<s.length;++e){const t=s[e];if(this.isUnknown(t)){if(null!==a)throw new Km("Can only specifiy one unknown dimension.");a=e}else r*=t}const i=Mg(e);if(null!==a){if(0===r||i%r!==0)throw new Km(n);s[a]=i/r}else if(i!==r)throw new Km(n);return s}computeOutputShape(e){let t=!1;for(let n=0;n<e.length;++n)if(this.isUnknown(e[n])){t=!0;break}return t?e.slice(0,1).concat(this.targetShape):e.slice(0,1).concat(this.fixUnknownDimension(e.slice(1),this.targetShape))}call(e,t){return _a((()=>{this.invokeCallHook(e,t);const n=$y(e),s=n.shape,r=s.slice(0,1).concat(this.fixUnknownDimension(s.slice(1),this.targetShape));return Dl(n,r)}))}getConfig(){const e={targetShape:this.targetShape},t=super.getConfig();return Object.assign(e,t),e}}Ew.className="Reshape",eo(Ew);class Aw extends Py{constructor(e){if(super(e),null==e.dims)throw new Error("Required configuration field `dims` is missing during Permute constructor call.");if(!Array.isArray(e.dims))throw new Error(`Permute constructor requires \`dims\` to be an Array, but received ${e.dims} instead.`);const t=Bg(1,e.dims.length+1);if(!ce(e.dims.slice().sort(),t))throw new Error("Invalid permutation `dims`: "+JSON.stringify(e.dims)+" `dims` must contain consecutive integers starting from 1.");this.dims=e.dims,this.dimsIncludingBatch=[0].concat(this.dims),this.inputSpec=[new Oy({ndim:this.dims.length+1})]}computeOutputShape(e){const t=(e=Ey(e)).slice();return this.dims.forEach(((n,s)=>{t[s+1]=e[n]})),t}call(e,t){return rd($y(e),this.dimsIncludingBatch)}getConfig(){const e={dims:this.dims},t=super.getConfig();return Object.assign(e,t),e}}Aw.className="Permute",eo(Aw);class Rw extends Py{constructor(e){super(null==e?{}:e),this.supportsMasking=!0,this.maskValue=null!=e?null==e.maskValue?0:e.maskValue:0}computeOutputShape(e){return e}getConfig(){const e=super.getConfig(),t={maskValue:this.maskValue};return Object.assign(t,e),t}computeMask(e,t){const n=$y(e);return hl(Fc(n,this.maskValue),-1)}call(e,t){return _a((()=>{this.invokeCallHook(e,t);const n=$y(e),s=hl(Fc(n,this.maskValue),-1,!0);return Gi(n,zi(s,n.dtype))}))}}Rw.className="Masking",eo(Rw);class _w extends Py{constructor(e){if(super(e),this.embeddings=null,this.DEFAULT_EMBEDDINGS_INITIALIZER="randomUniform",null==e.batchInputShape&&null==e.inputShape){let t=null;null!=e.batchSize&&(t=e.batchSize),null==e.inputLength?this.batchInputShape=[t,null]:this.batchInputShape=[t].concat(ng(e.inputLength))}this.inputDim=e.inputDim,fg(this.inputDim,"inputDim"),this.outputDim=e.outputDim,fg(this.outputDim,"outputDim"),this.embeddingsInitializer=Sy(e.embeddingsInitializer||this.DEFAULT_EMBEDDINGS_INITIALIZER),this.embeddingsRegularizer=Lx(e.embeddingsRegularizer),this.activityRegularizer=Lx(e.activityRegularizer),this.embeddingsConstraint=ab(e.embeddingsConstraint),this.maskZero=e.maskZero,this.supportsMasking=e.maskZero,this.inputLength=e.inputLength}build(e){this.embeddings=this.addWeight("embeddings",[this.inputDim,this.outputDim],this.dtype,this.embeddingsInitializer,this.embeddingsRegularizer,!0,this.embeddingsConstraint),this.built=!0}warnOnIncompatibleInputShape(e){}computeMask(e,t){return _a((()=>this.maskZero?(e=$y(e),Fc(e,qi(e))):null))}computeOutputShape(e){if(e=Ey(e),null==this.inputLength)return[...e,this.outputDim];const t=ng(this.inputLength);if(t.length!==e.length-1)throw new Km(`"inputLength" is ${this.inputLength}, but received input shape has shape ${e}`);{let n=0;for(let s=0;s<t.length;++s){const r=t[s],a=e[s+1];if(null!=r&&null!=a&&r!==a)throw new Km(`"inputLength" is ${this.inputLength}, but received input shape has shape ${e}`);null==r&&(t[n]=a),n++}}return[e[0],...t,this.outputDim]}call(e,t){return _a((()=>{this.invokeCallHook(e,t);let n=$y(e);"int32"!==n.dtype&&(n=Vg(n,"int32"));const s=Zg(this.embeddings.read(),Dl(n,[n.size]));return Dl(s,Ey(this.computeOutputShape(n.shape)))}))}getConfig(){const e={inputDim:this.inputDim,outputDim:this.outputDim,embeddingsInitializer:Ny(this.embeddingsInitializer),embeddingsRegularizer:Ox(this.embeddingsRegularizer),activityRegularizer:Ox(this.activityRegularizer),embeddingsConstraint:sb(this.embeddingsConstraint),maskZero:this.maskZero,inputLength:this.inputLength},t=super.getConfig();return Object.assign(e,t),e}}_w.className="Embedding",eo(_w);class Fw extends Py{constructor(e){super(e||{}),this.supportsMasking=!0}mergeFunction(e){throw new Xm}computeElementwiseOpOutputShape(e,t){if(null==e||null==t)return null;if(e.length<t.length)return this.computeElementwiseOpOutputShape(t,e);if(0===t.length)return e;const n=e.slice(0,e.length-t.length);for(let s=0;s<t.length;++s){const r=e[e.length-t.length+s],a=t[s];if(null==r||null==a||r<0||a<0)n.push(null);else if(1===r)n.push(a);else if(1===a)n.push(r);else{if(r!==a)throw new Km("Operands could not be broadcast together with shapes "+JSON.stringify(e)+" "+JSON.stringify(t));n.push(r)}}return n}build(e){if(Array.isArray(e)&&!Array.isArray(e[0])&&(e=[Ey(e)]),e.length<2)throw new Km(`A merge layer should be called on an Array of at least 2 inputs. Got ${e.length} input(s).`);let t=[];for(const n of e)null!=n&&null!==n[0]&&t.push(n[0]);if(t=cg(t),t.length>1)throw new Km(`Can not merge tensors with different batch sizes. Got tensors with shapes: ${JSON.stringify(e)}.`);let n=null==e[0]?null:e[0].slice(1);for(let t=1;t<e.length;++t){const s=null==e[t]?null:e[t].slice(1);n=this.computeElementwiseOpOutputShape(n,s)}const s=e.map((e=>e.length));-1===e.indexOf(null)&&1===cg(s).length?this.reshapeRequired=!1:this.reshapeRequired=!0}call(e,t){return _a((()=>{if(this.reshapeRequired){const t=[],n=e.map((e=>e.rank));if(-1===n.indexOf(null)){const s=zg(n);for(let n of e){const e=n.rank;for(let t=0;t<s-e;++t)n=Ug(n,1);t.push(n)}return this.mergeFunction(t)}{let n=!1;for(const s of e){const e=s.rank;if(null==e){const e=s.shape,r=e[0],a=e.slice(1).concat([r]);let i=Dl(s,[r].concat(Mg(e.slice(1))));i=rd(i,[1,0]),i=Dl(i,a),t.push(i),n=!0}else if(e>1){const r=Bg(1,e).concat([0]);t.push(rd(s,r)),n=!0}else t.push(s)}let s=this.mergeFunction(t);const r=s.rank;if(n)if(null==r){const e=s.shape,t=e[e.length-1],n=[t].concat(e.slice(0,e.length-1));s=Dl(rd(Dl(s,[-1,t]),[1,0]),n)}else if(r>1){const e=[r-1].concat(Bg(0,r-1));s=rd(s,e)}return s}}return this.mergeFunction(e)}))}computeOutputShape(e){let t;t=null==e[0]?null:e[0].slice(1);for(let n=1;n<e.length;++n){const s=null==e[n]?null:e[n].slice(1);t=this.computeElementwiseOpOutputShape(t,s)}let n=[];for(const t of e)null!=t&&null!==t[0]&&n.push(t[0]);return n=cg(n),t=1===n.length?n.concat(t):[null].concat(t),t}computeMask(e,t){return _a((()=>{if(null==t)return null;if(!Array.isArray(t))throw new Km("`mask` should be an Array");if(!Array.isArray(e))throw new Km("`inputs` should be an Array");if(t.length!==e.length)throw new Km(`The Array 'inputs' and 'mask' are expected to have the same length, but have different lengths (${e.length} vs ${t.length})`);if(t.every((e=>null==e)))return null;let n=(t=t.map((e=>null==e?e:Uu(e,0))))[0];for(let e=1;e<t.length-1;++e)n=pc(n,t[e]);return n}))}}class Dw extends Fw{constructor(e){super(e)}mergeFunction(e){return _a((()=>{let t=e[0].clone();for(let n=1;n<e.length;++n)t=Wi(t,e[n]);return t}))}}Dw.className="Add",eo(Dw);class Ow extends Fw{constructor(e){super(e)}mergeFunction(e){return _a((()=>{let t=e[0].clone();for(let n=1;n<e.length;++n)t=Gi(t,e[n]);return t}))}}Ow.className="Multiply",eo(Ow);class Mw extends Fw{constructor(e){super(e)}mergeFunction(e){return _a((()=>{let t=e[0].clone();for(let n=1;n<e.length;++n)t=Wi(t,e[n]);return Gi(1/e.length,t)}))}}Mw.className="Average",eo(Mw);class Lw extends Fw{constructor(e){super(e)}mergeFunction(e){return _a((()=>{let t=e[0];for(let n=1;n<e.length;++n)t=po(t,e[n]);return t}))}}Lw.className="Maximum",eo(Lw);class zw extends Fw{constructor(e){super(e)}mergeFunction(e){return _a((()=>{let t=e[0];for(let n=1;n<e.length;++n)t=Cc(t,e[n]);return t}))}}zw.className="Minimum",eo(zw);class Bw extends Fw{constructor(e){super(e),this.DEFAULT_AXIS=-1,null==e&&(e={}),this.axis=null==e.axis?this.DEFAULT_AXIS:e.axis,this.supportsMasking=!0,this.reshapeRequired=!1}build(e){if(!Array.isArray(e)||!Array.isArray(e[0])||1===e.length)throw new Km("A `Concatenate` layer should be called on a list of at least 2 inputs");let t=!0;for(const n of e)if(null!=n){t=!1;break}if(t)return;const n=[];for(let t=0;t<e.length;++t){const s=e[t].slice();s.splice(this.axis,1);let r=!1;for(const e of n)if(ce(e,s)){r=!0;break}r||n.push(s)}if(n.length>1)throw new Km("A `Concatenate` layer requires inputs with matching shapes except for the concat axis. Got input shapes: "+JSON.stringify(e))}mergeFunction(e){return _a((()=>qg(e,this.axis)))}computeOutputShape(e){if(!Array.isArray(e)||!Array.isArray(e[0]))throw new Km("A `Concatenate` layer should be called on a list of inputs.");const t=e,n=t[0].slice(),s=this.axis<0?n.length+this.axis:this.axis;for(const e of t.slice(1)){if(null==n[s]||null==e[s]){n[s]=null;break}n[s]+=e[s]}return n}computeMask(e,t){if(null==t)return null;if(!Array.isArray(t))throw new Km("`mask` should be an array for Concatenate");if(!Array.isArray(e))throw new Km("`inputs` should be an array for Concatenate");if(t.length!==e.length)throw new Km(`Mismatch in the length of mask (${t.length}) and the legnth of inputs (${e.length})`);return _a((()=>{let n=!0;if(t.forEach((e=>{null==e||(n=!1)})),n)return null;const s=[];for(let n=0;n<e.length;++n)null==t[n]?s.push(zi(Oc(e[n]),"bool")):t[n].rank<e[n].rank?s.push(Uu(t[n],-1)):s.push(t[n]);const r=Ll(s,this.axis);return cl(r,-1,!1)}))}getConfig(){const e={axis:this.axis},t=super.getConfig();return Object.assign(e,t),e}}function Pw(e,t){for(;e<0;)e+=t;return e}Bw.className="Concatenate",eo(Bw);class Ww extends Fw{constructor(e){super(e),this.axes=e.axes,this.normalize=null!=e.normalize&&e.normalize,this.supportsMasking=!0,this.reshapeRequired=!1}build(e){ie(Array.isArray(e)&&2===e.length&&Array.isArray(e[0])&&Array.isArray(e[1]),(()=>"A `Dot` layer should be called on a list of exactly 2 inputs."));const t=e[0],n=e[1];if(t.length>3||n.length>3)throw new Xm("Dot layer does not support tensors of 4D or higher rank yet.");const s=this.interpretAxes(t,n);if(t[s[0]]!==n[s[1]])throw new Km(`Dimension incompatibility: ${t[s[0]]} !== ${n[s[1]]}`)}mergeFunction(e){if(2!==e.length)throw new Km(`A \`Dot\` layer must be called on exactly 2 inputs, but received ${e.length} input(s).`);let t,n=e[0],s=e[1];return t=Array.isArray(this.axes)?this.axes.map(((t,n)=>Pw(t,e[n].shape.length))):[Pw(this.axes,n.shape.length),Pw(this.axes,s.shape.length)],this.normalize&&(n=bb(n,t[0]),s=bb(s,t[1])),function(e,t,n){if(e.shape.length>3||t.shape.length>3)throw new Xm("batchDot is not implemented for tensors of 4D or higher rank yet");if(ie(e.shape.length>=2,(()=>`batchDot requires the rank of x to be >= 2, but got ${e.shape.length}`)),ie(e.shape.length>=2,(()=>`batchDot requires the rank of y to be >= 2, but got ${t.shape.length}`)),"number"==typeof n&&(n=[n,n]),"complex64"===e.dtype||"complex64"===t.dtype)throw new Xm("batchDot is not implemented for complex64-type Tensors yet.");const s=e.shape.length,r=t.shape.length;null==n&&(n=[s-1,r-2]);const a=n;return _a((()=>{let n,i;if(s>r){n=s-r;const e=[];for(let t=0;t<n;++t)e.push(1);t=Dl(t,t.shape.concat(e))}else if(r>s){n=r-s;const t=[];for(let e=0;e<n;++e)t.push(1);e=Dl(e,e.shape.concat(t))}else n=0;if(2===e.shape.length&&2===t.shape.length)i=a[0]===a[1]?zu(Gi(e,t),a[0]):zu(Gi(rd(e,[1,0]),t),a[1]);else{const n=a[0]!==e.shape.length-1,s=a[1]===t.shape.length-1;i=zl(e,t,n,s)}if(n>0){let e;e=s>r?s+r-3:s-1;const t=[];for(let s=e;s<e+n;++s)t.push(s);i=Dh(i,t)}return 1===i.shape.length&&(i=Uu(i,1)),i}))}(n,s,t)}interpretAxes(e,t){let n;return n=Array.isArray(this.axes)?this.axes:[Pw(this.axes,e.length),Pw(this.axes,t.length)],n}computeOutputShape(e){ie(Array.isArray(e)&&2===e.length&&Array.isArray(e[0])&&Array.isArray(e[1]),(()=>"A `Dot` layer should be called on a list of exactly 2 inputs."));const t=e[0].slice(),n=e[1].slice();if(t.length>3||n.length>3)throw new Xm("Dot layer does not support tensors of 4D or higher rank yet.");const s=this.interpretAxes(t,n);t.splice(s[0],1),n.splice(s[1],1),n.splice(0,1);const r=t.concat(n);return 1===r.length&&r.push(1),r}computeMask(e,t){return null}getConfig(){const e={axes:this.axes,normalize:this.normalize},t=super.getConfig();return Object.assign(e,t),e}}Ww.className="Dot",eo(Ww);class Vw extends Py{constructor(e){super(e),this.supportsMasking=!0,this.stddev=e.stddev}computeOutputShape(e){return e}getConfig(){const e=super.getConfig(),t={stddev:this.stddev};return Object.assign(t,e),t}call(e,t){return _a((()=>{this.invokeCallHook(e,t);const n=$y(e);return sy((()=>Wi(Yg(n.shape,0,this.stddev),n)),(()=>n),t.training||!1)}))}}Vw.className="GaussianNoise",eo(Vw);class Uw extends Py{constructor(e){super(e),this.supportsMasking=!0,this.rate=e.rate}computeOutputShape(e){return e}getConfig(){const e=super.getConfig(),t={rate:this.rate};return Object.assign(t,e),t}call(e,t){return _a((()=>{this.invokeCallHook(e,t);const n=$y(e);return this.rate>0&&this.rate<1?sy((()=>{const e=Math.sqrt(this.rate/(1-this.rate));return Gi(n,Yg(n.shape,1,e))}),(()=>n),t.training||!1):n}))}}Uw.className="GaussianDropout",eo(Uw);class Gw extends Py{constructor(e){super(e),this.supportsMasking=!0,this.rate=e.rate,this.noiseShape=e.noiseShape}_getNoiseShape(e){return this.noiseShape||$y(e).shape}computeOutputShape(e){return e}getConfig(){const e=super.getConfig(),t={rate:this.rate};return Object.assign(t,e),t}call(e,t){return _a((()=>{if(this.rate<1&&this.rate>0){const n=this._getNoiseShape(e);return sy((()=>{const t=$y(e),s=-1.7580993408473766;let r=Yu(sh(n),this.rate);r=Vg(r,"float32");const a=((1-this.rate)*(1+this.rate*s**2))**-.5,i=-a*s*this.rate,o=Wi(Gi(t,r),Gi(Wi(r,-1),s));return Wi(Gi(o,a),i)}),(()=>$y(e)),t.training||!1)}return e}))}}function jw(e,t,n,s,r,a=.001){let i;if(2===e.rank)i=jl(e,t,n,s,r,a);else if(3===e.rank)i=Hl(e,t,n,s,r,a);else{if(4!==e.rank)throw new Xm(`batchNormalization is not implemented for array of rank ${e.rank} yet`);i=ql(e,t,n,s,r,a)}return i}Gw.className="AlphaDropout",eo(Gw);class Hw extends Py{constructor(e){null==e&&(e={}),super(e),this.supportsMasking=!0,this.axis=null==e.axis?-1:e.axis,this.momentum=null==e.momentum?.99:e.momentum,this.epsilon=null==e.epsilon?.001:e.epsilon,this.center=null==e.center||e.center,this.scale=null==e.scale||e.scale,this.betaInitializer=Sy(e.betaInitializer||"zeros"),this.gammaInitializer=Sy(e.gammaInitializer||"ones"),this.movingMeanInitializer=Sy(e.movingMeanInitializer||"zeros"),this.movingVarianceInitializer=Sy(e.movingVarianceInitializer||"ones"),this.betaConstraint=ab(e.betaConstraint),this.gammaConstraint=ab(e.gammaConstraint),this.betaRegularizer=Lx(e.betaRegularizer),this.gammaRegularizer=Lx(e.gammaRegularizer)}build(e){e=Ey(e);const t=this.axis>=0?this.axis:this.axis+e.length,n=e[t];if(null==n)throw new Km(`Axis ${t} of input tensor should have a defined dimension but the layer received an input with shape ${JSON.stringify(e)}.`);this.inputSpec=[new Oy({ndim:e.length,axes:{[t]:n}})];const s=[n];this.scale&&(this.gamma=this.addWeight("gamma",s,null,this.gammaInitializer,this.gammaRegularizer,!0,this.gammaConstraint)),this.center&&(this.beta=this.addWeight("beta",s,null,this.betaInitializer,this.betaRegularizer,!0,this.betaConstraint)),this.movingMean=this.addWeight("moving_mean",s,null,this.movingMeanInitializer,null,!1),this.movingVariance=this.addWeight("moving_variance",s,null,this.movingVarianceInitializer,null,!1),this.built=!0}call(e,t){return _a((()=>{const n=null!=t.training&&t.training,s=$y(e),r=s.shape,a=r.length,i=Bg(0,a),o=this.axis>=0?this.axis:this.axis+a;i.splice(o,1);const l=Zm(1,a);l[o]=r[o];const u=i.slice();u.sort();const c=!ce(u,Bg(0,a).slice(0,a-1));if(!n)return(()=>{if(c){const e=Dl(this.movingMean.read(),l),t=Dl(this.movingVariance.read(),l),n=this.center?Dl(this.beta.read(),l):null,r=this.scale?Dl(this.gamma.read(),l):null;return jw(s,e,t,n,r,this.epsilon)}return jw(s,this.movingMean.read(),this.movingVariance.read(),null==this.beta?null:this.beta.read(),null==this.gamma?null:this.gamma.read(),this.epsilon)})();const[h,d,p]=function(e,t,n,s,r=.001){return ce(s.slice().sort(),Bg(0,e.rank-1))?function(e,t,n,s,r=.001){return _a((()=>{const a=Ac(e,s),i=a.mean,o=a.variance;return[jw(e,i,o,n,t,r),i,o]}))}(e,t,n,s,r):function(e,t,n,s,r=.001){return _a((()=>{const a=Ac(e,s),i=a.mean,o=a.variance,l=[];for(const t of Bg(0,e.rank))-1!==s.indexOf(t)?l.push(1):l.push(e.shape[t]);const u=Dl(i,l),c=Dl(o,l),h=null==t?null:Dl(t,l),d=null==n?null:Dl(n,l);return[jw(e,u,c,d,h,r),i,o]}))}(e,t,n,s,r)}(s,this.gamma.read(),this.beta.read(),i,this.epsilon),f=(e,t,n)=>{_a((()=>{const s=1-n,r=e.read(),a=Gi(io(r,t),s);e.write(io(r,a))}))};return(()=>{f(this.movingMean,d,this.momentum),f(this.movingVariance,p,this.momentum)})(),h}))}getConfig(){const e={axis:this.axis,momentum:this.momentum,epsilon:this.epsilon,center:this.center,scale:this.scale,betaInitializer:Ny(this.betaInitializer),gammaInitializer:Ny(this.gammaInitializer),movingMeanInitializer:Ny(this.movingMeanInitializer),movingVarianceInitializer:Ny(this.movingVarianceInitializer),betaRegularizer:Ox(this.betaRegularizer),gammaRegularizer:Ox(this.gammaRegularizer),betaConstraint:sb(this.betaConstraint),gammaConstraint:sb(this.gammaConstraint)},t=super.getConfig();return Object.assign(e,t),e}}Hw.className="BatchNormalization",eo(Hw);class qw extends Py{constructor(e){if(null==e&&(e={}),super(e),this.axis=null==e.axis?-1:e.axis,"number"==typeof this.axis){if(!Number.isInteger(this.axis))throw new Error(`Expected axis to be an integer, but received ${this.axis}`)}else{if(!Array.isArray(this.axis))throw new Error(`Expected axis to be an integer or an array of integers, but received ${JSON.stringify(this.axis)}`);for(const e of this.axis)if(!Number.isInteger(e))throw new Error(`Expected axis to be an array of integers, but received ${JSON.stringify(this.axis)}`)}this.epsilon=null==e.epsilon?.001:e.epsilon,this.center=null==e.center||e.center,this.scale=null==e.scale||e.scale,this.betaInitializer=Sy(e.betaInitializer||"zeros"),this.gammaInitializer=Sy(e.gammaInitializer||"ones"),this.betaRegularizer=Lx(e.betaRegularizer),this.gammaRegularizer=Lx(e.gammaRegularizer),this.supportsMasking=!0}build(e){const t=(e=Ey(e)).length;"number"==typeof this.axis&&(this.axis=[this.axis]);for(let e=0;e<this.axis.length;++e)this.axis[e]<0&&(this.axis[e]+=t);for(const e of this.axis)if(e<0||e>=t)throw new Error(`Invalid axis: ${e}`);if(this.axis.length!==cg(this.axis).length)throw new Error(`Found duplicate axes in: ${this.axis}`);const n=this.axis.map((t=>e[t])),s=!0;this.scale?this.gamma=this.addWeight("gamma",n,"float32",this.gammaInitializer,this.gammaRegularizer,s):this.gamma=null,this.center?this.beta=this.addWeight("beta",n,"float32",this.betaInitializer,this.betaRegularizer,s):this.beta=null,this.built=!0}call(e,t){const n=$y(e),s=n.shape,r=s.length;return _a((()=>{let{mean:e,variance:t}=Ac(n,this.axis,!0);const a=Zm(1,r);for(const e of this.axis)a[e]=s[e];const i=e=>null!=e&&e.shape.length!==r?Dl(e,a):e;let o=this.scale?i(this.gamma.read()):null,l=this.center?i(this.beta.read()):null;const u=[],c=[];for(let e=0;e<r;++e)-1!==this.axis.indexOf(e)?(u.push(s[e]),c.push(1)):(u.push(1),c.push(s[e]));return e=ju(e,u),t=ju(t,u),null!=o&&(o=ju(o,c)),null!=l&&(l=ju(l,c)),jw(n,e,t,l,o,this.epsilon)}))}getConfig(){const e={axis:this.axis,epsilon:this.epsilon,center:this.center,scale:this.scale,betaInitializer:Ny(this.betaInitializer),gammaInitializer:Ny(this.gammaInitializer),betaRegularizer:Ox(this.betaRegularizer),gammaRegularizer:Ox(this.gammaRegularizer)},t=super.getConfig();return Object.assign(e,t),e}}qw.className="LayerNormalization",eo(qw);class Kw extends Py{constructor(e){if(null==e&&(e={}),super(e),this.dataFormat=null==e.dataFormat?"channelsLast":e.dataFormat,null==e.padding)this.padding=[[1,1],[1,1]];else if("number"==typeof e.padding)this.padding=[[e.padding,e.padding],[e.padding,e.padding]];else{if(e.padding=e.padding,2!==e.padding.length)throw new Km(`ZeroPadding2D expects padding to be a length-2 array, but received a length-${e.padding.length} array.`);let t,n;if("number"==typeof e.padding[0])t=[e.padding[0],e.padding[0]],n=[e.padding[1],e.padding[1]];else{if(e.padding=e.padding,2!==e.padding[0].length)throw new Km(`ZeroPadding2D expects height padding to be a length-2 array, but received a length-${e.padding[0].length} array.`);if(t=e.padding[0],2!==e.padding[1].length)throw new Km(`ZeroPadding2D expects width padding to be a length-2 array, but received a length-${e.padding[1].length} array.`);n=e.padding[1]}this.padding=[t,n]}this.inputSpec=[new Oy({ndim:4})]}computeOutputShape(e){let t,n;return e=Ey(e),"channelsFirst"===this.dataFormat?(t=null!=e[2]&&e[2]>=0?e[2]+this.padding[0][0]+this.padding[0][1]:null,n=null!=e[3]&&e[3]>=0?e[3]+this.padding[1][0]+this.padding[1][1]:null,[e[0],e[1],t,n]):(t=null!=e[1]&&e[1]>=0?e[1]+this.padding[0][0]+this.padding[0][1]:null,n=null!=e[2]&&e[2]>=0?e[2]+this.padding[1][0]+this.padding[1][1]:null,[e[0],t,n,e[3]])}call(e,t){return _a((()=>{return t=$y(e),n=this.padding,s=this.dataFormat,_a((()=>{if(4!==t.rank)throw new Km(`temporalPadding expects input tensor to be 4-D, but received a ${t.rank}-D tensor.`);if(null==n&&(n=[[1,1],[1,1]]),2!==n.length||2!==n[0].length||2!==n[1].length)throw new Km("spatial2dPadding expects `padding` to be an Array of two Arrays, each of which is an Array of two integers.");if(null==s&&(s="channelsLast"),"channelsLast"!==s&&"channelsFirst"!==s)throw new Km(`Unknown data format: ${s}. Supported data formats are 'channelsLast' and 'channelsFirst.`);let e;return e="channelsFirst"===s?[[0,0],[0,0],n[0],n[1]]:[[0,0],n[0],n[1],[0,0]],Lc(t,e)}));var t,n,s}))}getConfig(){const e={padding:this.padding,dataFormat:this.dataFormat},t=super.getConfig();return Object.assign(e,t),e}}function Xw(e,t,n,s,r,a){return _a((()=>{let i;Cg(r),Eg(a),$g(s),null==n&&(n=[1,1]),null==s&&(s="valid"),null==r&&(r="channelsLast"),null==a&&(a="max"),e=qx(e,r);const o="same"===s?"same":"valid";return i="max"===a?wc(e,t,n,o):Ol(e,t,n,o),"channelsFirst"===r&&(i=rd(i,[0,3,1,2])),i}))}function Yw(e,t,n,s,r,a){return _a((()=>{let i;Cg(r),Eg(a),$g(s),null==n&&(n=[1,1,1]),null==s&&(s="valid"),null==r&&(r="channelsLast"),null==a&&(a="max"),e=Kx(e,r);const o="same"===s?"same":"valid";return i="max"===a?vc(e,t,n,o):Ml(e,t,n,o),"channelsFirst"===r&&(i=rd(i,[0,4,1,2,3])),i}))}Kw.className="ZeroPadding2D",eo(Kw);class Jw extends Py{constructor(e){if(null==e.poolSize&&(e.poolSize=2),super(e),"number"==typeof e.poolSize)this.poolSize=[e.poolSize];else{if(!Array.isArray(e.poolSize)||1!==e.poolSize.length||"number"!=typeof e.poolSize[0])throw new Km(`poolSize for 1D convolutional layer must be a number or an Array of a single number, but received ${JSON.stringify(e.poolSize)}`);this.poolSize=e.poolSize}if(fg(this.poolSize,"poolSize"),null==e.strides)this.strides=this.poolSize;else if("number"==typeof e.strides)this.strides=[e.strides];else{if(!Array.isArray(e.strides)||1!==e.strides.length||"number"!=typeof e.strides[0])throw new Km(`strides for 1D convolutional layer must be a number or an Array of a single number, but received ${JSON.stringify(e.strides)}`);this.strides=e.strides}fg(this.strides,"strides"),this.padding=null==e.padding?"valid":e.padding,$g(this.padding),this.inputSpec=[new Oy({ndim:3})]}computeOutputShape(e){const t=jx((e=Ey(e))[1],this.poolSize[0],this.padding,this.strides[0]);return[e[0],t,e[2]]}call(e,t){return _a((()=>{this.invokeCallHook(e,t),e=Ug($y(e),2);const n=this.poolingFunction($y(e),[this.poolSize[0],1],[this.strides[0],1],this.padding,"channelsLast");return Dh(n,[2])}))}getConfig(){const e={poolSize:this.poolSize,padding:this.padding,strides:this.strides},t=super.getConfig();return Object.assign(e,t),e}}class Zw extends Jw{constructor(e){super(e)}poolingFunction(e,t,n,s,r){return Cg(r),$g(s),Xw(e,t,n,s,r,"max")}}Zw.className="MaxPooling1D",eo(Zw);class Qw extends Jw{constructor(e){super(e)}poolingFunction(e,t,n,s,r){return Cg(r),$g(s),Xw(e,t,n,s,r,"avg")}}Qw.className="AveragePooling1D",eo(Qw);class ev extends Py{constructor(e){if(null==e.poolSize&&(e.poolSize=[2,2]),super(e),this.poolSize=Array.isArray(e.poolSize)?e.poolSize:[e.poolSize,e.poolSize],null==e.strides)this.strides=this.poolSize;else if(Array.isArray(e.strides)){if(2!==e.strides.length)throw new Km(`If the strides property of a 2D pooling layer is an Array, it is expected to have a length of 2, but received length ${e.strides.length}.`);this.strides=e.strides}else this.strides=[e.strides,e.strides];fg(this.poolSize,"poolSize"),fg(this.strides,"strides"),this.padding=null==e.padding?"valid":e.padding,this.dataFormat=null==e.dataFormat?"channelsLast":e.dataFormat,Cg(this.dataFormat),$g(this.padding),this.inputSpec=[new Oy({ndim:4})]}computeOutputShape(e){e=Ey(e);let t="channelsFirst"===this.dataFormat?e[2]:e[1],n="channelsFirst"===this.dataFormat?e[3]:e[2];return t=jx(t,this.poolSize[0],this.padding,this.strides[0]),n=jx(n,this.poolSize[1],this.padding,this.strides[1]),"channelsFirst"===this.dataFormat?[e[0],e[1],t,n]:[e[0],t,n,e[3]]}call(e,t){return _a((()=>(this.invokeCallHook(e,t),this.poolingFunction($y(e),this.poolSize,this.strides,this.padding,this.dataFormat))))}getConfig(){const e={poolSize:this.poolSize,padding:this.padding,strides:this.strides,dataFormat:this.dataFormat},t=super.getConfig();return Object.assign(e,t),e}}class tv extends ev{constructor(e){super(e)}poolingFunction(e,t,n,s,r){return Cg(r),$g(s),Xw(e,t,n,s,r,"max")}}tv.className="MaxPooling2D",eo(tv);class nv extends ev{constructor(e){super(e)}poolingFunction(e,t,n,s,r){return Cg(r),$g(s),Xw(e,t,n,s,r,"avg")}}nv.className="AveragePooling2D",eo(nv);class sv extends Py{constructor(e){if(null==e.poolSize&&(e.poolSize=[2,2,2]),super(e),this.poolSize=Array.isArray(e.poolSize)?e.poolSize:[e.poolSize,e.poolSize,e.poolSize],null==e.strides)this.strides=this.poolSize;else if(Array.isArray(e.strides)){if(3!==e.strides.length)throw new Km(`If the strides property of a 3D pooling layer is an Array, it is expected to have a length of 3, but received length ${e.strides.length}.`);this.strides=e.strides}else this.strides=[e.strides,e.strides,e.strides];fg(this.poolSize,"poolSize"),fg(this.strides,"strides"),this.padding=null==e.padding?"valid":e.padding,this.dataFormat=null==e.dataFormat?"channelsLast":e.dataFormat,Cg(this.dataFormat),$g(this.padding),this.inputSpec=[new Oy({ndim:5})]}computeOutputShape(e){e=Ey(e);let t="channelsFirst"===this.dataFormat?e[2]:e[1],n="channelsFirst"===this.dataFormat?e[3]:e[2],s="channelsFirst"===this.dataFormat?e[4]:e[3];return t=jx(t,this.poolSize[0],this.padding,this.strides[0]),n=jx(n,this.poolSize[1],this.padding,this.strides[1]),s=jx(s,this.poolSize[2],this.padding,this.strides[2]),"channelsFirst"===this.dataFormat?[e[0],e[1],t,n,s]:[e[0],t,n,s,e[4]]}call(e,t){return _a((()=>(this.invokeCallHook(e,t),this.poolingFunction($y(e),this.poolSize,this.strides,this.padding,this.dataFormat))))}getConfig(){const e={poolSize:this.poolSize,padding:this.padding,strides:this.strides,dataFormat:this.dataFormat},t=super.getConfig();return Object.assign(e,t),e}}class rv extends sv{constructor(e){super(e)}poolingFunction(e,t,n,s,r){return Cg(r),$g(s),Yw(e,t,n,s,r,"max")}}rv.className="MaxPooling3D",eo(rv);class av extends sv{constructor(e){super(e)}poolingFunction(e,t,n,s,r){return Cg(r),$g(s),Yw(e,t,n,s,r,"avg")}}av.className="AveragePooling3D",eo(av);class iv extends Py{constructor(e){super(e),this.inputSpec=[new Oy({ndim:3})]}computeOutputShape(e){return[e[0],e[2]]}call(e,t){throw new Xm}}class ov extends iv{constructor(e){super(e||{})}call(e,t){return _a((()=>{const t=$y(e);return Ic(t,1)}))}}ov.className="GlobalAveragePooling1D",eo(ov);class lv extends iv{constructor(e){super(e||{})}call(e,t){return _a((()=>{const t=$y(e);return Mu(t,1)}))}}lv.className="GlobalMaxPooling1D",eo(lv);class uv extends Py{constructor(e){super(e),this.dataFormat=null==e.dataFormat?"channelsLast":e.dataFormat,Cg(this.dataFormat),this.inputSpec=[new Oy({ndim:4})]}computeOutputShape(e){return"channelsLast"===this.dataFormat?[e[0],e[3]]:[e[0],e[1]]}call(e,t){throw new Xm}getConfig(){const e={dataFormat:this.dataFormat},t=super.getConfig();return Object.assign(e,t),e}}class cv extends uv{call(e,t){return _a((()=>{const t=$y(e);return"channelsLast"===this.dataFormat?Ic(t,[1,2]):Ic(t,[2,3])}))}}cv.className="GlobalAveragePooling2D",eo(cv);class hv extends uv{call(e,t){return _a((()=>{const t=$y(e);return"channelsLast"===this.dataFormat?Mu(t,[1,2]):Mu(t,[2,3])}))}}hv.className="GlobalMaxPooling2D",eo(hv);class dv extends Py{constructor(e){super(e),this.layer=e.layer}build(e){this.built=!0}get trainable(){return null!=this.layer&&this.layer.trainable}set trainable(e){null!=this.layer&&(this.layer.trainable=e)}get trainableWeights(){return this.layer.trainableWeights}get nonTrainableWeights(){return this.layer.nonTrainableWeights}get updates(){return this.layer._updates}get losses(){return this.layer.losses}getWeights(){return this.layer.getWeights()}setWeights(e){this.layer.setWeights(e)}getConfig(){const e={layer:{className:this.layer.getClassName(),config:this.layer.getConfig()}},t=super.getConfig();return Object.assign(e,t),e}setFastWeightInitDuringBuild(e){super.setFastWeightInitDuringBuild(e),null!=this.layer&&this.layer.setFastWeightInitDuringBuild(e)}static fromConfig(e,t,n={}){const s=yb(t.layer,n);delete t.layer;const r={layer:s};return Object.assign(r,t),new e(r)}}class pv extends dv{constructor(e){super(e),this.supportsMasking=!0}build(e){if((e=Ey(e)).length<3)throw new Km(`TimeDistributed layer expects an input shape >= 3D, but received input shape ${JSON.stringify(e)}`);this.inputSpec=[{shape:e}];const t=[e[0]].concat(e.slice(2));this.layer.built||(this.layer.build(t),this.layer.built=!0),super.build(e)}computeOutputShape(e){const t=[(e=Ey(e))[0]].concat(e.slice(2)),n=this.layer.computeOutputShape(t),s=e[1];return[n[0],s].concat(n.slice(1))}call(e,t){return _a((()=>uw(((e,n)=>[$y(this.layer.call(e,t)),[]]),e=$y(e),[],!1,null,null,!1,!0)[1]))}}pv.className="TimeDistributed",eo(pv);class fv extends dv{constructor(e){super(e);const t=e.layer.getConfig(),n={};n.className=e.layer.getClassName(),n.config=t,this.forwardLayer=yb(n),t.goBackwards=!0!==t.goBackwards;const s={};var r;if(s.className=e.layer.getClassName(),s.config=t,this.backwardLayer=yb(s),this.forwardLayer.name="forward_"+this.forwardLayer.name,this.backwardLayer.name="backward_"+this.backwardLayer.name,this.mergeMode=void 0===e.mergeMode?"concat":e.mergeMode,r=this.mergeMode,dg(Sg,"BidirectionalMergeMode",r),e.weights)throw new Xm("weights support is not implemented for Bidirectional layer yet.");this._stateful=e.layer.stateful,this.returnSequences=e.layer.returnSequences,this.returnState=e.layer.returnState,this.supportsMasking=!0,this._trainable=!0,this.inputSpec=e.layer.inputSpec,this.numConstants=null}get trainable(){return this._trainable}set trainable(e){this._trainable=e,null!=this.forwardLayer&&(this.forwardLayer.trainable=e),null!=this.backwardLayer&&(this.backwardLayer.trainable=e)}getWeights(){return this.forwardLayer.getWeights().concat(this.backwardLayer.getWeights())}setWeights(e){const t=e.length,n=Math.floor(t/2);this.forwardLayer.setWeights(e.slice(0,n)),this.backwardLayer.setWeights(e.slice(n))}computeOutputShape(e){let t,n,s,r=this.forwardLayer.computeOutputShape(e);return Array.isArray(r)&&Array.isArray(r[0])||(r=[r]),this.returnState?(s=r.slice(1),t=r[0]):t=r[0],"concat"===this.mergeMode?(t[t.length-1]*=2,n=[t]):n=null==this.mergeMode?[t,t.slice()]:[t],this.returnState?null==this.mergeMode?n.concat(s).concat(s.slice()):[t].concat(s).concat(s.slice()):tg(n)}apply(e,t){let n=null==t?null:t.initialState,s=null==t?null:t.constants;null==t&&(t={});const r=lw(e,n,s,this.numConstants);if(e=r.inputs,n=r.initialState,s=r.constants,Array.isArray(e)&&(n=e.slice(1),e=e[0]),(null==n||0===n.length)&&null==s)return super.apply(e,t);const a=[],i=[];if(null!=n){const e=n.length;if(e%2>0)throw new Km("When passing `initialState` to a Bidrectional RNN, the state should be an Array containing the states of the underlying RNNs.");t.initialState=n,a.push(...n);const s=n.map((e=>new Oy({shape:e.shape})));this.forwardLayer.stateSpec=s.slice(0,e/2),this.backwardLayer.stateSpec=s.slice(e/2),i.push(...s)}if(null!=s)throw new Xm("Support for constants in Bidirectional layers is not implemented yet.");const o=a[0]instanceof My;for(const e of a)if(e instanceof My!==o)throw new Km("The initial state of a Bidirectional layer cannot be specified as a mix of symbolic and non-symbolic tensors");if(o){const n=[e].concat(a),s=this.inputSpec.concat(i),r=this.inputSpec;this.inputSpec=s;const o=super.apply(n,t);return this.inputSpec=r,o}return super.apply(e,t)}call(e,t){return _a((()=>{const n=t.initialState;let s,r,a,i;if(null==n)s=this.forwardLayer.call(e,t),r=this.backwardLayer.call(e,t);else{const a=n.slice(0,n.length/2),i=n.slice(n.length/2);s=this.forwardLayer.call(e,Object.assign(t,{initialState:a})),r=this.backwardLayer.call(e,Object.assign(t,{initialState:i}))}return this.returnState&&(Array.isArray(s)&&(a=s.slice(1).concat(r.slice(1))),s=s[0],r=r[0]),this.returnSequences&&(r=ch(r,1)),"concat"===this.mergeMode?i=qg([s,r]):"sum"===this.mergeMode?i=Wi(s,r):"ave"===this.mergeMode?i=Gi(.5,Wi(s,r)):"mul"===this.mergeMode?i=Gi(s,r):null==this.mergeMode&&(i=[s,r]),this.returnState?null==this.mergeMode?i.concat(a):[i].concat(a):i}))}resetStates(e){this.forwardLayer.resetStates(),this.backwardLayer.resetStates()}build(e){Rg(this.forwardLayer.name,(()=>{this.forwardLayer.build(e)})),Rg(this.backwardLayer.name,(()=>{this.backwardLayer.build(e)})),this.built=!0}computeMask(e,t){let n;if(Array.isArray(t)&&(t=t[0]),n=this.returnSequences?null==this.mergeMode?[t,t]:t:null==this.mergeMode?[null,null]:null,this.returnState){const e=this.forwardLayer.states.map((e=>null));return Array.isArray(n)?n.concat(e).concat(e):[n].concat(e).concat(e)}return n}get trainableWeights(){return this.forwardLayer.trainableWeights.concat(this.backwardLayer.trainableWeights)}get nonTrainableWeights(){return this.forwardLayer.nonTrainableWeights.concat(this.backwardLayer.nonTrainableWeights)}setFastWeightInitDuringBuild(e){super.setFastWeightInitDuringBuild(e),null!=this.forwardLayer&&this.forwardLayer.setFastWeightInitDuringBuild(e),null!=this.backwardLayer&&this.backwardLayer.setFastWeightInitDuringBuild(e)}getConfig(){const e={mergeMode:this.mergeMode},t=super.getConfig();return Object.assign(e,t),e}static fromConfig(e,t){const n=yb(t.layer);if(delete t.layer,null!=t.numConstants)throw new Xm("Deserialization of a Bidirectional layer with numConstants present is not supported yet.");const s=t;return s.layer=n,new e(s)}}fv.className="Bidirectional",eo(fv);class mv extends Py{constructor(e){super(e),this.scale=e.scale,e.offset?this.offset=e.offset:this.offset=0}getConfig(){const e={scale:this.scale,offset:this.offset},t=super.getConfig();return Object.assign(e,t),e}call(e,t){return _a((()=>("float32"!==(e=$y(e)).dtype&&(e=Vg(e,"float32")),Wi(Gi(e,this.scale),this.offset))))}}mv.className="Rescaling",eo(mv);const{resizeBilinear:gv,cropAndResize:yv}=gp;class bv extends Py{constructor(e){super(e),this.height=e.height,this.width=e.width}centerCrop(e,t,n,s,r,a,i,o){return _a((()=>{let l,u=!1;const c=[t/a,n/i,(s+t)/a,(r+n)/i],h=[];3===e.rank?(u=!0,l=Oh([e])):l=e;for(let e=0;e<l.shape[0];e++)h.push(c);const d=Ca(h,[h.length,4]),p=ah(0,h.length,1,"int32"),f=yv(l,d,p,[s,r],"nearest");return Vg(u?$y(Zh(f)):f,o)}))}upsize(e,t,n,s){return _a((()=>Vg(gv(e,[t,n]),s)))}call(e,t){return _a((()=>{const t=$y(e),n=t.dtype,s=t.shape,r=s[s.length-3],a=s[s.length-2];let i=0;r!==this.height&&(i=Math.floor((r-this.height)/2));let o=0;return a!==this.width&&(o=Math.floor((a-this.width)/2),0===o&&(o=1)),i>=0&&o>=0?this.centerCrop(t,i,o,this.height,this.width,r,a,n):this.upsize(e,this.height,this.width,n)}))}getConfig(){const e={height:this.height,width:this.width},t=super.getConfig();return Object.assign(e,t),e}computeOutputShape(e){const t=(e=Ey(e)).length-3,n=e.length-2;return e[t]=this.height,e[n]=this.width,e}}bv.className="CenterCrop",eo(bv);class xv extends Py{constructor(e){super(e),this.numTokens=e.numTokens,e.outputMode?this.outputMode=e.outputMode:this.outputMode="multiHot"}getConfig(){const e={numTokens:this.numTokens,outputMode:this.outputMode},t=super.getConfig();return Object.assign(e,t),e}computeOutputShape(e){return null==(e=Ey(e))?[this.numTokens]:"oneHot"===this.outputMode&&1!==e[e.length-1]?(e.push(this.numTokens),e):(e[e.length-1]=this.numTokens,e)}call(e,t){return _a((()=>{let n;if("int32"!==(e=$y(e)).dtype&&(e=Vg(e,"int32")),void 0!==t.countWeights){if("count"!==this.outputMode)throw new Km(`countWeights is not used when outputMode !== count.\n              Received countWeights=${t.countWeights}`);n=$y(t.countWeights)}const s=Mu(e),r=Lu(e),a=Xu(this.numTokens,s).bufferSync().get(0),i=Yu(r,0).bufferSync().get(0);if(!a||!i)throw new Km(`Input values must be between 0 < values <= numTokens with numTokens=${this.numTokens}`);return function(e,t,n,s){let r=$y(e);if("int32"!==r.dtype&&(r=Vg(r,"int32")),"int"===t)return r;const a=r.shape;if(0===r.rank&&(r=Uu(r,-1)),"oneHot"===t&&1!==r.shape[r.shape.length-1]&&(r=Uu(r,-1)),r.rank>2)throw new Km(`When outputMode is not int, maximum output rank is 2 Received outputMode ${t} and input shape ${a} which would result in output rank ${r.rank}.`);const i=["multiHot","oneHot"].includes(t);let o;if(o=mu(r,void 0!==s&&"count"===t?s:[],n,i),"tfIdf"!==t)return o;if(s)return Gi(o,s);throw new Km("When outputMode is 'tfIdf', weights must be provided.")}(e,this.outputMode,this.numTokens,n)}))}}xv.className="CategoryEncoding",eo(xv);const wv=new Set(["bilinear","nearest"]);class vv extends Py{constructor(e){if(super(e),this.height=e.height,this.width=e.width,e.interpolation){if(!wv.has(e.interpolation))throw new Km(`Invalid interpolation parameter: ${e.interpolation} is not implemented`);this.interpolation=e.interpolation}else this.interpolation="bilinear";this.cropToAspectRatio=Boolean(e.cropToAspectRatio)}computeOutputShape(e){const t=(e=Ey(e))[2];return[this.height,this.width,t]}getConfig(){const e={height:this.height,width:this.width,interpolation:this.interpolation,cropToAspectRatio:this.cropToAspectRatio},t=super.getConfig();return Object.assign(e,t),e}call(e,t){return _a((()=>{const t=[this.height,this.width];if("bilinear"===this.interpolation)return gp.resizeBilinear(e,t,!this.cropToAspectRatio);if("nearest"===this.interpolation)return gp.resizeNearestNeighbor(e,t,!this.cropToAspectRatio);throw new Error(`Interpolation is ${this.interpolation} but only ${[...wv]} are supported`)}))}}vv.className="Resizing",eo(vv);class kv{constructor(e){this.seed=e}next(){if(void 0!==this.seed)return this.seed++}}kv.className="RandomSeed";class Iv extends Py{constructor(e){super(e),this.randomGenerator=new kv(e.seed)}getConfig(){const e={seed:this.randomGenerator.seed},t=super.getConfig();return Object.assign(e,t),e}}Iv.className="BaseRandomLayer";const Nv=new Set(["bilinear","nearest"]);class Sv extends Iv{constructor(e){super(e);const{factor:t,interpolation:n="bilinear"}=e;if(this.factor=t,Array.isArray(this.factor)&&2===this.factor.length)this.widthLower=this.factor[0],this.widthUpper=this.factor[1];else{if(Array.isArray(this.factor)||!(this.factor>0))throw new Km(`Invalid factor: ${this.factor}. Must be positive number or tuple of 2 numbers`);this.widthLower=-this.factor,this.widthUpper=this.factor}if(this.widthLower<-1||this.widthUpper<-1)throw new Km(`factor must have values larger than -1. Got: ${this.factor}`);if(this.widthUpper<this.widthLower)throw new Km(`factor cannot have upper bound less than lower bound.\n        Got upper bound: ${this.widthUpper}.\n        Got lower bound: ${this.widthLower}\n      `);if(n){if(!Nv.has(n))throw new Km(`Invalid interpolation parameter: ${n} is not implemented`);this.interpolation=n}}getConfig(){const e={factor:this.factor,interpolation:this.interpolation},t=super.getConfig();return Object.assign(e,t),e}computeOutputShape(e){const t=(e=Ey(e))[2];return[this.imgHeight,-1,t]}call(e,t){return _a((()=>{const t=$y(e);this.imgHeight=t.shape[t.shape.length-3];const n=t.shape[t.shape.length-2];this.widthFactor=sh([1],1+this.widthLower,1+this.widthUpper,"float32",this.randomGenerator.next());let s=this.widthFactor.dataSync()[0]*n;s=Math.round(s);const r=[this.imgHeight,s];switch(this.interpolation){case"bilinear":return gp.resizeBilinear(e,r);case"nearest":return gp.resizeNearestNeighbor(e,r);default:throw new Error(`Interpolation is ${this.interpolation}\n          but only ${[...Nv]} are supported`)}}))}}var Tv,Cv;Sv.className="RandomWidth",eo(Sv),Pe().registerFlag("KEEP_INTERMEDIATE_TENSORS",(()=>!1),(e=>{e&&console.warn("Keep intermediate tensors is ON. This will print the values of all intermediate tensors during model inference. Not all models support this mode. For details, check e2e/benchmarks/ model_config.js. This significantly impacts performance.")})),function(e){e[e.DT_INVALID=0]="DT_INVALID",e[e.DT_FLOAT=1]="DT_FLOAT",e[e.DT_DOUBLE=2]="DT_DOUBLE",e[e.DT_INT32=3]="DT_INT32",e[e.DT_UINT8=4]="DT_UINT8",e[e.DT_INT16=5]="DT_INT16",e[e.DT_INT8=6]="DT_INT8",e[e.DT_STRING=7]="DT_STRING",e[e.DT_COMPLEX64=8]="DT_COMPLEX64",e[e.DT_INT64=9]="DT_INT64",e[e.DT_BOOL=10]="DT_BOOL",e[e.DT_QINT8=11]="DT_QINT8",e[e.DT_QUINT8=12]="DT_QUINT8",e[e.DT_QINT32=13]="DT_QINT32",e[e.DT_BFLOAT16=14]="DT_BFLOAT16",e[e.DT_QINT16=15]="DT_QINT16",e[e.DT_QUINT16=16]="DT_QUINT16",e[e.DT_UINT16=17]="DT_UINT16",e[e.DT_COMPLEX128=18]="DT_COMPLEX128",e[e.DT_HALF=19]="DT_HALF",e[e.DT_RESOURCE=20]="DT_RESOURCE",e[e.DT_VARIANT=21]="DT_VARIANT",e[e.DT_UINT32=22]="DT_UINT32",e[e.DT_UINT64=23]="DT_UINT64",e[e.DT_FLOAT_REF=101]="DT_FLOAT_REF",e[e.DT_DOUBLE_REF=102]="DT_DOUBLE_REF",e[e.DT_INT32_REF=103]="DT_INT32_REF",e[e.DT_UINT8_REF=104]="DT_UINT8_REF",e[e.DT_INT16_REF=105]="DT_INT16_REF",e[e.DT_INT8_REF=106]="DT_INT8_REF",e[e.DT_STRING_REF=107]="DT_STRING_REF",e[e.DT_COMPLEX64_REF=108]="DT_COMPLEX64_REF",e[e.DT_INT64_REF=109]="DT_INT64_REF",e[e.DT_BOOL_REF=110]="DT_BOOL_REF",e[e.DT_QINT8_REF=111]="DT_QINT8_REF",e[e.DT_QUINT8_REF=112]="DT_QUINT8_REF",e[e.DT_QINT32_REF=113]="DT_QINT32_REF",e[e.DT_BFLOAT16_REF=114]="DT_BFLOAT16_REF",e[e.DT_QINT16_REF=115]="DT_QINT16_REF",e[e.DT_QUINT16_REF=116]="DT_QUINT16_REF",e[e.DT_UINT16_REF=117]="DT_UINT16_REF",e[e.DT_COMPLEX128_REF=118]="DT_COMPLEX128_REF",e[e.DT_HALF_REF=119]="DT_HALF_REF",e[e.DT_RESOURCE_REF=120]="DT_RESOURCE_REF",e[e.DT_VARIANT_REF=121]="DT_VARIANT_REF",e[e.DT_UINT32_REF=122]="DT_UINT32_REF",e[e.DT_UINT64_REF=123]="DT_UINT64_REF"}(Tv||(Tv={})),function(e){let t;!function(e){e[e.LEGACY=0]="LEGACY",e[e.V1=1]="V1",e[e.V2=2]="V2"}(t=e.CheckpointFormatVersion||(e.CheckpointFormatVersion={}))}(Cv||(Cv={}));const $v={};function Ev(e){return $v[e]}function Av(e,t,n,s,r){const a=t.inputParams[e];if(a&&void 0!==a.inputIndexStart){const e=a.inputIndexStart,i=0===a.inputIndexEnd?void 0:void 0===a.inputIndexEnd?e+1:a.inputIndexEnd,o=e<0?t.inputNames.length+e:e;if("tensor"===a.type)return Rv(t.inputNames[o],n,s,r);if("tensors"===a.type){const a=t.inputs.slice(e,i);return t.inputNames.slice(e,i).filter(((e,t)=>{var n;return"NoOp"!==(null===(n=a[t])||void 0===n?void 0:n.op)})).map((e=>Rv(e,n,s,r)))}const l=Rv(t.inputNames[o],n,s,r),u=l.dataSync();return"number"===a.type?u[0]:Ee(l.shape,u)}const i=t.attrParams[e];return i&&i.value}function Rv(e,t,n,s){const[r,a]=Ov(e,n);if(null!=s){const e=s.getHashTableHandleByName(r);if(null!=e)return e}const i=n.currentContextIds.find((e=>!!t[Dv(r,e)]));return void 0!==i?t[Dv(r,i)][a]:void 0}function _v(e,t,n){return t[Dv(e,n.currentContextId)]}function Fv(e,t){const[n,s,r]=Ov(e,t);return[Dv(n,t&&t.currentContextId),s,r]}function Dv(e,t){return t?`${e}-${t}`:e}function Ov(e,t){if(""===e)return["",0,void 0];const n=null!=t&&null!=t.parseNodeNameCache;if(n){const n=t.parseNodeNameCache.get(e);if(null!=n)return n}const s=e.split(":");let r;if(1===s.length)r=[e,0,void 0];else{const e=s[0],t=3===s.length?s[1]:void 0;r=[e,Number(s[s.length-1]),t]}return n&&t.parseNodeNameCache.set(e,r),r}function Mv(e,t,n){let s=Av("pad",e,t,n);if("explicit"===s){s=Av("explicitPaddings",e,t,n);const r=[[0,0],[0,0],[0,0],[0,0]];for(let e=0;e<4;e++)r[e][0]=s[2*e],r[e][1]=s[2*e+1];return r}return s}function Lv(e){return e.kept?e:Bi(e)}const zv=[{tfOpName:"Add",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"AddV2",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"AddN",category:"arithmetic",inputs:[{start:0,end:0,name:"tensors",type:"tensors"}]},{tfOpName:"BiasAdd",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0}]},{tfOpName:"Sub",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"RealDiv",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Div",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"DivNoNan",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"FloorDiv",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Mul",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Maximum",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Minimum",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Pow",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"SquaredDifference",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Mod",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"FloorMod",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]}],Bv=[{tfOpName:"Abs",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Acos",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Asin",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Atan",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Atan2",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"y",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Ceil",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"ClipByValue",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"clipValueMin",type:"number"},{start:2,name:"clipValueMax",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Complex",category:"basic_math",inputs:[{start:0,name:"real",type:"tensor"},{start:1,name:"imag",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"ComplexAbs",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Cos",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Cosh",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Elu",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Exp",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Floor",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Log",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Imag",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"Tout",name:"outputType",type:"dtype",notSupported:!0}]},{tfOpName:"Neg",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Real",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"Tout",name:"outputType",type:"dtype",notSupported:!0}]},{tfOpName:"Prelu",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"alpha",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Relu",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Relu6",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Selu",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Sigmoid",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Sin",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Sinh",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Sqrt",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Rsqrt",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Square",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Tan",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Tanh",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Sign",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Round",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Expm1",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Log1p",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Reciprocal",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Softplus",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Asinh",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Acosh",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Atanh",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Erf",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"LeakyRelu",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"alpha",name:"alpha",type:"number",defaultValue:.2},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"IsNan",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"IsFinite",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"IsInf",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]}],Pv=[{tfOpName:"EmptyTensorList",category:"control",inputs:[{start:0,name:"elementShape",type:"shape"},{start:1,name:"maxNumElements",type:"number"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"LoopCond",category:"control",inputs:[{start:0,name:"pred",type:"tensor"}]},{tfOpName:"Switch",category:"control",inputs:[{start:0,name:"data",type:"tensor"},{start:1,name:"pred",type:"tensor"}]},{tfOpName:"Merge",category:"control",inputs:[{start:0,end:0,name:"tensors",type:"tensors"}]},{tfOpName:"Enter",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"frame_name",name:"frameName",type:"string"},{tfName:"is_constant",name:"isConstant",type:"bool"}]},{tfOpName:"Exit",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"NextIteration",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"TensorArrayV3",category:"control",inputs:[{start:0,name:"size",type:"number"}],attrs:[{tfName:"dtype",name:"dtype",type:"dtype"},{tfName:"element_shape",name:"elementShape",type:"shape"},{tfName:"dynamic_size",name:"dynamicSize",type:"bool"},{tfName:"clear_after_read",name:"clearAfterRead",type:"bool"},{tfName:"identical_element_shapes",name:"identicalElementShapes",type:"bool"},{tfName:"tensor_array_name",name:"name",type:"string"}]},{tfOpName:"TensorArrayWriteV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"index",type:"number"},{start:2,name:"tensor",type:"tensor"},{start:3,name:"flowIn",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"TensorArrayReadV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"index",type:"number"},{start:2,name:"flowIn",type:"number"}],attrs:[{tfName:"dtype",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"TensorArrayGatherV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"indices",type:"number[]"},{start:2,name:"flowIn",type:"number"}],attrs:[{tfName:"dtype",name:"dtype",type:"dtype"},{tfName:"element_shape",name:"elementShape",type:"shape"}]},{tfOpName:"TensorArrayScatterV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"indices",type:"number[]"},{start:2,name:"tensor",type:"tensor"},{start:3,name:"flowIn",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"TensorArrayConcatV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"flowIn",type:"number"}],attrs:[{tfName:"dtype",name:"dtype",type:"dtype"},{tfName:"element_shape_except0",name:"elementShapeExcept0",type:"shape",notSupported:!0}]},{tfOpName:"TensorArraySplitV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"tensor",type:"tensor"},{start:2,name:"lengths",type:"number[]"},{start:3,name:"flowIn",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"TensorArraySizeV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"flowIn",type:"number"}]},{tfOpName:"TensorArrayCloseV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"}]},{tfOpName:"StatelessIf",category:"control",inputs:[{start:0,name:"cond",type:"tensor"},{start:1,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"then_branch",name:"thenBranch",type:"func"},{tfName:"else_branch",name:"elseBranch",type:"func"}]},{tfOpName:"If",category:"control",inputs:[{start:0,name:"cond",type:"tensor"},{start:1,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"then_branch",name:"thenBranch",type:"func"},{tfName:"else_branch",name:"elseBranch",type:"func"}]},{tfOpName:"StatelessWhile",category:"control",inputs:[{start:0,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"cond",name:"cond",type:"func"},{tfName:"body",name:"body",type:"func"}]},{tfOpName:"While",category:"control",inputs:[{start:0,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"cond",name:"cond",type:"func"},{tfName:"body",name:"body",type:"func"}]},{tfOpName:"TensorListScatter",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"},{start:1,name:"indices",type:"number[]"},{start:2,name:"elementShape",type:"shape"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListScatterV2",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"},{start:1,name:"indices",type:"number[]"},{start:2,name:"elementShape",type:"shape"},{start:3,name:"numElements",type:"number"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListGather",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"},{start:1,name:"indices",type:"number[]"},{start:2,name:"elementShape",type:"shape"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListGetItem",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"},{start:1,name:"index",type:"number"},{start:2,name:"elementShape",type:"shape"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListSetItem",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"},{start:1,name:"index",type:"number"},{start:2,name:"tensor",type:"tensor"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListReserve",category:"control",inputs:[{start:0,name:"elementShape",type:"shape"},{start:1,name:"numElements",type:"number"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListFromTensor",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"},{start:1,name:"elementShape",type:"shape"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListStack",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"},{start:1,name:"elementShape",type:"shape"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"},{tfName:"num_elements",name:"numElements",type:"dtype"}]},{tfOpName:"TensorListSplit",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"},{start:1,name:"elementShape",type:"shape"},{start:2,name:"lengths",type:"number[]"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListConcat",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"}],attrs:[{tfName:"element_shape",name:"elementShape",type:"shape"},{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListConcatV2",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"}],attrs:[{tfName:"element_shape",name:"elementShape",type:"shape"},{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListPopBack",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"},{start:1,name:"elementShape",type:"shape"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListPushBack",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"},{start:1,name:"tensor",type:"tensor"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListLength",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"}]},{tfOpName:"TensorListResize",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"},{start:1,name:"size",type:"number"}]}],Wv=[{tfOpName:"AvgPool",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0},{tfName:"ksize",name:"kernelSize",type:"number[]"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"MaxPool",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0},{tfName:"ksize",name:"kernelSize",type:"number[]"},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[],notSupported:!0},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"MaxPoolWithArgmax",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"ksize",name:"kernelSize",type:"number[]"},{tfName:"include_batch_in_index",name:"includeBatchInIndex",type:"bool"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"AvgPool3D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0},{tfName:"ksize",name:"kernelSize",type:"number[]"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"MaxPool3D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0},{tfName:"ksize",name:"kernelSize",type:"number[]"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Conv1D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"}],attrs:[{tfName:"stride",name:"stride",type:"number"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NWC"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"dilation",name:"dilation",type:"number",defaultValue:1}]},{tfOpName:"Conv2D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"useCudnnOnGpu",name:"useCudnnOnGpu",type:"bool"},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NHWC"},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[]},{tfName:"dilations",name:"dilations",type:"number[]"}]},{tfOpName:"_FusedConv2D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"},{start:2,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"num_args",name:"numArgs",type:"number"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[]},{tfName:"use_cudnn_on_gpu",name:"useCudnnOnGpu",type:"bool",defaultValue:!0},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NHWC"},{tfName:"dilations",name:"dilations",type:"number[]",defaultValue:[1,1,1,1]},{tfName:"fused_ops",name:"fusedOps",type:"string[]",defaultValue:[]},{tfName:"epsilon",name:"epsilon",type:"number",defaultValue:1e-4},{tfName:"leakyrelu_alpha",name:"leakyreluAlpha",type:"number",defaultValue:.2}]},{tfOpName:"Conv2DBackpropInput",category:"convolution",inputs:[{start:2,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"},{start:0,name:"outputShape",type:"number[]"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[]},{tfName:"dilations",name:"dilations",type:"number[]",notSupported:!0}]},{tfOpName:"DepthwiseConv2d",category:"convolution",inputs:[{start:0,name:"input",type:"tensor"},{start:1,name:"filter",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NHWC"},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[]},{tfName:"dilations",name:"dilations",type:"number[]"}]},{tfOpName:"DepthwiseConv2dNative",category:"convolution",inputs:[{start:0,name:"input",type:"tensor"},{start:1,name:"filter",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NHWC"},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[]},{tfName:"dilations",name:"dilations",type:"number[]"}]},{tfOpName:"FusedDepthwiseConv2dNative",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"},{start:2,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"num_args",name:"numArgs",type:"number"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NHWC"},{tfName:"dilations",name:"dilations",type:"number[]",defaultValue:[1,1,1,1]},{tfName:"fused_ops",name:"fusedOps",type:"string[]",defaultValue:[]},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[]}]},{tfOpName:"Conv3D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NHWC"},{tfName:"dilations",name:"dilations",type:"number[]"}]},{tfOpName:"Dilation2D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"rates",name:"dilations",type:"number[]"},{tfName:"padding",name:"pad",type:"string"}]}],Vv=[{tfOpName:"Fill",category:"creation",inputs:[{start:0,name:"shape",type:"number[]"},{start:1,name:"value",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"LinSpace",category:"creation",inputs:[{start:0,name:"start",type:"number"},{start:1,name:"stop",type:"number"},{start:2,name:"num",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"OneHot",category:"creation",inputs:[{start:0,name:"indices",type:"tensor"},{start:1,name:"depth",type:"number"},{start:2,name:"onValue",type:"number",defaultValue:1},{start:3,name:"offValue",type:"number",defaultValue:0}],attrs:[{tfName:"axis",name:"axis",type:"number",notSupported:!0},{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"Ones",category:"creation",inputs:[{start:0,name:"shape",type:"number[]"}],attrs:[{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"OnesLike",category:"creation",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"dtype",name:"dtype",type:"dtype"}]},{tfOpName:"RandomStandardNormal",category:"creation",inputs:[{start:0,name:"shape",type:"number[]"}],attrs:[{tfName:"seed",name:"seed",type:"number",defaultValue:0},{tfName:"seed2",name:"seed2",type:"number",defaultValue:0,notSupported:!0},{tfName:"dtype",name:"dtype",type:"dtype"},{tfName:"T",name:"T",type:"number",notSupported:!0}]},{tfOpName:"RandomUniform",category:"creation",inputs:[{start:0,name:"shape",type:"number[]"}],attrs:[{tfName:"minval",name:"minval",type:"number",defaultValue:0},{tfName:"maxval",name:"maxval",type:"number",defaultValue:1},{tfName:"dtype",name:"dtype",type:"dtype"},{tfName:"seed",name:"seed",type:"number",defaultValue:0},{tfName:"seed2",name:"seed2",type:"number",defaultValue:0,notSupported:!0},{tfName:"T",name:"T",type:"number",notSupported:!0}]},{tfOpName:"RandomUniformInt",category:"creation",inputs:[{start:0,name:"shape",type:"number[]"}],attrs:[{tfName:"minval",name:"minval",type:"number"},{tfName:"maxval",name:"maxval",type:"number"},{tfName:"seed",name:"seed",type:"number",defaultValue:0},{tfName:"seed2",name:"seed2",type:"number",defaultValue:0,notSupported:!0}]},{tfOpName:"Range",category:"creation",inputs:[{start:0,name:"start",type:"number"},{start:1,name:"stop",type:"number"},{start:2,name:"step",type:"number",defaultValue:0}],attrs:[{tfName:"Tidx",name:"dtype",type:"dtype"}]},{tfOpName:"TruncatedNormal",category:"creation",inputs:[{start:0,name:"shape",type:"number[]"}],attrs:[{tfName:"means",name:"mean",type:"number",defaultValue:0},{tfName:"stddev",name:"stdDev",type:"number",defaultValue:1},{tfName:"seed",name:"seed",type:"number"},{tfName:"seed2",name:"seed2",type:"number",defaultValue:0,notSupported:!0},{tfName:"dtype",name:"dtype",type:"dtype"},{tfName:"T",name:"T",type:"number",notSupported:!0}]},{tfOpName:"Zeros",category:"creation",inputs:[{start:0,name:"shape",type:"number[]"}],attrs:[{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"ZerosLike",category:"creation",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"Multinomial",category:"creation",inputs:[{start:0,name:"logits",type:"tensor"},{start:1,name:"numSamples",type:"number"}],attrs:[{tfName:"seed",name:"seed",type:"number"},{tfName:"seed2",name:"seed2",type:"number"},{tfName:"T",name:"dtype",type:"dtype"},{tfName:"output_dtype",name:"output_dtype",type:"dtype"}]}],Uv=[{tfOpName:"NonMaxSuppressionV2",category:"dynamic",inputs:[{start:0,name:"boxes",type:"tensor"},{start:1,name:"scores",type:"tensor"},{start:2,name:"maxOutputSize",type:"number"},{start:3,name:"iouThreshold",type:"number"}]},{tfOpName:"NonMaxSuppressionV3",category:"dynamic",inputs:[{start:0,name:"boxes",type:"tensor"},{start:1,name:"scores",type:"tensor"},{start:2,name:"maxOutputSize",type:"number"},{start:3,name:"iouThreshold",type:"number"},{start:4,name:"scoreThreshold",type:"number"}]},{tfOpName:"NonMaxSuppressionV4",category:"dynamic",inputs:[{start:0,name:"boxes",type:"tensor"},{start:1,name:"scores",type:"tensor"},{start:2,name:"maxOutputSize",type:"number"},{start:3,name:"iouThreshold",type:"number"},{start:4,name:"scoreThreshold",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"T_threshold",name:"threshold",type:"dtype",notSupported:!0},{tfName:"pad_to_max_output_size",name:"padToMaxOutputSize",type:"bool"}]},{tfOpName:"NonMaxSuppressionV5",category:"dynamic",inputs:[{start:0,name:"boxes",type:"tensor"},{start:1,name:"scores",type:"tensor"},{start:2,name:"maxOutputSize",type:"number"},{start:3,name:"iouThreshold",type:"number"},{start:4,name:"scoreThreshold",type:"number"},{start:5,name:"softNmsSigma",type:"number"}]},{tfOpName:"Where",category:"dynamic",inputs:[{start:0,name:"condition",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"ListDiff",category:"dynamic",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"y",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]}],Gv=[{tfOpName:"LowerBound",category:"evaluation",inputs:[{start:0,name:"sortedSequence",type:"tensor"},{start:1,name:"values",type:"tensor"}]},{tfOpName:"TopKV2",category:"evaluation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"k",type:"number"}],attrs:[{tfName:"sorted",name:"sorted",type:"bool"}]},{tfOpName:"UpperBound",category:"evaluation",inputs:[{start:0,name:"sortedSequence",type:"tensor"},{start:1,name:"values",type:"tensor"}]},{tfOpName:"Unique",category:"evaluation",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"UniqueV2",category:"evaluation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number"}]}],jv=[{tfOpName:"PlaceholderWithDefault",category:"graph",inputs:[{start:0,name:"default",type:"tensor"}],attrs:[{tfName:"shape",name:"shape",type:"shape"},{tfName:"dtype",name:"dtype",type:"dtype"}]},{tfOpName:"Placeholder",category:"graph",attrs:[{tfName:"shape",name:"shape",type:"shape"},{tfName:"dtype",name:"dtype",type:"dtype"}]},{tfOpName:"Const",category:"graph"},{tfOpName:"Identity",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"IdentityN",category:"graph",inputs:[{start:0,end:0,name:"x",type:"tensors"}]},{tfOpName:"Snapshot",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"Rank",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"Size",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"Shape",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"ShapeN",category:"graph",inputs:[{start:0,end:0,name:"x",type:"tensors"}]},{tfOpName:"Print",category:"graph",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"data",type:"tensors"}],attrs:[{tfName:"message",name:"message",type:"string"},{tfName:"first_n",name:"firstN",type:"number",notSupported:!0},{tfName:"summarize",name:"summarize",type:"number",defaultValue:3}]},{tfOpName:"NoOp",category:"graph",inputs:[]},{tfOpName:"StopGradient",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"FakeQuantWithMinMaxVars",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"min",name:"min",type:"number"},{tfName:"max",name:"max",type:"number"}]}],Hv=[{tfOpName:"HashTable",category:"hash_table",inputs:[],attrs:[{tfName:"shared_name",name:"sharedName",type:"string"},{tfName:"use_node_name_sharing",name:"useNodeNameSharing",type:"bool"},{tfName:"key_dtype",name:"keyDType",type:"dtype"},{tfName:"value_dtype",name:"valueDType",type:"dtype"}]},{tfOpName:"HashTableV2",category:"hash_table",inputs:[],attrs:[{tfName:"shared_name",name:"sharedName",type:"string"},{tfName:"use_node_name_sharing",name:"useNodeNameSharing",type:"bool"},{tfName:"key_dtype",name:"keyDType",type:"dtype"},{tfName:"value_dtype",name:"valueDType",type:"dtype"}]},{tfOpName:"LookupTableImport",category:"hash_table",inputs:[{start:0,name:"tableHandle",type:"tensor"},{start:1,name:"keys",type:"tensor"},{start:2,name:"values",type:"tensor"}],attrs:[{tfName:"Tin",name:"tIn",type:"dtype",notSupported:!0},{tfName:"Tout",name:"tOut",type:"dtype",notSupported:!0}]},{tfOpName:"LookupTableImportV2",category:"hash_table",inputs:[{start:0,name:"tableHandle",type:"tensor"},{start:1,name:"keys",type:"tensor"},{start:2,name:"values",type:"tensor"}],attrs:[{tfName:"Tin",name:"tIn",type:"dtype",notSupported:!0},{tfName:"Tout",name:"tOut",type:"dtype",notSupported:!0}]},{tfOpName:"LookupTableFind",category:"hash_table",inputs:[{start:0,name:"tableHandle",type:"tensor"},{start:1,name:"keys",type:"tensor"},{start:2,name:"defaultValue",type:"tensor"}],attrs:[{tfName:"Tin",name:"tIn",type:"dtype",notSupported:!0},{tfName:"Tout",name:"tOut",type:"dtype",notSupported:!0}]},{tfOpName:"LookupTableFindV2",category:"hash_table",inputs:[{start:0,name:"tableHandle",type:"tensor"},{start:1,name:"keys",type:"tensor"},{start:2,name:"defaultValue",type:"tensor"}],attrs:[{tfName:"Tin",name:"tIn",type:"dtype",notSupported:!0},{tfName:"Tout",name:"tOut",type:"dtype",notSupported:!0}]},{tfOpName:"LookupTableSize",category:"hash_table",inputs:[{start:0,name:"tableHandle",type:"tensor"}]},{tfOpName:"LookupTableSizeV2",category:"hash_table",inputs:[{start:0,name:"tableHandle",type:"tensor"}]},{tfOpName:"InitializeTable",category:"hash_table",inputs:[{start:0,name:"tableHandle",type:"tensor"},{start:1,name:"keys",type:"tensor"},{start:2,name:"values",type:"tensor"}]},{tfOpName:"InitializeTableV2",category:"hash_table",inputs:[{start:0,name:"tableHandle",type:"tensor"},{start:1,name:"keys",type:"tensor"},{start:2,name:"values",type:"tensor"}]}],qv=[{tfOpName:"ResizeBilinear",category:"image",inputs:[{start:0,name:"images",type:"tensor"},{start:1,name:"size",type:"number[]"}],attrs:[{tfName:"align_corners",name:"alignCorners",type:"bool"},{tfName:"half_pixel_centers",name:"halfPixelCenters",type:"bool"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"ResizeNearestNeighbor",category:"image",inputs:[{start:0,name:"images",type:"tensor"},{start:1,name:"size",type:"number[]"}],attrs:[{tfName:"align_corners",name:"alignCorners",type:"bool"},{tfName:"half_pixel_centers",name:"halfPixelCenters",type:"bool"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"CropAndResize",category:"image",inputs:[{start:0,name:"image",type:"tensor"},{start:1,name:"boxes",type:"tensor"},{start:2,name:"boxInd",type:"tensor"},{start:3,name:"cropSize",type:"number[]"}],attrs:[{tfName:"method",name:"method",type:"string"},{tfName:"extrapolation_value",name:"extrapolationValue",type:"number"}]},{tfOpName:"ImageProjectiveTransformV3",category:"image",inputs:[{start:0,name:"images",type:"tensor"},{start:1,name:"transforms",type:"tensor"},{start:2,name:"outputShape",type:"number[]"},{start:3,name:"fillValue",type:"number"}],attrs:[{tfName:"interpolation",name:"interpolation",type:"string"},{tfName:"fill_mode",name:"fillMode",type:"string"}]}],Kv=[{tfOpName:"Equal",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"NotEqual",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Greater",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"GreaterEqual",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Less",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"LessEqual",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"LogicalAnd",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"LogicalNot",category:"logical",inputs:[{start:0,name:"a",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"LogicalOr",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Select",category:"logical",inputs:[{start:0,name:"condition",type:"tensor"},{start:1,name:"a",type:"tensor"},{start:2,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"SelectV2",category:"logical",inputs:[{start:0,name:"condition",type:"tensor"},{start:1,name:"a",type:"tensor"},{start:2,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"BitwiseAnd",category:"logical",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"y",type:"tensor"}]}],Xv=[{tfOpName:"_FusedMatMul",category:"matrices",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"},{start:2,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"num_args",name:"numArgs",type:"number"},{tfName:"fused_ops",name:"fusedOps",type:"string[]",defaultValue:[]},{tfName:"epsilon",name:"epsilon",type:"number",defaultValue:1e-4},{tfName:"transpose_a",name:"transposeA",type:"bool",defaultValue:!1},{tfName:"transpose_b",name:"transposeB",type:"bool",defaultValue:!1},{tfName:"leakyrelu_alpha",name:"leakyreluAlpha",type:"number",defaultValue:.2},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"MatMul",category:"matrices",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"transpose_a",name:"transposeA",type:"bool",defaultValue:!1},{tfName:"transpose_b",name:"transposeB",type:"bool",defaultValue:!1},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"BatchMatMul",category:"matrices",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"adj_x",name:"transposeA",type:"bool",defaultValue:!1},{tfName:"adj_y",name:"transposeB",type:"bool",defaultValue:!1},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"BatchMatMulV2",category:"matrices",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"adj_x",name:"transposeA",type:"bool",defaultValue:!1},{tfName:"adj_y",name:"transposeB",type:"bool",defaultValue:!1},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Transpose",category:"matrices",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"perm",type:"number[]"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Einsum",category:"matrices",inputs:[{start:0,end:0,name:"tensors",type:"tensors"}],attrs:[{tfName:"equation",name:"equation",type:"string"},{tfName:"N",name:"n",type:"number",defaultValue:2},{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"MatrixBandPart",category:"matrices",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"numLower",type:"tensor"},{start:1,name:"numUpper",type:"tensor"}]}],Yv=[{tfOpName:"EuclideanNorm",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool",defaultValue:!1}]},{tfOpName:"FusedBatchNorm",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"scale",type:"tensor"},{start:2,name:"offset",type:"tensor"},{start:3,name:"mean",type:"tensor"},{start:4,name:"variance",type:"tensor"}],attrs:[{tfName:"epsilon",name:"epsilon",type:"number",defaultValue:.001},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0}]},{tfOpName:"FusedBatchNormV2",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"scale",type:"tensor"},{start:2,name:"offset",type:"tensor"},{start:3,name:"mean",type:"tensor"},{start:4,name:"variance",type:"tensor"}],attrs:[{tfName:"epsilon",name:"epsilon",type:"number",defaultValue:.001},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0}]},{tfOpName:"FusedBatchNormV3",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"scale",type:"tensor"},{start:2,name:"offset",type:"tensor"},{start:3,name:"mean",type:"tensor"},{start:4,name:"variance",type:"tensor"}],attrs:[{tfName:"epsilon",name:"epsilon",type:"number",defaultValue:.001},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0}]},{tfOpName:"LRN",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"depth_radius",name:"radius",type:"number",defaultValue:5},{tfName:"bias",name:"bias",type:"number",defaultValue:1},{tfName:"alpha",name:"alpha",type:"number",defaultValue:1},{tfName:"beta",name:"beta",type:"number",defaultValue:.5}]},{tfOpName:"Softmax",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"LogSoftmax",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"}]}],Jv=[{tfOpName:"Bincount",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"size",type:"number"},{start:2,name:"weights",type:"tensor"}]},{tfOpName:"DenseBincount",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"size",type:"number"},{start:2,name:"weights",type:"tensor"}],attrs:[{tfName:"binary_output",name:"binaryOutput",type:"bool"}]},{tfOpName:"Max",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"Mean",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"Min",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"Sum",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"All",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"Any",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"ArgMax",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number"}]},{tfOpName:"ArgMin",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number"}]},{tfOpName:"Prod",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Cumprod",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number"}],attrs:[{tfName:"exclusive",name:"exclusive",type:"bool"},{tfName:"reverse",name:"reverse",type:"bool"}]},{tfOpName:"Cumsum",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number"}],attrs:[{tfName:"exclusive",name:"exclusive",type:"bool"},{tfName:"reverse",name:"reverse",type:"bool"}]}],Zv=[{tfOpName:"ConcatV2",category:"slice_join",inputs:[{start:0,end:-1,name:"tensors",type:"tensors"},{start:-1,name:"axis",type:"number"}],attrs:[{tfName:"N",name:"n",type:"number",defaultValue:2}]},{tfOpName:"Concat",category:"slice_join",inputs:[{start:1,end:0,name:"tensors",type:"tensors"},{start:0,name:"axis",type:"number"}],attrs:[{tfName:"N",name:"n",type:"number",defaultValue:2}]},{tfOpName:"GatherV2",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"indices",type:"tensor"},{start:2,name:"axis",type:"number",defaultValue:0}],attrs:[{tfName:"batch_dims",name:"batchDims",type:"number",defaultValue:0}]},{tfOpName:"Gather",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"indices",type:"tensor"}],attrs:[{tfName:"validate_indices",name:"validateIndices",type:"bool",notSupported:!0}]},{tfOpName:"Reverse",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"dims",type:"bool[]"}]},{tfOpName:"ReverseV2",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}]},{tfOpName:"Slice",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"begin",type:"number[]"},{start:2,name:"size",type:"number[]"}]},{tfOpName:"StridedSlice",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"begin",type:"number[]"},{start:2,name:"end",type:"number[]"},{start:3,name:"strides",type:"number[]"}],attrs:[{tfName:"begin_mask",name:"beginMask",type:"number",defaultValue:0},{tfName:"end_mask",name:"endMask",type:"number",defaultValue:0},{tfName:"new_axis_mask",name:"newAxisMask",type:"number",defaultValue:0},{tfName:"ellipsis_mask",name:"ellipsisMask",type:"number",defaultValue:0},{tfName:"shrink_axis_mask",name:"shrinkAxisMask",type:"number",defaultValue:0}]},{tfOpName:"Pack",category:"slice_join",inputs:[{start:0,end:0,name:"tensors",type:"tensors"}],attrs:[{tfName:"axis",name:"axis",type:"number",defaultValue:0}]},{tfOpName:"Unpack",category:"slice_join",inputs:[{start:0,name:"tensor",type:"tensor"}],attrs:[{tfName:"axis",name:"axis",type:"number",defaultValue:0},{tfName:"num",name:"num",type:"number",defaultValue:0,notSupported:!0}]},{tfOpName:"Tile",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"reps",type:"number[]"}]},{tfOpName:"Split",category:"slice_join",inputs:[{start:0,name:"axis",type:"number",defaultValue:0},{start:1,name:"x",type:"tensor"}],attrs:[{tfName:"num_split",name:"numOrSizeSplits",type:"number",defaultValue:1}]},{tfOpName:"SplitV",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"numOrSizeSplits",type:"number[]"},{start:2,name:"axis",type:"number",defaultValue:0}]},{tfOpName:"ScatterNd",category:"slice_join",inputs:[{start:0,name:"indices",type:"tensor"},{start:1,name:"values",type:"tensor"},{start:2,name:"shape",type:"number[]"}]},{tfOpName:"GatherNd",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"indices",type:"tensor"}]},{tfOpName:"SparseToDense",category:"slice_join",inputs:[{start:0,name:"sparseIndices",type:"tensor"},{start:1,name:"outputShape",type:"number[]"},{start:2,name:"sparseValues",type:"tensor"},{start:3,name:"defaultValue",type:"tensor"}],attrs:[{tfName:"validate_indices",name:"validateIndices",type:"bool",defaultValue:!1,notSupported:!0}]},{tfOpName:"TensorScatterUpdate",category:"slice_join",inputs:[{start:0,name:"tensor",type:"tensor"},{start:1,name:"indices",type:"tensor"},{start:2,name:"values",type:"tensor"}]}],Qv=[{tfOpName:"SparseFillEmptyRows",category:"sparse",inputs:[{start:0,name:"indices",type:"tensor"},{start:1,name:"values",type:"tensor"},{start:2,name:"denseShape",type:"tensor"},{start:3,name:"defaultValue",type:"tensor"}]},{tfOpName:"SparseReshape",category:"sparse",inputs:[{start:0,name:"inputIndices",type:"tensor"},{start:1,name:"inputShape",type:"tensor"},{start:2,name:"newShape",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"SparseSegmentMean",category:"sparse",inputs:[{start:0,name:"data",type:"tensor"},{start:1,name:"indices",type:"tensor"},{start:2,name:"segmentIds",type:"tensor"}]},{tfOpName:"SparseSegmentSum",category:"sparse",inputs:[{start:0,name:"data",type:"tensor"},{start:1,name:"indices",type:"tensor"},{start:2,name:"segmentIds",type:"tensor"}]}],ek=[{tfOpName:"FFT",category:"spectral",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"IFFT",category:"spectral",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"RFFT",category:"spectral",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"fft_length",type:"number",notSupported:!0}]},{tfOpName:"IRFFT",category:"spectral",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"fft_length",type:"number",notSupported:!0}]}],tk=[{tfOpName:"StaticRegexReplace",category:"string",inputs:[{start:0,name:"input",type:"tensor"}],attrs:[{tfName:"pattern",name:"pattern",type:"string"},{tfName:"rewrite",name:"rewrite",type:"string"},{tfName:"replace_global",name:"replaceGlobal",type:"bool"}]},{tfOpName:"StringNGrams",category:"string",inputs:[{start:0,name:"data",type:"tensor"},{start:1,name:"dataSplits",type:"tensor"}],attrs:[{tfName:"separator",name:"separator",type:"string"},{tfName:"ngram_widths",name:"nGramWidths",type:"number[]"},{tfName:"left_pad",name:"leftPad",type:"string"},{tfName:"right_pad",name:"rightPad",type:"string"},{tfName:"pad_width",name:"padWidth",type:"number"},{tfName:"preserve_short_sequences",name:"preserveShortSequences",type:"bool"}],outputs:["ngrams","ngrams_splits"]},{tfOpName:"StringSplit",category:"string",inputs:[{start:0,name:"input",type:"tensor"},{start:1,name:"delimiter",type:"tensor"}],attrs:[{tfName:"skip_empty",name:"skipEmpty",type:"bool"}],outputs:["indices","values","shape"]},{tfOpName:"StringToHashBucketFast",category:"string",inputs:[{start:0,name:"input",type:"tensor"}],attrs:[{tfName:"num_buckets",name:"numBuckets",type:"number"}]}],nk=[{tfOpName:"Cast",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"SrcT",name:"sdtype",type:"dtype",notSupported:!0},{tfName:"DstT",name:"dtype",type:"dtype"}]},{tfOpName:"ExpandDims",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number"}]},{tfOpName:"MirrorPad",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"padding",type:"number[]"}],attrs:[{tfName:"mode",name:"mode",type:"string"}]},{tfOpName:"Pad",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"padding",type:"number[]"}],attrs:[{tfName:"constant_value",name:"constantValue",type:"number",defaultValue:0}]},{tfOpName:"PadV2",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"padding",type:"number[]"},{start:2,name:"constantValue",type:"number",defaultValue:0}]},{tfOpName:"Reshape",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"shape",type:"number[]"}]},{tfOpName:"EnsureShape",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"shape",type:"number[]"}]},{tfOpName:"Squeeze",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"axis",tfDeprecatedName:"squeeze_dims",name:"axis",type:"number[]"}]},{tfOpName:"SpaceToBatchND",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"blockShape",type:"number[]"},{start:2,name:"paddings",type:"number[]"}]},{tfOpName:"BatchToSpaceND",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"blockShape",type:"number[]"},{start:2,name:"crops",type:"number[]"}]},{tfOpName:"DepthToSpace",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"block_size",name:"blockSize",type:"number"},{tfName:"data_format",name:"dataFormat",type:"string"}]},{tfOpName:"BroadcastTo",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"shape",type:"number[]"}],attrs:[]},{tfOpName:"BroadcastArgs",category:"transformation",inputs:[{start:0,name:"s0",type:"tensor"},{start:1,name:"s1",type:"tensor"}],attrs:[]}];class sk{static get Instance(){return this._instance||(this._instance=new this)}constructor(){const e=[].concat(...[i,o,l,u,c,h,d,p,f,m,g,y,b,x,w,v,k,I,N].map((e=>e.json)));this.opMappers=e.reduce(((e,t)=>(e[t.tfOpName]=t,e)),{})}transformGraph(e,t={}){const n=e.node,s=[],r=[],a=[],i=n.reduce(((e,t)=>(e[t.name]=this.mapNode(t),t.op.startsWith("Placeholder")?s.push(e[t.name]):"Const"===t.op?r.push(e[t.name]):null!=t.input&&0!==t.input.length||a.push(e[t.name]),e)),{});let o=[];const l=[];let u={},c={};null!=t&&(u=this.mapSignatureEntries(t.inputs),c=this.mapSignatureEntries(t.outputs));const h=Object.keys(i);h.forEach((e=>{const t=i[e];t.inputNames.forEach(((e,n)=>{const[s,,r]=Fv(e),a=i[s];if(null!=a.outputs){const e=a.outputs.indexOf(r);if(-1!==e){const r=`${s}:${e}`;t.inputNames[n]=r}}t.inputs.push(a),a.children.push(t)}))})),0===Object.keys(c).length?h.forEach((e=>{const t=i[e];0===t.children.length&&l.push(t)})):Object.keys(c).forEach((e=>{const[t]=Fv(e),n=i[t];null!=n&&(n.signatureKey=c[e],l.push(n))})),Object.keys(u).length>0?Object.keys(u).forEach((e=>{const[t]=Fv(e),n=i[t];n&&(n.signatureKey=u[e],o.push(n))})):o=s;let d={};null!=e.library&&null!=e.library.function&&(d=e.library.function.reduce(((e,t)=>(e[t.signature.name]=this.mapFunction(t),e)),{}));const p={nodes:i,inputs:o,outputs:l,weights:r,placeholders:s,signature:t,functions:d};return a.length>0&&(p.initNodes=a),p}mapSignatureEntries(e){return Object.keys(e||{}).reduce(((t,n)=>(t[e[n].name]=n,t)),{})}mapNode(e){const t=Ev(e.op)||this.opMappers[e.op]||{};null==e.attr&&(e.attr={});const n={name:e.name,op:e.op,category:t.category,inputNames:(e.input||[]).map((e=>e.startsWith("^")?e.slice(1):e)),inputs:[],children:[],inputParams:{},attrParams:{},rawAttrs:e.attr,outputs:t.outputs};return null!=t.inputs&&(n.inputParams=t.inputs.reduce(((e,t)=>(e[t.name]={type:t.type,inputIndexStart:t.start,inputIndexEnd:t.end},e)),{})),null!=t.attrs&&(n.attrParams=t.attrs.reduce(((t,n)=>{const s=n.type;let r;switch(n.type){case"string":r=ak(e.attr,n.tfName,n.defaultValue),void 0===r&&n.tfDeprecatedName&&(r=ak(e.attr,n.tfDeprecatedName,n.defaultValue));break;case"string[]":r=mk(e.attr,n.tfName,n.defaultValue),void 0===r&&n.tfDeprecatedName&&(r=mk(e.attr,n.tfDeprecatedName,n.defaultValue));break;case"number":r=ok(e.attr,n.tfName,n.defaultValue||0),void 0===r&&n.tfDeprecatedName&&(r=ok(e.attr,n.tfDeprecatedName,n.defaultValue));break;case"number[]":r=fk(e.attr,n.tfName,n.defaultValue),void 0===r&&n.tfDeprecatedName&&(r=fk(e.attr,n.tfDeprecatedName,n.defaultValue));break;case"bool":r=ik(e.attr,n.tfName,n.defaultValue),void 0===r&&n.tfDeprecatedName&&(r=ik(e.attr,n.tfDeprecatedName,n.defaultValue));break;case"bool[]":r=yk(e.attr,n.tfName,n.defaultValue),void 0===r&&n.tfDeprecatedName&&(r=yk(e.attr,n.tfDeprecatedName,n.defaultValue));break;case"shape":r=pk(e.attr,n.tfName,n.defaultValue),void 0===r&&n.tfDeprecatedName&&(r=pk(e.attr,n.tfDeprecatedName,n.defaultValue));break;case"shape[]":r=gk(e.attr,n.tfName,n.defaultValue),void 0===r&&n.tfDeprecatedName&&(r=gk(e.attr,n.tfDeprecatedName,n.defaultValue));break;case"dtype":r=ck(e.attr,n.tfName,n.defaultValue),void 0===r&&n.tfDeprecatedName&&(r=ck(e.attr,n.tfDeprecatedName,n.defaultValue));break;case"dtype[]":r=hk(e.attr,n.tfName,n.defaultValue),void 0===r&&n.tfDeprecatedName&&(r=hk(e.attr,n.tfDeprecatedName,n.defaultValue));break;case"func":r=uk(e.attr,n.tfName,n.defaultValue),void 0===r&&n.tfDeprecatedName&&(r=uk(e.attr,n.tfDeprecatedName,n.defaultValue));break;case"tensor":case"tensors":break;default:throw new Error(`Unsupported param type: ${n.type} for op: ${e.op}`)}return t[n.name]={value:r,type:s},t}),{})),n}mapFunction(e){const t=e.nodeDef,n=[];let s={};null!=t&&(s=t.reduce(((e,t)=>(e[t.name]=this.mapNode(t),"Const"===t.op&&n.push(e[t.name]),e)),{}));const r=[],a=[];e.signature.inputArg.forEach((e=>{const[t]=Fv(e.name),n={name:t,op:"Placeholder",inputs:[],inputNames:[],category:"graph",inputParams:{},attrParams:{dtype:{value:lk(e.type),type:"dtype"}},children:[]};n.signatureKey=e.name,r.push(n),s[t]=n})),Object.keys(s).forEach((e=>{const t=s[e];t.inputNames.forEach(((e,n)=>{const[r,,a]=Fv(e),i=s[r];if(null!=i.outputs){const e=i.outputs.indexOf(a);if(-1!==e){const s=`${r}:${e}`;t.inputNames[n]=s}}t.inputs.push(i),i.children.push(t)}))}));const i=e.ret;e.signature.outputArg.forEach((e=>{const[t,n]=Fv(i[e.name]),r=s[t];null!=r&&(r.defaultOutput=n,a.push(r))}));const o=this.mapArgsToSignature(e);return{nodes:s,inputs:r,outputs:a,weights:n,placeholders:[],signature:o}}mapArgsToSignature(e){return{methodName:e.signature.name,inputs:e.signature.inputArg.reduce(((e,t)=>(e[t.name]=this.mapArgToTensorInfo(t),e)),{}),outputs:e.signature.outputArg.reduce(((t,n)=>(t[n.name]=this.mapArgToTensorInfo(n,e.ret),t)),{})}}mapArgToTensorInfo(e,t){let n=e.name;return null!=t&&(n=t[n]),{name:n,dtype:e.type}}}function rk(e,t){const n=Array.isArray(e)?String.fromCharCode.apply(null,e):function(e){const t=Pe().global;if(void 0!==t.atob)return t.atob(e);if("undefined"!=typeof Buffer)return new Buffer(e,"base64").toString();throw new Error("Unable to decode base64 in this environment. Missing built-in atob() or Buffer()")}(e);return t?n:n.toLowerCase()}function ak(e,t,n,s=!1){const r=e[t];return null!=r?rk(r.s,s):n}function ik(e,t,n){const s=e[t];return s?s.b:n}function ok(e,t,n){const s=e[t]||{},r=null!=s.i?s.i:null!=s.f?s.f:n;return"number"==typeof r?r:parseInt(r,10)}function lk(e){switch("string"==typeof e&&(e=Tv[e]),e){case Tv.DT_FLOAT:case Tv.DT_HALF:return"float32";case Tv.DT_INT32:case Tv.DT_INT64:case Tv.DT_INT8:case Tv.DT_UINT8:return"int32";case Tv.DT_BOOL:return"bool";case Tv.DT_DOUBLE:return"float32";case Tv.DT_STRING:return"string";case Tv.DT_COMPLEX64:case Tv.DT_COMPLEX128:return"complex64";default:return null}}function uk(e,t,n){const s=e[t];return s&&s.func?s.func.name:n}function ck(e,t,n){const s=e[t];return s&&s.type?lk(s.type):n}function hk(e,t,n){const s=e[t];return s&&s.list&&s.list.type?s.list.type.map((e=>lk(e))):n}function dk(e){if(!e.unknownRank)return null!=e.dim?e.dim.map((e=>"number"==typeof e.size?e.size:parseInt(e.size,10))):[]}function pk(e,t,n){const s=e[t];return s&&s.shape?dk(s.shape):n}function fk(e,t,n){const s=e[t];return s?((s.list.f&&s.list.f.length?s.list.f:s.list.i)||[]).map((e=>"number"==typeof e?e:parseInt(e,10))):n}function mk(e,t,n,s=!1){const r=e[t];return r&&r.list&&r.list.s?r.list.s.map((e=>rk(e,s))):n}function gk(e,t,n){const s=e[t];return s&&s.list&&s.list.shape?s.list.shape.map((e=>dk(e))):n}function yk(e,t,n){const s=e[t];return s&&s.list&&s.list.b?s.list.b:n}class bk{constructor(e,t,n){this.node=e,this.tensorMap=t,this.context=n,this.inputs=[],this.attrs={},this.inputs=e.inputNames.map((e=>this.getInput(e))),null!=e.rawAttrs&&(this.attrs=Object.keys(e.rawAttrs).reduce(((e,t)=>(e[t]=this.getAttr(t),e)),{}))}getInput(e){return Rv(e,this.tensorMap,this.context)}getAttr(e,t){const n=this.node.rawAttrs[e];if(null!=n.tensor)return Rv(e,this.tensorMap,this.context);if(null!=n.i||null!=n.f)return ok(this.node.rawAttrs,e,t);if(null!=n.s)return ak(this.node.rawAttrs,e,t);if(null!=n.b)return ik(this.node.rawAttrs,e,t);if(null!=n.shape)return pk(this.node.rawAttrs,e,t);if(null!=n.type)return ck(this.node.rawAttrs,e,t);if(null!=n.list){if(null!=n.list.i||null!=n.list.f)return fk(this.node.rawAttrs,e,t);if(null!=n.list.s)return mk(this.node.rawAttrs,e,t);if(null!=n.list.shape)return gk(this.node.rawAttrs,e,t);if(null!=n.list.b)return yk(this.node.rawAttrs,e,t);if(null!=n.list.type)return hk(this.node.rawAttrs,e,t)}return t}}function xk(e,t,n=""){if("number"!=typeof e&&"number"!=typeof t){ie(e.length===t.length,(()=>n+` Shapes ${e} and ${t} must match`));for(let s=0;s<e.length;s++){const r=e[s],a=t[s];ie(r<0||a<0||r===a,(()=>n+` Shapes ${e} and ${t} must match`))}}}function wk(e){return"number"!=typeof e&&!e.some((e=>e<0))}function vk(e,t,n){let s=kk(e,n);const r=!wk(s);if(r&&0===t.length)throw new Error(`Tried to calculate elements of an empty list with non-fully-defined elementShape: ${s}`);if(r&&t.forEach((e=>{s=kk(e.shape,s)})),!wk(s))throw new Error(`Non-fully-defined elementShape: ${s}`);return s}function kk(e,t){if("number"==typeof e)return t;if("number"==typeof t)return e;if(e.length!==t.length)throw new Error(`Incompatible ranks during merge: ${e} vs. ${t}`);const n=[];for(let s=0;s<e.length;++s){const r=e[s],a=t[s];if(r>=0&&a>=0&&r!==a)throw new Error(`Incompatible shape during merge: ${e} vs. ${t}`);n[s]=r>=0?r:a}return n}class Ik{constructor(e,t,n,s,r,a,i){this.name=e,this.dtype=t,this.maxSize=n,this.elementShape=s,this.identicalElementShapes=r,this.dynamicSize=a,this.clearAfterRead=i,this.tensors=[],this.closed_=!1,this.idTensor=Xi(0),Da(this.idTensor)}get id(){return this.idTensor.id}get closed(){return this.closed_}clearAndClose(e){this.tensors.forEach((t=>{null!=e&&e.has(t.tensor.id)||t.tensor.dispose()})),this.tensors=[],this.closed_=!0,this.idTensor.dispose()}size(){return this.tensors.length}read(e){if(this.closed_)throw new Error(`TensorArray ${this.name} has already been closed.`);if(e<0||e>=this.size())throw new Error(`Tried to read from index ${e}, but array size is: ${this.size()}`);const t=this.tensors[e];if(t.cleared)throw new Error(`TensorArray ${this.name}: Could not read index ${e} twice because it was cleared after a previous read (perhaps try setting clear_after_read = false?).`);return this.clearAfterRead&&(t.cleared=!0),t.read=!0,t.tensor}readMany(e){return e.map((e=>this.read(e)))}write(e,t){if(this.closed_)throw new Error(`TensorArray ${this.name} has already been closed.`);if(e<0||!this.dynamicSize&&e>=this.maxSize)throw new Error(`Tried to write to index ${e}, but array is not resizeable and size is: ${this.maxSize}`);const n=this.tensors[e]||{};if(t.dtype!==this.dtype)throw new Error(`TensorArray ${this.name}: Could not write to TensorArray index ${e},\n          because the value dtype is ${t.dtype}, but TensorArray dtype is ${this.dtype}.`);if(0!==this.size()||null!=this.elementShape&&0!==this.elementShape.length||(this.elementShape=t.shape),xk(this.elementShape,t.shape,`TensorArray ${this.name}: Could not write to TensorArray index ${e}.`),n.read)throw new Error(`TensorArray ${this.name}: Could not write to TensorArray index ${e}, because it has already been read.`);if(n.written)throw new Error(`TensorArray ${this.name}: Could not write to TensorArray index ${e}, because it has already been written.`);n.tensor=t,Da(t),n.written=!0,this.tensors[e]=n}writeMany(e,t){if(e.length!==t.length)throw new Error(`TensorArray ${this.name}: could not write multiple tensors,because the index size: ${e.length} is not the same as tensors size: ${t.length}.`);e.forEach(((e,n)=>this.write(e,t[n])))}gather(e,t){if(t&&t!==this.dtype)throw new Error(`TensorArray dtype is ${this.dtype} but gather requested dtype ${t}`);if(e)e=e.slice(0,this.size());else{e=[];for(let t=0;t<this.size();t++)e.push(t)}if(0===e.length)return Ca([],[0].concat(this.elementShape));const n=this.readMany(e);return xk(this.elementShape,n[0].shape,"TensorArray shape mismatch: "),Oh(n,0)}concat(e){if(e&&e!==this.dtype)throw new Error(`TensorArray dtype is ${this.dtype} but concat requested dtype ${e}`);if(0===this.size())return Ca([],[0].concat(this.elementShape));const t=[];for(let e=0;e<this.size();e++)t.push(e);const n=this.readMany(t);return xk(this.elementShape,n[0].shape,`TensorArray shape mismatch: tensor array shape (${this.elementShape}) vs first tensor shape (${n[0].shape})`),Ll(n,0)}scatter(e,t){if(t.dtype!==this.dtype)throw new Error(`TensorArray dtype is ${this.dtype} but tensor has dtype ${t.dtype}`);if(e.length!==t.shape[0])throw new Error(`Expected len(indices) == tensor.shape[0], but saw: ${e.length} vs. ${t.shape[0]}`);const n=Math.max(...e);if(!this.dynamicSize&&n>=this.maxSize)throw new Error(`Max index must be < array size (${n}  vs. ${this.maxSize})`);this.writeMany(e,Zh(t,0))}split(e,t){if(t.dtype!==this.dtype)throw new Error(`TensorArray dtype is ${this.dtype} but tensor has dtype ${t.dtype}`);let n=0;const s=e.map((e=>(n+=e,n)));if(n!==t.shape[0])throw new Error(`Expected sum of lengths to be equal to\n          tensor.shape[0], but sum of lengths is\n        ${n}, and tensor's shape is: ${t.shape}`);if(!this.dynamicSize&&e.length!==this.maxSize)throw new Error(`TensorArray's size is not equal to the size of lengths (${this.maxSize} vs. ${e.length}), and the TensorArray is not marked as dynamically resizeable`);const r=0===n?0:t.size/n,a=[];_a((()=>{t=Dl(t,[1,n,r]);for(let n=0;n<e.length;++n){const i=[0,0===n?0:s[n-1],0],o=[1,e[n],r];a[n]=Dl(Pl(t,i,o),this.elementShape)}return a}));const i=[];for(let t=0;t<e.length;t++)i[t]=t;this.writeMany(i,a)}}class Nk{get id(){return this.idTensor.id}constructor(e,t,n,s=-1){this.tensors=e,this.elementShape=t,this.elementDtype=n,null!=e&&e.forEach((e=>{if(n!==e.dtype)throw new Error(`Invalid data types; op elements ${n}, but list elements ${e.dtype}`);xk(t,e.shape,"TensorList shape mismatch: "),Da(e)})),this.idTensor=Xi(0),this.maxNumElements=s,Da(this.idTensor)}copy(){return new Nk([...this.tensors],this.elementShape,this.elementDtype)}clearAndClose(e){this.tensors.forEach((t=>{null!=e&&e.has(t.id)||t.dispose()})),this.tensors.length=0,this.idTensor.dispose()}size(){return this.tensors.length}stack(e,t,n=-1){if(t!==this.elementDtype)throw new Error(`Invalid data types; op elements ${t}, but list elements ${this.elementDtype}`);if(-1!==n&&this.tensors.length!==n)throw new Error(`Operation expected a list with ${n} elements but got a list with ${this.tensors.length} elements.`);xk(e,this.elementShape,"TensorList shape mismatch: ");const s=vk(this.elementShape,this.tensors,e);return _a((()=>{const e=this.tensors.map((e=>Dl(e,s)));return Oh(e,0)}))}popBack(e,t){if(t!==this.elementDtype)throw new Error(`Invalid data types; op elements ${t}, but list elements ${this.elementDtype}`);if(0===this.size())throw new Error("Trying to pop from an empty list.");const n=vk(this.elementShape,this.tensors,e),s=this.tensors.pop();return s.kept=!1,xk(s.shape,e,"TensorList shape mismatch: "),Dl(s,n)}pushBack(e){if(e.dtype!==this.elementDtype)throw new Error(`Invalid data types; op elements ${e.dtype}, but list elements ${this.elementDtype}`);if(xk(e.shape,this.elementShape,"TensorList shape mismatch: "),this.maxNumElements===this.size())throw new Error("Trying to push element into a full list.");Da(e),this.tensors.push(e)}resize(e){if(e<0)throw new Error(`TensorListResize expects size to be non-negative. Got: ${e}`);if(-1!==this.maxNumElements&&e>this.maxNumElements)throw new Error(`TensorListResize input size ${e} is greater maxNumElement ${this.maxNumElements}.`);const t=new Nk([],this.elementShape,this.elementDtype,this.maxNumElements);t.tensors.length=e;for(let n=0;n<Math.min(this.tensors.length,e);++n)t.tensors[n]=this.tensors[n];return t}getItem(e,t,n){if(n!==this.elementDtype)throw new Error(`Invalid data types; op elements ${n}, but list elements ${this.elementDtype}`);if(e<0||e>this.tensors.length)throw new Error(`Trying to access element ${e} in a list with ${this.tensors.length} elements.`);if(null==this.tensors[e])throw new Error(`element at index ${e} is null.`);xk(this.tensors[e].shape,t,"TensorList shape mismatch: ");const s=vk(this.elementShape,this.tensors,t);return Dl(this.tensors[e],s)}setItem(e,t){if(t.dtype!==this.elementDtype)throw new Error(`Invalid data types; op elements ${t.dtype}, but list elements ${this.elementDtype}`);if(e<0||-1!==this.maxNumElements&&e>=this.maxNumElements)throw new Error(`Trying to set element ${e} in a list with max ${this.maxNumElements} elements.`);xk(this.elementShape,t.shape,"TensorList shape mismatch: "),Da(t),null!=this.tensors[e]&&(this.tensors[e].kept=!1),this.tensors[e]=t}gather(e,t,n){if(t!==this.elementDtype)throw new Error(`Invalid data types; op elements ${t}, but list elements ${this.elementDtype}`);xk(this.elementShape,n,"TensorList shape mismatch: "),e=e.slice(0,this.size());const s=vk(this.elementShape,this.tensors,n);return 0===e.length?Ca([],[0].concat(s)):_a((()=>{const t=e.map((e=>Dl(this.tensors[e],s)));return Oh(t,0)}))}concat(e,t){if(e&&e!==this.elementDtype)throw new Error(`TensorList dtype is ${this.elementDtype} but concat requested dtype ${e}`);xk(this.elementShape,t,"TensorList shape mismatch: ");const n=vk(this.elementShape,this.tensors,t);return 0===this.size()?Ca([],[0].concat(n)):_a((()=>{const e=this.tensors.map((e=>Dl(e,n)));return Ll(e,0)}))}}function Sk(e,t,n){const[s,r]=Av("fusedOps",e,t,n),a="biasadd"===s,i=!a,o="prelu"===r,l="fusedbatchnorm"===s,u=Av("numArgs",e,t,n);if(a){if(o&&2!==u)throw new Error("FusedConv2d and DepthwiseConv2d with BiasAdd and Prelu must have two extra arguments: bias and alpha.");if(!o&&a&&1!==u)throw new Error("FusedConv2d and DepthwiseConv2d with BiasAdd must have one extra argument: bias.")}if(l)throw new Error("FusedConv2d and DepthwiseConv2d with FusedBatchNorm is not supported");const c=Av("strides",e,t,n),h=Mv(e,t,n),d=Av("dataFormat",e,t,n).toUpperCase(),p=Av("dilations",e,t,n);let[f,m]=Av("args",e,t,n);return i&&(m=f,f=void 0),{stride:c,pad:h,dataFormat:d,dilations:p,biasArg:f,preluArg:m,activationFunc:r,leakyreluAlpha:Av("leakyreluAlpha",e,t,n)}}function Tk(e,t,n){return{boxes:Av("boxes",e,t,n),scores:Av("scores",e,t,n),maxOutputSize:Av("maxOutputSize",e,t,n),iouThreshold:Av("iouThreshold",e,t,n),scoreThreshold:Av("scoreThreshold",e,t,n),softNmsSigma:Av("softNmsSigma",e,t,n)}}class Ck{get id(){return this.handle.id}constructor(e,t){this.keyDType=e,this.valueDType=t,this.handle=Xi(0),this.tensorMap=new Map,Da(this.handle)}clearAndClose(){this.tensorMap.forEach((e=>e.dispose())),this.tensorMap.clear(),this.handle.dispose()}size(){return this.tensorMap.size}tensorSize(){return Xi(this.size(),"int32")}async import(e,t){this.checkKeyAndValueTensor(e,t);const n=await e.data();return this.tensorMap.forEach((e=>e.dispose())),this.tensorMap.clear(),_a((()=>{const e=Zh(t),s=n.length,r=e.length;ie(s===r,(()=>`The number of elements doesn't match, keys has ${s} elements, the values has ${r} elements.`));for(let t=0;t<s;t++){const s=n[t],r=e[t];Da(r),this.tensorMap.set(s,r)}return this.handle}))}async find(e,t){this.checkKeyAndValueTensor(e,t);const n=await e.data();return _a((()=>{const e=[];for(let s=0;s<n.length;s++){const r=n[s],a=this.findWithDefault(r,t);e.push(a)}return Oh(e)}))}findWithDefault(e,t){const n=this.tensorMap.get(e);return null!=n?n:t}checkKeyAndValueTensor(e,t){if(e.dtype!==this.keyDType)throw new Error(`Expect key dtype ${this.keyDType}, but got ${e.dtype}`);if(t.dtype!==this.valueDType)throw new Error(`Expect value dtype ${this.valueDType}, but got ${t.dtype}`)}}function $k(e,t,n,s,r=_a){const a=((e,t,n)=>{switch(e.category){case"arithmetic":return r((()=>((e,t,n,s=S)=>{switch(e.op){case"BiasAdd":case"AddV2":case"Add":return[s.add(Av("a",e,t,n),Av("b",e,t,n))];case"AddN":return[s.addN(Av("tensors",e,t,n))];case"FloorMod":case"Mod":return[s.mod(Av("a",e,t,n),Av("b",e,t,n))];case"Mul":return[s.mul(Av("a",e,t,n),Av("b",e,t,n))];case"RealDiv":case"Div":return[s.div(Av("a",e,t,n),Av("b",e,t,n))];case"DivNoNan":return[s.divNoNan(Av("a",e,t,n),Av("b",e,t,n))];case"FloorDiv":return[s.floorDiv(Av("a",e,t,n),Av("b",e,t,n))];case"Sub":return[s.sub(Av("a",e,t,n),Av("b",e,t,n))];case"Minimum":return[s.minimum(Av("a",e,t,n),Av("b",e,t,n))];case"Maximum":return[s.maximum(Av("a",e,t,n),Av("b",e,t,n))];case"Pow":return[s.pow(Av("a",e,t,n),Av("b",e,t,n))];case"SquaredDifference":return[s.squaredDifference(Av("a",e,t,n),Av("b",e,t,n))];default:throw TypeError(`Node type ${e.op} is not implemented`)}})(e,t,n)));case"basic_math":return r((()=>((e,t,n,s=S)=>{switch(e.op){case"Abs":case"ComplexAbs":return[s.abs(Av("x",e,t,n))];case"Acos":return[s.acos(Av("x",e,t,n))];case"Acosh":return[s.acosh(Av("x",e,t,n))];case"Asin":return[s.asin(Av("x",e,t,n))];case"Asinh":return[s.asinh(Av("x",e,t,n))];case"Atan":return[s.atan(Av("x",e,t,n))];case"Atan2":return[s.atan2(Av("x",e,t,n),Av("y",e,t,n))];case"Atanh":return[s.atanh(Av("x",e,t,n))];case"Ceil":return[s.ceil(Av("x",e,t,n))];case"Complex":return[s.complex(Av("real",e,t,n),Av("imag",e,t,n))];case"Cos":return[s.cos(Av("x",e,t,n))];case"Cosh":return[s.cosh(Av("x",e,t,n))];case"Elu":return[s.elu(Av("x",e,t,n))];case"Erf":return[s.erf(Av("x",e,t,n))];case"Exp":return[s.exp(Av("x",e,t,n))];case"Expm1":return[s.expm1(Av("x",e,t,n))];case"Floor":return[s.floor(Av("x",e,t,n))];case"Log":return[s.log(Av("x",e,t,n))];case"Log1p":return[s.log1p(Av("x",e,t,n))];case"Imag":return[s.imag(Av("x",e,t,n))];case"Neg":return[s.neg(Av("x",e,t,n))];case"Reciprocal":return[s.reciprocal(Av("x",e,t,n))];case"Real":return[s.real(Av("x",e,t,n))];case"Relu":return[s.relu(Av("x",e,t,n))];case"Round":return[s.round(Av("x",e,t,n))];case"Selu":return[s.selu(Av("x",e,t,n))];case"Sigmoid":return[s.sigmoid(Av("x",e,t,n))];case"Sin":return[s.sin(Av("x",e,t,n))];case"Sign":return[s.sign(Av("x",e,t,n))];case"Sinh":return[s.sinh(Av("x",e,t,n))];case"Softplus":return[s.softplus(Av("x",e,t,n))];case"Sqrt":return[s.sqrt(Av("x",e,t,n))];case"Square":return[s.square(Av("x",e,t,n))];case"Tanh":return[s.tanh(Av("x",e,t,n))];case"Tan":return[s.tan(Av("x",e,t,n))];case"ClipByValue":return[s.clipByValue(Av("x",e,t,n),Av("clipValueMin",e,t,n),Av("clipValueMax",e,t,n))];case"Relu6":return[s.relu6(Av("x",e,t,n))];case"Rsqrt":return[s.rsqrt(Rv(e.inputNames[0],t,n))];case"LeakyRelu":return[s.leakyRelu(Av("x",e,t,n),Av("alpha",e,t,n))];case"Prelu":return[s.prelu(Av("x",e,t,n),Av("alpha",e,t,n))];case"IsNan":return[s.isNaN(Rv(e.inputNames[0],t,n))];case"IsInf":return[s.isInf(Rv(e.inputNames[0],t,n))];case"IsFinite":return[s.isFinite(Rv(e.inputNames[0],t,n))];default:throw TypeError(`Node type ${e.op} is not implemented`)}})(e,t,n)));case"control":return(async(e,t,n)=>{switch(e.op){case"If":case"StatelessIf":{const s=Av("thenBranch",e,t,n),r=Av("elseBranch",e,t,n),a=Av("cond",e,t,n),i=Av("args",e,t,n);return(await a.data())[0]?n.functionMap[s].executeFunctionAsync(i,n.tensorArrayMap,n.tensorListMap):n.functionMap[r].executeFunctionAsync(i,n.tensorArrayMap,n.tensorListMap)}case"While":case"StatelessWhile":{const s=Av("body",e,t,n),r=Av("cond",e,t,n),a=Av("args",e,t,n),i=await n.functionMap[r].executeFunctionAsync(a,n.tensorArrayMap,n.tensorListMap),o=a.map((e=>e.id));let l=await i[0].data();i.forEach((e=>{e.kept||-1!==o.indexOf(e.id)||e.dispose()}));let u=a;for(;l[0];){const e=u;u=await n.functionMap[s].executeFunctionAsync(u,n.tensorArrayMap,n.tensorListMap);const t=u.map((e=>e.id));e.forEach((e=>{e.kept||-1!==o.indexOf(e.id)||-1!==t.indexOf(e.id)||e.dispose()}));const a=await n.functionMap[r].executeFunctionAsync(u,n.tensorArrayMap,n.tensorListMap);l=await a[0].data(),a.forEach((e=>{e.kept||-1!==o.indexOf(e.id)||-1!==t.indexOf(e.id)||e.dispose()}))}return u}case"LoopCond":return[Lv(Av("pred",e,t,n))];case"Switch":{const s=Av("pred",e,t,n);let r=Av("data",e,t,n);return r.kept||(r=Lv(r)),(await s.data())[0]?[void 0,r]:[r,void 0]}case"Merge":{const s=e.inputNames.find((e=>void 0!==Rv(e,t,n)));return s?[Lv(Rv(s,t,n))]:void 0}case"Enter":{const s=Av("frameName",e,t,n),r=Av("tensor",e,t,n);return n.enterFrame(s),[Lv(r)]}case"Exit":{const s=Av("tensor",e,t,n);return n.exitFrame(),[Lv(s)]}case"NextIteration":{const s=Av("tensor",e,t,n);return n.nextIteration(),[Lv(s)]}case"TensorArrayV3":{const s=Av("size",e,t,n),r=Av("dtype",e,t,n),a=Av("elementShape",e,t,n),i=Av("dynamicSize",e,t,n),o=Av("clearAfterRead",e,t,n),l=Av("identicalElementShapes",e,t,n),u=Av("name",e,t,n),c=new Ik(u,r,s,a,l,i,o);return n.addTensorArray(c),[c.idTensor,Xi(1)]}case"TensorArrayWriteV3":{const s=Av("tensorArrayId",e,t,n),r=Av("index",e,t,n),a=Av("tensor",e,t,n),i=n.getTensorArray(s.id);return i.write(r,a),[i.idTensor]}case"TensorArrayReadV3":{const s=Av("tensorArrayId",e,t,n),r=Av("index",e,t,n);return[n.getTensorArray(s.id).read(r)]}case"TensorArrayGatherV3":{const s=Av("tensorArrayId",e,t,n),r=Av("indices",e,t,n),a=Av("dtype",e,t,n);return[n.getTensorArray(s.id).gather(r,a)]}case"TensorArrayScatterV3":{const s=Av("tensorArrayId",e,t,n),r=Av("indices",e,t,n),a=Av("tensor",e,t,n),i=n.getTensorArray(s.id);return i.scatter(r,a),[i.idTensor]}case"TensorArrayConcatV3":{const s=Av("tensorArrayId",e,t,n),r=n.getTensorArray(s.id),a=Av("dtype",e,t,n);return[r.concat(a)]}case"TensorArraySplitV3":{const s=Av("tensorArrayId",e,t,n),r=Av("tensor",e,t,n),a=Av("lengths",e,t,n),i=n.getTensorArray(s.id);return i.split(a,r),[i.idTensor]}case"TensorArraySizeV3":{const s=Av("tensorArrayId",e,t,n);return[Xi(n.getTensorArray(s.id).size(),"int32")]}case"TensorArrayCloseV3":{const s=Av("tensorArrayId",e,t,n),r=n.getTensorArray(s.id);return r.clearAndClose(),[r.idTensor]}case"TensorListSetItem":{const s=Av("tensorListId",e,t,n),r=Av("index",e,t,n),a=Av("tensor",e,t,n),i=n.getTensorList(s.id);return i.setItem(r,a),[i.idTensor]}case"TensorListGetItem":{const s=Av("tensorListId",e,t,n),r=Av("index",e,t,n),a=Av("elementShape",e,t,n),i=Av("elementDType",e,t,n);return[n.getTensorList(s.id).getItem(r,a,i)]}case"TensorListScatterV2":case"TensorListScatter":{const s=Av("indices",e,t,n),r=function(e,t,n,s){if(t.length!==e.shape[0])throw new Error(`Expected len(indices) == tensor.shape[0], but saw: ${t.length} vs. ${e.shape[0]}`);const r=Math.max(...t);if(null!=s&&-1!==s&&r>=s)throw new Error(`Max index must be < array size (${r}  vs. ${s})`);const a=new Nk([],n,e.dtype,s),i=Zh(e,0);return t.forEach(((e,t)=>{a.setItem(e,i[t])})),a}(Av("tensor",e,t,n),s,Av("elementShape",e,t,n),Av("numElements",e,t,n));return n.addTensorList(r),[r.idTensor]}case"TensorListReserve":case"EmptyTensorList":{const s=Av("elementShape",e,t,n),r=Av("elementDType",e,t,n);let a;a="TensorListReserve"===e.op?"numElements":"maxNumElements";const i=Av(a,e,t,n),o=function(e,t,n,s){return new Nk([],e,t,s)}(s,r,0,"TensorListReserve"===e.op?-1:i);return n.addTensorList(o),[o.idTensor]}case"TensorListGather":{const s=Av("tensorListId",e,t,n),r=Av("indices",e,t,n),a=Av("elementShape",e,t,n),i=Av("elementDType",e,t,n);return[n.getTensorList(s.id).gather(r,i,a)]}case"TensorListStack":{const s=Av("tensorListId",e,t,n),r=Av("elementShape",e,t,n),a=Av("elementDType",e,t,n),i=Av("numElements",e,t,n);return[n.getTensorList(s.id).stack(r,a,i)]}case"TensorListFromTensor":{const s=function(e,t,n){const s=e.dtype;if(e.shape.length<1)throw new Error(`Tensor must be at least a vector, but saw shape: ${e.shape}`);if(e.dtype!==n)throw new Error(`Invalid data types; op elements ${e.dtype}, but list elements ${n}`);xk(e.shape.slice(1),t,"TensorList shape mismatch: ");const r=Zh(e);return new Nk(r,t,s)}(Av("tensor",e,t,n),Av("elementShape",e,t,n),Av("elementDType",e,t,n));return n.addTensorList(s),[s.idTensor]}case"TensorListConcat":case"TensorListConcatV2":{const s=Av("tensorListId",e,t,n),r=n.getTensorList(s.id),a=Av("dtype",e,t,n),i=Av("elementShape",e,t,n);return[r.concat(a,i)]}case"TensorListPushBack":{const s=Av("tensorListId",e,t,n),r=Av("tensor",e,t,n),a=n.getTensorList(s.id);return a.pushBack(r),[a.idTensor]}case"TensorListPopBack":{const s=Av("tensorListId",e,t,n),r=Av("elementShape",e,t,n),a=Av("elementDType",e,t,n);return[n.getTensorList(s.id).popBack(r,a)]}case"TensorListSplit":{const s=Av("tensor",e,t,n),r=Av("elementShape",e,t,n),a=function(e,t,n){let s=0;const r=t.map((e=>(s+=e,s)));if(s!==e.shape[0])throw new Error(`Expected sum of lengths to be equal to\n          tensor.shape[0], but sum of lengths is\n        ${s}, and tensor's shape is: ${e.shape}`);const a=kk(e.shape.slice(1),n),i=0===s?0:e.size/s,o=_a((()=>{const n=[];e=Dl(e,[1,s,i]);for(let s=0;s<t.length;++s){const o=[0,0===s?0:r[s-1],0],l=[1,t[s],i];n[s]=Dl(Pl(e,o,l),a)}return e.dispose(),n})),l=new Nk([],n,e.dtype,t.length);for(let e=0;e<o.length;e++)l.setItem(e,o[e]);return l}(s,Av("lengths",e,t,n),r);return n.addTensorList(a),[a.idTensor]}case"TensorListLength":{const s=Av("tensorListId",e,t,n);return[Xi(n.getTensorList(s.id).size(),"int32")]}case"TensorListResize":{const s=Av("tensorListId",e,t,n),r=Av("size",e,t,n),a=n.getTensorList(s.id).resize(r);return n.addTensorList(a),[a.idTensor]}default:throw TypeError(`Node type ${e.op} is not implemented`)}})(e,t,n);case"convolution":return r((()=>((e,t,n,s=S)=>{switch(e.op){case"Conv1D":{const r=Av("stride",e,t,n),a=Av("pad",e,t,n),i=Av("dataFormat",e,t,n).toUpperCase(),o=Av("dilation",e,t,n);return[s.conv1d(Av("x",e,t,n),Av("filter",e,t,n),r,a,i,o)]}case"Conv2D":{const r=Av("strides",e,t,n),a=Mv(e,t,n),i=Av("dataFormat",e,t,n).toUpperCase(),o=Av("dilations",e,t,n);return[s.conv2d(Av("x",e,t,n),Av("filter",e,t,n),[r[1],r[2]],a,i,[o[1],o[2]])]}case"_FusedConv2D":{const{stride:r,pad:a,dataFormat:i,dilations:o,biasArg:l,preluArg:u,activationFunc:c,leakyreluAlpha:h}=Sk(e,t,n);return[s.fused.conv2d({x:Av("x",e,t,n),filter:Av("filter",e,t,n),strides:[r[1],r[2]],pad:a,dataFormat:i,dilations:[o[1],o[2]],bias:l,activation:c,preluActivationWeights:u,leakyreluAlpha:h})]}case"FusedDepthwiseConv2dNative":{const{stride:r,pad:a,dataFormat:i,dilations:o,biasArg:l,preluArg:u,activationFunc:c,leakyreluAlpha:h}=Sk(e,t,n);return[s.fused.depthwiseConv2d({x:Av("x",e,t,n),filter:Av("filter",e,t,n),strides:[r[1],r[2]],pad:a,dataFormat:i,dilations:[o[1],o[2]],bias:l,activation:c,preluActivationWeights:u,leakyreluAlpha:h})]}case"Conv2DBackpropInput":case"Conv2dTranspose":{const r=Av("outputShape",e,t,n),a=Av("strides",e,t,n),i=Mv(e,t,n);return[s.conv2dTranspose(Av("x",e,t,n),Av("filter",e,t,n),r,[a[1],a[2]],i)]}case"DepthwiseConv2dNative":case"DepthwiseConv2d":{const r=Av("strides",e,t,n),a=Mv(e,t,n),i=Av("dilations",e,t,n),o=Av("dataFormat",e,t,n).toUpperCase();return[s.depthwiseConv2d(Av("input",e,t,n),Av("filter",e,t,n),[r[1],r[2]],a,o,[i[1],i[2]])]}case"Conv3D":{const r=Av("strides",e,t,n),a=Av("pad",e,t,n),i=Av("dataFormat",e,t,n).toUpperCase(),o=Av("dilations",e,t,n);return[s.conv3d(Av("x",e,t,n),Av("filter",e,t,n),[r[1],r[2],r[3]],a,i,[o[1],o[2],o[3]])]}case"AvgPool":{const r=Av("strides",e,t,n),a=Av("pad",e,t,n),i=Av("kernelSize",e,t,n);return[s.avgPool(Av("x",e,t,n),[i[1],i[2]],[r[1],r[2]],a)]}case"MaxPool":{const r=Av("strides",e,t,n),a=Av("pad",e,t,n),i=Av("kernelSize",e,t,n);return[s.maxPool(Av("x",e,t,n),[i[1],i[2]],[r[1],r[2]],a)]}case"MaxPoolWithArgmax":{const r=Av("strides",e,t,n),a=Av("pad",e,t,n),i=Av("kernelSize",e,t,n),o=Av("includeBatchInIndex",e,t,n),{result:l,indexes:u}=s.maxPoolWithArgmax(Av("x",e,t,n),[i[1],i[2]],[r[1],r[2]],a,o);return[l,u]}case"AvgPool3D":{const r=Av("strides",e,t,n),a=Av("pad",e,t,n),i=Av("kernelSize",e,t,n);return[s.avgPool3d(Av("x",e,t,n),[i[1],i[2],i[3]],[r[1],r[2],r[3]],a)]}case"MaxPool3D":{const r=Av("strides",e,t,n),a=Av("pad",e,t,n),i=Av("kernelSize",e,t,n);return[s.maxPool3d(Av("x",e,t,n),[i[1],i[2],i[3]],[r[1],r[2],r[3]],a)]}case"Dilation2D":{const r=Av("strides",e,t,n),a=Av("pad",e,t,n),i=Av("dilations",e,t,n),o=r[1],l=r[2],u=i[1],c=i[2];return[s.dilation2d(Av("x",e,t,n),Av("filter",e,t,n),[o,l],a,[u,c],"NHWC")]}default:throw TypeError(`Node type ${e.op} is not implemented`)}})(e,t,n)));case"creation":return r((()=>((e,t,n,s=S)=>{switch(e.op){case"Fill":{const r=Av("shape",e,t,n),a=Av("dtype",e,t,n),i=Av("value",e,t,n);return[s.fill(r,i,a)]}case"LinSpace":{const r=Av("start",e,t,n),a=Av("stop",e,t,n),i=Av("num",e,t,n);return[s.linspace(r,a,i)]}case"Multinomial":{const r=Av("logits",e,t,n),a=Av("numSamples",e,t,n),i=Av("seed",e,t,n);return[s.multinomial(r,a,i)]}case"OneHot":{const r=Av("indices",e,t,n),a=Av("depth",e,t,n),i=Av("onValue",e,t,n),o=Av("offValue",e,t,n),l=Av("dtype",e,t,n);return[s.oneHot(r,a,i,o,l)]}case"Ones":return[s.ones(Av("shape",e,t,n),Av("dtype",e,t,n))];case"OnesLike":return[s.onesLike(Av("x",e,t,n))];case"RandomStandardNormal":return[s.randomStandardNormal(Av("shape",e,t,n),Av("dtype",e,t,n),Av("seed",e,t,n))];case"RandomUniform":return[s.randomUniform(Av("shape",e,t,n),Av("minval",e,t,n),Av("maxval",e,t,n),Av("dtype",e,t,n))];case"RandomUniformInt":return[s.randomUniformInt(Av("shape",e,t,n),Av("minval",e,t,n),Av("maxval",e,t,n),Av("seed",e,t,n))];case"Range":{const r=Av("start",e,t,n),a=Av("stop",e,t,n),i=Av("step",e,t,n);return[s.range(r,a,i,Av("dtype",e,t,n))]}case"TruncatedNormal":{const r=Av("shape",e,t,n),a=Av("mean",e,t,n),i=Av("stdDev",e,t,n),o=Av("seed",e,t,n);return[s.truncatedNormal(r,a,i,Av("dtype",e,t,n),o)]}case"Zeros":return[s.zeros(Av("shape",e,t,n),Av("dtype",e,t,n))];case"ZerosLike":return[s.zerosLike(Av("x",e,t,n))];default:throw TypeError(`Node type ${e.op} is not implemented`)}})(e,t,n)));case"dynamic":return(async(e,t,n,s,r=S)=>{switch(e.op){case"NonMaxSuppressionV5":{const{boxes:s,scores:a,maxOutputSize:i,iouThreshold:o,scoreThreshold:l,softNmsSigma:u}=Tk(e,t,n),c=await r.image.nonMaxSuppressionWithScoreAsync(s,a,i,o,l,u);return[c.selectedIndices,c.selectedScores]}case"NonMaxSuppressionV4":{const{boxes:s,scores:a,maxOutputSize:i,iouThreshold:o,scoreThreshold:l}=Tk(e,t,n),u=Av("padToMaxOutputSize",e,t,n),c=await r.image.nonMaxSuppressionPaddedAsync(s,a,i,o,l,u);return[c.selectedIndices,c.validOutputs]}case"NonMaxSuppressionV3":case"NonMaxSuppressionV2":{const{boxes:s,scores:a,maxOutputSize:i,iouThreshold:o,scoreThreshold:l}=Tk(e,t,n);return[await r.image.nonMaxSuppressionAsync(s,a,i,o,l)]}case"Where":{const s=r.cast(Av("condition",e,t,n),"bool"),a=[await r.whereAsync(s)];return s.dispose(),a}case"ListDiff":return r.setdiff1dAsync(Av("x",e,t,n),Av("y",e,t,n));default:throw TypeError(`Node type ${e.op} is not implemented`)}})(e,t,n);case"evaluation":return r((()=>((e,t,n,s=S)=>{switch(e.op){case"LowerBound":{const r=Av("sortedSequence",e,t,n),a=Av("values",e,t,n);return[s.lowerBound(r,a)]}case"TopKV2":{const r=Av("x",e,t,n),a=Av("k",e,t,n),i=Av("sorted",e,t,n),o=s.topk(r,a,i);return[o.values,o.indices]}case"UpperBound":{const r=Av("sortedSequence",e,t,n),a=Av("values",e,t,n);return[s.upperBound(r,a)]}case"Unique":{const r=Av("x",e,t,n),a=s.unique(r);return[a.values,a.indices]}case"UniqueV2":{const r=Av("x",e,t,n),a=Av("axis",e,t,n),i=s.unique(r,a);return[i.values,i.indices]}default:throw TypeError(`Node type ${e.op} is not implemented`)}})(e,t,n)));case"image":return r((()=>((e,t,n,s=S)=>{switch(e.op){case"ResizeBilinear":{const r=Av("images",e,t,n),a=Av("size",e,t,n),i=Av("alignCorners",e,t,n),o=Av("halfPixelCenters",e,t,n);return[s.image.resizeBilinear(r,[a[0],a[1]],i,o)]}case"ResizeNearestNeighbor":{const r=Av("images",e,t,n),a=Av("size",e,t,n),i=Av("alignCorners",e,t,n),o=Av("halfPixelCenters",e,t,n);return[s.image.resizeNearestNeighbor(r,[a[0],a[1]],i,o)]}case"CropAndResize":{const r=Av("image",e,t,n),a=Av("boxes",e,t,n),i=Av("boxInd",e,t,n),o=Av("cropSize",e,t,n),l=Av("method",e,t,n),u=Av("extrapolationValue",e,t,n);return[s.image.cropAndResize(r,a,i,o,l,u)]}case"ImageProjectiveTransformV3":{const r=Av("images",e,t,n),a=Av("transforms",e,t,n),i=Av("outputShape",e,t,n),o=Av("fillValue",e,t,n),l=Av("interpolation",e,t,n),u=Av("fillMode",e,t,n);return[s.image.transform(r,a,l.toLowerCase(),u.toLowerCase(),o,i)]}default:throw TypeError(`Node type ${e.op} is not implemented`)}})(e,t,n)));case"graph":return r((()=>((e,t,n,s=S)=>{switch(e.op){case"Const":return t[e.name];case"PlaceholderWithDefault":const r=Av("default",e,t,n);return[Rv(e.name,t,n)||r];case"Placeholder":return[Rv(e.name,t,n)];case"Identity":case"StopGradient":case"FakeQuantWithMinMaxVars":case"Snapshot":return[Lv(Av("x",e,t,n))];case"IdentityN":return Av("x",e,t,n).map((e=>Lv(e)));case"Shape":return[s.tensor1d(Av("x",e,t,n).shape,"int32")];case"ShapeN":return Av("x",e,t,n).map((e=>s.tensor1d(e.shape)));case"Size":return[s.scalar(Av("x",e,t,n).size,"int32")];case"Rank":return[s.scalar(Av("x",e,t,n).rank,"int32")];case"NoOp":return[s.scalar(1)];case"Print":const a=Av("x",e,t,n),i=Av("data",e,t,n),o=Av("message",e,t,n),l=Av("summarize",e,t,n);console.warn("The graph has a tf.print() operation,usually used for debugging, which slows down performance."),console.log(o);for(let e=0;e<i.length;e++)console.log(Array.prototype.slice.call(i[e].dataSync()).slice(0,l));return[a];default:throw TypeError(`Node type ${e.op} is not implemented`)}})(e,t,n)));case"logical":return r((()=>((e,t,n,s=S)=>{switch(e.op){case"Equal":return[s.equal(Av("a",e,t,n),Av("b",e,t,n))];case"NotEqual":return[s.notEqual(Av("a",e,t,n),Av("b",e,t,n))];case"Greater":return[s.greater(Av("a",e,t,n),Av("b",e,t,n))];case"GreaterEqual":return[s.greaterEqual(Av("a",e,t,n),Av("b",e,t,n))];case"Less":return[s.less(Av("a",e,t,n),Av("b",e,t,n))];case"LessEqual":return[s.lessEqual(Av("a",e,t,n),Av("b",e,t,n))];case"LogicalAnd":return[s.logicalAnd(Av("a",e,t,n),Av("b",e,t,n))];case"LogicalNot":return[s.logicalNot(Av("a",e,t,n))];case"LogicalOr":return[s.logicalOr(Av("a",e,t,n),Av("b",e,t,n))];case"Select":case"SelectV2":return[s.where(Av("condition",e,t,n),Av("a",e,t,n),Av("b",e,t,n))];case"BitwiseAnd":return[s.bitwiseAnd(Av("a",e,t,n),Av("b",e,t,n))];default:throw TypeError(`Node type ${e.op} is not implemented`)}})(e,t,n)));case"matrices":return r((()=>((e,t,n,s=S)=>{switch(e.op){case"BatchMatMul":case"BatchMatMulV2":case"MatMul":return[s.matMul(Av("a",e,t,n),Av("b",e,t,n),Av("transposeA",e,t,n),Av("transposeB",e,t,n))];case"Einsum":return[s.einsum(Av("equation",e,t,n),...Av("tensors",e,t,n))];case"Transpose":return[s.transpose(Av("x",e,t,n),Av("perm",e,t,n))];case"_FusedMatMul":const[r,a]=Av("fusedOps",e,t,n),i="biasadd"===r,o="prelu"===a,l=Av("numArgs",e,t,n),u=Av("leakyreluAlpha",e,t,n);if(i){if(o&&2!==l)throw new Error("Fused MatMul with BiasAdd and Prelu must have two extra arguments: bias and alpha.");if(!o&&1!==l)throw new Error("Fused MatMul with BiasAdd must have one extra argument: bias.")}const[c,h]=Av("args",e,t,n);return[s.fused.matMul({a:Av("a",e,t,n),b:Av("b",e,t,n),transposeA:Av("transposeA",e,t,n),transposeB:Av("transposeB",e,t,n),bias:c,activation:a,preluActivationWeights:h,leakyreluAlpha:u})];case"MatrixBandPart":return[s.linalg.bandPart(Av("a",e,t,n),Av("numLower",e,t,n),Av("numUpper",e,t,n))];default:throw TypeError(`Node type ${e.op} is not implemented`)}})(e,t,n)));case"normalization":return r((()=>((e,t,n,s=S)=>{switch(e.op){case"EuclideanNorm":return[s.euclideanNorm(Av("x",e,t,n),Av("axis",e,t,n),Av("keepDims",e,t,n))];case"FusedBatchNorm":case"FusedBatchNormV2":case"FusedBatchNormV3":return[s.batchNorm(Av("x",e,t,n),Av("mean",e,t,n),Av("variance",e,t,n),Av("offset",e,t,n),Av("scale",e,t,n),Av("epsilon",e,t,n))];case"LRN":return[s.localResponseNormalization(Av("x",e,t,n),Av("radius",e,t,n),Av("bias",e,t,n),Av("alpha",e,t,n),Av("beta",e,t,n))];case"Softmax":return[s.softmax(Av("x",e,t,n))];case"LogSoftmax":return[s.logSoftmax(Av("x",e,t,n))];default:throw TypeError(`Node type ${e.op} is not implemented`)}})(e,t,n)));case"ragged":return r((()=>((e,t,n,s=S)=>{switch(e.op){case"RaggedGather":{const{outputNestedSplits:r,outputDenseValues:a}=s.raggedGather(Av("paramsNestedSplits",e,t,n),Av("paramsDenseValues",e,t,n),Av("indices",e,t,n),Av("outputRaggedRank",e,t,n));return r.concat(a)}case"RaggedRange":{const{rtNestedSplits:r,rtDenseValues:a}=s.raggedRange(Av("starts",e,t,n),Av("limits",e,t,n),Av("splits",e,t,n));return[r,a]}case"RaggedTensorToTensor":return[s.raggedTensorToTensor(Av("shape",e,t,n),Av("values",e,t,n),Av("defaultValue",e,t,n),Av("rowPartitionTensors",e,t,n),Av("rowPartitionTypes",e,t,n))];default:throw TypeError(`Node type ${e.op} is not implemented`)}})(e,t,n)));case"reduction":return r((()=>((e,t,n,s=S)=>{switch(e.op){case"Max":{const r=Av("axis",e,t,n),a=Av("keepDims",e,t,n);return[s.max(Av("x",e,t,n),r,a)]}case"Mean":{const r=Av("axis",e,t,n),a=Av("keepDims",e,t,n);return[s.mean(Av("x",e,t,n),r,a)]}case"Min":{const r=Av("axis",e,t,n),a=Av("keepDims",e,t,n);return[s.min(Av("x",e,t,n),r,a)]}case"Sum":{const r=Av("axis",e,t,n),a=Av("keepDims",e,t,n);return[s.sum(Av("x",e,t,n),r,a)]}case"All":{const r=Av("axis",e,t,n),a=Av("keepDims",e,t,n);return[s.all(Av("x",e,t,n),r,a)]}case"Any":{const r=Av("axis",e,t,n),a=Av("keepDims",e,t,n);return[s.any(Av("x",e,t,n),r,a)]}case"ArgMax":{const r=Av("axis",e,t,n);return[s.argMax(Av("x",e,t,n),r)]}case"ArgMin":{const r=Av("axis",e,t,n);return[s.argMin(Av("x",e,t,n),r)]}case"Prod":{const r=Av("axis",e,t,n),a=Av("keepDims",e,t,n);return[s.prod(Av("x",e,t,n),r,a)]}case"Cumprod":{const r=Av("axis",e,t,n),a=Av("exclusive",e,t,n),i=Av("reverse",e,t,n);return[s.cumprod(Av("x",e,t,n),r,a,i)]}case"Cumsum":{const r=Av("axis",e,t,n),a=Av("exclusive",e,t,n),i=Av("reverse",e,t,n);return[s.cumsum(Av("x",e,t,n),r,a,i)]}case"Bincount":const r=Av("x",e,t,n),a=Av("weights",e,t,n),i=Av("size",e,t,n);return[s.bincount(r,a,i)];case"DenseBincount":{const r=Av("x",e,t,n),a=Av("weights",e,t,n),i=Av("size",e,t,n),o=Av("binaryOutput",e,t,n);return[s.denseBincount(r,a,i,o)]}default:throw TypeError(`Node type ${e.op} is not implemented`)}})(e,t,n)));case"slice_join":return r((()=>((e,t,n,s=S)=>{switch(e.op){case"ConcatV2":case"Concat":{const r=Av("n",e,t,n),a=Av("axis",e,t,n);let i=Av("tensors",e,t,n);return i=i.slice(0,r),[s.concat(i,a)]}case"Gather":{const r=Av("x",e,t,n),a=Av("indices",e,t,n);return[s.gather(r,s.cast(a,"int32"),0)]}case"GatherV2":{const r=Av("axis",e,t,n),a=Av("batchDims",e,t,n),i=Av("x",e,t,n),o=Av("indices",e,t,n);return[s.gather(i,s.cast(o,"int32"),r,a)]}case"Reverse":{const r=Av("dims",e,t,n),a=[];for(let e=0;e<r.length;e++)r[e]&&a.push(e);const i=Av("x",e,t,n);return[s.reverse(i,a)]}case"ReverseV2":{const r=Av("axis",e,t,n),a=Av("x",e,t,n);return[s.reverse(a,r)]}case"Slice":{const r=Av("begin",e,t,n),a=Av("size",e,t,n);return[s.slice(Av("x",e,t,n),r,a)]}case"StridedSlice":{const r=Av("begin",e,t,n),a=Av("end",e,t,n),i=Av("strides",e,t,n),o=Av("beginMask",e,t,n),l=Av("endMask",e,t,n),u=Av("ellipsisMask",e,t,n),c=Av("newAxisMask",e,t,n),h=Av("shrinkAxisMask",e,t,n),d=Av("x",e,t,n);return[s.stridedSlice(d,r,a,i,o,l,u,c,h)]}case"Pack":return _a((()=>{const r=Av("axis",e,t,n),a=Av("tensors",e,t,n),i=a[0].shape,o=s.squeeze(a[0]).shape,l=a.map((e=>{const t=ce(e.shape,i);if(!t&&!ce(s.squeeze(e).shape,o))throw new Error("the input tensors shape does not match");return t?e:s.reshape(e,i)}));return[s.stack(l,r)]}));case"Unpack":{const r=Av("axis",e,t,n),a=Av("tensor",e,t,n);return s.unstack(a,r)}case"Tile":{const r=Av("reps",e,t,n);return[s.tile(Av("x",e,t,n),r)]}case"Split":case"SplitV":{const r=Av("axis",e,t,n),a=Av("numOrSizeSplits",e,t,n),i=Av("x",e,t,n);return s.split(i,a,r)}case"ScatterNd":{const r=Av("indices",e,t,n),a=Av("values",e,t,n),i=Av("shape",e,t,n);return[s.scatterND(r,a,i)]}case"GatherNd":{const r=Av("x",e,t,n),a=Av("indices",e,t,n);return[s.gatherND(r,a)]}case"SparseToDense":{const r=Av("sparseIndices",e,t,n),a=Av("outputShape",e,t,n),i=Av("sparseValues",e,t,n),o=Av("defaultValue",e,t,n);return[s.sparseToDense(r,i,a,i.dtype===o.dtype?o:s.cast(o,i.dtype))]}case"TensorScatterUpdate":{const r=Av("indices",e,t,n),a=Av("values",e,t,n),i=Av("tensor",e,t,n);return[s.tensorScatterUpdate(i,r,a)]}default:throw TypeError(`Node type ${e.op} is not implemented`)}})(e,t,n)));case"sparse":return r((()=>((e,t,n,s=S)=>{switch(e.op){case"SparseFillEmptyRows":{const{outputIndices:r,outputValues:a,emptyRowIndicator:i,reverseIndexMap:o}=s.sparse.sparseFillEmptyRows(Av("indices",e,t,n),Av("values",e,t,n),Av("denseShape",e,t,n),Av("defaultValue",e,t,n));return[r,a,i,o]}case"SparseReshape":{const{outputIndices:r,outputShape:a}=s.sparse.sparseReshape(Av("inputIndices",e,t,n),Av("inputShape",e,t,n),Av("newShape",e,t,n));return[r,a]}case"SparseSegmentMean":return[s.sparse.sparseSegmentMean(Av("data",e,t,n),Av("indices",e,t,n),Av("segmentIds",e,t,n))];case"SparseSegmentSum":return[s.sparse.sparseSegmentSum(Av("data",e,t,n),Av("indices",e,t,n),Av("segmentIds",e,t,n))];default:throw TypeError(`Node type ${e.op} is not implemented`)}})(e,t,n)));case"spectral":return r((()=>((e,t,n,s=S)=>{switch(e.op){case"FFT":return[s.fft(Av("x",e,t,n))];case"IFFT":return[s.ifft(Av("x",e,t,n))];case"RFFT":return[s.rfft(Av("x",e,t,n))];case"IRFFT":return[s.irfft(Av("x",e,t,n))];default:throw TypeError(`Node type ${e.op} is not implemented`)}})(e,t,n)));case"string":return r((()=>((e,t,n,s=S)=>{switch(e.op){case"StaticRegexReplace":return[s.string.staticRegexReplace(Av("input",e,t,n),Av("pattern",e,t,n),Av("rewrite",e,t,n),Av("replaceGlobal",e,t,n))];case"StringNGrams":{const{nGrams:r,nGramsSplits:a}=s.string.stringNGrams(Av("data",e,t,n),Av("dataSplits",e,t,n),Av("separator",e,t,n),Av("nGramWidths",e,t,n),Av("leftPad",e,t,n),Av("rightPad",e,t,n),Av("padWidth",e,t,n),Av("preserveShortSequences",e,t,n));return[r,a]}case"StringSplit":{const{indices:r,values:a,shape:i}=s.string.stringSplit(Av("input",e,t,n),Av("delimiter",e,t,n),Av("skipEmpty",e,t,n));return[r,a,i]}case"StringToHashBucketFast":return[s.string.stringToHashBucketFast(Av("input",e,t,n),Av("numBuckets",e,t,n))];default:throw TypeError(`Node type ${e.op} is not implemented`)}})(e,t,n)));case"transformation":return r((()=>((e,t,n,s=S)=>{switch(e.op){case"Cast":return[s.cast(Av("x",e,t,n),Av("dtype",e,t,n))];case"ExpandDims":{const r=Av("axis",e,t,n);return[s.expandDims(Av("x",e,t,n),r)]}case"Squeeze":{const r=Av("axis",e,t,n);return[s.squeeze(Av("x",e,t,n),r)]}case"Reshape":return[s.reshape(Av("x",e,t,n),Av("shape",e,t,n))];case"EnsureShape":return[s.ensureShape(Av("x",e,t,n),Av("shape",e,t,n))];case"MirrorPad":return[s.mirrorPad(Av("x",e,t,n),Av("padding",e,t,n),Av("mode",e,t,n))];case"PadV2":case"Pad":return[s.pad(Av("x",e,t,n),Av("padding",e,t,n),Av("constantValue",e,t,n))];case"SpaceToBatchND":{const r=Av("blockShape",e,t,n),a=Av("paddings",e,t,n);return[s.spaceToBatchND(Av("x",e,t,n),r,a)]}case"BatchToSpaceND":{const r=Av("blockShape",e,t,n),a=Av("crops",e,t,n);return[s.batchToSpaceND(Av("x",e,t,n),r,a)]}case"DepthToSpace":{const r=Av("blockSize",e,t,n),a=Av("dataFormat",e,t,n).toUpperCase();return[s.depthToSpace(Av("x",e,t,n),r,a)]}case"BroadcastTo":return[s.broadcastTo(Av("x",e,t,n),Av("shape",e,t,n))];case"BroadcastArgs":return[s.broadcastArgs(Av("s0",e,t,n),Av("s1",e,t,n))];default:throw TypeError(`Node type ${e.op} is not implemented`)}})(e,t,n)));case"hash_table":return(async(e,t,n,s)=>{switch(e.op){case"HashTable":case"HashTableV2":{const r=s.getHashTableHandleByName(e.name);if(null!=r)return[r];{const r=Av("keyDType",e,t,n),a=Av("valueDType",e,t,n),i=new Ck(r,a);return s.addHashTable(e.name,i),[i.handle]}}case"InitializeTable":case"InitializeTableV2":case"LookupTableImport":case"LookupTableImportV2":{const r=Av("tableHandle",e,t,n,s),a=Av("keys",e,t,n),i=Av("values",e,t,n),o=s.getHashTableById(r.id);return[await o.import(a,i)]}case"LookupTableFind":case"LookupTableFindV2":{const r=Av("tableHandle",e,t,n,s),a=Av("keys",e,t,n),i=Av("defaultValue",e,t,n),o=s.getHashTableById(r.id);return[await o.find(a,i)]}case"LookupTableSize":case"LookupTableSizeV2":{const r=Av("tableHandle",e,t,n,s);return[s.getHashTableById(r.id).tensorSize()]}default:throw TypeError(`Node type ${e.op} is not implemented`)}})(e,t,n,s);case"custom":const a=Ev(e.op);if(a&&a.customExecutor)return a.customExecutor(new bk(e,t,n));throw TypeError(`Custom op ${e.op} is not registered.`);default:throw TypeError(`Unknown op '${e.op}'. File an issue at https://github.com/tensorflow/tfjs/issues so we can add it, or register a custom execution with tf.registerOp()`)}})(e,t,n);return Me(a)?a.then((e=>[].concat(e))):[].concat(a)}class Ek{constructor(e={},t={},n={},s={},r){this.weightMap=e,this.tensorArrayMap=t,this.tensorListMap=n,this.functionMap=s,this.parseNodeNameCache=r,this.rootContext={id:0,frameName:"",iterationId:0},this.contexts=[this.rootContext],this.lastId=0,this.generateCurrentContextIds()}newFrame(e,t){return{id:e,frameName:t,iterationId:0}}set currentContext(e){this.contexts!==e&&(this.contexts=e,this.generateCurrentContextIds())}get currentContext(){return this.contexts}get currentContextId(){return this._currentContextIds[0]}get currentContextIds(){return this._currentContextIds}generateCurrentContextIds(){const e=[];for(let t=0;t<this.contexts.length-1;t++){const n=this.contexts.slice(0,this.contexts.length-t);e.push(this.contextIdforContexts(n))}e.push(""),this._currentContextIds=e}contextIdforContexts(e){return e?e.map((e=>0===e.id&&0===e.iterationId?"":`${e.frameName}-${e.iterationId}`)).join("/"):""}enterFrame(e){this.contexts&&(this.lastId++,this.contexts=this.contexts.slice(),this.contexts.push(this.newFrame(this.lastId,e)),this._currentContextIds.unshift(this.contextIdforContexts(this.contexts)))}exitFrame(){if(!(this.contexts&&this.contexts.length>1))throw new Error("Cannot exit frame, the context is empty");this.contexts=this.contexts.slice(),this.contexts.splice(-1),this.currentContextIds.shift()}nextIteration(){if(!(this.contexts&&this.contexts.length>0))throw new Error("Cannot increase frame iteration, the context is empty");{this.contexts=this.contexts.slice(),this.lastId++;const e=Object.assign({},this.contexts[this.contexts.length-1]);e.iterationId+=1,e.id=this.lastId,this.contexts.splice(-1,1,e),this._currentContextIds.splice(0,1,this.contextIdforContexts(this.contexts))}}getWeight(e){return this.weightMap[e]}addTensorArray(e){this.tensorArrayMap[e.id]=e}getTensorArray(e){return this.tensorArrayMap[e]}addTensorList(e){this.tensorListMap[e.id]=e}getTensorList(e){return this.tensorListMap[e]}dispose(e){for(const t in this.tensorArrayMap)this.tensorArrayMap[t].clearAndClose(e);for(const t in this.tensorListMap)this.tensorListMap[t].clearAndClose(e)}}function Ak(e,t,n,s){const r=new Set,a=[];let i=null,o=null;const l=new Set,u=new Set(Object.keys(e).map((e=>Ov(e)[0])));s=s||[];const c=new Set(s.map((e=>Ov(e.name)[0]))),h=[...t];for(;h.length>0;){const e=h.pop();(Ok(e)||Mk(e)||Lk(e))&&null==i&&(i=e,o=i.children.map((e=>e.name)).filter((e=>r.has(e)))),r.add(e.name),null==n[e.name]&&(u.has(e.name)||c.has(e.name)||(0!==e.inputs.length?e.inputs.forEach((e=>{l.has(e.name)||(l.add(e.name),h.push(e))})):a.push(e.name)))}return{inputs:e,outputs:t,usedNodes:r,missingInputs:a,dynamicNode:i,syncInputs:o}}class Rk extends Error{constructor(e){super(`NodesExecutionOrderError: ${e}`)}}const _k=new Set(["Switch","Merge","Enter","Exit","NextIteration","StatelessIf","StatelessWhile","if","While"]),Fk=new Set(["NonMaxSuppressionV2","NonMaxSuppressionV3","NonMaxSuppressionV5","Where"]),Dk=new Set(["HashTable","HashTableV2","LookupTableImport","LookupTableImportV2","LookupTableFind","LookupTableFindV2","LookupTableSize","LookupTableSizeV2"]);function Ok(e){return _k.has(e.op)}function Mk(e){return Fk.has(e.op)}function Lk(e){return Dk.has(e.op)}class zk{get weightIds(){return this.parent?this.parent.weightIds:this._weightIds}get functionExecutorMap(){return this.parent?this.parent.functionExecutorMap:this._functionExecutorMap}get weightMap(){return this.parent?this.parent.weightMap:this._weightMap}set weightMap(e){const t=Object.keys(e).map((t=>e[t].map((e=>e.id))));this._weightIds=[].concat(...t),this._weightMap=e}set resourceManager(e){this._resourceManager=e}get inputs(){return this._inputs.map((e=>({name:e.name,shape:e.attrParams.shape?e.attrParams.shape.value:void 0,dtype:e.attrParams.dtype?e.attrParams.dtype.value:void 0})))}get outputs(){return this._outputs.map((e=>({name:e.name,shape:e.attrParams.shape?e.attrParams.shape.value:void 0,dtype:e.attrParams.dtype?e.attrParams.dtype.value:void 0})))}get inputNodes(){return this._inputs.map((e=>e.signatureKey||e.name))}get outputNodes(){return this._outputs.map((e=>{const t=e.signatureKey||e.name;return e.defaultOutput?`${t}:${e.defaultOutput}`:t}))}get functions(){return Object.keys(this._functions).reduce(((e,t)=>(e[t]=this._functions[t].signature,e)),{})}constructor(e,t){this.graph=e,this.parent=t,this.compiledMap=new Map,this.parseNodeNameCache=new Map,this._weightMap={},this.SEPARATOR=",",this._functions={},this._functionExecutorMap={},this.keepIntermediateTensors=!1,this._outputs=e.outputs,this._inputs=e.inputs,this._initNodes=e.initNodes,this._signature=e.signature,this._functions=e.functions,null!=e.functions&&Object.keys(e.functions).forEach((t=>{this._functionExecutorMap[t]=new zk(e.functions[t],this)}))}getCompilationKey(e,t){const n=e.map((e=>e.name)).sort(),s=t.map((e=>e.name)).sort();return n.join(this.SEPARATOR)+"--"+s.join(this.SEPARATOR)}compile(e,t){const n=Ak(e,t,this.weightMap,this._initNodes),{missingInputs:s,dynamicNode:r,syncInputs:a}=n;if(null!=r)throw new Error(`This execution contains the node '${r.name}', which has the dynamic op '${r.op}'. Please use model.executeAsync() instead. Alternatively, to avoid the dynamic ops, specify the inputs [${a}]`);if(s.length>0){const n=t.map((e=>e.name)),r=Object.keys(e);throw new Error(`Cannot compute the outputs [${n}] from the provided inputs [${r}]. Missing the following inputs: [${s}]`)}const i=function(e,t){const{usedNodes:n,inputs:s}=t,r=Object.keys(s).map((e=>Ov(e)[0])).map((t=>e.nodes[t])),a=e.initNodes||[],i=e=>n.has("string"==typeof e?e:e.name);function o(e){return[...new Map(e.map((e=>[e.name,e]))).values()]}const l=o([...r,...e.weights,...a]).filter(i),u=o([...l,...Object.values(e.nodes)]).filter(i),c=new Map(u.map((e=>[e.name,e]))),h={};for(const e of u){h[e.name]=h[e.name]||0;for(const t of e.children)i(t)||(h[t.name]=Number.POSITIVE_INFINITY),h[t.name]=(h[t.name]||0)+1}const d=Object.entries(h).filter((([,e])=>0===e)).map((([e])=>e)),p=[...d];for(;d.length>0;){const e=d.pop(),t=c.get(e);for(const e of t.children.filter(i))0===--h[e.name]&&(p.push(e.name),d.push(e.name))}const f=function(e,t){const n=new Map(e.map((e=>[e.name,e]))),s=t.map((e=>e.name)),r=new Set(s);for(;s.length>0;){const e=s.pop(),t=n.get(e);for(const e of t.children)n.has(e.name)&&!r.has(e.name)&&(r.add(e.name),s.push(e.name))}return e.filter((e=>r.has(e.name)))}(p.map((e=>c.get(e))),l);return function(e,t){const n=new Map(e.map(((e,t)=>[e.name,t]))),s=new Set(t.map((e=>e.name))),r=e=>s.has("string"==typeof e?e:e.name),a=new Set(e.map((e=>e.name))),i=e=>a.has("string"==typeof e?e:e.name);for(const t of e){for(const e of t.children.filter(i)){if(!n.has(e.name))throw new Rk(`Child ${e.name} of node ${t.name} is unreachable.`);if(n.get(t.name)>n.get(e.name))throw new Rk(`Node ${t.name} is scheduled to run after its child ${e.name}.`)}if(!r(t))for(const e of t.inputs){if(!n.has(e.name))throw new Rk(`Input ${e.name} of node ${t.name} is unreachable.`);if(n.get(e.name)>n.get(t.name))throw new Rk(`Node ${t.name} is scheduled to run before its input ${e.name}.`)}}}(f,l),f}(this.graph,n),o=function(e){const t=new Map(e.map(((e,t)=>[e.name,t]))),n=Number.MAX_SAFE_INTEGER,s=e.map(((e,t)=>Ok(e)?n:t)),r=e=>{const n=s[t.get(e.name)];return null==n?-1:n},a=e.map(((e,t)=>e.children.map(r).reduce(((e,t)=>Math.max(e,t)),s[t]))),i=new Map;for(let t=0;t<e.length;++t){const s=a[t];if(s===n)continue;const r=e[t],o=e[s];i.has(o.name)||i.set(o.name,[]),i.get(o.name).push(r)}return i}(i);return{orderedNodes:i,nodeLiveUntilMap:o}}cloneAndKeepTensor(e){if(null==e)return null;const t=e.clone();return Da(t),t}cloneTensorList(e){if(!e)return null;const t=e.map((e=>this.cloneAndKeepTensor(e)));return t}cloneTensorMap(e){return Object.fromEntries(Object.entries(e).map((([e,t])=>[e,this.cloneTensorList(t)])))}execute(e,t){this.disposeIntermediateTensors(),e=this.mapInputs(e);const n=Object.keys(e).sort();this.checkInputs(e),this.checkInputShapeAndType(e),t=this.mapOutputs(t),this.checkOutputs(t);const s=n.map((e=>this.graph.nodes[Ov(e)[0]])),r=t.map((e=>Ov(e)[0])),a=new Set(r);let i=r.map((e=>this.graph.nodes[e]));0===i.length&&(i=this._outputs);const o=this.getCompilationKey(s,i);let l=this.compiledMap.get(o);null==l&&(l=this.compile(e,i),this.compiledMap.set(o,l));try{this.keepIntermediateTensors=Pe().getBool("KEEP_INTERMEDIATE_TENSORS")}catch(e){this.keepIntermediateTensors=!1,console.warn(e.message)}const u={},c={};return _a((()=>{const n=new Ek(this.weightMap,u,c,this.functionExecutorMap,this.parseNodeNameCache),s=Object.assign({},this.weightMap);this.keepIntermediateTensors&&(this.clonedTensorsMap=this.cloneTensorMap(this.weightMap)),Object.keys(e).forEach((t=>{const[r,a]=Ov(t,n),i=[];i[a]=e[t],s[r]=i,this.keepIntermediateTensors&&(this.clonedTensorsMap[r]=this.cloneTensorList(i))}));const r=this.getFrozenTensorIds(s),{orderedNodes:i,nodeLiveUntilMap:o}=l;for(const e of i){if(s[e.name])continue;const t=$k(e,s,n,this._resourceManager);if(Me(t))throw new Error(`The execution of the op '${e.op}' returned a promise. Please use model.executeAsync() instead.`);s[e.name]=t,this.keepIntermediateTensors&&(this.clonedTensorsMap[e.name]=this.cloneTensorList(t)),this.checkTensorForDisposalWithNodeLiveUntilInfo(e,s,n,r,a,o.get(e.name))}return null==this.parent&&n.dispose(r),t.map((e=>Rv(e,s,n)))}))}getFrozenTensorIds(e){const t=[].concat.apply([],Object.keys(e).map((t=>e[t])).map((e=>e.map((e=>e.id)))));return new Set(t)}checkTensorForDisposal(e,t,n,s,r,a,i){if(!Ok(t)&&!a.has(e)){for(const s of n[e])null!=s&&(i[s.id]=(i[s.id]||0)+t.children.length);for(const e of t.inputs){if(Ok(e))continue;const t=_v(e.name,n,s);if(null!=t)for(const e of t){if(!e||e.kept||r.has(e.id))continue;const t=i[e.id];1===t?(e.dispose(),delete i[e.id]):null!=t&&i[e.id]--}}}}checkTensorForDisposalWithNodeLiveUntilInfo(e,t,n,s,r,a){function i(e){return Ok(e)||r.has(e.name)}if(!Ok(e)&&null!=a)for(const e of a){if(i(e))continue;const r=_v(e.name,t,n);for(const e of r)!e||e.kept||s.has(e.id)||e.dispose()}}async executeAsync(e,t){return this._executeAsync(e,t)}disposeIntermediateTensors(){this.clonedTensorsMap&&(Object.values(this.clonedTensorsMap).forEach((e=>{for(const t of e)t&&!t.isDisposed&&t.dispose()})),this.clonedTensorsMap=null)}getIntermediateTensors(){return this.clonedTensorsMap}async _executeAsync(e,t,n=!1,s={},r={}){this.disposeIntermediateTensors(),n||(e=this.mapInputs(e),this.checkInputs(e),this.checkInputShapeAndType(e),t=this.mapOutputs(t),this.checkOutputs(t));try{this.keepIntermediateTensors=Pe().getBool("KEEP_INTERMEDIATE_TENSORS")}catch(e){this.keepIntermediateTensors=!1,console.warn(e.message)}const a=new Ek(this.weightMap,s,r,this.functionExecutorMap,this.parseNodeNameCache);this.keepIntermediateTensors&&(this.clonedTensorsMap=this.cloneTensorMap(this.weightMap));const i=await this.executeWithControlFlow(e,a,t,n),o=t.map((e=>Rv(e,i,a))),l=o.map((e=>e.id)),u=Object.keys(e).map((t=>e[t].id)),c=new Set([...l,...u,...this.weightIds]);return Object.values(i).forEach((e=>{e.forEach((e=>{!e||e.isDisposed||c.has(e.id)||e.dispose()}))})),null==this.parent&&a.dispose(c),o}async executeFunctionAsync(e,t,n){const s=e.reduce(((e,t,n)=>(e[this.inputs[n].name]=t,e)),{});return this._executeAsync(s,this.outputNodes,!0,t,n)}async executeWithControlFlow(e,t,n,s){const r=Object.keys(e),a=r.map((e=>this.graph.nodes[Ov(e)[0]])),i=n.map((e=>Ov(e)[0])),o=new Set(i);let l=i.map((e=>this.graph.nodes[e]));0===l.length&&(l=this._outputs);const{usedNodes:u,missingInputs:c,dynamicNode:h,syncInputs:d}=Ak(e,l,this.weightMap,this._initNodes),p=[...a,...this.graph.weights,...this._initNodes||[]].map((e=>({node:e,contexts:t.currentContext}))),f=Object.assign({},this.weightMap);Object.keys(e).forEach((t=>{const[n,s]=Ov(t),r=[];r[s]=e[t],f[n]=r}));const m={},g=this.getFrozenTensorIds(f),y={};for(;p.length>0;){const e=this.processStack(a,p,t,f,y,g,o,m,u);await Promise.all(e)}null!=h||s||console.warn("This model execution did not contain any nodes with control flow or dynamic output shapes. You can use model.execute() instead.");const b=l.filter((e=>!Ok(e)&&!Rv(e.name,f,t))).map((e=>e.name));if(b.length>0){let e="";throw null!=h&&(e=`Alternatively, to avoid the dynamic ops, use model.execute() and specify the inputs [${d}]`),new Error(`Cannot compute the outputs [${b}] from the provided inputs [${r}]. Consider providing the following inputs: [${c}]. ${e}`)}return f}processStack(e,t,n,s,r,a,i,o,l){const u=[];for(;t.length>0;){const e=t.pop();n.currentContext=e.contexts;let c="";if("Enter"===e.node.op&&Av("isConstant",e.node,s,n)&&([c]=Fv(e.node.name,n)),null==s[e.node.name]){const h=$k(e.node,s,n,this._resourceManager);c||([c]=Fv(e.node.name,n));const d=n.currentContext;Me(h)?u.push(h.then((u=>(s[c]=u,this.keepIntermediateTensors&&(this.clonedTensorsMap[c]=this.cloneTensorList(u)),n.currentContext=d,this.checkTensorForDisposal(c,e.node,s,n,a,i,o),this.processChildNodes(e.node,t,n,s,r,l),u)))):(s[c]=h,this.keepIntermediateTensors&&(this.clonedTensorsMap[c]=this.cloneTensorList(h)),this.checkTensorForDisposal(c,e.node,s,n,a,i,o),this.processChildNodes(e.node,t,n,s,r,l))}else this.processChildNodes(e.node,t,n,s,r,l)}return u}processChildNodes(e,t,n,s,r,a){e.children.forEach((e=>{const[i]=Fv(e.name,n);!r[i]&&a.has(e.name)&&("Merge"===e.op?e.inputNames.some((e=>!!Rv(e,s,n)))&&(r[i]=!0,t.push({contexts:n.currentContext,node:e})):e.inputNames.every((e=>!!Rv(e,s,n)))&&(r[i]=!0,t.push({contexts:n.currentContext,node:e})))}))}dispose(){Object.keys(this.weightMap).forEach((e=>this.weightMap[e].forEach((e=>e.dispose()))))}checkInputShapeAndType(e){Object.keys(e).forEach((t=>{const n=e[t],[s]=Ov(t),r=this.graph.nodes[s];if(r.attrParams.shape&&r.attrParams.shape.value){const e=r.attrParams.shape.value;ie(e.length===n.shape.length&&n.shape.every(((t,n)=>-1===e[n]||e[n]===t)),(()=>`The shape of dict['${r.name}'] provided in model.execute(dict) must be [${e}], but was [${n.shape}]`))}r.attrParams.dtype&&r.attrParams.dtype.value&&ie(n.dtype===r.attrParams.dtype.value,(()=>`The dtype of dict['${r.name}'] provided in model.execute(dict) must be ${r.attrParams.dtype.value}, but was ${n.dtype}`))}))}mapInputs(e){var t,n;const s={};for(const r in e){const a=null===(n=null===(t=this._signature)||void 0===t?void 0:t.inputs)||void 0===n?void 0:n[r];null!=a?s[a.name]=e[r]:s[r]=e[r]}return s}checkInputs(e){const t=Object.keys(e).filter((e=>{const[t]=Ov(e);return null==this.graph.nodes[t]}));if(t.length>0)throw new Error(`The dict provided in model.execute(dict) has keys: [${t}] that are not part of graph`)}mapOutputs(e){return e.map((e=>{var t,n;const s=null===(n=null===(t=this._signature)||void 0===t?void 0:t.outputs)||void 0===n?void 0:n[e];return null!=s?s.name:e}),{})}checkOutputs(e){e.forEach((e=>{const[t]=Ov(e);if(!this.graph.nodes[t])throw new Error(`The output '${e}' is not found in the graph`)}))}}class Bk{constructor(e={},t={}){this.hashTableNameToHandle=e,this.hashTableMap=t}addHashTable(e,t){this.hashTableNameToHandle[e]=t.handle,this.hashTableMap[t.id]=t}getHashTableHandleByName(e){return this.hashTableNameToHandle[e]}getHashTableById(e){return this.hashTableMap[e]}dispose(){for(const e in this.hashTableMap)this.hashTableMap[e].clearAndClose(),delete this.hashTableMap[e];for(const e in this.hashTableNameToHandle)this.hashTableNameToHandle[e].dispose(),delete this.hashTableNameToHandle[e]}}class Pk{get modelVersion(){return this.version}get inputNodes(){return this.executor.inputNodes}get outputNodes(){return this.executor.outputNodes}get inputs(){return this.executor.inputs}get outputs(){return this.executor.outputs}get weights(){return this.executor.weightMap}get metadata(){return this.artifacts.userDefinedMetadata}get modelSignature(){return this.signature}get modelStructuredOutputKeys(){return this.structuredOutputKeys}constructor(t,n={},s=e){this.modelUrl=t,this.loadOptions=n,this.version="n/a",this.io=s,null==n&&(this.loadOptions={}),this.resourceManager=new Bk}findIOHandler(){const e=this.modelUrl;if(null!=e.load)this.handler=e;else if(null!=this.loadOptions.requestInit)this.handler=this.io.browserHTTPRequest(e,this.loadOptions);else{const t=this.io.getLoadHandlers(e,this.loadOptions);if(0===t.length)t.push(this.io.browserHTTPRequest(e,this.loadOptions));else if(t.length>1)throw new Error(`Found more than one (${t.length}) load handlers for URL '${[e]}'`);this.handler=t[0]}}load(){if(this.findIOHandler(),null==this.handler.load)throw new Error("Cannot proceed with model loading because the IOHandler provided does not have the `load` method implemented.");const e=this.handler.load();return Me(e)?e.then((e=>null==e.getWeightStream?this.loadSync(e):this.loadStreaming(e))):this.loadSync(e)}loadSync(e){const t=this.io.decodeWeights(e.weightData,e.weightSpecs);return this.loadWithWeightMap(e,t)}async loadStreaming(e){if(null==e.getWeightStream)throw new Error("Model artifacts missing streamWeights function");const t=await Ga(e.getWeightStream(),e.weightSpecs);return this.loadWithWeightMap(e,t)}loadWithWeightMap(e,t){this.artifacts=e;const n=this.artifacts.modelTopology;let s=this.artifacts.signature;if(null!=this.artifacts.userDefinedMetadata){const e=this.artifacts.userDefinedMetadata;null!=e.signature&&(s=e.signature),null!=e.structuredOutputKeys&&(this.structuredOutputKeys=e.structuredOutputKeys)}if(this.signature=s,this.version=`${n.versions.producer}.${n.versions.minConsumer}`,this.executor=new zk(sk.Instance.transformGraph(n,this.signature)),this.executor.weightMap=this.convertTensorMapToTensorsMap(t),this.executor.resourceManager=this.resourceManager,null!=e.modelInitializer&&null!=e.modelInitializer.node){const t=sk.Instance.transformGraph(e.modelInitializer);this.initializer=new zk(t),this.initializer.weightMap=this.executor.weightMap,this.initializer.resourceManager=this.resourceManager,this.initializerSignature=e.initializerSignature}return!0}async save(e,t){if("string"==typeof e){const t=this.io.getSaveHandlers(e);if(0===t.length)throw new Error(`Cannot find any save handlers for URL '${e}'`);if(t.length>1)throw new Error(`Found more than one (${t.length}) save handlers for URL '${e}'`);e=t[0]}if(null==e.save)throw new Error("GraphModel.save() cannot proceed because the IOHandler provided does not have the `save` attribute defined.");return e.save(this.artifacts)}addStructuredOutputNames(e){if(this.structuredOutputKeys){const t={};return(e instanceof Hr?[e]:e).forEach(((e,n)=>t[this.structuredOutputKeys[n]]=e)),t}return e}predict(e,t){const n=this.execute(e,this.outputNodes);return this.addStructuredOutputNames(n)}async predictAsync(e,t){const n=await this.executeAsync(e,this.outputNodes);return this.addStructuredOutputNames(n)}normalizeInputs(e){var t;if(!(e instanceof Hr||Array.isArray(e))){const n=null===(t=this.signature)||void 0===t?void 0:t.inputs;if(null!=n)for(const t in n){const s=n[t];null!=s.resourceId&&(e[t]=this.resourceIdToCapturedInput[s.resourceId])}return e}e=Array.isArray(e)?e:[e];const n=Object.keys(this.resourceIdToCapturedInput).length;if(e.length+n!==this.inputNodes.length)throw new Error(`Input tensor count mismatch, the graph model has ${this.inputNodes.length-n} non-resource placeholders, while there are ${e.length} input tensors provided.`);let s=0;return this.inputNodes.reduce(((t,n)=>{var r,a,i;const o=null===(i=null===(a=null===(r=this.signature)||void 0===r?void 0:r.inputs)||void 0===a?void 0:a[n])||void 0===i?void 0:i.resourceId;return t[n]=null!=o?this.resourceIdToCapturedInput[o]:e[s++],t}),{})}normalizeOutputs(e){return e=e||this.outputNodes,Array.isArray(e)?e:[e]}executeInitializerGraph(){return null==this.initializer?[]:null==this.initializerSignature?this.initializer.execute({},[]):this.initializer.execute({},Object.keys(this.initializerSignature.outputs))}async executeInitializerGraphAsync(){return null==this.initializer?[]:null==this.initializerSignature?this.initializer.executeAsync({},[]):this.initializer.executeAsync({},Object.keys(this.initializerSignature.outputs))}setResourceIdToCapturedInput(e){if(this.resourceIdToCapturedInput={},this.initializerSignature){const t=this.initializerSignature.outputs,n=Object.keys(t);for(let s=0;s<n.length;s++){const r=t[n[s]];this.resourceIdToCapturedInput[r.resourceId]=e[s]}}}execute(e,t){null==this.resourceIdToCapturedInput&&this.setResourceIdToCapturedInput(this.executeInitializerGraph()),e=this.normalizeInputs(e),t=this.normalizeOutputs(t);const n=this.executor.execute(e,t);return n.length>1?n:n[0]}async executeAsync(e,t){null==this.resourceIdToCapturedInput&&this.setResourceIdToCapturedInput(await this.executeInitializerGraphAsync()),e=this.normalizeInputs(e),t=this.normalizeOutputs(t);const n=await this.executor.executeAsync(e,t);return n.length>1?n:n[0]}getIntermediateTensors(){return this.executor.getIntermediateTensors()}disposeIntermediateTensors(){this.executor.disposeIntermediateTensors()}convertTensorMapToTensorsMap(e){return Object.keys(e).reduce(((t,n)=>(t[n]=[e[n]],t)),{})}dispose(){this.executor.dispose(),this.initializer&&(this.initializer.dispose(),this.resourceIdToCapturedInput&&Fa(this.resourceIdToCapturedInput)),this.resourceManager.dispose()}}function Wk(e,t,n=new Map,s=new Set){if(null==e)return null;if("function"==typeof Blob&&e instanceof Blob)return e.slice();if(s.has(e))throw new Error("Circular references are not supported.");if(n.has(e))return n.get(e);const r=t(e);if(r.recurse&&null!==r.value)throw new Error("A deep map function may not return both a value and recurse=true.");if(r.recurse){if(jk(e)){const r=Array.isArray(e)?[]:{};s.add(e);for(const a in e){const i=Wk(e[a],t,n,s);r[a]=i}return s.delete(e),e.__proto__&&(r.__proto__=e.__proto__),r}throw new Error(`Can't recurse into non-iterable type: ${e}`)}return n.set(e,r.value),r.value}function Vk(e,t=Gk){return Uk(e,t)}function Uk(e,t,n=new Set){const s=e[0];if(n.has(s))throw new Error("Circular references are not supported.");const r=t(e);if(r.recurse&&null!==r.value)throw new Error("A deep zip function may not return both a value and recurse=true.");if(r.recurse){if(jk(s)){const r=Array.isArray(s)?[]:{};n.add(s);for(const a in s){const s=Uk(e.map((e=>e[a])),t,n);r[a]=s}return n.delete(s),r}throw new Error(`Can't recurse into non-iterable type: ${s}`)}return r.value}function Gk(e){return null===e?null:jk(e[0])?{value:null,recurse:!0}:{value:e,recurse:!1}}function jk(e){let t=!1;if(Pe().get("IS_BROWSER"))t=e instanceof TextDecoder;else{const{StringDecoder:s}=n(551);t=e instanceof s}return null!=e&&!ArrayBuffer.isView(e)&&(Array.isArray(e)||"object"==typeof e&&!(e instanceof Hr)&&!(e instanceof Promise)&&!t)}function Hk(e){return Wk(e,qk)}function qk(e){return e instanceof Hr?{value:e.clone(),recurse:!1}:jk(e)?{value:null,recurse:!0}:{value:e,recurse:!1}}class Kk{constructor(e){if(this.capacity=e,this.begin=0,this.end=0,null==e)throw new RangeError("Can't create a ring buffer of unknown capacity.");if(e<1)throw new RangeError("Can't create ring buffer of capacity < 1.");this.data=new Array(e),this.doubledCapacity=2*e}wrap(e){for(;e<0;)e+=this.doubledCapacity;return e%this.doubledCapacity}get(e){if(e<0)throw new RangeError("Can't get item at a negative index.");return this.data[e%this.capacity]}set(e,t){if(e<0)throw new RangeError("Can't set item at a negative index.");this.data[e%this.capacity]=t}length(){let e=this.end-this.begin;return e<0&&(e=this.doubledCapacity+e),e}isFull(){return this.length()===this.capacity}isEmpty(){return 0===this.length()}push(e){if(this.isFull())throw new RangeError("Ring buffer is full.");this.set(this.end,e),this.end=this.wrap(this.end+1)}pushAll(e){for(const t of e)this.push(t)}pop(){if(this.isEmpty())throw new RangeError("Ring buffer is empty.");this.end=this.wrap(this.end-1);const e=this.get(this.end);return this.set(this.end,void 0),e}unshift(e){if(this.isFull())throw new RangeError("Ring buffer is full.");this.begin=this.wrap(this.begin-1),this.set(this.begin,e)}shift(){if(this.isEmpty())throw new RangeError("Ring buffer is empty.");const e=this.get(this.begin);return this.set(this.begin,void 0),this.begin=this.wrap(this.begin+1),e}shuffleExcise(e){if(this.isEmpty())throw new RangeError("Ring buffer is empty.");const t=this.wrap(this.begin+e),n=this.get(t);return this.set(t,this.pop()),n}}class Xk extends Kk{constructor(){super(Xk.INITIAL_CAPACITY)}isFull(){return!1}push(e){super.isFull()&&this.expand(),super.push(e)}unshift(e){super.isFull()&&this.expand(),super.unshift(e)}expand(){const e=2*this.capacity,t=new Array(e),n=this.length();for(let e=0;e<n;e++)t[e]=this.get(this.wrap(this.begin+e));this.data=t,this.capacity=e,this.doubledCapacity=2*this.capacity,this.begin=0,this.end=n}}Xk.INITIAL_CAPACITY=32;class Yk{async toArray(){const e=[];let t=await this.next();for(;!t.done;)e.push(t.value),t=await this.next();return e}async toArrayForTest(){const e=this.prefetch(100),t=[];let n=await e.next();for(;!n.done;)t.push(n.value),n=await e.next();return t}async resolveFully(){let e=await this.next();for(;!e.done;)e=await this.next()}async resolveWhile(e){let t=await this.next(),n=e(t.value);for(;!t.done&&n;)t=await this.next(),n=e(t.value)}handleErrors(e){return new aI(this,e)}filter(e){return new sI(this,e)}map(e){return new rI(this,e)}mapAsync(e){return new iI(this,e)}serialMapAsync(e){return new iI(this,e).serial()}flatmap(e){return new lI(this,e)}async forEachAsync(e){return this.map(e).resolveFully()}async serialForEach(e){return this.serialMapAsync(e).resolveWhile((e=>!0===e))}rowMajorBatch(e,t=!0){return new nI(this,e,t)}columnMajorBatch(e,t=!0,n=Gk){return this.rowMajorBatch(e,t).map((e=>Vk(e,n)))}concatenate(e,t){return new uI(new Jk([this,e]),t)}take(e){return e<0||null==e?this:new tI(this,e)}skip(e){return e<0||null==e?this:new eI(this,e)}prefetch(e){return new dI(this,e)}shuffle(e,t){return new pI(this,e,t)}serial(){return new Qk(this)}}class Jk extends Yk{constructor(e){super(),this.items=e,this.trav=0}summary(){return`Array of ${this.items.length} items`}async next(){if(this.trav>=this.items.length)return{value:null,done:!0};const e=this.items[this.trav];return this.trav++,{value:Hk(e),done:!1}}}class Zk extends Yk{constructor(e){super(),this.nextFn=e}summary(){return"Function call"}async next(){try{return this.nextFn()}catch(e){throw e.message=`Error thrown while iterating through a dataset: ${e.message}`,e}}}class Qk extends Yk{constructor(e){super(),this.upstream=e,this.lastRead=Promise.resolve({value:null,done:!1})}summary(){return`${this.upstream.summary()} -> Serial`}async next(){return this.lastRead=this.lastRead.then((()=>this.serialNext())),this.lastRead}async serialNext(){return this.upstream.next()}}class eI extends Yk{constructor(e,t){super(),this.upstream=e,this.maxCount=t,this.count=0,this.lastRead=Promise.resolve({value:null,done:!1})}summary(){return`${this.upstream.summary()} -> Skip`}async next(){return this.lastRead=this.lastRead.then((()=>this.serialNext())),this.lastRead}async serialNext(){for(;this.count++<this.maxCount;){const e=await this.upstream.next();if(e.done)return e;Fa(e.value)}return this.upstream.next()}}class tI extends Yk{constructor(e,t){super(),this.upstream=e,this.maxCount=t,this.count=0}summary(){return`${this.upstream.summary()} -> Take`}async next(){return this.count++>=this.maxCount?{value:null,done:!0}:this.upstream.next()}}class nI extends Yk{constructor(e,t,n=!0){super(),this.upstream=e,this.batchSize=t,this.enableSmallLastBatch=n,this.lastRead=Promise.resolve({value:null,done:!1})}summary(){return`${this.upstream.summary()} -> RowMajorBatch`}async next(){return this.lastRead=this.lastRead.then((()=>this.serialNext())),this.lastRead}async serialNext(){const e=[];for(;e.length<this.batchSize;){const t=await this.upstream.next();if(t.done)return this.enableSmallLastBatch&&e.length>0?{value:e,done:!1}:{value:null,done:!0};e.push(t.value)}return{value:e,done:!1}}}class sI extends Yk{constructor(e,t){super(),this.upstream=e,this.predicate=t,this.lastRead=Promise.resolve({value:null,done:!1})}summary(){return`${this.upstream.summary()} -> Filter`}async next(){return this.lastRead=this.lastRead.then((()=>this.serialNext())),this.lastRead}async serialNext(){for(;;){const e=await this.upstream.next();if(e.done||this.predicate(e.value))return e;Fa(e.value)}}}class rI extends Yk{constructor(e,t){super(),this.upstream=e,this.transform=t}summary(){return`${this.upstream.summary()} -> Map`}async next(){const e=await this.upstream.next();if(e.done)return{value:null,done:!0};const t=oa(e.value),n=this.transform(e.value),s=oa(n);for(const e of t)ia(e,s)||e.dispose();return{value:n,done:!1}}}class aI extends Yk{constructor(e,t){super(),this.upstream=e,this.handler=t,this.count=0,this.lastRead=Promise.resolve({value:null,done:!1})}summary(){return`${this.upstream.summary()} -> handleErrors`}async next(){return this.lastRead=this.lastRead.then((()=>this.serialNext())),this.lastRead}async serialNext(){for(;;)try{return await this.upstream.next()}catch(e){if(!this.handler(e))return{value:null,done:!0}}}}class iI extends Yk{constructor(e,t){super(),this.upstream=e,this.transform=t}summary(){return`${this.upstream.summary()} -> AsyncMap`}async next(){const e=await this.upstream.next();if(e.done)return{value:null,done:!0};const t=oa(e.value),n=await this.transform(e.value),s=oa(n);for(const e of t)ia(e,s)||e.dispose();return{value:n,done:!1}}}class oI extends Yk{constructor(){super(),this.outputQueue=new Xk,this.lastRead=Promise.resolve({value:null,done:!1})}async next(){return this.lastRead=this.lastRead.then((()=>this.serialNext())),this.lastRead}async serialNext(){for(;0===this.outputQueue.length();)if(!await this.pump())return{value:null,done:!0};return{value:this.outputQueue.shift(),done:!1}}}class lI extends oI{constructor(e,t){super(),this.upstream=e,this.transform=t}summary(){return`${this.upstream.summary()} -> Flatmap`}async pump(){const e=await this.upstream.next();if(e.done)return!1;const t=oa(e.value),n=this.transform(e.value),s=oa(n);this.outputQueue.pushAll(n);for(const e of t)ia(e,s)||e.dispose();return!0}}class uI extends Yk{constructor(e,t){super(),this.baseErrorHandler=t,this.lastRead=null,this.iterator=null,this.moreIterators=e}summary(){return"TODO: fill in upstream of chained summaries -> Chained"}async next(){return this.lastRead=this.readFromChain(this.lastRead),this.lastRead}async readFromChain(e){if(await e,null==this.iterator){const e=await this.moreIterators.next();if(e.done)return{value:null,done:!0};this.iterator=e.value,null!=this.baseErrorHandler&&(this.iterator=this.iterator.handleErrors(this.baseErrorHandler))}const t=await this.iterator.next();return t.done?(this.iterator=null,this.readFromChain(e)):t}}var cI,hI;(hI=cI||(cI={}))[hI.FAIL=0]="FAIL",hI[hI.SHORTEST=1]="SHORTEST",hI[hI.LONGEST=2]="LONGEST";class dI extends Yk{constructor(e,t){super(),this.upstream=e,this.bufferSize=t,this.buffer=new Kk(t)}summary(){return`${this.upstream.summary()} -> Prefetch`}refill(){for(;!this.buffer.isFull();){const e=this.upstream.next();this.buffer.push(e)}}next(){return this.refill(),this.buffer.shift()}}class pI extends dI{constructor(e,t,n){super(e,t),this.upstream=e,this.windowSize=t,this.upstreamExhausted=!1,this.random=Yc.alea(n||Er().toString()),this.lastRead=Promise.resolve({value:null,done:!1})}async next(){return this.lastRead=this.lastRead.then((()=>this.serialNext())),this.lastRead}randomInt(e){return Math.floor(this.random()*e)}chooseIndex(){return this.randomInt(this.buffer.length())}async serialNext(){for(this.upstreamExhausted||this.refill();!this.buffer.isEmpty();){const e=this.chooseIndex(),t=await this.buffer.shuffleExcise(e);if(!t.done)return this.refill(),t;this.upstreamExhausted=!0}return{value:null,done:!0}}}class fI{constructor(){this.size=null}batch(e,t=!0){const n=this;let s;return ie(e>0,(()=>`batchSize needs to be positive, but it is\n      ${e}`)),s=this.size===1/0||null==this.size?this.size:t?Math.ceil(this.size/e):Math.floor(this.size/e),mI((async()=>(await n.iterator()).columnMajorBatch(e,t,gI)),s)}concatenate(e){const t=this;let n;return n=this.size===1/0||e.size===1/0?1/0:null!=this.size&&null!=e.size?this.size+e.size:null,mI((async()=>(await t.iterator()).concatenate(await e.iterator())),n)}filter(e){const t=this;let n;return n=this.size===1/0?1/0:null,mI((async()=>(await t.iterator()).filter((t=>_a((()=>e(t)))))),n)}async forEachAsync(e){return(await this.iterator()).forEachAsync(e)}map(e){const t=this;return mI((async()=>(await t.iterator()).map((t=>_a((()=>e(t)))))),this.size)}mapAsync(e){const t=this;return mI((async()=>(await t.iterator()).mapAsync(e)),this.size)}prefetch(e){if(null==e)throw new RangeError("`Dataset.prefetch()` requires bufferSize to be specified.");const t=this;return mI((async()=>(await t.iterator()).prefetch(e)),this.size)}repeat(e){const t=this;let n;return n=null!=this.size&&e>0?this.size*e:0===e?0:null!=this.size&&(void 0===e||e<0)?1/0:null,mI((async()=>{return n=(r=async()=>({value:await t.iterator(),done:!1}),new Zk(r)).take(e),new uI(n,s);var n,s,r}),n)}skip(e){const t=this;let n;return n=null!=this.size&&e>=0&&this.size>=e?this.size-e:null!=this.size&&(this.size<e||void 0===e||e<0)?0:null,mI((async()=>(await t.iterator()).skip(e)),n)}shuffle(e,t,n=!0){if(null==e||e<0)throw null==this.size?new RangeError("`Dataset.shuffle()` requires bufferSize to be specified."):new RangeError(`\`Dataset.shuffle()\` requires bufferSize to be specified.  If your data fits in main memory (for regular JS objects), and/or GPU memory (for \`tf.Tensor\`s), consider setting bufferSize to the dataset size (${this.size} elements)`);const s=this,r=Yc.alea(t||Er().toString());return mI((async()=>{let t=r.int32();return n&&(t+=r.int32()),(await s.iterator()).shuffle(e,t.toString())}),this.size)}take(e){const t=this;let n;return n=null!=this.size&&this.size>e?e:null!=this.size&&this.size<=e?this.size:null,mI((async()=>(await t.iterator()).take(e)),n)}async toArray(){if(this.size===1/0)throw new Error("Can not convert infinite data stream to array.");return(await this.iterator()).toArray()}async toArrayForTest(){if(this.size===1/0)throw new Error("Can not convert infinite data stream to array.");return(await this.iterator()).toArrayForTest()}}function mI(e,t=null){return new class extends fI{constructor(){super(...arguments),this.size=t}async iterator(){return e()}}}function gI(e){if(null===e)return null;return null==(t=e[0])||null===(n=t)||"object"!=typeof n&&"function"!=typeof n||Array.isArray(t)||"object"==typeof t&&t instanceof Hr||_r(t)?{value:function(e){if(0===e.length)throw new Error("Can't make a batch of zero elements.");return e[0]instanceof Hr?Oh(e):Ca(e)}(e),recurse:!1}:{value:null,recurse:!0};var t,n}function yI(e,t){Array.isArray(e)||(e=[e]),e.forEach((e=>{null!=e&&ie("complex64"!==e.dtype,(()=>`${t} does not support complex64 tensors in the CPU backend.`))}))}fI.MAX_BUFFER_SIZE=1e4,Symbol("out"),Symbol("field"),Symbol("quote"),Symbol("quoteafterquote"),Symbol("quoteinquote");const bI=td;class xI extends ee{nextDataId(){return xI.nextDataId++}constructor(){super(),this.blockSize=48,this.firstUse=!0,this.data=new Q(this,Aa())}write(e,t,n){this.firstUse&&(this.firstUse=!1,Pe().get("IS_NODE")&&nr("\n============================\nHi, looks like you are running TensorFlow.js in Node.js. To speed things up dramatically, install our node backend, visit https://github.com/tensorflow/tfjs-node for more details. \n============================"));const s={id:this.nextDataId()};return this.data.set(s,{values:e,dtype:n,refCount:1}),s}makeTensorInfo(e,t,n){let s;if("string"===t&&null!=n&&n.length>0&&ke(n[0])){const r=n.map((e=>Ar(e)));s=this.write(r,e,t)}else s=this.write(n,e,t);return{dataId:s,shape:e,dtype:t}}refCount(e){return this.data.has(e)?this.data.get(e).refCount:0}incRef(e){this.data.get(e).refCount++}decRef(e){this.data.has(e)&&this.data.get(e).refCount--}move(e,t,n,s,r){this.data.set(e,{values:t,dtype:s,refCount:r})}numDataIds(){return this.data.numDataIds()}async read(e){return this.readSync(e)}readSync(e){const{dtype:t,complexTensorInfos:n}=this.data.get(e);return"complex64"===t?Kp(this.readSync(n.real.dataId),this.readSync(n.imag.dataId)):function(e,t){if(Array.isArray(e))return e;if("float32"===t)return e instanceof Float32Array?e:new Float32Array(e);if("int32"===t)return e instanceof Int32Array?e:new Int32Array(e);if("bool"===t||"string"===t)return Uint8Array.from(new Int32Array(e));throw new Error(`Unknown dtype ${t}`)}(this.data.get(e).values,t)}bufferSync(e){const t=this.readSync(e.dataId);if("string"===e.dtype)try{const n=t.map((e=>Rr(e)));return Li(e.shape,e.dtype,n)}catch(e){throw new Error("Failed to decode encoded string bytes into utf-8")}return Li(e.shape,e.dtype,t)}makeOutput(e,t,n){return Aa().makeTensorFromTensorInfo(this.makeTensorInfo(t,n,e),this)}disposeData(e,t=!1){if(this.data.has(e)){if(this.data.get(e).refCount--,!t&&this.data.get(e).refCount>0)return!1;const{complexTensorInfos:n}=this.data.get(e);null!=n&&(this.disposeData(n.real.dataId,!0),this.disposeData(n.imag.dataId,!0)),this.data.delete(e)}return!0}disposeIntermediateTensorInfo(e){this.disposeData(e.dataId)}async time(e){const t=Er();return e(),{kernelMs:Er()-t}}memory(){return{unreliable:!0,reasons:["The reported memory is an upper bound. Due to automatic garbage collection, the true allocated memory may be less."]}}where(e){yI([e],"where");const t=this.readSync(e.dataId);return bI(e.shape,t)}dispose(){}floatPrecision(){return 32}epsilon(){return super.epsilon()}}function wI(e){return(t,n,s)=>{const r=xe(n,t.length);for(let n=0;n<t.length;++n)r[n]=e(t[n],s);return r}}function vI(e,t,n){return kI(e,wI(t),n)}function kI(e,t,n){return({inputs:s,attrs:r,backend:a})=>{const{x:i}=s;yI(i,e);const o=a,l=o.data.get(i.dataId).values;let u;if("string"===i.dtype){if(!Array.isArray(l))throw new Error("String tensor's value was not an instance of Array");u=Ef(l)}else u=l;const c=n||i.dtype,h=t(u,c,r);return o.makeTensorInfo(i.shape,c,h)}}xI.nextDataId=0,Oa("cpu",(()=>new xI),1);const II=vI(Vt,(e=>e>=0?e:Math.exp(e)-1)),NI={kernelName:Vt,backendName:"cpu",kernelFunc:II};function SI(e){const{inputs:t,backend:n}=e,{x:s}=t;return n.incRef(s.dataId),{dataId:s.dataId,shape:s.shape,dtype:s.dtype}}const TI={kernelName:an,backendName:"cpu",kernelFunc:SI};function CI(e){const{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{alpha:a}=s;yI([r],"leakyRelu");const i=ue(r.shape),o=n.data.get(r.dataId).values,l=be("float32",i);for(let e=0;e<o.length;e++)l[e]=o[e]<0?a*o[e]:o[e];return n.makeTensorInfo(r.shape,"float32",l)}const $I={kernelName:dn,backendName:"cpu",kernelFunc:CI};function EI(e){return(t,n,s,r,a)=>{const i=ho(t,n),o=i.length,l=Ce(i),u=be(a,ue(i)),c=t.length,h=n.length,d=Ce(t),p=Ce(n),f=uo(t,i),m=uo(n,i);if(f.length+m.length===0)for(let t=0;t<u.length;++t)u[t]=e(s[t%s.length],r[t%r.length]);else for(let t=0;t<u.length;++t){const n=Oe(t,o,l),a=n.slice(-c);f.forEach((e=>a[e]=0));const i=De(a,c,d),g=n.slice(-h);m.forEach((e=>g[e]=0));const y=De(g,h,p);u[t]=e(s[i],r[y])}return[u,i]}}const AI=EI(((e,t)=>e<0?t*e:e));function RI(e){const{inputs:t,backend:n}=e,{x:s,alpha:r}=t;yI([s,r],"prelu");const a=n.data.get(s.dataId).values,i=n.data.get(r.dataId).values,[o,l]=AI(s.shape,r.shape,a,i,"float32");return n.makeTensorInfo(l,"float32",o)}const _I={kernelName:qn,backendName:"cpu",kernelFunc:RI},FI=vI(ts,(e=>Math.max(0,e))),DI={kernelName:ts,backendName:"cpu",kernelFunc:FI},OI=vI(os,(e=>Math.min(Math.max(0,e),6))),MI={kernelName:os,backendName:"cpu",kernelFunc:OI},LI=wI((e=>1/(1+Math.exp(-e)))),zI=vI(ws,(e=>1/(1+Math.exp(-e)))),BI={kernelName:ws,backendName:"cpu",kernelFunc:zI};function PI(e,t,n,s,r){if("linear"===n)return SI({inputs:{x:t},backend:e});if("relu"===n)return FI({inputs:{x:t},backend:e});if("elu"===n)return II({inputs:{x:t},backend:e});if("relu6"===n)return OI({inputs:{x:t},backend:e});if("prelu"===n)return RI({inputs:{x:t,alpha:s},backend:e});if("leakyrelu"===n)return CI({inputs:{x:t},backend:e,attrs:{alpha:r}});if("sigmoid"===n)return zI({inputs:{x:t},backend:e});throw new Error(`Activation ${n} has not been implemented for the CPU backend.`)}function WI(e){const{inputs:t,backend:n}=e,{real:s,imag:r}=t,a=n.data.get(s.dataId).values,i=n.data.get(r.dataId).values,o=n.makeTensorInfo(s.shape,"complex64");return n.data.get(o.dataId).complexTensorInfos={real:n.makeTensorInfo(s.shape,"float32",a),imag:n.makeTensorInfo(r.shape,"float32",i)},o}const VI={kernelName:yt,backendName:"cpu",kernelFunc:WI};function UI(e,t,n="float32"){if("complex64"===n)return WI({inputs:{real:UI(e,t,"float32"),imag:UI(e,t,"float32")},backend:e});const s=Re(ue(t),n);return e.makeTensorInfo(t,n,s)}function GI(e){const{inputs:t,backend:n}=e,{input:s}=t,r=n.data.get(s.dataId).complexTensorInfos.real,a=n.data.get(r.dataId).values;return n.makeTensorInfo(r.shape,r.dtype,a)}const jI={kernelName:Qn,backendName:"cpu",kernelFunc:GI};function HI(e,t,n,s){if("int32"===s)return[t,"int32",Int32Array.from(e)];if("bool"===s){const s=$r([0],n),[r,a]=EI(((e,t)=>e!==t?1:0))(t,[],e,s,"bool");return[a,"bool",r]}throw new Error(`Error in Cast: failed to cast ${n} to ${s}`)}function qI(e){const{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{dtype:a}=s;if("complex64"===a){if("complex64"===r.dtype)return SI({inputs:{x:r},backend:n});const e=UI(n,r.shape,r.dtype),t=qI({inputs:{x:r},backend:n,attrs:{dtype:"float32"}}),s=WI({inputs:{real:t,imag:e},backend:n});return n.disposeIntermediateTensorInfo(e),n.disposeIntermediateTensorInfo(t),s}if("complex64"===r.dtype){const e=GI({inputs:{input:r},backend:n}),t=qI({inputs:{x:e},backend:n,attrs:{dtype:a}});return n.disposeIntermediateTensorInfo(e),t}if(!we(r.dtype,a)){const e=SI({inputs:{x:r},backend:n});return{dataId:e.dataId,shape:e.shape,dtype:a}}const i=n.data.get(r.dataId).values,[o,l,u]=HI(i,r.shape,r.dtype,a);return n.makeTensorInfo(o,l,u)}const KI={kernelName:ft,backendName:"cpu",kernelFunc:qI};function XI(e,t,n,s){return null==n?({inputs:n,backend:r})=>{const{a,b:i}=n,o=r;yI([a,i],e);const l=o.data.get(a.dataId).values,u=o.data.get(i.dataId).values,c="string"===a.dtype?Ef(l):l,h="string"===a.dtype?Ef(u):u,d=s||a.dtype,[p,f]=t(a.shape,i.shape,c,h,d);return o.makeTensorInfo(f,d,p)}:({inputs:e,backend:r})=>{const{a,b:i}=e,o=r;if("complex64"===a.dtype||"complex64"===i.dtype){const e=qI({inputs:{x:a},backend:o,attrs:{dtype:"complex64"}}),t=o.data.get(e.dataId),s=t.complexTensorInfos.real,r=t.complexTensorInfos.imag,l=o.data.get(s.dataId).values,u=o.data.get(r.dataId).values,c=qI({inputs:{x:i},backend:o,attrs:{dtype:"complex64"}}),h=o.data.get(c.dataId),d=h.complexTensorInfos.real,p=h.complexTensorInfos.imag,f=o.data.get(d.dataId).values,m=o.data.get(p.dataId).values,[g,y,b]=n(a.shape,i.shape,l,u,f,m),x=o.makeTensorInfo(b,"float32",g),w=o.makeTensorInfo(b,"float32",y),v=WI({inputs:{real:x,imag:w},backend:o});return o.disposeIntermediateTensorInfo(e),o.disposeIntermediateTensorInfo(c),o.disposeIntermediateTensorInfo(x),o.disposeIntermediateTensorInfo(w),v}{const e=o.data.get(a.dataId).values,n=o.data.get(i.dataId).values,r=s||a.dtype,[l,u]=t(a.shape,i.shape,e,n,r);return o.makeTensorInfo(u,r,l)}}}function YI(e){return(t,n,s,r,a,i)=>{const o=ho(t,n),l=ue(o),u=o.length,c=Ce(o),h=be("float32",l),d=be("float32",l),p=uo(t,o),f=uo(n,o),m=Kp(s,r),g=Kp(a,i),y=t.length,b=Ce(t),x=n.length,w=Ce(n);if(p.length+f.length===0)for(let t=0;t<h.length;t++){const n=t%m.length,s=t%g.length,r=e(m[2*n],m[2*n+1],g[2*s],g[2*s+1]);h[t]=r.real,d[t]=r.imag}else for(let t=0;t<h.length;t++){const n=Oe(t,u,c),s=n.slice(-y);p.forEach((e=>s[e]=0));const r=De(s,y,b),a=n.slice(-x);f.forEach((e=>a[e]=0));const i=De(a,x,w),o=e(m[2*r],m[2*r+1],g[2*i],g[2*i+1]);h[t]=o.real,d[t]=o.imag}return[h,d,o]}}const JI=EI(((e,t)=>e+t)),ZI=YI(((e,t,n,s)=>({real:e+n,imag:t+s}))),QI=XI(Ke,JI,ZI),eN={kernelName:Ke,backendName:"cpu",kernelFunc:QI};function tN(e){const{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{shape:a}=s,i=ue(r.shape),o=me(a,i),l=ue(o);ie(i===l,(()=>`The new shape (${o}) has ${l} elements and the old shape (${r.shape}) has ${i} elements. The new shape and old shape must have the same number of elements.`)),n.incRef(r.dataId);const u=n.data.get(r.dataId);if(null!=u.complexTensorInfos){const e=u.complexTensorInfos.real,t=u.complexTensorInfos.imag;e.shape=o,t.shape=o}return{dataId:r.dataId,shape:o,dtype:r.dtype}}const nN={kernelName:ns,backendName:"cpu",kernelFunc:tN};function sN(e){const{inputs:t,backend:n,attrs:s}=e,{a:r,b:a}=t,{transposeA:i,transposeB:o}=s;yI([r,a],"matMul");const l=r.shape.length,u=a.shape.length,c=i?r.shape[l-2]:r.shape[l-1],h=o?a.shape[u-1]:a.shape[u-2],d=i?r.shape[l-1]:r.shape[l-2],p=o?a.shape[u-2]:a.shape[u-1],f=r.shape.slice(0,-2),m=a.shape.slice(0,-2),g=ue(f),y=ue(m),b=ho(r.shape.slice(0,-2),a.shape.slice(0,-2)).concat([d,p]);ie(c===h,(()=>`Error in matMul: inner shapes (${c}) and (${h}) of Tensors with shapes ${r.shape} and ${a.shape} and transposeA=${i} and transposeB=${o} must match.`));const x=o?[y,p,h]:[y,h,p],w=tN({inputs:{x:r},backend:n,attrs:{shape:i?[g,c,d]:[g,d,c]}}),v=tN({inputs:{x:a},backend:n,attrs:{shape:x}}),k=i?w.shape[1]:w.shape[2],I=i?w.shape[2]:w.shape[1],N=o?v.shape[1]:v.shape[2],S=Math.max(g,y),T=n.data.get(w.dataId).values,C=n.data.get(v.dataId).values,$=Ce(w.shape),E=Ce(v.shape),[A,R,_]=i?[$[0],1,$[1]]:[$[0],$[1],1],[F,D,O]=o?[1,E[1],E[0]]:[E[1],1,E[0]],M=I*N,L=Li([S,I,N],w.dtype),z=L.values,B=n.blockSize;for(let e=0;e<S;e++){const t=e%g,n=e%y;for(let s=0;s<I;s+=B){const r=Math.min(s+B,I);for(let a=0;a<N;a+=B){const i=Math.min(a+B,N);for(let o=0;o<k;o+=B){const l=Math.min(o+B,k);for(let u=s;u<r;u++)for(let s=a;s<i;s++){let r=0;for(let e=o;e<l;e++)r+=T[t*A+u*R+e*_]*C[e*F+s*D+n*O];z[e*M+(u*N+s)]+=r}}}}}return n.disposeIntermediateTensorInfo(w),n.disposeIntermediateTensorInfo(v),n.makeTensorInfo(b,L.dtype,L.values)}const rN={kernelName:ut,backendName:"cpu",kernelFunc:sN},aN={kernelName:Qs,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{a:r,b:a,bias:i,preluActivationWeights:o}=t,{transposeA:l,transposeB:u,activation:c,leakyreluAlpha:h}=s;let d,p,f;const m=[];d=sN({inputs:{a:r,b:a},attrs:{transposeA:l,transposeB:u},backend:n}),i&&(p=QI({inputs:{a:d,b:i},backend:n}),m.push(d),d=p),c&&(f=PI(n,d,c,o,h),m.push(d),d=f);for(const e of m)n.disposeIntermediateTensorInfo(e);return d}};function iN(e){const t=new Float32Array(e.length);for(let n=0;n<e.length;++n)t[n]=Math.abs(e[n]);return t}const oN={kernelName:je,backendName:"cpu",kernelFunc:e=>{const{x:t}=e.inputs,n=e.backend;yI(t,"abs");let s=new Float32Array(ue(t.shape));return s=iN(n.data.get(t.dataId).values),n.makeOutput(s,t.shape,t.dtype)}},lN=vI(He,(e=>Math.acos(e))),uN={kernelName:He,backendName:"cpu",kernelFunc:lN},cN=vI(qe,(e=>Math.acosh(e))),hN={kernelName:qe,backendName:"cpu",kernelFunc:cN},dN={kernelName:Xe,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n}=e,s=t;yI(t,"addN");const r=s.map((e=>n.data.get(e.dataId).values)),a=Li(s[0].shape,s[0].dtype),i=a.values;for(let e=0;e<s.length;e++){const t=r[e];for(let e=0;e<i.length;e++)i[e]+=t[e]}return n.makeTensorInfo(a.shape,a.dtype,a.values)}};function pN(e,t,n,s,r){const a=t.length,i=ue(t),o=Ce(t),l=Ce(r),u=be(n,ue(r));for(let t=0;t<i;++t){const n=Oe(t,a,o),r=new Array(n.length);for(let e=0;e<r.length;e++)r[e]=n[s[e]];u[De(r,a,l)]=e[t]}return u}function fN(e){const{inputs:t,attrs:n,backend:s}=e,{x:r}=t,{perm:a}=n;yI(r,"transpose");const i=r.shape.length,o=new Array(i);for(let e=0;e<o.length;e++)o[e]=r.shape[a[e]];const l=pN(s.data.get(r.dataId).values,r.shape,r.dtype,a,o);return{dataId:s.write(l,o,r.dtype),shape:o,dtype:r.dtype}}const mN={kernelName:js,backendName:"cpu",kernelFunc:fN},gN={kernelName:Ye,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{axis:a,keepDims:i}=s;yI(r,"all");const o=ge(a,r.shape);let l=o;const u=Fu(l,r.shape.length);let c=r;null!=u&&(c=fN({inputs:{x:r},backend:n,attrs:{perm:u}}),l=Ou(l.length,r.shape.length)),_u("all",l,c.shape.length);const[h,d]=Au(c.shape,l),p=ue(d),f=Re(ue(h),c.dtype),m=n.data.get(c.dataId).values;for(let e=0;e<f.length;++e){const t=e*p;let n=m[t];for(let e=0;e<p;++e){const s=m[t+e];n=n&&s}f[e]=n}null!=u&&n.disposeIntermediateTensorInfo(c);const g=n.makeTensorInfo(h,c.dtype,f);if(i){const e=tN({inputs:{x:g},backend:n,attrs:{shape:Ru(h,o)}});return n.disposeIntermediateTensorInfo(g),e}return g}},yN={kernelName:Je,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{axis:a,keepDims:i}=s;yI(r,"any");const o=ge(a,r.shape);let l=o;const u=Fu(l,r.shape.length);let c=r;null!=u&&(c=fN({inputs:{x:r},backend:n,attrs:{perm:u}}),l=Ou(l.length,r.shape.length)),_u("any",l,c.shape.length);const[h,d]=Au(c.shape,l),p=ue(d),f=Re(ue(h),c.dtype),m=n.data.get(c.dataId).values;for(let e=0;e<f.length;++e){const t=e*p;let n=m[t];for(let e=0;e<p;++e){const s=m[t+e];n=n||s}f[e]=n}null!=u&&n.disposeIntermediateTensorInfo(c);const g=n.makeTensorInfo(h,c.dtype,f);if(i){const e=tN({inputs:{x:g},backend:n,attrs:{shape:Ru(h,o)}});return n.disposeIntermediateTensorInfo(g),e}return g}},bN={kernelName:Ze,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{axis:a}=s;yI(r,"argMax");let i=ge(a,r.shape);const o=Fu(i,r.shape.length);let l=r;const u=[];null!=o&&(l=fN({inputs:{x:r},backend:n,attrs:{perm:o}}),u.push(l),i=Ou(i.length,l.shape.length)),i=[i[0]],_u("argMax",i,l.shape.length);const[c,h]=Au(l.shape,i),d=Re(ue(c),"int32"),p=ue(h),f=n.data.get(l.dataId).values;for(let e=0;e<d.length;++e){const t=e*p;let n=f[t],s=0;for(let e=0;e<p;++e){const r=f[t+e];r>n&&(n=r,s=e)}d[e]=s}return u.forEach((e=>n.disposeIntermediateTensorInfo(e))),n.makeTensorInfo(c,"int32",d)}},xN={kernelName:Qe,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{axis:a}=s;yI(r,"argMin");let i=ge(a,r.shape);const o=Fu(i,r.shape.length);let l=r;const u=[];null!=o&&(l=fN({inputs:{x:r},backend:n,attrs:{perm:o}}),u.push(l),i=Ou(i.length,l.shape.length)),i=[i[0]],_u("argMin",i,l.shape.length);const[c,h]=Au(l.shape,i),d=Re(ue(c),"int32"),p=ue(h),f=n.data.get(l.dataId).values;for(let e=0;e<d.length;++e){const t=e*p;let n=f[t],s=0;for(let e=0;e<p;++e){const r=f[t+e];r<n&&(n=r,s=e)}d[e]=s}return u.forEach((e=>n.disposeIntermediateTensorInfo(e))),n.makeTensorInfo(c,"int32",d)}},wN=vI(et,(e=>Math.asin(e))),vN={kernelName:et,backendName:"cpu",kernelFunc:wN},kN=vI(tt,(e=>Math.asinh(e))),IN={kernelName:tt,backendName:"cpu",kernelFunc:kN},NN=vI(nt,(e=>Math.atan(e))),SN={kernelName:nt,backendName:"cpu",kernelFunc:NN},TN=EI(((e,t)=>Math.atan2(e,t))),CN=XI(rt,TN),$N={kernelName:rt,backendName:"cpu",kernelFunc:CN},EN=vI(st,(e=>Math.atanh(e))),AN={kernelName:st,backendName:"cpu",kernelFunc:EN};function RN(e,t,n,s,r,a){const i=r.strideHeight,o=r.strideWidth,l=r.dilationHeight,u=r.dilationWidth,c=r.effectiveFilterHeight,h=r.effectiveFilterWidth,d=r.padInfo.top,p=r.padInfo.left,f="max"===a?Number.NEGATIVE_INFINITY:Number.POSITIVE_INFINITY,m=Li(r.outShape,n),g=m.values,y=r.outShape[1]*r.outShape[2]*r.outShape[3],b=r.outShape[2]*r.outShape[3],x=r.outShape[3];for(let t=0;t<r.batchSize;++t){const n=t*y,m=t*s[0];for(let t=0;t<r.inChannels;++t)for(let y=0;y<r.outHeight;++y){const w=y*i-d,v=Math.max(0,w),k=Math.min(r.inHeight,c+w),I=n+y*b;for(let n=0;n<r.outWidth;++n){const i=n*o-p,c=Math.max(0,i),d=Math.min(r.inWidth,h+i);let y=f,b=0,w=0;for(let n=v;n<k;n+=l){const r=m+n*s[1];for(let n=c;n<d;n+=u){const i=e[r+n*s[2]+t];"max"===a&&i>y?y=i:"avg"===a&&(b+=i,w++)}if(isNaN(y))break}g[I+n*x+t]="avg"===a?b/w:y}}}return m}function _N(e,t,n,s,r=!1,a=!1){const i=Li(s.outShape,"int32"),o=s.strideHeight,l=s.strideWidth,u=s.dilationHeight,c=s.dilationWidth,h=s.effectiveFilterHeight,d=s.effectiveFilterWidth,p=s.padInfo.top,f=s.padInfo.left,m=Li(t,n,e);for(let e=0;e<s.batchSize;++e)for(let t=0;t<s.inChannels;++t)for(let n=0;n<s.outHeight;++n){const g=n*o-p;let y=g;for(;y<0;)y+=u;const b=Math.min(s.inHeight,h+g);for(let o=0;o<s.outWidth;++o){const h=o*l-f;let p=h;for(;p<0;)p+=c;const x=Math.min(s.inWidth,d+h);let w=Number.NEGATIVE_INFINITY,v=-1;for(let n=y;n<b;n+=u){const i=n-g;for(let o=p;o<x;o+=c){const l=o-h,u=m.get(e,n,o,t);u>w&&(w=u,v=r?a?((e*s.inHeight+n)*s.inWidth+o)*s.inChannels+t:(n*s.inWidth+o)*s.inChannels+t:i*d+l)}}i.set(v,e,n,o,t)}}return i}function FN(e,t,n,s,r,a){const i=r.strideDepth,o=r.strideHeight,l=r.strideWidth,u=r.dilationDepth,c=r.dilationHeight,h=r.dilationWidth,d=r.effectiveFilterDepth,p=r.effectiveFilterHeight,f=r.effectiveFilterWidth,m=r.padInfo.front,g=r.padInfo.top,y=r.padInfo.left,b="max"===a?Number.NEGATIVE_INFINITY:Number.POSITIVE_INFINITY,x=Li(r.outShape,n),w=x.values,v=r.outShape[1]*r.outShape[2]*r.outShape[3]*r.outShape[4],k=r.outShape[2]*r.outShape[3]*r.outShape[4],I=r.outShape[3]*r.outShape[4],N=r.outShape[4];for(let t=0;t<r.batchSize;++t){const n=t*v,x=t*s[0];for(let t=0;t<r.inChannels;++t)for(let v=0;v<r.outDepth;++v){const S=v*i-m;let T=S;for(;T<0;)T+=u;const C=Math.min(r.inDepth,d+S),$=n+v*k;for(let n=0;n<r.outHeight;++n){const i=n*o-g;let d=i;for(;d<0;)d+=c;const m=Math.min(r.inHeight,p+i),v=$+n*I;for(let n=0;n<r.outWidth;++n){const i=n*l-y;let o=i;for(;o<0;)o+=h;const p=Math.min(r.inWidth,f+i),g=v+n*N;let k=b,I=0,S=0;for(let n=T;n<C;n+=u){const r=x+n*s[1];for(let n=d;n<m;n+=c){const i=r+n*s[2];for(let n=o;n<p;n+=h){const r=e[i+n*s[3]+t];if("max"===a&&r>k?k=r:"avg"===a&&(I+=r,S++),isNaN(k))break}if(isNaN(k))break}if(isNaN(k))break}w[g+t]="avg"===a?I/Math.max(S,1):k}}}}return x}const DN={kernelName:at,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{x:r}=t;yI(r,"avgPool");const{filterSize:a,strides:i,pad:o,dimRoundingMode:l}=s;ie(Al(i,1),(()=>`Error in avgPool: Either strides or dilations must be 1. Got strides ${i} and dilations '1'`));const u=wl(r.shape,a,i,1,o,l);let c;if(1===u.filterWidth&&1===u.filterHeight&&ce(u.inShape,u.outShape))c=SI({inputs:{x:r},backend:n});else{const e=n.data.get(r.dataId).values,t=Ce(r.shape),s=RN(e,r.shape,r.dtype,t,u,"avg");c=n.makeTensorInfo(u.outShape,r.dtype,s.values)}return c}},ON={kernelName:ot,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{filterSize:a,strides:i,pad:o,dimRoundingMode:l,dataFormat:u}=s;yI(r,"avgPool3d");const c=vl(r.shape,a,i,1,o,l,u),h=FN(n.data.get(r.dataId).values,r.shape,r.dtype,Ce(r.shape),c,"avg");return n.makeTensorInfo(h.shape,"float32",h.values)}},MN={kernelName:lt,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{dy:r,input:a}=t,{filterSize:i,strides:o,pad:l,dimRoundingMode:u}=s;yI([r,a],"avgPool3DGrad");const c=vl(a.shape,i,o,1,l,u),h=c.strideDepth,d=c.strideHeight,p=c.strideWidth,f=c.filterDepth,m=c.filterHeight,g=c.filterWidth,y=c.dilationDepth,b=c.dilationHeight,x=c.dilationWidth,w=c.effectiveFilterDepth,v=c.effectiveFilterHeight,k=c.effectiveFilterWidth,I=w-1-c.padInfo.front,N=k-1-c.padInfo.left,S=v-1-c.padInfo.top,T=Li(a.shape,"float32"),C=1/(f*m*g),$=n.bufferSync(r);for(let e=0;e<c.batchSize;++e)for(let t=0;t<c.inChannels;++t)for(let n=0;n<c.inDepth;++n)for(let s=0;s<c.inHeight;++s)for(let r=0;r<c.inWidth;++r){const a=n-I,i=s-S,o=r-N;let l=0;for(let n=0;n<w;n+=y){const s=(a+n)/h;if(!(s<0||s>=c.outDepth||Math.floor(s)!==s))for(let n=0;n<v;n+=b){const r=(i+n)/d;if(!(r<0||r>=c.outHeight||Math.floor(r)!==r))for(let n=0;n<k;n+=x){const a=(o+n)/p;a<0||a>=c.outWidth||Math.floor(a)!==a||(l+=$.get(e,s,r,a,t))}}}T.set(l*C,e,n,s,r,t)}return n.makeTensorInfo(T.shape,T.dtype,T.values)}},LN={kernelName:it,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{dy:r,input:a}=t,i=a;yI([r,a],"avgPoolGrad");const{filterSize:o,strides:l,pad:u}=s,c=wl(i.shape,o,l,1,u),h=c.strideHeight,d=c.strideWidth,p=c.filterHeight,f=c.filterWidth,m=c.dilationHeight,g=c.dilationWidth,y=c.effectiveFilterHeight,b=c.effectiveFilterWidth,x=b-1-c.padInfo.left,w=y-1-c.padInfo.top,v=Li(i.shape,"float32"),k=1/(p*f),I=n.data.get(r.dataId).values,N=Li(r.shape,"float32",I);for(let e=0;e<c.batchSize;++e)for(let t=0;t<c.inChannels;++t)for(let n=0;n<c.inHeight;++n)for(let s=0;s<c.inWidth;++s){const r=n-w,a=s-x;let i=0;for(let n=0;n<y;n+=m){const s=(r+n)/h;if(!(s<0||s>=c.outHeight||Math.floor(s)!==s))for(let n=0;n<b;n+=g){const r=(a+n)/d;r<0||r>=c.outWidth||Math.floor(r)!==r||(i+=N.get(e,s,r,t))}}v.set(i*k,e,n,s,t)}return n.makeTensorInfo(v.shape,v.dtype,v.values)}},zN={kernelName:en,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{x:r,scale:a,offset:i,mean:o,variance:l}=t;ie(o.shape.length===l.shape.length,(()=>"Batch normalization gradient requires mean and variance to have equal ranks.")),ie(null==i||o.shape.length===i.shape.length,(()=>"Batch normalization gradient requires mean and offset to have equal ranks.")),ie(null==a||o.shape.length===a.shape.length,(()=>"Batch normalization gradient requires mean and scale to have equal ranks.")),yI([r,o,l,a,i],"batchNorm");let{varianceEpsilon:u}=s;null==u&&(u=.001);const c=n.data.get(r.dataId).values,h=n.data.get(o.dataId).values,d=n.data.get(l.dataId).values,p=a?n.data.get(a.dataId).values:new Float32Array([1]),f=i?n.data.get(i.dataId).values:new Float32Array([0]),m=new Float32Array(c.length),g=f.length,y=p.length,b=d.length,x=h.length;let w=0,v=0,k=0,I=0;for(let e=0;e<c.length;++e)m[e]=f[w++]+(c[e]-h[v++])*p[k++]/Math.sqrt(d[I++]+u),w>=g&&(w=0),v>=x&&(v=0),k>=y&&(k=0),I>=b&&(I=0);return n.makeTensorInfo(r.shape,r.dtype,m)}};function BN(e,t,n,s,r){const a=nl(s,t,n),i=ue(n),o=Ce(s);if(a){const n=sl(t,o);return"string"===r?e.slice(n,n+i):e.subarray(n,n+i)}const l=Li(s,r,"string"===r?Ef(e):e),u=Li(n,r);for(let e=0;e<u.size;++e){const n=u.indexToLoc(e),s=n.map(((e,n)=>e+t[n]));u.set(l.get(...s),...n)}return"string"===r?Af(u.values):u.values}function PN(e){const{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{begin:a,size:i}=s;yI(r,"slice");const[o,l]=rl(r,a,i);Go(r,o,l);const u=BN(n.data.get(r.dataId).values,o,l,r.shape,r.dtype);return n.makeTensorInfo(l,r.dtype,u)}const WN={kernelName:gs,backendName:"cpu",kernelFunc:PN},VN={kernelName:ct,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{blockShape:a,crops:i}=s;yI([r],"batchToSpaceND");const o=a.reduce(((e,t)=>e*t)),l=Dp(r.shape,a,o),u=Op(l.length,a.length),c=Mp(r.shape,a,o),h=Lp(i,a.length),d=zp(c,i,a.length),p=tN({inputs:{x:r},backend:n,attrs:{shape:l}}),f=fN({inputs:{x:p},backend:n,attrs:{perm:u}}),m=tN({inputs:{x:f},backend:n,attrs:{shape:c}}),g=PN({inputs:{x:m},backend:n,attrs:{begin:h,size:d}});return n.disposeIntermediateTensorInfo(p),n.disposeIntermediateTensorInfo(f),n.disposeIntermediateTensorInfo(m),g}};function UN(e,t,n,s,r){const a=ue(s),i=Re(r,n);for(let n=0;n<e.length;n++){const s=e[n];if(s<0)throw new Error("Input x must be non-negative!");s>=r||(i[s]+=a>0?t[n]:1)}return i}function GN(e,t,n,s=!1){const r=e.shape[0],a=e.shape[1],i=Li([r,n],t.dtype);for(let o=0;o<r;o++)for(let r=0;r<a;r++){const a=e.get(o,r);if(a<0)throw new Error("Input x must be non-negative!");a>=n||(s?i.set(1,o,a):t.size>0?i.set(i.get(o,a)+t.get(o,r),o,a):i.set(i.get(o,a)+1,o,a))}return i}const jN={kernelName:ht,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{x:r,weights:a}=t,{size:i}=s,o=UN(n.data.get(r.dataId).values,n.data.get(a.dataId).values,a.dtype,a.shape,i);return n.makeTensorInfo([i],a.dtype,o)}},HN=EI(((e,t)=>e&t)),qN=XI(dt,HN),KN={kernelName:dt,backendName:"cpu",kernelFunc:qN},XN={kernelName:pt,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n}=e,{s0:s,s1:r}=t,a=n.data.get(s.dataId).values,i=n.data.get(r.dataId).values,o=ho(Array.from(a),Array.from(i));return n.makeTensorInfo([o.length],"int32",Int32Array.from(o))}},YN=wI((e=>Math.ceil(e))),JN=kI(mt,YN),ZN={kernelName:mt,backendName:"cpu",kernelFunc:JN},QN=vI(gt,((e,t)=>{const n=t;return e>n.clipValueMax?n.clipValueMax:e<n.clipValueMin?n.clipValueMin:e})),eS={kernelName:gt,backendName:"cpu",kernelFunc:QN},tS={kernelName:bt,backendName:"cpu",kernelFunc:e=>{const{x:t}=e.inputs,n=e.backend,s=new Float32Array(ue(t.shape)),r=n.data.get(t.dataId),a=r.complexTensorInfos.real,i=r.complexTensorInfos.imag,o=n.data.get(a.dataId).values,l=n.data.get(i.dataId).values;for(let e=0;e<o.length;e++){const t=o[e],n=l[e];s[e]=Math.hypot(t,n)}return n.makeOutput(s,t.shape,"float32")}};function nS(e,t,n,s){const r=xe(n,ue(t));if(s&&"string"!==n){let t=0;e.forEach((e=>{const n=ue(e.shape);r.set(e.vals,t),t+=n}))}else{let s=0;e.forEach((e=>{const a="string"===n?Ef(e.vals):e.vals;let i=0;for(let n=0;n<e.shape[0];++n){const o=n*t[1]+s;for(let t=0;t<e.shape[1];++t)r[o+t]=a[i++]}s+=e.shape[1]}))}return r}function sS(e){const{inputs:t,backend:n}=e,{input:s}=t,r=n.data.get(s.dataId).complexTensorInfos.imag,a=n.data.get(r.dataId).values;return n.makeTensorInfo(r.shape,r.dtype,a)}const rS={kernelName:ln,backendName:"cpu",kernelFunc:sS};function aS(e){const{inputs:t,backend:n,attrs:s}=e,{axis:r}=s,a=ge(r,t[0].shape)[0];Np(t.map((e=>e.shape)),a);let i=Sp(t.map((e=>e.shape)),a);if(0===ue(i))return n.makeTensorInfo(i,t[0].dtype,[]);const o=t.filter((e=>ue(e.shape)>0));if(1===o.length)return SI({inputs:{x:o[0]},backend:n});if("complex64"===o[0].dtype){const e=o.map((e=>GI({inputs:{input:e},backend:n}))),t=o.map((e=>sS({inputs:{input:e},backend:n}))),s=aS({inputs:e,backend:n,attrs:{axis:a}}),r=aS({inputs:t,backend:n,attrs:{axis:a}}),i=WI({inputs:{real:s,imag:r},backend:n});return e.forEach((e=>n.disposeIntermediateTensorInfo(e))),t.forEach((e=>n.disposeIntermediateTensorInfo(e))),n.disposeIntermediateTensorInfo(s),n.disposeIntermediateTensorInfo(r),i}const l=o.map((e=>{const t=ue(e.shape.slice(a));return tN({inputs:{x:e},backend:n,attrs:{shape:[-1,t]}})})),u=l.map((e=>({vals:n.data.get(e.dataId).values,shape:e.shape})));i=Sp(l.map((e=>e.shape)),1);const c=1===l[0].shape[0],h=nS(u,i,t[0].dtype,c),d=Sp(o.map((e=>e.shape)),a),p=n.makeTensorInfo(d,t[0].dtype,h);return l.forEach((e=>n.disposeIntermediateTensorInfo(e))),p}const iS={kernelName:xt,backendName:"cpu",kernelFunc:aS};function oS(e){const{inputs:t,backend:n,attrs:s}=e,{x:r,filter:a}=t,{strides:i,pad:o,dataFormat:l,dilations:u,dimRoundingMode:c}=s;yI([r,a],"conv2d");const h=_l(l),d=kl(r.shape,a.shape,i,u,o,c,!1,h),p=d.filterHeight,f=d.filterWidth,m=d.dilationHeight,g=d.dilationWidth,y=d.padInfo.left,b=d.padInfo.top,x="channelsLast"===d.dataFormat,w=new Vr(d.outShape,r.dtype),v=Ce(r.shape),k=Ce(a.shape),I=v[0],N=x?v[1]:v[2],S=x?v[2]:1,T=x?1:v[1],C=w.strides[0],$=x?w.strides[1]:w.strides[2],E=x?w.strides[2]:1,A=x?1:w.strides[1],R=n.data.get(r.dataId).values,_=n.data.get(a.dataId).values,F=w.values;for(let e=0;e<d.batchSize;++e){const t=e*I,n=e*C;for(let e=0;e<d.outHeight;++e){const s=n+e*$,r=e*d.strideHeight-b;for(let e=0;e<p;++e){const n=r+e*m;if(n<0||n>=d.inHeight)continue;const a=e*k[0],i=t+n*N;for(let e=0;e<d.outWidth;++e){const t=s+e*E,n=e*d.strideWidth-y;for(let e=0;e<f;++e){const s=n+e*g;if(s<0||s>=d.inWidth)continue;const r=i+s*S;let o=a+e*k[1];for(let e=0;e<d.inChannels;++e){const n=R[r+e*T];for(let e=0;e<d.outChannels;++e)F[t+e*A]+=n*_[o+e];o+=d.outChannels}}}}}}return n.makeTensorInfo(w.shape,w.dtype,F)}const lS={kernelName:wt,backendName:"cpu",kernelFunc:oS},uS={kernelName:vt,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{x:r,dy:a}=t,{strides:i,pad:o,dataFormat:l,dimRoundingMode:u,filterShape:c}=s;yI([r,a],"conv2dBackpropFilter");const h=_l(l),d=kl(r.shape,c,i,1,o,u,!1,h),{strideHeight:p,strideWidth:f,filterHeight:m,filterWidth:g}=d,y="channelsLast"===d.dataFormat,b=new Vr(d.filterShape,"float32"),x=d.padInfo.left,w=d.padInfo.top,v=n.data.get(r.dataId).values,k=n.data.get(a.dataId).values,I=new Vr(r.shape,r.dtype,v),N=new Vr(a.shape,a.dtype,k);for(let e=0;e<m;++e){const t=Math.max(0,Math.ceil((w-e)/p)),n=Math.min(d.outHeight,(d.inHeight+w-e)/p);for(let s=0;s<g;++s){const r=Math.max(0,Math.ceil((x-s)/f)),a=Math.min(d.outWidth,(d.inWidth+x-s)/f);for(let i=0;i<d.inChannels;++i)for(let o=0;o<d.outChannels;++o){let l=0;for(let u=0;u<d.batchSize;++u)for(let c=t;c<n;++c){const t=e+c*p-w;for(let e=r;e<a;++e){const n=s+e*f-x;l+=y?I.get(u,t,n,i)*N.get(u,c,e,o):I.get(u,i,t,n)*N.get(u,o,c,e)}}b.set(l,e,s,i,o)}}}return n.makeTensorInfo(b.shape,b.dtype,b.values)}},cS={kernelName:kt,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{dy:r,filter:a}=t,{inputShape:i,strides:o,pad:l,dataFormat:u,dimRoundingMode:c}=s;yI([r,a],"conv2dBackpropInput");const h=Ce(a.shape),d=Ce(r.shape);let p=_l(u);const f=kl(i,a.shape,o,1,l,c,!1,p),m=new Vr(f.inShape,"float32"),g=m.values,y=n.data.get(r.dataId).values,b=n.data.get(a.dataId).values,[x,w,v]=h,{batchSize:k,filterHeight:I,filterWidth:N,inChannels:S,inHeight:T,inWidth:C,outChannels:$,outHeight:E,outWidth:A,strideHeight:R,strideWidth:_}=f;p=f.dataFormat;const F=I-1-f.padInfo.top,D=N-1-f.padInfo.left,O="channelsLast"===p,M=m.strides[0],L=O?m.strides[1]:m.strides[2],z=O?m.strides[2]:1,B=O?1:m.strides[1],P=d[0],W=O?d[1]:d[2],V=O?d[2]:1,U=O?1:d[1];for(let e=0;e<k;++e)for(let t=0;t<S;++t)for(let n=0;n<T;++n){const s=n-F,r=Math.max(0,Math.ceil(s/R)),a=Math.min(E,(I+s)/R);for(let i=0;i<C;++i){const o=i-D,l=Math.max(0,Math.ceil(o/_)),u=Math.min(A,(N+o)/_);let c=0;for(let n=r;n<a;++n){const r=n*R-s;for(let s=l;s<u;++s){const a=P*e+W*n+V*s,i=x*(I-1-r)+w*(N-1-(s*_-o))+v*t;for(let e=0;e<$;++e)c+=y[a+U*e]*b[i+e]}}g[M*e+L*n+z*i+B*t]=c}}return n.makeTensorInfo(m.shape,m.dtype,m.values)}},hS={kernelName:It,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{x:r,filter:a}=t,{strides:i,pad:o,dilations:l}=s;yI([r,a],"conv3d");const u=Il(r.shape,a.shape,i,l,o),{filterDepth:c,filterHeight:h,filterWidth:d,dilationDepth:p,dilationHeight:f,dilationWidth:m,padInfo:g}=u,y=g.front,b=g.left,x=g.top,w=new Vr(u.outShape,r.dtype),v=n.data.get(r.dataId).values,k=n.data.get(a.dataId).values,I=w.values,N=Ce(r.shape),S=Ce(a.shape);for(let e=0;e<u.batchSize;++e){const t=e*N[0],n=e*w.strides[0];for(let e=0;e<u.outDepth;++e){const s=n+e*w.strides[1],r=e*u.strideDepth-y;for(let e=0;e<c;++e){const n=r+e*p;if(n<0||n>=u.inDepth)continue;const a=e*S[0],i=t+n*N[1];for(let e=0;e<u.outHeight;++e){const t=s+e*w.strides[2],n=e*u.strideHeight-x;for(let e=0;e<h;++e){const s=n+e*f;if(s<0||s>=u.inHeight)continue;const r=a+e*S[1],o=i+s*N[2];for(let e=0;e<u.outWidth;++e){const n=t+e*u.outChannels,s=e*u.strideWidth-b;for(let e=0;e<d;++e){const t=s+e*m;if(t<0||t>=u.inWidth)continue;const a=r+e*S[2],i=o+t*u.inChannels;let l=a;for(let e=0;e<u.inChannels;++e){const t=v[i+e];for(let e=0;e<u.outChannels;++e)I[n+e]+=t*k[l+e];l+=u.outChannels}}}}}}}}return n.makeTensorInfo(w.shape,w.dtype,w.values)}},dS={kernelName:Nt,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{x:r,dy:a}=t,{strides:i,pad:o,filterShape:l}=s;yI([r,a],"conv3dBackpropFilterV2");const u=Ce(r.shape),c=Ce(a.shape),h=Il(r.shape,l,i,1,o),d=h.strideDepth,p=h.strideHeight,f=h.strideWidth,m=h.filterDepth,g=h.filterHeight,y=h.filterWidth,b=new Vr(h.filterShape,"float32"),x=b.values,[w,v,k,I]=b.strides,N=n.data.get(a.dataId).values,[S,T,C,$]=c,E=n.data.get(r.dataId).values,[A,R,_,F]=u,D=h.padInfo.front,O=h.padInfo.left,M=h.padInfo.top;for(let e=0;e<m;++e){const t=Math.max(0,Math.ceil((D-e)/d)),n=Math.min(h.outDepth,(h.inDepth+D-e)/d),s=e*w;for(let r=0;r<g;++r){const a=Math.max(0,Math.ceil((M-r)/p)),i=Math.min(h.outHeight,(h.inHeight+M-r)/p),o=r*v+s;for(let s=0;s<y;++s){const l=Math.max(0,Math.ceil((O-s)/f)),u=Math.min(h.outWidth,(h.inWidth+O-s)/f),c=s*k+o;for(let o=0;o<h.inChannels;++o){const m=o*I+c;for(let c=0;c<h.outChannels;++c){let g=0;for(let m=0;m<h.batchSize;++m){const h=m*A,y=m*S;for(let m=t;m<n;++m){const t=(e+m*d-D)*R+h,n=m*T+y;for(let e=a;e<i;++e){const a=(r+e*p-M)*_+t,i=e*C+n;for(let e=l;e<u;++e){const t=e*$+i;g+=E[(s+e*f-O)*F+a+o]*N[t+c]}}}}x[m+c]=g}}}}}return n.makeTensorInfo(b.shape,b.dtype,b.values)}},pS={kernelName:St,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{dy:r,filter:a}=t,{pad:i,strides:o,inputShape:l}=s;yI([r],"conv3dBackpropInputV2");const u=Ce(r.shape),c=Ce(a.shape),h=Il(l,a.shape,o,1,i),d=new Vr(h.inShape,"float32"),p=d.values,[f,m,g,y]=d.strides,b=n.data.get(r.dataId).values,[x,w,v,k]=u,I=n.data.get(a.dataId).values,[N,S,T,C]=c,{batchSize:$,filterDepth:E,filterHeight:A,filterWidth:R,inChannels:_,inDepth:F,inHeight:D,inWidth:O,outChannels:M,outDepth:L,outHeight:z,outWidth:B,strideDepth:P,strideHeight:W,strideWidth:V}=h,U=E-1-h.padInfo.front,G=A-1-h.padInfo.top,j=R-1-h.padInfo.left;for(let e=0;e<$;++e)for(let t=0;t<_;++t)for(let n=0;n<F;++n){const s=n-U,r=Math.max(0,Math.ceil(s/P)),a=Math.min(L,(E+s)/P);for(let i=0;i<D;++i){const o=i-G,l=Math.max(0,Math.ceil(o/W)),u=Math.min(z,(A+o)/W);for(let c=0;c<O;++c){const h=c-j,d=Math.max(0,Math.ceil(h/V)),$=Math.min(B,(R+h)/V);let _=0;for(let n=r;n<a;++n){const r=n*P-s;for(let s=l;s<u;++s){const a=s*W-o;for(let i=d;i<$;++i){const o=x*e+w*n+v*s+k*i,l=N*(E-1-r)+S*(A-1-a)+T*(R-1-(i*V-h))+C*t;for(let e=0;e<M;++e)_+=b[o+e]*I[l+e]}}}p[f*e+m*n+g*i+y*c+t]=_}}}return n.makeTensorInfo(d.shape,d.dtype,d.values)}},fS=vI(Tt,(e=>Math.cos(e))),mS={kernelName:Tt,backendName:"cpu",kernelFunc:fS},gS=vI(Ct,(e=>Math.cosh(e))),yS={kernelName:Ct,backendName:"cpu",kernelFunc:gS},bS={kernelName:At,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{image:r,boxes:a,boxInd:i}=t,{cropSize:o,method:l,extrapolationValue:u}=s,[c,h,d,p]=r.shape,f=a.shape[0],[m,g]=o,y=Li([f,m,g,p],"float32"),b=n.data.get(a.dataId).values,x=n.data.get(i.dataId).values,w=n.data.get(r.dataId).values,v=Ce(r.shape),k=Ce(y.shape);for(let e=0;e<f;e++){const t=4*e,n=b[t],s=b[t+1],r=b[t+2],a=b[t+3],i=x[e];if(i>=c)continue;const o=m>1?(r-n)*(h-1)/(m-1):0,f=g>1?(a-s)*(d-1)/(g-1):0;for(let t=0;t<m;t++){const c=m>1?n*(h-1)+t*o:.5*(n+r)*(h-1);if(c<0||c>h-1)for(let n=0;n<g;n++)for(let s=0;s<p;s++){const r=s+n*k[2]+t*k[1]+e*k[0];y.values[r]=u}else if("bilinear"===l){const n=Math.floor(c),r=Math.ceil(c),o=c-n;for(let l=0;l<g;l++){const c=g>1?s*(d-1)+l*f:.5*(s+a)*(d-1);if(c<0||c>d-1){for(let n=0;n<p;n++){const s=n+l*k[2]+t*k[1]+e*k[0];y.values[s]=u}continue}const h=Math.floor(c),m=Math.ceil(c),b=c-h;for(let s=0;s<p;s++){let a=s+h*v[2]+n*v[1]+i*v[0];const u=w[a];a=s+m*v[2]+n*v[1]+i*v[0];const c=w[a];a=s+h*v[2]+r*v[1]+i*v[0];const d=w[a];a=s+m*v[2]+r*v[1]+i*v[0];const p=u+(c-u)*b,f=d+(w[a]-d)*b;a=s+l*k[2]+t*k[1]+e*k[0],y.values[a]=p+(f-p)*o}}}else for(let n=0;n<g;++n){const r=g>1?s*(d-1)+n*f:.5*(s+a)*(d-1);if(r<0||r>d-1){for(let s=0;s<p;s++){const r=s+n*k[2]+t*k[1]+e*k[0];y.values[r]=u}continue}const o=Math.round(r),l=Math.round(c);for(let s=0;s<p;s++){const r=s+o*v[2]+l*v[1]+i*v[0],a=s+n*k[2]+t*k[1]+e*k[0];y.values[a]=w[r]}}}}return n.makeTensorInfo(y.shape,y.dtype,y.values)}},xS={kernelName:$t,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{axis:a,exclusive:i,reverse:o}=s;yI(r,"cumprod");const l=Fu([a],r.shape.length);let u=r;null!=l&&(u=fN({inputs:{x:r},backend:n,attrs:{perm:l}}));const c=Ou(1,r.shape.length)[0];if(c!==u.shape.length-1)throw new Error(`backend.cumprod in CPU expects an inner-most axis=${u.shape.length-1} but got axis=${c}`);const h=ta(u.dtype,"int32"),d=Ae(ue(u.shape),h),p=n.data.get(u.dataId).values,f=u.shape[u.shape.length-1],m=o?(e,t)=>e+f-t-1:(e,t)=>e+t;for(let e=0;e<p.length;e+=f)for(let t=0;t<f;t++){const n=m(e,t);if(0===t)d[n]=i?1:p[n];else{const s=m(e,t-1);d[n]=i?p[s]*d[s]:p[n]*d[s]}}const g=n.makeTensorInfo(u.shape,h,d);if(null!=l){const e=fN({inputs:{x:g},backend:n,attrs:{perm:Du(l)}});return n.disposeIntermediateTensorInfo(g),n.disposeIntermediateTensorInfo(u),e}return g}},wS={kernelName:Et,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{axis:a,exclusive:i,reverse:o}=s;yI(r,"cumsum");const l=Fu([a],r.shape.length);let u=r;null!=l&&(u=fN({inputs:{x:r},backend:n,attrs:{perm:l}}));const c=Ou(1,r.shape.length)[0];if(c!==u.shape.length-1)throw new Error(`backend.cumsum in CPU expects an inner-most axis=${u.shape.length-1} but got axis=${c}`);const h=ta(u.dtype,"int32"),d=Re(ue(u.shape),h),p=n.data.get(u.dataId).values,f=u.shape[u.shape.length-1],m=o?(e,t)=>e+f-t-1:(e,t)=>e+t;for(let e=0;e<p.length;e+=f)for(let t=0;t<f;t++){const n=m(e,t);if(0===t)d[n]=i?0:p[n];else{const s=m(e,t-1);d[n]=i?p[s]+d[s]:p[n]+d[s]}}const g=n.makeTensorInfo(u.shape,h,d);if(null!=l){const e=fN({inputs:{x:g},backend:n,attrs:{perm:Du(l)}});return n.disposeIntermediateTensorInfo(g),n.disposeIntermediateTensorInfo(u),e}return g}},vS={kernelName:Rt,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{x:r,weights:a}=t,{size:i,binaryOutput:o}=s;if(1===r.shape.length){const e=UN(n.data.get(r.dataId).values,n.data.get(a.dataId).values,a.dtype,a.shape,i);return n.makeTensorInfo([i],a.dtype,e)}if(2===r.shape.length){const e=GN(n.bufferSync(r),n.bufferSync(a),i,o);return n.makeTensorInfo(e.shape,a.dtype,e.values)}throw new Error(`Error in denseBincount: input must be at most rank 2, but got rank${r.shape.length}.`)}},kS={kernelName:_t,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{blockSize:a,dataFormat:i}=s;ie("NHWC"===i,(()=>`Only NHWC dataFormat supported on CPU for depthToSpace. Got ${i}`));const o=r.shape[0],l=r.shape[1],u=r.shape[2],c=r.shape[3],h=l*a,d=u*a,p=c/(a*a),f=n.data.get(r.dataId).values,m=new Float32Array(o*h*d*p);let g=0;for(let e=0;e<o;++e)for(let t=0;t<h;++t){const n=Math.floor(t/a),s=t%a;for(let t=0;t<d;++t){const r=Math.floor(t/a),i=(s*a+t%a)*p;for(let t=0;t<p;++t){const s=t+i+c*(r+u*(n+l*e));m[g++]=f[s]}}}return n.makeTensorInfo([o,h,d,p],r.dtype,m)}};function IS(e){const{inputs:t,backend:n,attrs:s}=e,{x:r,filter:a}=t,{strides:i,pad:o,dilations:l,dimRoundingMode:u}=s;yI([r,a],"depthwiseConv2DNative");const c=Ce(r.shape),h=Ce(a.shape);let d=l;null==d&&(d=[1,1]),ie(Al(i,d),(()=>`Error in depthwiseConv2d: Either strides or dilations must be 1. Got strides ${i} and dilations '${d}'`));const p=kl(r.shape,a.shape,i,d,o,u,!0),{filterHeight:f,filterWidth:m,dilationHeight:g,dilationWidth:y,padInfo:b}=p,x=b.left,w=b.top,v=p.outChannels/p.inChannels,k=new Vr(p.outShape,r.dtype),I=n.data.get(r.dataId).values,N=n.data.get(a.dataId).values,S=k.values;for(let e=0;e<p.batchSize;++e){const t=e*c[0],n=e*k.strides[0];for(let e=0;e<p.outHeight;++e){const s=n+e*k.strides[1],r=e*p.strideHeight-w;for(let e=0;e<f;++e){const n=r+e*g;if(n<0||n>=p.inHeight)continue;const a=e*h[0],i=t+n*c[1];for(let e=0;e<p.outWidth;++e){const t=s+e*k.strides[2],n=e*p.strideWidth-x;for(let e=0;e<m;++e){const s=n+e*y;if(s<0||s>=p.inWidth)continue;const r=a+e*h[1],o=i+s*p.inChannels;let l=t,u=r;for(let e=0;e<p.inChannels;++e){const t=I[o+e];for(let e=0;e<v;++e)S[l+e]+=t*N[u+e];l+=v,u+=v}}}}}}return n.makeTensorInfo(k.shape,k.dtype,k.values)}const NS={kernelName:Ft,backendName:"cpu",kernelFunc:IS},SS={kernelName:Dt,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{x:r,dy:a}=t,{strides:i,dilations:o,pad:l,dimRoundingMode:u,filterShape:c}=s;yI([r,a],"depthwiseConv2dNativeBackpropFilter");const h=kl(r.shape,c,i,o,l,u,!0),{strideHeight:d,strideWidth:p,filterHeight:f,filterWidth:m}=h,g=new Vr(h.filterShape,"float32"),y=h.padInfo.left,b=h.padInfo.top,x=h.outChannels/h.inChannels,w=n.data.get(r.dataId).values,v=new Vr(r.shape,r.dtype,w),k=n.data.get(a.dataId).values,I=new Vr(a.shape,a.dtype,k);for(let e=0;e<f;++e){const t=Math.max(0,Math.ceil((b-e)/d)),n=Math.min(h.outHeight,(h.inHeight+b-e)/d);for(let s=0;s<m;++s){const r=Math.max(0,Math.ceil((y-s)/p)),a=Math.min(h.outWidth,(h.inWidth+y-s)/p);for(let i=0;i<h.outChannels;++i){const o=Math.trunc(i/x),l=i%x;let u=0;for(let l=0;l<h.batchSize;++l)for(let c=t;c<n;++c){const t=e+c*d-b;for(let e=r;e<a;++e){const n=s+e*p-y;u+=v.get(l,t,n,o)*I.get(l,c,e,i)}}g.set(u,e,s,o,l)}}}return n.makeTensorInfo(g.shape,g.dtype,g.values)}},TS={kernelName:Ot,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{dy:r,filter:a}=t,{strides:i,dilations:o,pad:l,dimRoundingMode:u,inputShape:c}=s;yI([r,a],"depthwiseConv2DNativeBackpropInput");const h=Ce(r.shape),d=Ce(a.shape),p=kl(c,a.shape,i,o,l,u,!0),f=new Vr(p.inShape,"float32"),m=f.values,[g,y,b]=f.strides,x=n.data.get(r.dataId).values,[w,v,k]=h,I=n.data.get(a.dataId).values,[N,S,T]=d,{batchSize:C,filterHeight:$,filterWidth:E,inChannels:A,inHeight:R,inWidth:_,outChannels:F,outHeight:D,outWidth:O,strideHeight:M,strideWidth:L}=p,z=$-1-p.padInfo.top,B=E-1-p.padInfo.left,P=F/A;for(let e=0;e<C;++e)for(let t=0;t<A;++t)for(let n=0;n<R;++n){const s=n-z,r=Math.max(0,Math.ceil(s/M)),a=Math.min(D,($+s)/M);for(let i=0;i<_;++i){const o=i-B,l=Math.max(0,Math.ceil(o/L)),u=Math.min(O,(E+o)/L);let c=0;for(let n=r;n<a;++n){const r=n*M-s;for(let s=l;s<u;++s){const a=w*e+v*n+k*s,i=N*($-1-r)+S*(E-1-(s*L-o))+T*t;for(let e=0;e<P;++e)c+=x[a+(t*P+e)]*I[i+e]}}m[g*e+y*n+b*i+t]=c}}return n.makeTensorInfo(f.shape,f.dtype,f.values)}},CS={kernelName:Mt,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n}=e,{x:s}=t,r=ue(s.shape),a=n.data.get(s.dataId).values,i=Li([r,r],s.dtype),o=i.values;for(let e=0;e<a.length;e++)o[e*r+e]=a[e];const l=[...s.shape,...s.shape];return n.makeTensorInfo(l,i.dtype,i.values)}},$S={kernelName:Lt,backendName:"cpu",kernelFunc:({inputs:e,backend:t,attrs:n})=>{const{x:s,filter:r}=e,{strides:a,pad:i,dilations:o}=n,l=t,u=l.data.get(s.dataId).values,c=s.shape.length,h=l.data.get(r.dataId).values,d=r.shape.length,{batchSize:p,inHeight:f,inWidth:m,inChannels:g,outHeight:y,outWidth:b,padInfo:x,strideHeight:w,strideWidth:v,filterHeight:k,filterWidth:I,dilationHeight:N,dilationWidth:S,outShape:T}=xl(s.shape,r.shape,a,i,"NHWC",o),C=ue(T),$=T.length,E=xe(s.dtype,C);for(let e=0;e<p;++e)for(let t=0;t<y;++t){const n=t*w-x.top;for(let a=0;a<b;++a){const i=a*v-x.left;for(let o=0;o<g;++o){let l=Number.MIN_SAFE_INTEGER;for(let t=0;t<k;++t){const a=n+t*N;if(a>=0&&a<f)for(let n=0;n<I;++n){const p=i+n*S;if(p>=0&&p<m){const i=De([e,a,p,o],c,Ce(s.shape)),f=De([t,n,o],d,Ce(r.shape)),m=u[i]+h[f];m>l&&(l=m)}}}E[De([e,t,a,o],$,Ce(T))]=l}}}return{dataId:l.write($r(E,s.dtype),T,s.dtype),shape:T,dtype:s.dtype}}},ES={kernelName:Bt,backendName:"cpu",kernelFunc:({inputs:e,backend:t,attrs:n})=>{const{x:s,filter:r,dy:a}=e,{strides:i,pad:o,dilations:l}=n,u=t,c=Ee(s.shape,u.data.get(s.dataId).values),h=Ee(r.shape,u.data.get(r.dataId).values),{batchSize:d,inHeight:p,inWidth:f,inChannels:m,outHeight:g,outWidth:y,padInfo:b,strideHeight:x,strideWidth:w,filterHeight:v,filterWidth:k,dilationHeight:I,dilationWidth:N,outShape:S}=xl(s.shape,r.shape,i,o,"NHWC",l);ie(a.rank===S.length,(()=>`Error in ${Bt}, dy must have the same rank as output ${S.length}, but got ${a.rank}`));const T=Ee(S,u.data.get(a.dataId).values),C=_e(r.shape,r.dtype);for(let e=0;e<d;++e)for(let t=0;t<g;++t){const n=t*x-b.top;for(let s=0;s<y;++s){const r=s*w-b.left;for(let a=0;a<m;++a){let i=Number.MIN_SAFE_INTEGER,o=0,l=0;for(let t=0;t<v;++t){const s=n+t*I;if(s>=0&&s<p)for(let n=0;n<k;++n){const u=r+n*N;if(u>=0&&u<f){const r=c[e][s][u][a]+h[t][n][a];r>i&&(i=r,o=t,l=n)}}}C[o][l][a]+=T[e][t][s][a]}}}return{dataId:u.write($r(C,s.dtype),r.shape,r.dtype),shape:r.shape,dtype:r.dtype}}},AS={kernelName:zt,backendName:"cpu",kernelFunc:({inputs:e,backend:t,attrs:n})=>{const{x:s,filter:r,dy:a}=e,{strides:i,pad:o,dilations:l}=n,u=t,c=Ee(s.shape,u.data.get(s.dataId).values),h=Ee(r.shape,u.data.get(r.dataId).values),{batchSize:d,inHeight:p,inWidth:f,inChannels:m,outHeight:g,outWidth:y,padInfo:b,strideHeight:x,strideWidth:w,filterHeight:v,filterWidth:k,dilationHeight:I,dilationWidth:N,outShape:S}=xl(s.shape,r.shape,i,o,"NHWC",l);ie(a.rank===S.length,(()=>`Error in ${zt}, dy must have the same rank as output ${S.length}, but got ${a.rank}`));const T=Ee(S,u.data.get(a.dataId).values),C=_e(s.shape,s.dtype);for(let e=0;e<d;++e)for(let t=0;t<g;++t){const n=t*x-b.top;for(let s=0;s<y;++s){const r=s*w-b.left;for(let a=0;a<m;++a){let i=Number.MIN_SAFE_INTEGER,o=n<0?0:n,l=r<0?0:r;for(let t=0;t<v;++t){const s=n+t*I;if(s>=0&&s<p)for(let n=0;n<k;++n){const u=r+n*N;if(u>=0&&u<f){const r=c[e][s][u][a]+h[t][n][a];r>i&&(i=r,o=s,l=u)}}}C[e][o][l][a]+=T[e][t][s][a]}}}return{dataId:u.write($r(C,s.dtype),s.shape,s.dtype),shape:s.shape,dtype:s.dtype}}},RS={kernelName:"Draw",backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{image:r}=t,{canvas:a,options:i}=s,{contextOptions:o,imageOptions:l}=i||{},u=(null==l?void 0:l.alpha)||1,c=(null==o?void 0:o.contextType)||"2d";if("2d"!==c)throw new Error(`Context type ${o.contextType} is not supported by the CPU backend.`);const h=a.getContext(c,(null==o?void 0:o.contextAttributes)||{});if(null==h)throw new Error(`Could not get the context with ${c} type.`);const[d,p]=r.shape.slice(0,2),f=2===r.shape.length?1:r.shape[2],m=n.data.get(r.dataId).values,g="float32"===r.dtype?255:1,y=new Uint8ClampedArray(p*d*4);for(let e=0;e<d*p;++e){const t=[0,0,0,255*u];for(let n=0;n<f;n++){const s=m[e*f+n];if("float32"===r.dtype){if(s<0||s>1)throw new Error(`Tensor values for a float32 Tensor must be in the range [0 - 1] but encountered ${s}.`)}else if("int32"===r.dtype&&(s<0||s>255))throw new Error(`Tensor values for a int32 Tensor must be in the range [0 - 255] but encountered ${s}.`);1===f?(t[0]=s*g,t[1]=s*g,t[2]=s*g):t[n]=s*g}const n=4*e;y[n+0]=Math.round(t[0]),y[n+1]=Math.round(t[1]),y[n+2]=Math.round(t[2]),y[n+3]=Math.round(t[3])}a.width=p,a.height=d;const b=new ImageData(y,p,d);return h.putImageData(b,0,0),r}},_S=EI(((e,t)=>e*t)),FS=YI(((e,t,n,s)=>({real:e*n-t*s,imag:e*s+t*n}))),DS=XI(Mn,_S,FS),OS={kernelName:Mn,backendName:"cpu",kernelFunc:DS};function MS(e){const{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{axis:a,keepDims:i}=s;let o;yI(r,"sum"),o="bool"===r.dtype?qI({inputs:{x:r},backend:n,attrs:{dtype:"int32"}}):SI({inputs:{x:r},backend:n});const l=o.shape.length,u=ge(a,o.shape),c=Fu(u,l);let h=u,d=o;null!=c&&(d=fN({inputs:{x:o},backend:n,attrs:{perm:c}}),h=Ou(h.length,l)),_u("sum",h,d.shape.length);const[p,f]=Au(d.shape,h);let m=UI(n,p,ta(d.dtype,"int32"));const g=ue(f),y=n.data.get(m.dataId).values,b=n.data.get(d.dataId).values;for(let e=0;e<y.length;++e){const t=e*g;let n=0;for(let e=0;e<g;++e)n+=b[t+e];y[e]=n}if(i){const e=m;m=tN({inputs:{x:m},backend:n,attrs:{shape:Ru(m.shape,u)}}),n.disposeIntermediateTensorInfo(e)}return n.disposeIntermediateTensorInfo(o),null!=c&&n.disposeIntermediateTensorInfo(d),m}const LS={kernelName:Is,backendName:"cpu",kernelFunc:MS},zS={kernelName:Wt,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{equation:r}=s,a=t,{allDims:i,summedDims:o,idDims:l}=of(r,a.length);uf(i.length,l,a);const{path:u,steps:c}=cf(o,l),h=c.length;let d=null,p=i.length;const f=[];for(let e=0;e<h;++e){for(const t of c[e]){const{permutationIndices:e,expandDims:s}=lf(p,l[t]);let r;hf(e)?r=a[t]:(r=fN({inputs:{x:a[t]},backend:n,attrs:{perm:e}}),f.push(r));const i=r.shape.slice();for(let e=0;e<s.length;++e)i.splice(s[e],0,1);ce(r.shape,i)||(r=tN({inputs:{x:r},backend:n,attrs:{shape:i}}),f.push(r)),null===d?d=r:(d=DS({inputs:{a:r,b:d},backend:n}),f.push(d))}e<h-1&&(u[e]>=0&&(d=MS({inputs:{x:d},backend:n,attrs:{axis:u[e]-(i.length-p),keepDims:!1}}),f.push(d)),p--)}for(const e of f)e!==d&&n.disposeIntermediateTensorInfo(e);return d}},BS={kernelName:Ut,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n}=e,{dy:s,y:r}=t;yI([s,r],"eluGrad");const a=new Float32Array(ue(r.shape)),i=n.data.get(r.dataId).values,o=n.data.get(s.dataId).values;for(let e=0;e<i.length;++e){const t=i[e];a[e]=t>=0?o[e]:o[e]*(t+1)}return n.makeTensorInfo(r.shape,"float32",a)}},PS=EI(((e,t)=>e===t?1:0)),WS=XI(jt,PS,null,"bool"),VS={kernelName:jt,backendName:"cpu",kernelFunc:WS},US=Vp,GS=Up,jS=Gp,HS=jp,qS=Hp,KS=qp,XS=vI(Gt,(e=>{const t=Math.sign(e),n=Math.abs(e),s=1/(1+US*n);return t*(1-((((KS*s+qS)*s+HS)*s+jS)*s+GS)*s*Math.exp(-n*n))})),YS={kernelName:Gt,backendName:"cpu",kernelFunc:XS},JS=wI((e=>Math.exp(e))),ZS=kI(Ht,JS,"float32"),QS={kernelName:Ht,backendName:"cpu",kernelFunc:ZS};function eT(e){const{inputs:t,backend:n,attrs:s}=e,{input:r}=t,{dim:a}=s,i=r.shape.length,o=r.shape.slice();let l=a;return a<0&&(ie(-(i+1)<=a,(()=>`Axis must be in the interval [${-(i+1)}, ${i}]`)),l=i+a+1),o.splice(l,0,1),tN({inputs:{x:r},backend:n,attrs:{shape:o}})}const tT={kernelName:qt,backendName:"cpu",kernelFunc:eT},nT=wI((e=>Math.expm1(e))),sT=kI(Kt,nT),rT={kernelName:Kt,backendName:"cpu",kernelFunc:sT},aT=EI(((e,t)=>e/t)),iT=XI(Pt,aT),oT={kernelName:Pt,backendName:"cpu",kernelFunc:iT},lT=EI(((e,t)=>e-t)),uT=YI(((e,t,n,s)=>({real:e-n,imag:t-s}))),cT=XI(Bs,lT,uT),hT={kernelName:Bs,backendName:"cpu",kernelFunc:cT};function dT(e,t,n){const s=e.shape,r=s[0],a=s[1],i=n.data.get(e.dataId),o=i.complexTensorInfos.real,l=i.complexTensorInfos.imag,u=[r,a],c=ue(u),h=be("float32",c),d=be("float32",c);for(let e=0;e<r;e++){const s=PN({inputs:{x:o},backend:n,attrs:{begin:[e,0],size:[1,a]}}),r=PN({inputs:{x:l},backend:n,attrs:{begin:[e,0],size:[1,a]}}),i=WI({inputs:{real:s,imag:r},backend:n}),{real:u,imag:c}=pT(i,t,n),p=Kp(u,c);for(let t=0;t<a;t++){const n=Zp(p,t);h[e*a+t]=n.real,d[e*a+t]=n.imag}n.disposeIntermediateTensorInfo(s),n.disposeIntermediateTensorInfo(r),n.disposeIntermediateTensorInfo(i)}const p=n.makeTensorInfo(u,"float32",h),f=n.makeTensorInfo(u,"float32",d),m=WI({inputs:{real:p,imag:f},backend:n});return n.disposeIntermediateTensorInfo(p),n.disposeIntermediateTensorInfo(f),m}function pT(e,t,n){const s=ue(e.shape),r=n.data.get(e.dataId),a=n.data.get(r.complexTensorInfos.real.dataId).values,i=n.data.get(r.complexTensorInfos.imag.dataId).values;if((o=s)&o-1){const e=function(e,t,n){const s=new Float32Array(2*t);for(let r=0;r<t;r++){let a=0,i=0;for(let s=0;s<t;s++){const o=tf(r*s,t,n),l=Zp(e,s);a+=l.real*o.real-l.imag*o.imag,i+=l.real*o.imag+l.imag*o.real}n&&(a/=t,i/=t),Qp(s,a,i,r)}return s}(Kp(a,i),s,t);return Xp(e)}{const r=fT(a,i,s,t,n),o=[e.shape[0],e.shape[1]];if(t){const e=n.makeTensorInfo(o,"float32",r.real),t=n.makeTensorInfo(o,"float32",r.imag),a=n.makeTensorInfo([],"float32",Cr(s,"float32")),i=SI({inputs:{x:a},backend:n}),l=oT.kernelFunc({inputs:{a:e,b:a},backend:n}),u=oT.kernelFunc({inputs:{a:t,b:i},backend:n}),c=n.data.get(l.dataId).values,h=n.data.get(u.dataId).values;return n.disposeIntermediateTensorInfo(e),n.disposeIntermediateTensorInfo(t),n.disposeIntermediateTensorInfo(a),n.disposeIntermediateTensorInfo(i),n.disposeIntermediateTensorInfo(l),n.disposeIntermediateTensorInfo(u),{real:c,imag:h}}return r}var o}function fT(e,t,n,s,r){if(1===n)return{real:e,imag:t};const a=Kp(e,t),i=n/2,o=Yp(a),l=o.real,u=o.imag,c=[l.length],h=r.makeTensorInfo(c,"float32",l),d=r.makeTensorInfo(c,"float32",u),p=WI({inputs:{real:h,imag:d},backend:r}),f=Jp(a),m=f.real,g=f.imag,y=[m.length],b=r.makeTensorInfo(y,"float32",m),x=r.makeTensorInfo(y,"float32",g),w=WI({inputs:{real:b,imag:x},backend:r}),v=fT(l,u,i,s,r),k=v.real,I=v.imag,N=[k.length],S=r.makeTensorInfo(N,"float32",k),T=r.makeTensorInfo(N,"float32",I),C=WI({inputs:{real:S,imag:T},backend:r}),$=fT(m,g,i,s,r),E=$.real,A=$.imag,R=[E.length],_=r.makeTensorInfo(R,"float32",E),F=r.makeTensorInfo(R,"float32",A),D=WI({inputs:{real:_,imag:F},backend:r}),O=ef(n,s),M=[O.real.length],L=r.makeTensorInfo(M,"float32",O.real),z=r.makeTensorInfo(M,"float32",O.imag),B=WI({inputs:{real:L,imag:z},backend:r}),P=DS({inputs:{a:B,b:D},backend:r}),W=QI({inputs:{a:C,b:P},backend:r}),V=cT({inputs:{a:C,b:P},backend:r}),U=GI({inputs:{input:W},backend:r}),G=GI({inputs:{input:V},backend:r}),j=sS({inputs:{input:W},backend:r}),H=sS({inputs:{input:V},backend:r}),q=aS({inputs:[U,G],backend:r,attrs:{axis:0}}),K=aS({inputs:[j,H],backend:r,attrs:{axis:0}}),X=r.data.get(q.dataId).values,Y=r.data.get(K.dataId).values;return r.disposeIntermediateTensorInfo(h),r.disposeIntermediateTensorInfo(d),r.disposeIntermediateTensorInfo(p),r.disposeIntermediateTensorInfo(b),r.disposeIntermediateTensorInfo(x),r.disposeIntermediateTensorInfo(w),r.disposeIntermediateTensorInfo(S),r.disposeIntermediateTensorInfo(T),r.disposeIntermediateTensorInfo(C),r.disposeIntermediateTensorInfo(_),r.disposeIntermediateTensorInfo(F),r.disposeIntermediateTensorInfo(D),r.disposeIntermediateTensorInfo(L),r.disposeIntermediateTensorInfo(z),r.disposeIntermediateTensorInfo(B),r.disposeIntermediateTensorInfo(P),r.disposeIntermediateTensorInfo(W),r.disposeIntermediateTensorInfo(V),r.disposeIntermediateTensorInfo(U),r.disposeIntermediateTensorInfo(j),r.disposeIntermediateTensorInfo(G),r.disposeIntermediateTensorInfo(H),r.disposeIntermediateTensorInfo(q),r.disposeIntermediateTensorInfo(K),{real:X,imag:Y}}const mT={kernelName:Xt,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n}=e,{input:s}=t,r=ue(s.shape),a=s.shape[s.shape.length-1],i=tN({inputs:{x:s},backend:n,attrs:{shape:[r/a,a]}}),o=dT(i,!1,n),l=tN({inputs:{x:o},backend:n,attrs:{shape:s.shape}});return n.disposeIntermediateTensorInfo(i),n.disposeIntermediateTensorInfo(o),l}};function gT(e){const{backend:t,attrs:n}=e,{shape:s,value:r,dtype:a}=n,i=a||Ne(r),o=xe(i,ue(s));return function(e,t){e.fill(t)}(o,r),t.makeTensorInfo(s,i,o)}const yT={kernelName:Yt,backendName:"cpu",kernelFunc:gT},bT={kernelName:Jt,backendName:"cpu",kernelFunc:({inputs:e,attrs:t,backend:n})=>{const{image:s}=e,r=n,a=be(s.dtype,ue(s.shape)),[i,o,l,u]=s.shape,c=r.data.get(s.dataId).values;for(let e=0;e<i;e++){const t=e*l*o*u;for(let e=0;e<o;e++){const n=e*(l*u);for(let e=0;e<l;e++){const s=e*u;for(let r=0;r<u;r++){const i=Math.round(l-e-1),o=t+n+s+r;let h=c[o];i>=0&&i<l&&(h=c[t+n+i*u+r]),a[o]=h}}}}return{dataId:r.write(a,s.shape,s.dtype),shape:s.shape,dtype:s.dtype}}},xT=wI((e=>Math.floor(e))),wT=kI(Zt,xT),vT={kernelName:Zt,backendName:"cpu",kernelFunc:wT},kT=EI(((e,t)=>Math.floor(e/t))),IT=XI(Qt,kT,null,"int32"),NT={kernelName:Qt,backendName:"cpu",kernelFunc:IT},ST={kernelName:er,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{x:r,filter:a,bias:i,preluActivationWeights:o}=t,{strides:l,pad:u,dataFormat:c,dilations:h,dimRoundingMode:d,activation:p,leakyreluAlpha:f}=s;let m=oS({inputs:{x:r,filter:a},backend:n,attrs:{strides:l,pad:u,dataFormat:c,dilations:h,dimRoundingMode:d}});if(i){const e=m;if("NCHW"===c&&1===i.shape.length&&1!==i.shape[0]){const e=tN({inputs:{x:i},backend:n,attrs:{shape:[i.shape[0],1,1]}});m=QI({inputs:{a:m,b:e},backend:n}),n.disposeIntermediateTensorInfo(e)}else m=QI({inputs:{a:m,b:i},backend:n});n.disposeIntermediateTensorInfo(e)}if(p){const e=m;if("NCHW"===c&&"prelu"===p&&1===o.shape.length&&1!==o.shape[0]){const e=tN({inputs:{x:o},backend:n,attrs:{shape:[o.shape[0],1,1]}});m=PI(n,m,p,e,f),n.disposeIntermediateTensorInfo(e)}else m=PI(n,m,p,o,f);n.disposeIntermediateTensorInfo(e)}return m}},TT={kernelName:tr,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{x:r,filter:a,bias:i,preluActivationWeights:o}=t,{strides:l,pad:u,dataFormat:c,dilations:h,dimRoundingMode:d,activation:p,leakyreluAlpha:f}=s;let m=IS({inputs:{x:r,filter:a},backend:n,attrs:{strides:l,pad:u,dataFormat:c,dilations:h,dimRoundingMode:d}});if(i){const e=m;m=QI({inputs:{a:m,b:i},backend:n}),n.disposeIntermediateTensorInfo(e)}if(p){const e=m;m=PI(n,m,p,o,f),n.disposeIntermediateTensorInfo(e)}return m}};function CT(e,t,n,s,r,a,i,o,l){const u=Li([s,a],n);for(let n=0;n<s;n++){const s=[];let c=0;for(let t=0;t<r;t++){const a=e[n*r+t];c+=a*i[t],s.push(a)}if(c<0||c>=l/a)throw new Error(`Invalid indices: ${s} does not index into ${o}`);for(let e=0;e<a;e++)u.values[n*a+e]=t.get(...t.indexToLoc(c*a+e))}return u}const $T={kernelName:nn,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n}=e,{params:s,indices:r}=t,a=ue(s.shape),i=r.shape,o=i[i.length-1],[l,u,c,h]=Bp(s,r);if(0===u)return n.makeTensorInfo(l,s.dtype,[]);const d=CT(n.data.get(r.dataId).values,n.bufferSync(s),s.dtype,u,o,c,h,s.shape,a);return n.makeTensorInfo(l,s.dtype,d.values)}};function ET(e,t,n){const s=Li(n,e.dtype);for(let n=0;n<s.size;++n){const r=s.indexToLoc(n).slice(),a=r[0],i=r[2],o=t.locToIndex([a,i]);r[2]=t.values[o];const l=e.locToIndex(r);0<=l&&l<e.values.length&&(s.values[n]=e.values[l])}return s}const AT={kernelName:tn,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{x:r,indices:a}=t,{axis:i,batchDims:o}=s;yI([r,a],"gatherV2");const l=ge(i,r.shape)[0],u=n.data.get(a.dataId).values,c=r.shape[l];for(let e=0;e<u.length;++e){const t=u[e];ie(t<=c-1&&t>=0,(()=>`GatherV2: the index value ${t} is not in [0, ${c-1}]`))}let h=o;null==o&&(h=0);const d=ue(a.shape),p=$f(r,a,l,h),f=tN({inputs:{x:r},backend:n,attrs:{shape:[p.batchSize,p.outerSize,p.dimSize,p.sliceSize]}}),m=tN({inputs:{x:a},backend:n,attrs:{shape:[p.batchSize,d/p.batchSize]}}),g=[p.batchSize,p.outerSize,d/p.batchSize,p.sliceSize],y=n.bufferSync(m),b=ET(n.bufferSync(f),y,g);return n.disposeIntermediateTensorInfo(f),n.disposeIntermediateTensorInfo(m),n.makeTensorInfo(p.outputShape,b.dtype,b.values)}},RT=EI(((e,t)=>e>t?1:0)),_T=XI(sn,RT,null,"bool"),FT={kernelName:sn,backendName:"cpu",kernelFunc:_T},DT=EI(((e,t)=>e>=t?1:0)),OT=XI(rn,DT,null,"bool"),MT={kernelName:rn,backendName:"cpu",kernelFunc:OT},LT={kernelName:on,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n}=e,{input:s}=t,r=ue(s.shape),a=s.shape[s.shape.length-1],i=tN({inputs:{x:s},backend:n,attrs:{shape:[r/a,a]}}),o=dT(i,!0,n),l=tN({inputs:{x:o},backend:n,attrs:{shape:s.shape}});return n.disposeIntermediateTensorInfo(i),n.disposeIntermediateTensorInfo(o),l}},zT=vI(un,(e=>Number.isFinite(e)?1:0),"bool"),BT={kernelName:un,backendName:"cpu",kernelFunc:zT},PT=vI(cn,(e=>Math.abs(e)===1/0?1:0),"bool"),WT={kernelName:cn,backendName:"cpu",kernelFunc:PT},VT=vI(hn,(e=>Number.isNaN(e)?1:0),"bool"),UT={kernelName:hn,backendName:"cpu",kernelFunc:VT},GT=EI(((e,t)=>e<t?1:0)),jT=XI(pn,GT,null,"bool"),HT={kernelName:pn,backendName:"cpu",kernelFunc:jT},qT=EI(((e,t)=>e<=t?1:0)),KT=XI(fn,qT,null,"bool"),XT={kernelName:fn,backendName:"cpu",kernelFunc:KT};function YT(e,t,n){const s=(t-e)/(n-1),r=Re(n,"float32");r[0]=e;for(let e=1;e<r.length;e++)r[e]=r[e-1]+s;return r}const JT={kernelName:mn,backendName:"cpu",kernelFunc:function(e){const{backend:t,attrs:n}=e,{start:s,stop:r,num:a}=n,i=YT(s,r,a);return t.makeTensorInfo([i.length],"float32",i)}},ZT=wI((e=>Math.log(e))),QT=kI(gn,ZT),eC={kernelName:gn,backendName:"cpu",kernelFunc:QT},tC=vI(yn,(e=>Math.log1p(e))),nC={kernelName:yn,backendName:"cpu",kernelFunc:tC},sC=EI(((e,t)=>e&&t)),rC=XI(bn,sC,null,"bool"),aC={kernelName:bn,backendName:"cpu",kernelFunc:rC},iC=vI(xn,(e=>e?0:1),"bool"),oC={kernelName:xn,backendName:"cpu",kernelFunc:iC},lC=EI(((e,t)=>e||t)),uC=XI(wn,lC,null,"bool"),cC={kernelName:wn,backendName:"cpu",kernelFunc:uC},hC={kernelName:vn,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{depthRadius:a,bias:i,alpha:o,beta:l}=s;yI(r,"LRN");const u=r.shape[3],c=u-1,h=n.data.get(r.dataId).values,d=ue(r.shape),p=new Float32Array(d);function f(e){const t=e%u;let n=e-t+Math.max(0,t-a);const s=e-t+Math.min(t+a,c);let r=0;for(;n<=s;n++){const e=h[n];r+=e*e}return r}for(let e=0;e<d;e++){const t=f(e),n=h[e]*Math.pow(i+o*t,-l);p[e]=n}return n.makeTensorInfo(r.shape,r.dtype,p)}},dC={kernelName:kn,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{x:r,y:a,dy:i}=t,{depthRadius:o,bias:l,alpha:u,beta:c}=s;yI(i,"LRNGrad");const h=ue(i.shape),d=i.shape[3],p=n.data.get(i.dataId).values,f=n.data.get(r.dataId).values,m=n.data.get(a.dataId).values,g=new Float32Array(h),y=h;for(let e=0;e<y;e++){const t=e%d,n=e-t+Math.max(0,t-o),s=e-t+Math.min(d,t+o+1);let r=0;for(let e=n;e<s;e++)r+=Math.pow(f[e],2);r=u*r+l;for(let t=n;t<s;t++){let n=-2*u*c*f[t]*m[e]/r;e===t&&(n+=Math.pow(r,-c)),n*=p[e],g[t]+=n}}return n.makeTensorInfo(i.shape,r.dtype,g)}};function pC(e,t,n,s){const r=be(s,ue(n));for(let n=0;n<r.length;++n){const s=n*t;let a=e[s];for(let n=0;n<t;++n){const t=e[s+n];(Number.isNaN(t)||t>a)&&(a=t)}r[n]=a}return r}function fC(e){const{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{reductionIndices:a,keepDims:i}=s,o=n;let l=r.shape;const u=l.length,c=ge(a,l);let h=c;const d=Fu(h,u);let p=o.data.get(r.dataId).values;if(null!=d){const e=new Array(u);for(let t=0;t<e.length;t++)e[t]=l[d[t]];p=pN(p,l,r.dtype,d,e),h=Ou(h.length,u),l=e}yI(r,"max"),_u("max",h,u);const[f,m]=Au(l,h),g=pC(p,ue(m),f,r.dtype),y=o.write(g,f,r.dtype);let b=f;return i&&(b=Ru(f,c)),{dataId:y,shape:b,dtype:r.dtype}}const mC={kernelName:In,backendName:"cpu",kernelFunc:fC},gC=EI(((e,t)=>Math.max(e,t))),yC=XI(Nn,gC),bC={kernelName:Nn,backendName:"cpu",kernelFunc:yC},xC={kernelName:Sn,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{x:r}=t;yI(r,"maxPool");const{filterSize:a,strides:i,pad:o,dimRoundingMode:l}=s;ie(Al(i,1),(()=>`Error in maxPool: Either strides or dilations must be 1. Got strides ${i} and dilations '1'`));const u=wl(r.shape,a,i,1,o,l);let c;if(1===u.filterWidth&&1===u.filterHeight&&ce(u.inShape,u.outShape))c=SI({inputs:{x:r},backend:n});else{const e=n.data.get(r.dataId).values,t=Ce(r.shape),s=RN(e,r.shape,r.dtype,t,u,"max");c=n.makeTensorInfo(u.outShape,r.dtype,s.values)}return c}},wC={kernelName:Cn,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{filterSize:a,strides:i,pad:o,dimRoundingMode:l,dataFormat:u}=s;yI(r,"maxPool3d");const c=vl(r.shape,a,i,1,o,l,u),h=FN(n.data.get(r.dataId).values,r.shape,r.dtype,Ce(r.shape),c,"max");return n.makeTensorInfo(h.shape,"float32",h.values)}},vC={kernelName:$n,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{dy:r,input:a}=t,{filterSize:i,strides:o,pad:l,dimRoundingMode:u}=s;yI([r,a],"maxPool3DGrad");const c=vl(a.shape,i,o,1,l,u),h=function(e,t){const n=Li(t.outShape,"int32"),s=t.strideDepth,r=t.strideHeight,a=t.strideWidth,i=t.dilationDepth,o=t.dilationHeight,l=t.dilationWidth,u=t.effectiveFilterDepth,c=t.effectiveFilterHeight,h=t.effectiveFilterWidth,d=t.padInfo.front,p=t.padInfo.top,f=t.padInfo.left;for(let m=0;m<t.batchSize;++m)for(let g=0;g<t.inChannels;++g)for(let y=0;y<t.outDepth;++y){const b=y*s-d;let x=b;for(;x<0;)x+=i;const w=Math.min(t.inDepth,u+b);for(let s=0;s<t.outHeight;++s){const u=s*r-p;let d=u;for(;d<0;)d+=o;const v=Math.min(t.inHeight,c+u);for(let r=0;r<t.outWidth;++r){const p=r*a-f;let k=p;for(;k<0;)k+=l;const I=Math.min(t.inWidth,h+p);let N=Number.NEGATIVE_INFINITY,S=-1;for(let t=x;t<w;t+=i){const n=t-b;for(let s=d;s<v;s+=o){const r=s-u;for(let a=k;a<I;a+=l){const i=a-p,o=e.get(m,t,s,a,g);o>=N&&(N=o,S=n*c*h+r*c+i)}}}n.set(S,m,y,s,r,g)}}}return n}(n.bufferSync(a),c),d=c.strideDepth,p=c.strideHeight,f=c.strideWidth,m=c.dilationDepth,g=c.dilationHeight,y=c.dilationWidth,b=c.effectiveFilterDepth,x=c.effectiveFilterHeight,w=c.effectiveFilterWidth,v=b-1-c.padInfo.front,k=w-1-c.padInfo.left,I=x-1-c.padInfo.top,N=Li(a.shape,"float32"),S=n.bufferSync(r);for(let e=0;e<c.batchSize;++e)for(let t=0;t<c.inChannels;++t)for(let n=0;n<c.inDepth;++n)for(let s=0;s<c.inHeight;++s)for(let r=0;r<c.inWidth;++r){const a=n-v,i=s-I,o=r-k;let l=0;for(let n=0;n<b;n+=m){const s=(a+n)/d;if(!(s<0||s>=c.outDepth||Math.floor(s)!==s))for(let r=0;r<x;r+=g){const a=(i+r)/p;if(!(a<0||a>=c.outHeight||Math.floor(a)!==a))for(let i=0;i<w;i+=y){const u=(o+i)/f;if(u<0||u>=c.outWidth||Math.floor(u)!==u)continue;const d=b*x*w-1-h.get(e,s,a,u,t)===n*x*w+r*w+i?1:0;0!==d&&(l+=S.get(e,s,a,u,t)*d)}}}N.set(l,e,n,s,r,t)}return n.makeTensorInfo(N.shape,N.dtype,N.values)}},kC={kernelName:Tn,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{dy:r,input:a,output:i}=t,o=a;yI([a,i],"maxPoolGrad");const{filterSize:l,strides:u,pad:c,dimRoundingMode:h}=s,d=wl(o.shape,l,u,1,c,h),p=n.data.get(o.dataId).values,f=Li(d.outShape,o.dtype,_N(p,o.shape,o.dtype,d).values),m=d.strideHeight,g=d.strideWidth,y=d.dilationHeight,b=d.dilationWidth,x=d.effectiveFilterHeight,w=d.effectiveFilterWidth,v=w-1-d.padInfo.left,k=x-1-d.padInfo.top,I=Li(o.shape,"float32"),N=n.data.get(r.dataId).values,S=Li(r.shape,"float32",N);for(let e=0;e<d.batchSize;++e)for(let t=0;t<d.inChannels;++t)for(let n=0;n<d.inHeight;++n)for(let s=0;s<d.inWidth;++s){const r=n-k,a=s-v;let i=0;for(let n=0;n<x;n+=y){const s=(r+n)/m;if(!(s<0||s>=d.outHeight||Math.floor(s)!==s))for(let r=0;r<w;r+=b){const o=(a+r)/g;if(o<0||o>=d.outWidth||Math.floor(o)!==o)continue;const l=x*w-1-f.get(e,s,o,t)===n*w+r?1:0;0!==l&&(i+=S.get(e,s,o,t)*l)}}I.set(i,e,n,s,t)}return n.makeTensorInfo(I.shape,I.dtype,I.values)}},IC={kernelName:En,backendName:"cpu",kernelFunc:({inputs:e,attrs:t,backend:n})=>{const{x:s}=e,{filterSize:r,strides:a,pad:i,includeBatchInIndex:o}=t,l=n;yI(s,"MaxPoolWithArgmax");const u=l.data.get(s.dataId).values,c=wl(s.shape,r,a,[1,1],i),[h,d]=function(e,t,n,s,r){const a=RN(e,0,n,Ce(t),r,"max"),i=_N(e,t,n,r,!0,s);return[a.values,i.values]}(u,s.shape,s.dtype,o,c),p=l.write(h,c.outShape,s.dtype),f=l.write(d,c.outShape,s.dtype);return[{dataId:p,shape:c.outShape,dtype:s.dtype},{dataId:f,shape:c.outShape,dtype:"int32"}]}},NC={kernelName:An,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{axis:a,keepDims:i}=s,o=ge(a,r.shape),l=ue(Au(r.shape,o)[1]),u=[],c=n.makeTensorInfo([],"float32",new Float32Array([l]));u.push(c);const h=qI({inputs:{x:r},backend:n,attrs:{dtype:"float32"}});u.push(h);const d=iT({inputs:{a:h,b:c},backend:n});u.push(d);const p=MS({inputs:{x:d},backend:n,attrs:{axis:a,keepDims:i}});return u.forEach((e=>n.disposeIntermediateTensorInfo(e))),p}},SC={kernelName:Rn,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{axis:a,keepDims:i}=s;yI(r,"min");const o=ge(a,r.shape);let l=o;const u=Fu(l,r.shape.length);let c=r;null!=u&&(c=fN({inputs:{x:r},backend:n,attrs:{perm:u}}),l=Ou(l.length,r.shape.length)),_u("min",l,c.shape.length);const[h,d]=Au(c.shape,l),p=ue(d),f=Re(ue(h),c.dtype),m=n.data.get(c.dataId).values;for(let e=0;e<f.length;++e){const t=e*p;let n=m[t];for(let e=0;e<p;++e){const s=m[t+e];(Number.isNaN(s)||s<n)&&(n=s)}f[e]=n}null!=u&&n.disposeIntermediateTensorInfo(c);const g=n.makeTensorInfo(h,c.dtype,f);if(i){const e=tN({inputs:{x:g},backend:n,attrs:{shape:Ru(h,o)}});return n.disposeIntermediateTensorInfo(g),e}return g}},TC=EI(((e,t)=>Math.min(e,t))),CC=XI(_n,TC),$C={kernelName:_n,backendName:"cpu",kernelFunc:CC},EC={kernelName:Fn,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{paddings:a,mode:i}=s;yI(r,"mirrorPad");const o=a.map(((e,t)=>e[0]+r.shape[t]+e[1])),l=a.map((e=>e[0])),u=a.map(((e,t)=>e[0]+r.shape[t])),c="reflect"===i?0:1,h=n.data.get(r.dataId).values,d=r.shape.length,p=Ce(r.shape),f=ue(o),m=o.length,g=Ce(o),y=be(r.dtype,f);for(let e=0;e<f;e++){let t=Oe(e,m,g);for(let e=0;e<m;e++)t[e]<l[e]?t[e]=2*l[e]-t[e]-c:t[e]>=u[e]&&(t[e]=2*(u[e]-1)-t[e]+c);t=t.map(((e,t)=>e-l[t]));const n=De(t,d,p);y[e]=h[n]}return{dataId:n.write(y,o,r.dtype),shape:o,dtype:r.dtype}}},AC=EI(((e,t)=>{const n=e%t;return e<0&&t<0||e>=0&&t>=0?n:(n+t)%t})),RC=XI(Dn,AC),_C={kernelName:Dn,backendName:"cpu",kernelFunc:RC};function FC(e){const{inputs:t,backend:n,attrs:s}=e,{logits:r}=t,{dim:a}=s,i=r.shape.length;let o=a;if(-1===o&&(o=i-1),o!==i-1)throw Error(`Softmax along a non-last dimension is not yet supported. Logits was rank ${i} and dim was ${o}`);const l=ge([o],r.shape),u=fC({inputs:{x:r},backend:n,attrs:{reductionIndices:l,keepDims:!1}}),c=Ru(u.shape,l),h=tN({inputs:{x:u},backend:n,attrs:{shape:c}}),d=cT({inputs:{a:r,b:h},backend:n}),p=ZS({inputs:{x:d},backend:n}),f=MS({inputs:{x:p},backend:n,attrs:{axis:l,keepDims:!1}}),m=tN({inputs:{x:f},backend:n,attrs:{shape:c}}),g=iT({inputs:{a:p,b:m},backend:n});return n.disposeIntermediateTensorInfo(u),n.disposeIntermediateTensorInfo(h),n.disposeIntermediateTensorInfo(d),n.disposeIntermediateTensorInfo(p),n.disposeIntermediateTensorInfo(f),n.disposeIntermediateTensorInfo(m),g}const DC={kernelName:Ts,backendName:"cpu",kernelFunc:FC},OC={kernelName:On,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{logits:r}=t,{numSamples:a,seed:i,normalized:o}=s;yI(r,"multinomial");const l=o?r:FC({inputs:{logits:r},backend:n,attrs:{dim:-1}}),u=l.shape[0],c=l.shape[1],h=n.data.get(l.dataId).values,d=[u,a],p=Re(ue(d),"int32");for(let e=0;e<u;++e){const t=e*c,n=new Float32Array(c-1);n[0]=h[t];for(let e=1;e<n.length;++e)n[e]=n[e-1]+h[t+e];const s=Yc.alea(i.toString()),r=e*a;for(let e=0;e<a;++e){const t=s();p[r+e]=n.length;for(let s=0;s<n.length;s++)if(t<n[s]){p[r+e]=s;break}}}return o||n.disposeIntermediateTensorInfo(l),n.makeTensorInfo(d,"int32",p)}};function MC(e,t,n){const s=Cr(-1,n);return _S([],t,s,e,n)}const LC={kernelName:Ln,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n}=e,{x:s}=t;yI(s,"neg");const r=n.data.get(s.dataId).values,[a,i]=MC(r,s.shape,s.dtype);return n.makeTensorInfo(i,s.dtype,a)}},zC=Md,BC={kernelName:Bn,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{boxes:r,scores:a}=t,{maxOutputSize:i,iouThreshold:o,scoreThreshold:l}=s;yI(r,"NonMaxSuppression");const u=n.data.get(r.dataId).values,c=n.data.get(a.dataId).values,{selectedIndices:h}=zC(u,c,i,o,l);return n.makeTensorInfo([h.length],"int32",new Int32Array(h))}},PC=Ld,WC={kernelName:Pn,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{boxes:r,scores:a}=t,{maxOutputSize:i,iouThreshold:o,scoreThreshold:l,padToMaxOutputSize:u}=s;yI(r,"NonMaxSuppressionPadded");const c=n.data.get(r.dataId).values,h=n.data.get(a.dataId).values,{selectedIndices:d,validOutputs:p}=PC(c,h,i,o,l,u);return[n.makeTensorInfo([d.length],"int32",new Int32Array(d)),n.makeTensorInfo([],"int32",new Int32Array([p]))]}},VC=zd,UC={kernelName:Wn,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{boxes:r,scores:a}=t,{maxOutputSize:i,iouThreshold:o,scoreThreshold:l,softNmsSigma:u}=s;yI(r,"NonMaxSuppressionWithScore");const c=n.data.get(r.dataId).values,h=n.data.get(a.dataId).values,d=i,p=o,f=l,m=u,{selectedIndices:g,selectedScores:y}=VC(c,h,d,p,f,m);return[n.makeTensorInfo([g.length],"int32",new Int32Array(g)),n.makeTensorInfo([y.length],"float32",new Float32Array(y))]}},GC=EI(((e,t)=>e!==t?1:0)),jC=XI(zn,GC,null,"bool"),HC={kernelName:zn,backendName:"cpu",kernelFunc:jC},qC={kernelName:Un,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{indices:r}=t,{dtype:a,depth:i,onValue:o,offValue:l}=s;yI(r,"oneHot");const u=ue(r.shape),c=new Float32Array(u*i);c.fill(l);const h=n.data.get(r.dataId).values;for(let e=0;e<u;++e)h[e]>=0&&h[e]<i&&(c[e*i+h[e]]=o);return n.makeTensorInfo([...r.shape,i],a,c)}};function KC(e){const{inputs:t,backend:n}=e,{x:s}=t;if("string"===s.dtype)throw new Error("zerosLike is not supported for string tensors");if("complex64"===s.dtype){const e=GI({inputs:{input:s},backend:n}),t=KC({inputs:{x:e},backend:n}),r=sS({inputs:{input:s},backend:n}),a=KC({inputs:{x:r},backend:n}),i=WI({inputs:{real:t,imag:a},backend:n});return n.disposeIntermediateTensorInfo(e),n.disposeIntermediateTensorInfo(t),n.disposeIntermediateTensorInfo(r),n.disposeIntermediateTensorInfo(a),i}return gT({backend:n,attrs:{shape:s.shape,value:0,dtype:s.dtype}})}const XC={kernelName:Xs,backendName:"cpu",kernelFunc:KC},YC={kernelName:Vn,backendName:"cpu",kernelFunc:function e(t){const{inputs:n,backend:s}=t,{x:r}=n;if("string"===r.dtype)throw new Error("onesLike is not supported for string tensors");if("complex64"===r.dtype){const t=GI({inputs:{input:r},backend:s}),n=e({inputs:{x:t},backend:s}),a=sS({inputs:{input:r},backend:s}),i=KC({inputs:{x:a},backend:s}),o=WI({inputs:{real:n,imag:i},backend:s});return s.disposeIntermediateTensorInfo(t),s.disposeIntermediateTensorInfo(n),s.disposeIntermediateTensorInfo(a),s.disposeIntermediateTensorInfo(i),o}return gT({backend:s,attrs:{shape:r.shape,value:1,dtype:r.dtype}})}};function JC(e){const{inputs:t,backend:n,attrs:s}=e,{axis:r}=s;if(1===t.length)return eT({inputs:{input:t[0]},backend:n,attrs:{dim:r}});const a=t[0].shape,i=t[0].dtype;t.forEach((e=>{oe(a,e.shape,"All tensors passed to stack must have matching shapes"),ie(i===e.dtype,(()=>"All tensors passed to stack must have matching dtypes"))}));const o=[],l=aS({inputs:t.map((e=>{const t=eT({inputs:{input:e},backend:n,attrs:{dim:r}});return o.push(t),t})),backend:n,attrs:{axis:r}});return o.forEach((e=>n.disposeIntermediateTensorInfo(e))),l}const ZC={kernelName:Gn,backendName:"cpu",kernelFunc:JC},QC={kernelName:jn,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{paddings:a,constantValue:i}=s;yI(r,"pad");const o=a.map(((e,t)=>e[0]+r.shape[t]+e[1])),l=a.map((e=>e[0])),u=n.data.get(r.dataId).values,c=ue(r.shape),h=r.shape.length,d=Ce(r.shape),p=ue(o),f=o.length,m=Ce(o),g=be(r.dtype,p);0!==i&&g.fill(i);for(let e=0;e<c;e++)g[De(Oe(e,h,d).map(((e,t)=>e+l[t])),f,m)]=u[e];return{dataId:n.write(g,o,r.dtype),shape:o,dtype:r.dtype}}},e$=EI(((e,t)=>Math.pow(e,t))),t$=XI(Hn,e$),n$={kernelName:Hn,backendName:"cpu",kernelFunc:t$};function s$(e,t,n,s){const[r,a]=Au(e,s),i=ta(t,"int32"),o=Re(ue(r),i),l=ue(a);for(let e=0;e<o.length;++e){const t=e*l;let s=1;for(let e=0;e<l;++e)s*=n[t+e];o[e]=s}return{outVals:o,outShape:r,outDtype:i}}const r$={kernelName:Kn,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{axis:a,keepDims:i}=s;yI(r,"prod");const o=r.shape.length,l=ge(a,r.shape),u=Fu(l,o);let c=l,h=r;const d=[];null!=u&&(h=fN({inputs:{x:r},backend:n,attrs:{perm:u}}),d.push(h),c=Ou(c.length,o));const p=n.data.get(h.dataId).values,{outVals:f,outShape:m,outDtype:g}=s$(h.shape,h.dtype,p,c);let y=m;return i&&(y=Ru(m,l)),d.forEach((e=>n.disposeIntermediateTensorInfo(e))),n.makeTensorInfo(y,g,f)}};function a$(e,t){const n=e.slice(0,t);for(;n.length<t;)n.push(1);for(let s=t;s<e.length;s++)n[t-1]*=e[s];return n}function i$(e,t,n,s,r,a,i,o){if(0===e.length)throw new Error("paramsNestedSplits must be non empty");if(0===t[0].length)throw new Error("Split tensors must not be scalars");if(function(e,t,n){e.forEach(((e,s)=>{if(e<0||e>=n){const r=Oe(s,t.length,Ce(t)).join(",");throw new Error(`indices[${r}] = ${e} is not in [0, ${n})`)}}))}(a,i,t[0][0]-1),0===s.length)throw new Error("params.rank must be nonzero");const l=s[0],{outSplits:u,valueSlices:c,numValues:h}=function(e,t,n,s){const r=[];let a=0;const i=t.length-1+n.length,o=new Array(i).fill(null).map((()=>[0]));!function(e,t){for(let n=0;n<e.length;++n){const s=e[n],r=n===e.length-1?t:e[n+1].length;if(0===s.length)throw new Error("Ragged splits may not be empty");if(s[0]<0)throw new Error("Ragged splits must be non-negative");if(s[s.length-1]>r)throw new Error("Ragged splits must not point past values");for(let e=1;e<s.length;++e)if(s[e-1]>s[e])throw new Error("Ragged splits must be sorted in ascending order")}}(n,s);let l=1;for(let e=0;e<t.length-1;++e){l*=t[e];const n=t[e+1];for(let t=1;t<l+1;++t)o[e].push(t*n)}for(let s=0;s<e.length;++s){let i=e[s],l=e[s]+1;for(let e=0;e<n.length;++e){const s=n[e],r=e+t.length-1;if(r>=0){const e=o[r],t=e[e.length-1]-s[i];for(let e=i;e<l;++e)o[r].push(s[e+1]+t)}i=s[i],l=s[l]}l!==i&&(r.push([i,l]),a+=l-i)}return{outSplits:o,valueSlices:r,numValues:a}}(a,i,e,l),d=function(e){const t=[];for(let n=0;n<e.length;++n){const s=xe("int32",e[n].length);t.push(s),e[n].forEach(((e,t)=>s[t]=e))}return t}(u),p=function(e,t,n,s,r){const a=t.slice();a[0]=r;const i=xe(n,ue(a)),o=e.length;return function(e,t,n,s,r,a){const i=a$(t,2)[1],o=a$(a,2)[1];let l=0;for(const t of n)for(let n=t[0];n<t[1];++n){for(let t=0;t<s;++t)r[l*o+t]=e[n*i+t];++l}}(e,t,s,0===o?0:o/t[0],i,a),[i,a]}(n,s,r,c,h);return[d,p[0],p[1]]}const o$={kernelName:Xn,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{paramsNestedSplits:r,paramsDenseValues:a,indices:i}=t,{outputRaggedRank:o}=s,l=r.map((e=>n.data.get(e.dataId).values)),u=r.map((e=>e.shape)),c=n.data.get(a.dataId).values,h=n.data.get(i.dataId).values,[d,p,f]=i$(l,u,c,a.shape,a.dtype,h,i.shape),m=d.map((e=>n.makeTensorInfo([e.length],"int32",e))),g=n.makeTensorInfo(f,a.dtype,p);return m.concat([g])}},l$=2147483647;function u$(e,t,n,s,r,a,i){if(t.length>1)throw new Error("starts must be a scalar or vector");if(r.length>1)throw new Error("limits must be a scalar or vector");if(i.length>1)throw new Error("deltas must be a scalar or vector");const o=0===t.length,l=0===r.length,u=0===i.length,c=[];o||c.push(t[0]),l||c.push(r[0]),u||c.push(i[0]);for(let e=1;e<c.length;++e)if(c[e]!==c[e-1])throw new Error("starts, limits, and deltas must have the same shape");const h=0===c.length?1:c[0],d=xe("int32",h+1);d[0]=0;for(let t=0;t<h;++t){const n=o?e[0]:e[t],r=l?s[0]:s[t],i=u?a[0]:a[t];if(0===i)throw new Error("Requires delta != 0");let c;if(i>0&&r<n||i<0&&r>n)c=0;else if(c=Math.ceil(Math.abs((r-n)/i)),c>l$)throw new Error(`Requires ((limit - start) / delta) <= ${l$}`);d[t+1]=d[t]+c}const p=xe(n,d[h]);let f=0;for(let t=0;t<h;++t){const n=d[t+1]-d[t];let s=o?e[0]:e[t];const r=u?a[0]:a[t];for(let e=0;e<n;++e)p[f++]=s,s+=r}return[d,p]}const c$={kernelName:Yn,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n}=e,{starts:s,limits:r,deltas:a}=t,i=n.data.get(s.dataId).values,o=n.data.get(r.dataId).values,l=n.data.get(a.dataId).values,[u,c]=u$(i,s.shape,s.dtype,o,r.shape,l,a.shape);return[n.makeTensorInfo([u.length],"int32",u),n.makeTensorInfo([c.length],s.dtype,c)]}};var h$=Tp;class d${constructor(e,t,n,s,r,a,i,o,l,u){this.shape=e,this.shapeShape=t,this.values=n,this.valuesShape=s,this.valuesDType=r,this.defaultValue=a,this.defaultValueShape=i,this.rowPartitionValues=o,this.rowPartitionValuesShapes=l,this.rowPartitionTypes=$p(u),this.raggedRank=Ep(this.rowPartitionTypes)}getRowPartitionTypeByDimension(e){return this.rowPartitionTypes[0]===h$.FIRST_DIM_SIZE?this.rowPartitionTypes[e+1]:this.rowPartitionTypes[e]}getRowPartitionTensor(e){return this.rowPartitionTypes[0]===h$.FIRST_DIM_SIZE?this.rowPartitionValues[e+1]:this.rowPartitionValues[e]}getMaxWidth(e){const t=this.getRowPartitionTensor(e-1);switch(this.getRowPartitionTypeByDimension(e-1)){case h$.VALUE_ROWIDS:return d$.getMaxWidthValueRowID(t);case h$.ROW_SPLITS:return d$.getMaxWidthRowSplit(t);default:throw new Error(`Cannot handle partition type ${h$[this.getRowPartitionTypeByDimension(e-1)]}`)}}static getMaxWidthRowSplit(e){const t=e.length;if(0===t||1===t)return 0;let n=0;for(let s=0;s<t-1;++s){const t=e[s+1]-e[s];t>n&&(n=t)}return n}static getMaxWidthValueRowID(e){const t=e.length;if(0===t)return 0;let n=0,s=e[0],r=0;for(let a=1;a<t;++a){const t=e[a];t!==s&&(s=t,r=Math.max(a-n,r),n=a)}return Math.max(t-n,r)}tensorShapeFromTensor(e,t,n=!0){if(0===t.length){if(-1===e[0])return[];throw new Error("The only valid scalar shape tensor is the fully unknown shape specified as -1.")}return f$(e,n)}calculateOutputSize(e){const t=this.valuesShape;Ap(this.defaultValueShape,t);const n=this.tensorShapeFromTensor(this.shape,this.shapeShape),s=Cp(this.raggedRank,n,t);s[0]<0&&(s[0]=e);for(let e=1;e<=this.raggedRank;++e)s[e]<0&&(s[e]=this.getMaxWidth(e));return s}calculateFirstParentOutputIndex(e,t,n){const s=Math.min(e,n),r=[];let a=0;for(let e=0;e<s;++e,a+=t)r.push(a);for(let t=s;t<e;++t)r.push(-1);return ie(r.length===e,(()=>"Final length of result must be equal to firstDimension.")),r}calculateOutputIndexRowSplit(e,t,n,s){const r=e.length,a=[];for(let i=0;i<r-1;++i){const r=e[i+1]-e[i];let o=Math.min(s,r),l=t[i];-1===l&&(o=0);for(let e=0;e<o;++e)a.push(l),l+=n;for(let e=0;e<r-o;++e)a.push(-1)}if(r>0&&a.length!==e[r-1])throw new Error("Invalid row split size.");return a}calculateOutputIndexValueRowID(e,t,n,s){const r=e.length,a=[];if(0===r)return[];let i=0,o=e[0];if(o>=t.length)throw new Error(`Got currentValueRowId=${o}, which is not less than ${t.length}`);let l=t[o];a.push(l);for(let u=1;u<r;++u){const r=e[u];if(r===o)l>=0&&(++i,i<s?l+=n:l=-1);else{if(i=0,o=r,r>=t.length)throw new Error(`Got nextValueRowId=${r} which is not less than ${t.length}`);l=t[r]}a.push(l)}if(a.length!==e.length)throw new Error("Invalid row ids.");return a}calculateOutputIndex(e,t,n,s){const r=this.getRowPartitionTensor(e),a=this.getRowPartitionTypeByDimension(e);switch(a){case h$.VALUE_ROWIDS:return this.calculateOutputIndexValueRowID(r,t,n,s);case h$.ROW_SPLITS:if(r.length-1>t.length)throw new Error(`Row partition size is greater than output size: ${r.length-1} > ${t.length}`);return this.calculateOutputIndexRowSplit(r,t,n,s);default:throw new Error(`Unsupported partition type: ${h$[a]}`)}}getFirstDimensionSize(){const e=this.rowPartitionValues[0];if(0===this.rowPartitionTypes.length)throw new Error("No row_partition_types given.");const t=this.rowPartitionTypes[0];switch(t){case h$.FIRST_DIM_SIZE:return e[0];case h$.VALUE_ROWIDS:throw new Error("Cannot handle VALUE_ROWIDS in first dimension.");case h$.ROW_SPLITS:return this.rowPartitionValuesShapes[0][0]-1;default:throw new Error(`Cannot handle type ${h$[t]}`)}}compute(){if(this.rowPartitionValues[0].length<=0)throw new Error("Invalid first partition input. Tensor requires at least one element.");const e=this.getFirstDimensionSize(),t=this.calculateOutputSize(e),n=new Array(this.raggedRank+1);n[n.length-1]=1;for(let e=n.length-2;e>=0;--e)n[e]=n[e+1]*t[e+1];const s=f$(t,!1),r=xe(this.valuesDType,ue(s));if(n[0]*t[0]>0){let a=this.calculateFirstParentOutputIndex(e,n[0],t[0]);for(let e=1;e<=this.raggedRank;++e)a=this.calculateOutputIndex(e-1,a,n[e],t[e]);this.setOutput(this.raggedRank,a,r,s)}return[s,r]}setOutput(e,t,n,s){if(0===n.length)return;const r=this.values,a=n;let i=s.slice();i=i.slice(e+1);const o=ue(i),l=t.length;let u=this.defaultValue;if(u.length!==o&&1!==u.length){const e=this.defaultValueShape;_a((()=>{const t=Dl(u,e),n=Jl(t,i);u=n.dataSync()}))}let c=0,h=0,d=0;for(let e=0;e<=l;++e){let s=e<l?t[e]:-1;if(s!==d){if(h<d){const e=r.subarray(c*o);p$(a.subarray(h*o),e,(d-h)*o)}if(e>=l){const e=n.length;s=Math.floor(e/o)}if(s>d)if(1===this.defaultValue.length)a.subarray(d*o,s*o).fill(this.defaultValue[0]),d=s;else for(;s>d;)p$(a.slice(d*o),u,o),++d;s<0?(c=e+1,h=d):(c=e,h=d,d=h+1)}else++d}}}function p$(e,t,n){for(let s=0;s<n;s++)e[s]=t[s]}function f$(e,t){const n=[];for(let s of e){if(s<0){if(!t)throw new Error(`Dimension ${s} must be >= 0`);if(s<-1)throw new Error(`Dimension ${s} must be >= -1`);s=-1}n.push(s)}return n}function m$(e,t,n,s,r,a,i,o,l,u){return new d$(e,t,n,s,r,a,i,o,l,u).compute()}const g$={kernelName:Jn,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{shape:r,values:a,defaultValue:i,rowPartitionTensors:o}=t,{rowPartitionTypes:l}=s,u=n.data.get(r.dataId).values,c=n.data.get(a.dataId).values,h=n.data.get(i.dataId).values,d=o.map((e=>n.data.get(e.dataId).values)),p=o.map((e=>e.shape)),[f,m]=m$(u,r.shape,c,a.shape,a.dtype,h,i.shape,d,p,l);return n.makeTensorInfo(f,a.dtype,m)}};function y$(e,t,n,s){if(e===t||e<t&&n<0||t<e&&n>1)return Re(0,s);const r=Re(Math.abs(Math.ceil((t-e)/n)),s);t<e&&1===n&&(n=-1),r[0]=e;for(let e=1;e<r.length;e++)r[e]=r[e-1]+n;return r}const b$={kernelName:Zn,backendName:"cpu",kernelFunc:function(e){const{backend:t,attrs:n}=e,{start:s,stop:r,dtype:a,step:i}=n,o=y$(s,r,i,a);return t.makeTensorInfo([o.length],a,o)}},x$=vI(es,(e=>1/e)),w$={kernelName:es,backendName:"cpu",kernelFunc:x$},v$={kernelName:as,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{images:r}=t,{alignCorners:a,halfPixelCenters:i,size:o}=s;yI(r,"resizeBilinear");const l=Ce(r.shape),[u,c]=o,[h,d,p,f]=r.shape,m=n.data.get(r.dataId).values,g=new Float32Array(ue([h,u,c,f])),y=[a&&u>1?d-1:d,a&&c>1?p-1:p],b=[a&&u>1?u-1:u,a&&c>1?c-1:c];let x=0;const w=y[0]/b[0],v=y[1]/b[1];for(let e=0;e<h;e++)for(let t=0;t<u;t++){let n;n=i?w*(t+.5)-.5:w*t;const s=Math.max(0,Math.floor(n)),r=n-s,a=Math.min(d-1,Math.ceil(n)),o=e*l[0]+s*l[1],u=e*l[0]+a*l[1];for(let e=0;e<c;e++){let t;t=i?v*(e+.5)-.5:v*e;const n=Math.max(0,Math.floor(t)),s=t-n,a=Math.min(p-1,Math.ceil(t)),c=o+n*l[2],h=u+n*l[2],d=o+a*l[2],y=u+a*l[2];for(let e=0;e<f;e++){const t=m[c+e],n=m[h+e],a=t+(m[d+e]-t)*s,i=a+(n+(m[y+e]-n)*s-a)*r;g[x++]=i}}}return n.makeTensorInfo([h,u,c,f],"float32",g)}},k$={kernelName:is,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{images:r,dy:a}=t,{alignCorners:i}=s;yI([a,r],"resizeBilinearGrad");const o=Ce(r.shape),[l,u,c,h]=r.shape,[,d,p]=a.shape,f=new Float32Array(l*u*c*h),m=[i&&d>1?u-1:u,i&&p>1?c-1:c],g=[i&&d>1?d-1:d,i&&p>1?p-1:p],y=m[0]/g[0],b=m[1]/g[1],x=n.data.get(a.dataId).values;let w=0;for(let e=0;e<l;e++){const t=e*o[0];for(let e=0;e<d;e++){const n=e*y,s=Math.floor(n),r=Math.min(Math.ceil(n),u-1),a=t+s*o[1],i=t+r*o[1],l=n-s,d=1-l;for(let e=0;e<p;e++){const t=e*b,n=Math.floor(t),s=Math.min(Math.ceil(t),c-1),r=t-n,u=1-r,p=a+n*o[2],m=a+s*o[2],g=i+n*o[2],y=i+s*o[2],v=d*u,k=d*r,I=l*u,N=l*r;for(let e=0;e<h;e++){const t=x[w++];f[p+e]+=t*v,f[m+e]+=t*k,f[g+e]+=t*I,f[y+e]+=t*N}}}}return n.makeTensorInfo([l,c,u,h],"float32",f)}},I$={kernelName:ss,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{images:r}=t,{alignCorners:a,halfPixelCenters:i,size:o}=s;yI(r,"resizeNearestNeighbor");const l=Ce(r.shape),[u,c]=o,[h,d,p,f]=r.shape,m=n.data.get(r.dataId).values,g=new Float32Array(h*u*c*f),y=[a&&u>1?d-1:d,a&&c>1?p-1:p],b=[a&&u>1?u-1:u,a&&c>1?c-1:c],x=y[0]/b[0],w=y[1]/b[1];let v=0;for(let e=0;e<h;e++){const t=e*l[0];for(let e=0;e<u;e++){const n=i?x*(e+.5):x*e;let s=Math.min(d-1,a?Math.round(n):Math.floor(n));i&&(s=Math.max(0,s));const r=t+s*l[1];for(let e=0;e<c;e++){const t=i?w*(e+.5):w*e;let n=Math.min(p-1,a?Math.round(t):Math.floor(t));i&&(n=Math.max(0,n));const s=r+n*l[2];for(let e=0;e<f;e++){const t=m[s+e];g[v++]=t}}}}return n.makeTensorInfo([h,u,c,f],r.dtype,g)}},N$={kernelName:rs,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{images:r,dy:a}=t,{alignCorners:i}=s;yI([a,r],"resizeNearestNeighborGrad");const o=Ce(r.shape),l=Ce(a.shape),[u,c,h,d]=r.shape,[,p,f]=a.shape,m=new Float32Array(u*c*h*d),g=n.data.get(a.dataId).values,y=[i&&p>1?c-1:c,i&&f>1?h-1:h],b=[i&&p>1?p-1:p,i&&f>1?f-1:f],x=y[0]/b[0],w=y[1]/b[1],v=1/x,k=1/w,I=2*Math.ceil(v)+2,N=2*Math.ceil(k)+2;for(let e=0;e<u;e++){const t=e*o[0];for(let e=0;e<c;e++){const n=t+e*o[1],s=Math.floor(e*v),r=Math.floor(s-I/2);for(let s=0;s<h;s++){const a=n+s*o[2],u=Math.floor(s*k),y=Math.floor(u-N/2);for(let n=0;n<d;n++){let o=0;for(let a=0;a<I;a++){const u=a+r;if(u<0||u>=p)continue;const d=t+u*l[1],m=u*x;if(e===Math.min(c-1,i?Math.round(m):Math.floor(m)))for(let e=0;e<N;e++){const t=e+y;if(t<0||t>=f)continue;const r=d+t*l[2],a=t*w;s===Math.min(h-1,i?Math.round(a):Math.floor(a))&&(o+=g[r+n])}}m[a+n]=o}}}}return n.makeTensorInfo(r.shape,r.dtype,m)}},S$={kernelName:ls,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{dims:a}=s;yI(r,"reverse");const i=r.shape.length,o=ge(a,r.shape);if(0===i)return SI({inputs:{x:r},backend:n});const l=new Vr(r.shape,r.dtype),u=n.bufferSync(r);for(let e=0;e<l.size;e++){const t=l.indexToLoc(e),n=t.slice();o.forEach((e=>n[e]=r.shape[e]-1-n[e])),l.set(u.get(...n),...t)}return n.makeTensorInfo(l.shape,l.dtype,l.values)}},T$={kernelName:Zs,backendName:"cpu",kernelFunc:({inputs:e,attrs:t,backend:n})=>{const{image:s}=e,{radians:r,fillValue:a,center:i}=t,o=n,l=be(s.dtype,ue(s.shape)),[u,c,h,d]=s.shape,[p,f]=Fp(i,c,h),m=Math.sin(r),g=Math.cos(r),y=o.data.get(s.dataId).values;for(let e=0;e<u;e++){const t=e*h*c*d;for(let e=0;e<c;e++){const n=e*(h*d);for(let s=0;s<h;s++){const r=s*d;for(let i=0;i<d;i++){const o=[u,e,s,i],b=o[2],x=o[1];let w=(b-p)*g-(x-f)*m,v=(b-p)*m+(x-f)*g;w=Math.round(w+p),v=Math.round(v+f);let k=a;"number"!=typeof a&&(k=3===i?255:a[i]),w>=0&&w<h&&v>=0&&v<c&&(k=y[t+v*(h*d)+w*d+i]),l[t+n+r+i]=k}}}}return{dataId:o.write(l,s.shape,s.dtype),shape:s.shape,dtype:s.dtype}}},C$=vI(us,(e=>{const t=Math.floor(e);return e-t<.5?Math.floor(e):e-t>.5?Math.ceil(e):t%2==0?t:t+1})),$$={kernelName:us,backendName:"cpu",kernelFunc:C$},E$=wI((e=>1/Math.sqrt(e))),A$=kI(cs,E$),R$={kernelName:cs,backendName:"cpu",kernelFunc:A$};function _$(e,t,n,s,r,a,i,o,l,u){const c=[s/r,r],h=e.values,d=t.values;if(0===s)return Li(n,t.dtype);const p=l instanceof Vr?l:Li(c,t.dtype);"string"==typeof l||"number"==typeof l?p.values.fill(l):"boolean"==typeof l&&p.values.fill(+l);for(let e=0;e<a;e++){const a=[];let l=0;for(let t=0;t<i;t++){const n=h[e*i+t];a.push(n),l+=n*o[t]}if(l<0||l>=s/r)throw new Error(`Invalid indices: ${a} does not index into ${n}`);for(let n=0;n<r;n++)u?p.values[l*r+n]+=d[e*r+n]:p.values[l*r+n]=0===t.rank?d[0]:d[e*r+n]}return p}const F$={kernelName:hs,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{indices:r,updates:a}=t,{shape:i}=s,{sliceRank:o,numUpdates:l,sliceSize:u,strides:c,outputSize:h}=Hh(0,r,i),d=_$(n.bufferSync(r),n.bufferSync(a),i,h,u,l,o,c,0,!0);return n.makeTensorInfo(i,d.dtype,d.values)}};function D$(e,t){let n=0,s=e.length,r=0;for(;n<s;)r=Math.floor((n+s)/2),e[r]<t?n=r+1:s=r;return s}function O$(e,t){let n=0,s=e.length,r=0;for(;n<s;)r=Math.floor((n+s)/2),e[r]<=t?n=r+1:s=r;return s}const M$={kernelName:ps,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{sortedSequence:r,values:a}=t,{side:i}=s,o=function(e,t,n,s,r,a){const i=xe("int32",n*r);for(let o=0;o<n;++o){const n=e.slice(o*s,(o+1)*s),l=o*r;for(let e=0;e<r;++e)i[l+e]="left"===a?D$(n,t[e+l]):O$(n,t[e+l])}return i}(n.data.get(r.dataId).values,n.data.get(a.dataId).values,r.shape[0],r.shape[1],a.shape[1],i);return n.makeTensorInfo(a.shape,"int32",o)}},L$={kernelName:fs,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n}=e,{condition:s,t:r,e:a}=t;yI([s,r,a],"select");const i=s.shape.length,o=n.data.get(s.dataId).values,l=n.data.get(r.dataId).values,u=n.data.get(a.dataId).values,c=ta(r.dtype,a.dtype),h=Re(ue(r.shape),c);let d=0;const p=0===i||i>1||1===r.shape.length?1:ue(r.shape.slice(1));for(let e=0;e<o.length;e++)for(let t=0;t<p;t++)1===o[e]?h[d++]=l[e]:h[d++]=u[e];return n.makeTensorInfo(r.shape,c,h)}},z$=Pp,B$=Wp,P$=vI(ms,(e=>e>=0?B$*e:z$*(Math.exp(e)-1))),W$={kernelName:ms,backendName:"cpu",kernelFunc:P$},V$=vI(xs,(e=>e<0?-1:e>0?1:0)),U$={kernelName:xs,backendName:"cpu",kernelFunc:V$},G$=vI(ys,(e=>Math.sin(e))),j$={kernelName:ys,backendName:"cpu",kernelFunc:G$},H$=vI(bs,(e=>Math.sinh(e))),q$={kernelName:bs,backendName:"cpu",kernelFunc:H$},K$=Math.log(1.1920928955078125e-7)+2,X$=vI(vs,(e=>{const t=e>-K$,n=e<K$,s=Math.exp(e);let r;return r=n?s:t?e:Math.log(1+s),r})),Y$={kernelName:vs,backendName:"cpu",kernelFunc:X$},J$={kernelName:Ns,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{blockShape:a,paddings:i}=s;yI([r],"spaceToBatchND");const o=ue(a),l=[[0,0]];l.push(...i);for(let e=1+a.length;e<r.shape.length;++e)l.push([0,0]);const u=QC.kernelFunc({inputs:{x:r},backend:n,attrs:{paddings:l,constantValue:0}}),c=Dp(u.shape,a,o,!1),h=Op(c.length,a.length,!1),d=Mp(u.shape,a,o,!1),p=tN({inputs:{x:u},backend:n,attrs:{shape:c}}),f=fN({inputs:{x:p},backend:n,attrs:{perm:h}}),m=tN({inputs:{x:f},backend:n,attrs:{shape:d}});return n.disposeIntermediateTensorInfo(u),n.disposeIntermediateTensorInfo(p),n.disposeIntermediateTensorInfo(f),m}};function Z$(e,t,n,s,r,a,i){const o=t[0],l=a[0],u=new Array(l),c=new Array(o),h=t[1];if(0===l){if(0!==o)throw new Error(ff(o));return[xe(n,0),[0,h],xe(r,0),u,c]}let d=!0,p=0;const f=new Array(l).fill(0);for(let t=0;t<o;++t){const n=e[t*h];if(n<0)throw new Error(mf(t,n));if(n>=l)throw new Error(gf(t,n,l));++f[n],d=d&&n>=p,p=n}let m=!0;for(let e=0;e<l;++e){const t=0===f[e];u[e]=t,m=m&&!t,f[e]=Math.max(f[e],1),e>0&&(f[e]+=f[e-1])}if(m&&d){const t=e,n=s;for(let e=0;e<o;++e)c[e]=e;return[t,[o,h],n,u,c]}{const t=f[l-1],a=xe(n,t*h),d=xe(r,t),p=new Array(l).fill(0);for(let t=0;t<o;++t){const n=e[t*h],r=p[n],i=(0===n?0:f[n-1])+r;p[n]++;for(let n=0;n<h;++n)a[i*h+n]=e[t*h+n];d[i]=s[t],c[t]=i}for(let e=0;e<l;++e)if(0===p[e]){const t=0===e?0:f[e-1];a[t*h+0]=e;for(let e=1;e<h;++e)a[t*h+e]=0;d[t]=i}return[a,[t,h],d,u,c]}}const Q$={kernelName:Cs,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n}=e,{indices:s,values:r,denseShape:a,defaultValue:i}=t;if(1!==a.shape.length)throw new Error(`Dense shape must be a vector, saw:\n        ${a.shape}`);if(2!==s.shape.length)throw new Error(`Indices must be a matrix, saw:\n        ${s.shape}`);if(1!==r.shape.length)throw new Error(`Values must be a vector, saw:\n        ${r.shape}`);if(0!==i.shape.length)throw new Error(`Default value must be a scalar, saw:\n        ${i.shape}`);const o=n.data.get(s.dataId).values,l=n.data.get(r.dataId).values,u=n.data.get(a.dataId).values,c=n.data.get(i.dataId).values[0],[h,d,p,f,m]=Z$(o,s.shape,s.dtype,l,r.dtype,u,c);return[n.makeTensorInfo(d,s.dtype,h),n.makeTensorInfo([d[0]],r.dtype,p),n.makeTensorInfo([f.length],"bool",new Uint8Array(f.map((e=>Number(e))))),n.makeTensorInfo([m.length],s.dtype,new Int32Array(m))]}};function eE(e,t,n,s,r){const a=ue(s),i=t[0],o=r.length,l=[];let u=1,c=-1;for(let e=0;e<o;++e){const t=r[e];if(-1===t){if(-1!==c)throw new Error(yf(c,e));c=e,l.push(1)}else{if(t<0)throw new Error(bf(e,t));u*=t,l.push(t)}}if(-1!==c){if(u<=0)throw new Error("reshape cannot infer the missing input size for an empty tensor unless all specified input sizes are non-zero");const e=Math.trunc(a/u);if(u*e!==a)throw new Error(wf(s,l));l[c]=e}if(ue(l)!==a)throw new Error(vf(s,l));const h=s.length,d=[];if(h>0){d[h-1]=1;for(let e=h-2;e>=0;--e)d[e]=d[e+1]*s[e+1]}const p=[];if(o>0){p[o-1]=1;for(let e=o-2;e>=0;--e)p[e]=p[e+1]*l[e+1]}const f=xe(n,i*o);for(let t=0;t<i;++t){let n=0;for(let s=0;s<h;++s)n+=e[t*h+s]*d[s];for(let e=0;e<o;++e)f[t*o+e]=Math.trunc(n/p[e]),n%=p[e]}return[f,[i,o],l]}const tE={kernelName:$s,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n}=e,{inputIndices:s,inputShape:r,newShape:a}=t;if(2!==s.shape.length)throw new Error(`Input indices should be a matrix but received shape\n        ${s.shape}`);if(1!==r.shape.length)throw new Error(`Input shape should be a vector but received shape\n        ${r.shape}`);if(1!==a.shape.length)throw new Error(`Target shape should be a vector but received shape ${a.shape}`);const i=Array.from(n.data.get(r.dataId).values),o=n.data.get(s.dataId).values,l=Array.from(n.data.get(a.dataId).values),[u,c,h]=eE(o,s.shape,s.dtype,i,l);return[n.makeTensorInfo(c,s.dtype,u),n.makeTensorInfo([h.length],a.dtype,new Int32Array(h))]}};function nE(e,t,n,s,r,a=!1,i=0){const o=s.length,l=[t[0],e.length/t[0]],u=l[1],c=o>0?r[o-1]+1:0;if(c<0)throw new Error("segment ids must be >= 0");const h=t.slice();h[0]=c;const d=xe(n,h.reduce(((e,t)=>e*t),1));if(0===o)return c>0&&d.fill(i),[d,h];if(c<=0)throw new Error("segment ids must be >= 0");let p=0,f=1,m=0,g=r[p];for(;;){let t=0;if(f<o){if(t=r[f],g===t){++f;continue}if(g>=t)throw new Error("segment ids are not increasing")}if(g<0||g>=c)throw new Error(Nf(g,c));g>m&&d.fill(i,m*u,g*u);for(let t=p;t<f;++t){const n=s[t];if(n<0||n>=l[0])throw new Error(Sf(t,s[t],l[0]));for(let t=0;t<u;t++)d[g*u+t]+=e[n*u+t]}if(a)for(let e=0;e<u;e++)d[g*u+e]/=f-p;if(p=f,++f,m=g+1,g=t,f>o)break}return m<c&&d.fill(i,m*u,c*u),[d,h]}const sE={kernelName:Es,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n}=e,{data:s,indices:r,segmentIds:a}=t;if(s.shape.length<1)throw new Error("Data should be at least 1 dimensional but received scalar");if(1!==r.shape.length)throw new Error(`Indices should be a vector but received shape\n          ${r.shape}`);if(1!==a.shape.length)throw new Error(`Segment ids should be a vector but received shape\n          ${a.shape}`);if(r.shape[0]!==a.shape[0])throw new Error("segmentIds and indices should have same size.");const i=n.data.get(s.dataId).values,o=n.data.get(r.dataId).values,l=n.data.get(a.dataId).values,[u,c]=nE(i,s.shape,s.dtype,o,l,!0);return n.makeTensorInfo(c,s.dtype,u)}},rE={kernelName:As,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n}=e,{data:s,indices:r,segmentIds:a}=t;if(s.shape.length<1)throw new Error("Data should be at least 1 dimensional but received scalar");if(1!==r.shape.length)throw new Error(`Indices should be a vector but received shape\n         ${r.shape}`);if(1!==a.shape.length)throw new Error(`Segment ids should be a vector but received shape\n         ${a.shape}`);if(r.shape[0]!==a.shape[0])throw new Error("segmentIds and indices should have same size.");const i=n.data.get(s.dataId).values,o=n.data.get(r.dataId).values,l=n.data.get(a.dataId).values,[u,c]=nE(i,s.shape,s.dtype,o,l);return n.makeTensorInfo(c,s.dtype,u)}},aE={kernelName:Rs,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{sparseIndices:r,sparseValues:a,defaultValue:i}=t,{outputShape:o}=s,{sliceRank:l,numUpdates:u,sliceSize:c,strides:h,outputSize:d}=Hh(0,r,o),p=!1,f=n.bufferSync(r);let m;switch(a.dtype){case"bool":m=_$(f,n.bufferSync(a),o,d,c,u,l,h,Boolean(n.data.get(i.dataId).values[0]),p);break;case"float32":case"int32":m=_$(f,n.bufferSync(a),o,d,c,u,l,h,n.data.get(i.dataId).values[0],p);break;case"string":m=_$(f,n.bufferSync(a),o,d,c,u,l,h,Rr(n.data.get(i.dataId).values[0]),p);break;default:throw new Error(`Unsupported type ${a.dtype}`)}return n.makeTensorInfo(o,m.dtype,m.values)}},iE={kernelName:Ss,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{numOrSizeSplits:a,axis:i}=s,o=ge(i,r.shape)[0],l=pf(r,a,o),u=new Array(r.shape.length).fill(0),c=r.shape.slice();return l.map((e=>{const t=[...c];t[o]=e;const s=PN({inputs:{x:r},backend:n,attrs:{begin:u,size:t}});return u[o]+=e,s}))}},oE=wI((e=>Math.sqrt(e))),lE=vI(ks,(e=>Math.sqrt(e))),uE={kernelName:ks,backendName:"cpu",kernelFunc:lE},cE={kernelName:Fs,backendName:"cpu",kernelFunc:({inputs:e,backend:t})=>{const{x:n}=e,s=t;yI(n,"square");const r=s.data.get(n.dataId).values,a=new Float32Array(r.length);for(let e=0;e<r.length;++e){const t=r[e];a[e]=t*t}return{dataId:s.write(a,n.shape,n.dtype),shape:n.shape,dtype:n.dtype}}},hE=EI(((e,t)=>{const n=e-t;return n*n})),dE=XI(_s,hE),pE={kernelName:_s,backendName:"cpu",kernelFunc:dE},fE=wI(((e,t)=>{const{pattern:n,replaceGlobal:s,rewrite:r}=t;return e.replace(new RegExp(n,s?"g":""),r)})),mE=kI(Ds,fE),gE={kernelName:Ds,backendName:"cpu",kernelFunc:mE},yE=vI(Ys,((e,t)=>{const n=t;return isNaN(e)?NaN:e>0?1:n.alpha})),bE={kernelName:Ys,backendName:"cpu",kernelFunc:yE};function xE(e,t,n,s){const r=Li(e,t.dtype);for(let e=0;e<r.size;e++){const a=r.indexToLoc(e),i=new Array(a.length);for(let e=0;e<i.length;e++)i[e]=a[e]*n[e]+s[e];r.set(t.get(...i),...a)}return r}const wE={kernelName:Os,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{begin:a,end:i,strides:o,beginMask:l,endMask:u,ellipsisMask:c,newAxisMask:h,shrinkAxisMask:d}=s;yI(r,"stridedSlice");const{finalShapeSparse:p,finalShape:f,isIdentity:m,sliceDim0:g,isSimpleSlice:y,begin:b,end:x,strides:w}=al(r.shape,a,i,o,l,u,c,h,d);let v;if(m)v=tN({inputs:{x:r},backend:n,attrs:{shape:f}});else if(g||y){ie(r.shape.length>=1,(()=>`Input must have rank at least 1, got: ${r.shape.length}`));const e=Ho(b,x,w),t=PN({inputs:{x:r},backend:n,attrs:{begin:b,size:e}});v=tN({inputs:{x:t},backend:n,attrs:{shape:f}}),n.disposeIntermediateTensorInfo(t)}else{const e=xE(p,n.bufferSync(r),w,b);v=n.makeTensorInfo(f,e.dtype,e.values)}return v}};class vE{constructor(e,t,n,s,r,a){this.separator=Ar(e),this.nGramWidths=t,this.leftPad=Ar(n),this.rightPad=Ar(s),this.padWidth=r,this.preserveShort=a}getPadWidth(e){return Math.min(this.padWidth<0?e-1:this.padWidth,e-1)}getNumNGrams(e,t){const n=this.getPadWidth(t);return Math.max(0,e+2*n-t+1)}createNGrams(e,t,n,s,r,a){for(let i=0;i<r;++i){const o=this.getPadWidth(a),l=Math.max(0,o-i),u=Math.max(0,o-(r-(i+1))),c=a-(l+u),h=t+(l>0?0:i-o);let d=0;d+=l*this.leftPad.length;for(let t=0;t<c;++t)d+=e[h+t].length;d+=u*this.rightPad.length,d+=(l+u+c-1)*this.separator.length,n[s+i]=new Uint8Array(d);const p=n[s+i];let f=0;const m=e=>e.forEach((e=>p[f++]=e));for(let e=0;e<l;++e)m(this.leftPad),m(this.separator);for(let t=0;t<c-1;++t)m(e[h+t]),m(this.separator);if(c>0){m(e[h+c-1]);for(let e=0;e<u;++e)m(this.separator),m(this.rightPad)}else{for(let e=0;e<u-1;++e)m(this.rightPad),m(this.separator);m(this.rightPad)}}}compute(e,t){const n=e.length,s=t.length;if(s>0){let e=t[0];if(0!==e)throw new Error(`First split value must be 0, got ${e}`);for(let r=1;r<s;++r){let s=t[r]>=e;if(s=s&&t[r]<=n,!s)throw new Error(`Invalid split value ${t[r]}, must be in [${e}, ${n}]`);e=t[r]}if(e!==n)throw new Error(`Last split value must be data size. Expected ${n}, got ${e}`)}const r=s-1,a=xe("int32",s);if(0===n||0===s){const e=new Array(n);for(let e=0;e<=r;++e)a[e]=0;return[e,a]}a[0]=0;for(let e=1;e<=r;++e){const n=t[e]-t[e-1];let s=0;this.nGramWidths.forEach((e=>{s+=this.getNumNGrams(n,e)})),this.preserveShort&&n>0&&0===s&&(s=1),a[e]=a[e-1]+s}const i=new Array(a[r]);for(let n=0;n<r;++n){const s=t[n];let r=a[n];if(this.nGramWidths.forEach((a=>{const o=t[n+1]-t[n],l=this.getNumNGrams(o,a);this.createNGrams(e,s,i,r,l,a),r+=l})),this.preserveShort&&r===a[n]){const a=t[n+1]-t[n];if(0===a)continue;const o=a+2*this.padWidth,l=1;this.createNGrams(e,s,i,r,l,o)}}return[i,a]}}function kE(e,t,n,s,r,a,i,o){return new vE(n,s,r,a,i,o).compute(e,t)}const IE={kernelName:Ms,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{separator:r,nGramWidths:a,leftPad:i,rightPad:o,padWidth:l,preserveShortSequences:u}=s,{data:c,dataSplits:h}=t,d=n.data.get(c.dataId).values,p=n.data.get(h.dataId).values,[f,m]=kE(d,p,r,a,i,o,l,u);return[n.makeTensorInfo([f.length],"string",f),n.makeTensorInfo(h.shape,"int32",m)]}};function NE(e,t,n,s){if(!e.length)return;if(0===t.length){for(let t=0;t<e.length;++t)s.push(e.subarray(t,t+1));return}if(1===t.length){const r=t[0];let a=e.indexOf(r);for(;-1!==a;){const t=e.subarray(0,a);n&&0===t.length||s.push(t),a=(e=e.subarray(a+1)).indexOf(r)}return void(n&&0===e.length||s.push(e))}let r=0;for(let a=0;a<e.length+1;a++)if(a===e.length||-1!==t.indexOf(e[a])){const t=e.subarray(r,a);n&&0===t.length||s.push(t),r=a+1}}function SE(e,t,n){const s=e.length,r=[];let a=0,i=0;const o=new Array(s);for(let l=0;l<s;++l){const s=r.length;NE(e[l],t,n,r);const u=r.length-s;o[l]=u,a+=u,i=Math.max(i,u)}const l=xe("int32",2*a),u=new Array(a),c=[s,i];let h=0;for(let e=0;e<s;++e)for(let t=0;t<o[e];++t)l[2*h]=e,l[2*h+1]=t,u[h]=r[h],++h;return[l,u,c]}const TE={kernelName:Ls,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{skipEmpty:r}=s,{input:a,delimiter:i}=t;if("string"!==a.dtype)throw new Error("Input must be of datatype string");if(1!==a.shape.length)throw new Error(`Input must be a vector, got shape: ${a.shape}`);if(0!==i.shape.length)throw new Error(`Delimiter must be a scalar, got shape: ${i.shape}`);const o=n.data.get(a.dataId).values,l=n.data.get(i.dataId).values[0],[u,c,h]=SE(o,l,r),d=c.length;return[n.makeTensorInfo([d,2],"int32",u),n.makeTensorInfo([d],"string",c),n.makeTensorInfo([2],"int32",new Int32Array(h))]}};function CE(e,t){const n=xe("int32",e.length);for(let s=0;s<e.length;++s)n[s]=Tr(e[s]).modulo(t).getLowBitsUnsigned();return n}const $E={kernelName:zs,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{numBuckets:r}=s,{input:a}=t;if("string"!==a.dtype)throw new Error("Input must be of datatype string");if(r<=0)throw new Error("Number of buckets must be at least 1");const i=CE(n.data.get(a.dataId).values,r);return n.makeTensorInfo(a.shape,"int32",i)}},EE=vI(Ps,(e=>Math.tan(e))),AE={kernelName:Ps,backendName:"cpu",kernelFunc:EE},RE=vI(Ws,(e=>Math.tanh(e))),_E={kernelName:ds,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n}=e,{tensor:s,indices:r,updates:a}=t,{sliceRank:i,numUpdates:o,sliceSize:l,strides:u,outputSize:c}=Hh(0,r,s.shape),h=n.bufferSync(r),d=n.bufferSync(a),p=n.bufferSync(s),f=_$(h,d,s.shape,c,l,o,i,u,p,!1);return n.makeTensorInfo(s.shape,f.dtype,f.values)}};function FE(e,t){const n=new Array(e.rank);for(let s=0;s<n.length;s++)n[s]=e.shape[s]*t[s];const s=Li(n,e.dtype);for(let t=0;t<s.values.length;++t){const n=s.indexToLoc(t),r=new Array(e.rank);for(let t=0;t<r.length;t++)r[t]=n[t]%e.shape[t];const a=e.locToIndex(r);s.values[t]=e.values[a]}return s}const DE={kernelName:Vs,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{reps:a}=s;yI(r,"tile");const i=FE(n.bufferSync(r),a);return n.makeTensorInfo(i.shape,i.dtype,i.values)}},OE=(e,t)=>{const n=t.value-e.value;return 0===n?e.index-t.index:n};function ME(e,t,n=0,s=e.length-1){for(;s>n;){if(s-n>600){const r=s-n+1,a=t-n+1,i=Math.log(r),o=.5*Math.exp(2*i/3),l=.5*Math.sqrt(i*o*(r-o)/r)*Math.sign(a-r/2);ME(e,t,Math.max(n,Math.floor(t-a*o/r+l)),Math.min(s,Math.floor(t+(r-a)*o/r+l)))}const r=e[t];let a=n,i=s;for(ae(e,n,t),OE(e[s],r)>0&&ae(e,n,s);a<i;){for(ae(e,a,i),a++,i--;OE(e[a],r)<0;)a+=1;for(;OE(e[i],r)>0;)i-=1}0===OE(e[n],r)?ae(e,n,i):(i+=1,ae(e,i,s)),i<=t&&(n=i+1),t<=i&&(s=i-1)}}function LE(e,t,n,s,r){const a=t[t.length-1],[i,o]=[e.length/a,a],l=be(n,i*s),u=be("int32",i*s);for(let t=0;t<i;t++){const n=t*o,a=e.subarray(n,n+o);let i=new Array(a.length);a.forEach(((e,t)=>i[t]={value:e,index:t})),s<i.length&&(ME(i,s),i=i.slice(0,s)),r&&i.sort(OE);const c=t*s,h=l.subarray(c,c+s),d=u.subarray(c,c+s);for(let e=0;e<s;e++)h[e]=i[e].value,d[e]=i[e].index}const c=t.slice();return c[c.length-1]=s,[Li(c,n,l),Li(c,"int32",u)]}const zE={kernelName:Us,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{k:a,sorted:i}=s;yI(r,"topk");const o=n.data.get(r.dataId).values,[l,u]=LE(o,r.shape,r.dtype,a,i);return[n.makeTensorInfo(l.shape,l.dtype,l.values),n.makeTensorInfo(u.shape,u.dtype,u.values)]}},BE={kernelName:Gs,backendName:"cpu",kernelFunc:function(e){const{inputs:t,attrs:n,backend:s}=e,{image:r,transforms:a}=t,{interpolation:i,fillMode:o,fillValue:l,outputShape:u}=n,[c,h,d,p]=r.shape,[f,m]=null!=u?u:[h,d],g=[c,f,m,p],y=Ce(r.shape),b=y[0],x=y[1],w=y[2],v=Ce(g),k=v[0],I=v[1],N=v[2],S=be(r.dtype,ue(g));S.fill(l);const T=s.data.get(r.dataId).values,C=s.data.get(a.dataId).values;for(let e=0;e<c;++e){const t=1===a.shape[0]?C:C.subarray(8*e,8*e+8);for(let n=0;n<f;++n)for(let s=0;s<m;++s)for(let r=0;r<p;++r){let a;const u=t[6]*s+t[7]*n+1;if(0===u)continue;const c=(t[0]*s+t[1]*n+t[2])/u,p=(t[3]*s+t[4]*n+t[5])/u,f=PE(c,d,o),m=PE(p,h,o);switch(i){case"nearest":a=VE(T,h,d,b,x,w,e,m,f,r,l);break;case"bilinear":a=UE(T,h,d,b,x,w,e,m,f,r,l);break;default:throw new Error(`Error in Transform: Expect 'nearest' or 'bilinear', but got ${i}`)}S[e*k+n*I+s*N+r]=a}return s.makeTensorInfo(g,r.dtype,S)}return{dataId:s.write(S,g,r.dtype),shape:r.shape,dtype:r.dtype}}};function PE(e,t,n){switch(n){case"reflect":return function(e,t){let n=e;if(n<0)if(t<=1)n=0;else{const e=2*t;n<e&&(n=e*Math.trunc(-n/e)+n),n=n<-t?n+e:-n-1}else if(n>t-1)if(t<=1)n=0;else{const e=2*t;n-=e*Math.trunc(n/e),n>=t&&(n=e-n-1)}return se(0,n,t-1)}(e,t);case"wrap":return function(e,t){let n=e;if(n<0)if(t<=1)n=0;else{const e=t-1;n+=t*(Math.trunc(-n/e)+1)}else if(n>t-1)if(t<=1)n=0;else{const e=t-1;n-=t*Math.trunc(n/e)}return se(0,n,t-1)}(e,t);case"nearest":return function(e,t){return se(0,e,t-1)}(e,t);default:return e}}function WE(e,t,n,s,r,a,i,o,l,u,c){return 0<=o&&o<t&&0<=l&&l<n?e[i*s+o*r+l*a+u]:c}function VE(e,t,n,s,r,a,i,o,l,u,c){return WE(e,t,n,s,r,a,i,Math.round(o),Math.round(l),u,c)}function UE(e,t,n,s,r,a,i,o,l,u,c){const h=Math.floor(o),d=Math.floor(l),p=h+1,f=d+1;return(p-o)*((f-l)*WE(e,t,n,s,r,a,i,h,d,u,c)+(l-d)*WE(e,t,n,s,r,a,i,h,f,u,c))+(o-h)*((f-l)*WE(e,t,n,s,r,a,i,p,d,u,c)+(l-d)*WE(e,t,n,s,r,a,i,p,f,u,c))}function GE(e,t,n,s){const r=ge(t,n)[0],a=[1,n[0],1];for(let e=0;e<r;e++)a[0]*=n[e];a[1]=n[r];for(let e=r+1;e<n.length;e++)a[2]*=n[e];const i=new Map,o=new Int32Array(n[r]),l=new Vr(a,s,e),u=[],c=1===a[0]&&1===a[2];for(let t=0;t<n[r];t++){let n;if(c)n=e[t].toString();else{const e=[];for(let n=0;n<a[0];n++)for(let s=0;s<a[2];s++)e.push(l.get(n,t,s));n=e.join(",")}const s=i.get(n);if(null!=s)o[t]=s;else{const e=i.size;i.set(n,e),o[t]=e,u.push(t)}}const h=a.slice();h[1]=i.size;const d=new Vr(h,s);u.forEach(((e,t)=>{for(let n=0;n<a[0];n++)for(let s=0;s<a[2];s++)d.set(l.get(n,e,s),n,t,s)}));const p=n.slice();return p[r]=h[1],{outputValues:d.values,outputShape:p,indices:o}}const jE={kernelName:Hs,backendName:"cpu",kernelFunc:function(e){const{inputs:t,attrs:n,backend:s}=e,{axis:r}=n,{x:a}=t;yI(a,"unique");const i=s.data.get(a.dataId).values,{outputValues:o,outputShape:l,indices:u}=GE(i,r,a.shape,a.dtype);return[s.makeTensorInfo(l,a.dtype,o),s.makeTensorInfo([u.length],"int32",u)]}},HE={kernelName:qs,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{value:r}=t;let{axis:a}=s;a<0&&(a+=r.shape.length);const i=r.shape.length,o=r.shape[a],l=new Array(i-1);let u=0;for(let e=0;e<i;e++)e!==a&&(l[u++]=r.shape[e]);const c=new Array(i).fill(0),h=r.shape.slice();h[a]=1;const d=new Array(o);for(let e=0;e<d.length;e++){c[a]=e;const t=PN({inputs:{x:r},backend:n,attrs:{begin:c,size:h}});d[e]=tN({inputs:{x:t},backend:n,attrs:{shape:l}}),n.disposeIntermediateTensorInfo(t)}return d}},qE={kernelName:Ks,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{x:r,segmentIds:a}=t,{numSegments:i}=s;yI(r,"unsortedSegmentSum");const o=[],l=[],u=r.shape.length-a.shape.length;let c=a;for(let e=0;e<u;++e){const t=eT({inputs:{input:c},backend:n,attrs:{dim:e+1}});c=t,l.push(t)}for(let e=0;e<i;++e){const t=Cr(e,"int32"),s=n.makeTensorInfo([],"int32",t),a=WS({inputs:{a:s,b:c},backend:n}),i=qI({inputs:{x:a},backend:n,attrs:{dtype:"float32"}}),u=DS({inputs:{a:i,b:r},backend:n}),h=MS({inputs:{x:u},backend:n,attrs:{axis:0,keepDims:!1}});o.push(h),l.push(s),l.push(a),l.push(i),l.push(u),l.push(h)}const h=JC({inputs:o,backend:n,attrs:{axis:0}});return l.forEach((e=>n.disposeIntermediateTensorInfo(e))),h}},KE=[aN,oN,uN,hN,eN,dN,gN,yN,bN,xN,vN,IN,SN,$N,AN,DN,ON,MN,LN,rN,zN,VN,jN,KN,XN,KI,ZN,eS,VI,tS,iS,lS,uS,cS,hS,dS,pS,mS,yS,bS,xS,wS,vS,kS,NS,SS,TS,CS,$S,ES,AS,RS,zS,NI,BS,VS,YS,QS,tT,rT,mT,yT,bT,vT,NT,ST,TT,$T,AT,FT,MT,TI,LT,rS,BT,WT,UT,$I,HT,XT,JT,eC,nC,aC,oC,cC,hC,dC,mC,bC,xC,wC,vC,kC,IC,NC,SC,$C,EC,_C,OC,OS,LC,BC,WC,UC,HC,qC,YC,ZC,QC,n$,_I,r$,o$,c$,g$,b$,jI,oT,w$,DI,MI,nN,v$,k$,I$,N$,S$,T$,$$,R$,F$,M$,L$,W$,BI,U$,j$,q$,WN,DC,Y$,J$,Q$,tE,sE,rE,aE,iE,uE,cE,pE,gE,bE,wE,IE,TE,$E,hT,LS,AE,{kernelName:Ws,backendName:"cpu",kernelFunc:RE},_E,DE,zE,BE,mN,jE,HE,qE,XC];for(const e of KE)ur(e);const XE={},YE={alpha:!1,antialias:!1,premultipliedAlpha:!1,preserveDrawingBuffer:!1,depth:!1,stencil:!1,failIfMajorPerformanceCaveat:!0};function JE(e,t){if(!(e in XE)||null!=t){const n=function(e,t){if(1!==e&&2!==e)throw new Error("Cannot get WebGL rendering context, WebGL is disabled.");const n=null==t?function(e){if(Pe().getBool("IS_SAFARI")||"undefined"==typeof OffscreenCanvas||2!==e){if("undefined"!=typeof document)return document.createElement("canvas");throw new Error("Cannot create a canvas in this context")}return new OffscreenCanvas(300,150)}(e):t;return n.addEventListener("webglcontextlost",(t=>{t.preventDefault(),delete XE[e]}),!1),Pe().getBool("SOFTWARE_WEBGL_ENABLED")&&(YE.failIfMajorPerformanceCaveat=!1),1===e?n.getContext("webgl",YE)||n.getContext("experimental-webgl",YE):n.getContext("webgl2",YE)}(e,t);if(null===n)return console.log("Could not get context for WebGL version",e),null;XE[e]=n}const n=XE[e];return null==n||n.isContextLost()?(delete XE[e],JE(e)):(n.disable(n.DEPTH_TEST),n.disable(n.STENCIL_TEST),n.disable(n.BLEND),n.disable(n.DITHER),n.disable(n.POLYGON_OFFSET_FILL),n.disable(n.SAMPLE_COVERAGE),n.enable(n.SCISSOR_TEST),n.enable(n.CULL_FACE),n.cullFace(n.BACK),XE[e])}var ZE,QE,eA;function tA(e,t){return[t,e]}function nA(e){const t=ue(e);return de(Math.ceil(t/4))}function sA(e,t){return[Math.max(1,Math.ceil(t/2)),Math.max(1,Math.ceil(e/2))]}function rA(e,t){const n=e;let s,r,a,i,o,l,u,c,h,d;return 2===Pe().getNumber("WEBGL_VERSION")?(s=n.R32F,r=n.R16F,a=n.RGBA16F,i=n.RGBA32F,o=n.RED,u=4,c=1,h=n.HALF_FLOAT,d=n.FLOAT,l=n.RGBA8):(s=e.RGBA,r=e.RGBA,a=e.RGBA,i=n.RGBA,o=e.RGBA,u=4,c=4,h=null!=t?t.HALF_FLOAT_OES:null,d=e.FLOAT,l=e.RGBA),{internalFormatFloat:s,internalFormatHalfFloat:r,internalFormatPackedHalfFloat:a,internalFormatPackedFloat:i,textureFormatFloat:o,downloadTextureFormat:l,downloadUnpackNumChannels:u,defaultNumChannels:c,textureTypeHalfFloat:h,textureTypeFloat:d}}function aA(e,t){const n=t();return Pe().getBool("DEBUG")&&function(e){const t=e.getError();if(t!==e.NO_ERROR)throw new Error("WebGL Error: "+function(e,t){switch(t){case e.NO_ERROR:return"NO_ERROR";case e.INVALID_ENUM:return"INVALID_ENUM";case e.INVALID_VALUE:return"INVALID_VALUE";case e.INVALID_OPERATION:return"INVALID_OPERATION";case e.INVALID_FRAMEBUFFER_OPERATION:return"INVALID_FRAMEBUFFER_OPERATION";case e.OUT_OF_MEMORY:return"OUT_OF_MEMORY";case e.CONTEXT_LOST_WEBGL:return"CONTEXT_LOST_WEBGL";default:return`Unknown error code ${t}`}}(e,t))}(e),n}function iA(e){return!!(Pe().getBool("WEBGL_RENDER_FLOAT32_ENABLED")||0===e||5.96e-8<Math.abs(e)&&Math.abs(e)<65504)}function oA(e,t){return gA(e,(()=>e.getExtension(t)),'Extension "'+t+'" not supported on this browser.')}!function(e){e[e.DENSE=0]="DENSE",e[e.SHARED_BATCH=1]="SHARED_BATCH"}(ZE||(ZE={})),function(e){e[e.RENDER=0]="RENDER",e[e.UPLOAD=1]="UPLOAD",e[e.PIXELS=2]="PIXELS",e[e.DOWNLOAD=3]="DOWNLOAD"}(QE||(QE={})),function(e){e[e.UNPACKED_FLOAT16=0]="UNPACKED_FLOAT16",e[e.UNPACKED_FLOAT32=1]="UNPACKED_FLOAT32",e[e.PACKED_4X1_UNSIGNED_BYTE=2]="PACKED_4X1_UNSIGNED_BYTE",e[e.PACKED_2X2_FLOAT32=3]="PACKED_2X2_FLOAT32",e[e.PACKED_2X2_FLOAT16=4]="PACKED_2X2_FLOAT16"}(eA||(eA={}));const lA=/ERROR: [0-9]+:([0-9]+):/g;function uA(e,t){const n=lA.exec(t);if(null==n)return console.log(`Couldn't parse line number in error: ${t}`),void console.log(e);const s=+n[1],r=e.split("\n"),a=r.length.toString().length+2,i=r.map(((e,t)=>pe((t+1).toString(),a)+e));let o=0;for(let e=0;e<i.length;e++)o=Math.max(i[e].length,o);const l=i.slice(0,s-1),u=i.slice(s-1,s),c=i.slice(s);console.log(l.join("\n")),console.log(t.split("\n")[0]),console.log(`%c ${pe(u[0],o)}`,"border:1px solid red; background-color:#e3d2d2; color:#a61717"),console.log(c.join("\n"))}function cA(e,t){if(aA(e,(()=>e.validateProgram(t))),!1===e.getProgramParameter(t,e.VALIDATE_STATUS))throw console.log(e.getProgramInfoLog(t)),new Error("Shader program validation failed.")}function hA(e,t,n,s,r,a,i){const o=e.getAttribLocation(t,n);return-1!==o&&(aA(e,(()=>e.bindBuffer(e.ARRAY_BUFFER,s))),aA(e,(()=>e.vertexAttribPointer(o,r,e.FLOAT,!1,a,i))),aA(e,(()=>e.enableVertexAttribArray(o))),!0)}function dA(e,t,n,s){aA(e,(()=>function(e,t,n){(function(e,t){const n=e.MAX_COMBINED_TEXTURE_IMAGE_UNITS-1,s=t+e.TEXTURE0;if(s<e.TEXTURE0||s>n)throw new Error(`textureUnit must be in [gl.TEXTURE0, gl.TEXTURE${n}].`)})(e,n),aA(e,(()=>e.activeTexture(e.TEXTURE0+n))),aA(e,(()=>e.bindTexture(e.TEXTURE_2D,t)))}(e,t,s))),aA(e,(()=>e.uniform1i(n,s)))}function pA(e,t,n){aA(e,(()=>e.bindFramebuffer(e.FRAMEBUFFER,n))),aA(e,(()=>e.framebufferTexture2D(e.FRAMEBUFFER,e.COLOR_ATTACHMENT0,e.TEXTURE_2D,t,0)))}function fA(e,t){aA(e,(()=>e.bindFramebuffer(e.FRAMEBUFFER,t))),aA(e,(()=>e.framebufferTexture2D(e.FRAMEBUFFER,e.COLOR_ATTACHMENT0,e.TEXTURE_2D,null,0)))}function mA(e){const t=e.checkFramebufferStatus(e.FRAMEBUFFER);if(t!==e.FRAMEBUFFER_COMPLETE)throw new Error("Error binding framebuffer: "+function(e,t){switch(t){case e.FRAMEBUFFER_INCOMPLETE_ATTACHMENT:return"FRAMEBUFFER_INCOMPLETE_ATTACHMENT";case e.FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT:return"FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT";case e.FRAMEBUFFER_INCOMPLETE_DIMENSIONS:return"FRAMEBUFFER_INCOMPLETE_DIMENSIONS";case e.FRAMEBUFFER_UNSUPPORTED:return"FRAMEBUFFER_UNSUPPORTED";default:return`unknown error ${t}`}}(e,t))}function gA(e,t,n){const s=aA(e,(()=>t()));if(null==s)throw new Error(n);return s}function yA(e,t=2){return ue(e.slice(0,e.length-t))}function bA(e){if(0===e.length)throw Error("Cannot get rows and columns of an empty shape array.");return[e.length>1?e[e.length-2]:1,e[e.length-1]]}function xA(e){let t=[1,1,1];return 0===e.length||1===e.length&&1===e[0]||(t=[yA(e),...bA(e)]),t}function wA(e){return e%2==0}function vA(e,t){if(ce(e=e.slice(-2),t=t.slice(-2)))return!0;if(!e.length||!t.length)return!0;if(0===e[0]||0===e[1]||0===t[0]||0===t[1])return!0;if(e.length!==t.length){const n=e[e.length-1],s=t[t.length-1];if(n===s)return!0;if(wA(n)&&wA(s)&&(1===e[0]||1===t[0]))return!0}return e[1]===t[1]&&wA(e[0])&&wA(t[0])}let kA,IA;function NA(e,t){return null!=e.getExtension(t)}function SA(e){try{if(null!=JE(e))return!0}catch(e){return console.log("Error when getting WebGL context: ",e),!1}return!1}function TA(e){const t=rA(e),n=e.createTexture();e.bindTexture(e.TEXTURE_2D,n),e.texImage2D(e.TEXTURE_2D,0,t.internalFormatFloat,1,1,0,t.textureFormatFloat,t.textureTypeFloat,null);const s=e.createFramebuffer();e.bindFramebuffer(e.FRAMEBUFFER,s),e.framebufferTexture2D(e.FRAMEBUFFER,e.COLOR_ATTACHMENT0,e.TEXTURE_2D,n,0);const r=e.checkFramebufferStatus(e.FRAMEBUFFER)===e.FRAMEBUFFER_COMPLETE;return e.bindTexture(e.TEXTURE_2D,null),e.bindFramebuffer(e.FRAMEBUFFER,null),e.deleteTexture(n),e.deleteFramebuffer(s),r}function CA(e,t){Array.isArray(e)||(e=[e]),e.forEach((e=>{null!=e&&ie("complex64"!==e.dtype,(()=>`${t} does not support complex64 tensors in the WebGL backend.`))}))}const $A=Pe();function EA(){let e,t,n,s,r,a,i,o,l,u;return 2===Pe().getNumber("WEBGL_VERSION")?(e="#version 300 es",t="in",n="out",s="in",r="texture",a="outputColor",i="out vec4 outputColor;",o=Pe().getBool("WEBGL2_ISNAN_CUSTOM")?"\n      bool isnan_custom(float val) {\n        uint floatToUint = floatBitsToUint(val);\n        return (floatToUint & 0x7fffffffu) > 0x7f800000u;\n      }\n\n      bvec4 isnan_custom(vec4 val) {\n        return bvec4(isnan_custom(val.x),\n          isnan_custom(val.y), isnan_custom(val.z), isnan_custom(val.w));\n      }\n\n      #define isnan(value) isnan_custom(value)\n    ":"",l="",u="\n      #define round(value) newRound(value)\n      int newRound(float value) {\n        return int(floor(value + 0.5));\n      }\n\n      ivec4 newRound(vec4 value) {\n        return ivec4(floor(value + vec4(0.5)));\n      }\n    "):(e="",t="attribute",n="varying",s="varying",r="texture2D",a="gl_FragColor",i="",o="\n      #define isnan(value) isnan_custom(value)\n      bool isnan_custom(float val) {\n        return (val > 0. || val < 1. || val == 0.) ? false : true;\n      }\n      bvec4 isnan_custom(vec4 val) {\n        return bvec4(isnan(val.x), isnan(val.y), isnan(val.z), isnan(val.w));\n      }\n    ",l="\n      uniform float INFINITY;\n\n      bool isinf(float val) {\n        return abs(val) == INFINITY;\n      }\n      bvec4 isinf(vec4 val) {\n        return equal(abs(val), vec4(INFINITY));\n      }\n    ",u="\n      int round(float value) {\n        return int(floor(value + 0.5));\n      }\n\n      ivec4 round(vec4 value) {\n        return ivec4(floor(value + vec4(0.5)));\n      }\n    "),{version:e,attribute:t,varyingVs:n,varyingFs:s,texture2D:r,output:a,defineOutput:i,defineSpecialNaN:o,defineSpecialInf:l,defineRound:u}}function AA(e,t,n="index"){const s=Ce(t);return s.map(((t,r)=>`int ${e[r]} = ${n} / ${t}; ${r===s.length-1?`int ${e[r+1]} = ${n} - ${e[r]} * ${t}`:`index -= ${e[r]} * ${t}`};`)).join("")}function RA(e,t,n="index"){const s=Ce(t);return s.map(((t,r)=>`int ${e[r]} = ${n} / outShapeStrides[${r}]; ${r===s.length-1?`int ${e[r+1]} = ${n} - ${e[r]} * outShapeStrides[${r}]`:`index -= ${e[r]} * outShapeStrides[${r}]`};`)).join("")}function _A(e){const t=Ce(e).map((e=>e.toString()));return`\n  int getFlatIndex(ivec3 coords) {\n    return coords.x * ${t[0]} + coords.y * ${t[1]} + coords.z;\n  }\n`}$A.registerFlag("HAS_WEBGL",(()=>$A.getNumber("WEBGL_VERSION")>0)),$A.registerFlag("WEBGL_VERSION",(()=>SA(2)?2:SA(1)?1:0)),$A.registerFlag("WEBGL_CHECK_NUMERICAL_PROBLEMS",(()=>!1)),$A.registerFlag("WEBGL_BUFFER_SUPPORTED",(()=>2===$A.get("WEBGL_VERSION"))),$A.registerFlag("WEBGL_CPU_FORWARD",(()=>!0)),$A.registerFlag("WEBGL_FORCE_F16_TEXTURES",(()=>!1)),$A.registerFlag("WEBGL_PACK",(()=>$A.getBool("HAS_WEBGL"))),$A.registerFlag("WEBGL_PACK_NORMALIZATION",(()=>$A.getBool("WEBGL_PACK"))),$A.registerFlag("WEBGL_PACK_CLIP",(()=>$A.getBool("WEBGL_PACK"))),$A.registerFlag("WEBGL_PACK_DEPTHWISECONV",(()=>$A.getBool("WEBGL_PACK"))),$A.registerFlag("WEBGL_PACK_BINARY_OPERATIONS",(()=>$A.getBool("WEBGL_PACK"))),$A.registerFlag("WEBGL_PACK_UNARY_OPERATIONS",(()=>$A.getBool("WEBGL_PACK"))),$A.registerFlag("WEBGL_PACK_ARRAY_OPERATIONS",(()=>$A.getBool("WEBGL_PACK"))),$A.registerFlag("WEBGL_PACK_IMAGE_OPERATIONS",(()=>$A.getBool("WEBGL_PACK"))),$A.registerFlag("WEBGL_PACK_REDUCE",(()=>$A.getBool("WEBGL_PACK"))),$A.registerFlag("WEBGL_LAZILY_UNPACK",(()=>$A.getBool("WEBGL_PACK"))),$A.registerFlag("WEBGL_CONV_IM2COL",(()=>$A.getBool("WEBGL_PACK"))),$A.registerFlag("WEBGL_PACK_CONV2DTRANSPOSE",(()=>$A.getBool("WEBGL_PACK"))),$A.registerFlag("WEBGL_MAX_TEXTURE_SIZE",(()=>function(e){if(null==kA){const t=JE(e);kA=t.getParameter(t.MAX_TEXTURE_SIZE)}return kA}($A.getNumber("WEBGL_VERSION")))),$A.registerFlag("WEBGL_MAX_TEXTURES_IN_SHADER",(()=>function(e){if(null==IA){const t=JE(e);IA=t.getParameter(t.MAX_TEXTURE_IMAGE_UNITS)}return Math.min(16,IA)}($A.getNumber("WEBGL_VERSION")))),$A.registerFlag("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION",(()=>{const e=$A.getNumber("WEBGL_VERSION");return 0===e?0:function(e){if(0===e)return 0;let t;const n=JE(e);return t=NA(n,"EXT_disjoint_timer_query_webgl2")&&2===e?2:NA(n,"EXT_disjoint_timer_query")?1:0,t}(e)})),$A.registerFlag("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE",(()=>$A.getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")>0&&!ma())),$A.registerFlag("WEBGL_RENDER_FLOAT32_CAPABLE",(()=>function(e){if(0===e)return!1;const t=JE(e);if(1===e){if(!NA(t,"OES_texture_float"))return!1}else if(!NA(t,"EXT_color_buffer_float"))return!1;return TA(t)}($A.getNumber("WEBGL_VERSION")))),$A.registerFlag("WEBGL_RENDER_FLOAT32_ENABLED",(()=>!$A.getBool("WEBGL_FORCE_F16_TEXTURES")&&$A.getBool("WEBGL_RENDER_FLOAT32_CAPABLE"))),$A.registerFlag("WEBGL_DOWNLOAD_FLOAT_ENABLED",(()=>function(e){if(0===e)return!1;const t=JE(e);if(1!==e){if(NA(t,"EXT_color_buffer_float"))return TA(t);const e="EXT_color_buffer_half_float";if(NA(t,e)){const n=t.getExtension(e);return function(e,t){const n=rA(e,t),s=e.createTexture();e.bindTexture(e.TEXTURE_2D,s),e.texImage2D(e.TEXTURE_2D,0,n.internalFormatHalfFloat,1,1,0,n.textureFormatFloat,n.textureTypeHalfFloat,null);const r=e.createFramebuffer();e.bindFramebuffer(e.FRAMEBUFFER,r),e.framebufferTexture2D(e.FRAMEBUFFER,e.COLOR_ATTACHMENT0,e.TEXTURE_2D,s,0);const a=e.checkFramebufferStatus(e.FRAMEBUFFER)===e.FRAMEBUFFER_COMPLETE;return e.bindTexture(e.TEXTURE_2D,null),e.bindFramebuffer(e.FRAMEBUFFER,null),e.deleteTexture(s),e.deleteFramebuffer(r),a}(t,n)}return!1}return!!NA(t,"OES_texture_float")&&!!NA(t,"WEBGL_color_buffer_float")&&TA(t)}($A.getNumber("WEBGL_VERSION")))),$A.registerFlag("WEBGL_FENCE_API_ENABLED",(()=>{return 2===(e=$A.getNumber("WEBGL_VERSION"))&&null!=JE(e).fenceSync;var e})),$A.registerFlag("WEBGL_SIZE_UPLOAD_UNIFORM",(()=>$A.getBool("WEBGL_RENDER_FLOAT32_ENABLED")?4:0)),$A.registerFlag("WEBGL_DELETE_TEXTURE_THRESHOLD",(()=>-1),(e=>{if("number"!=typeof e)throw new Error(`WEBGL_DELETE_TEXTURE_THRESHOLD must be a number but got ${e}.`);if(e<0&&-1!==e)throw new Error(`WEBGL_DELETE_TEXTURE_THRESHOLD must be -1 (indicating never delete) or at least 0, but got ${e}.`)})),$A.registerFlag("WEBGL_FLUSH_THRESHOLD",(()=>ma()?1:-1),(e=>{if("number"!=typeof e)throw new Error(`WEBGL_FLUSH_THRESHOLD must be a number but got ${e}.`);if(e<0&&-1!==e)throw new Error(`WEBGL_FLUSH_THRESHOLD must be -1 (indicating never manual flush) or at least 0, but got ${e}.`)})),$A.registerFlag("CPU_HANDOFF_SIZE_THRESHOLD",(()=>128)),$A.registerFlag("WEBGL_USE_SHAPES_UNIFORMS",(()=>!1)),$A.registerFlag("TOPK_LAST_DIM_CPU_HANDOFF_SIZE_THRESHOLD",(()=>1e5)),$A.registerFlag("TOPK_K_CPU_HANDOFF_THRESHOLD",(()=>128)),$A.registerFlag("WEBGL_EXP_CONV",(()=>!1)),$A.registerFlag("SOFTWARE_WEBGL_ENABLED",(()=>$A.getBool("IS_TEST"))),$A.registerFlag("WEBGL_MAX_SIZE_FOR_NARROW_TEXTURE",(()=>1/0)),$A.registerFlag("WEBGL_AUTO_SQUARIFY_NARROW_TEXTURE_SHAPE",(()=>!1)),$A.registerFlag("WEBGL2_ISNAN_CUSTOM",(()=>!1)),$A.registerFlag("ENGINE_COMPILE_ONLY",(()=>!1));const FA="\n  const float FLOAT_MAX = 1.70141184e38;\n  const float FLOAT_MIN = 1.17549435e-38;\n\n  lowp vec4 encode_float(highp float v) {\n    if (isnan(v)) {\n      return vec4(255, 255, 255, 255);\n    }\n\n    highp float av = abs(v);\n\n    if(av < FLOAT_MIN) {\n      return vec4(0.0, 0.0, 0.0, 0.0);\n    } else if(v > FLOAT_MAX) {\n      return vec4(0.0, 0.0, 128.0, 127.0) / 255.0;\n    } else if(v < -FLOAT_MAX) {\n      return vec4(0.0, 0.0,  128.0, 255.0) / 255.0;\n    }\n\n    highp vec4 c = vec4(0,0,0,0);\n\n    highp float e = floor(log2(av));\n    highp float m = exp2(fract(log2(av))) - 1.0;\n\n    c[2] = floor(128.0 * m);\n    m -= c[2] / 128.0;\n    c[1] = floor(32768.0 * m);\n    m -= c[1] / 32768.0;\n    c[0] = floor(8388608.0 * m);\n\n    highp float ebias = e + 127.0;\n    c[3] = floor(ebias / 2.0);\n    ebias -= c[3] * 2.0;\n    c[2] += floor(ebias) * 128.0;\n\n    c[3] += 128.0 * step(0.0, -v);\n\n    return c / 255.0;\n  }\n",{getBroadcastDims:DA}=a;function OA(e,t,n){const s=[];if(e.forEach((e=>{const t=ue(e.shapeInfo.logicalShape);if(e.shapeInfo.isUniform?s.push(`uniform float ${e.name}${t>1?`[${t}]`:""};`):(s.push(`uniform sampler2D ${e.name};`),s.push(`uniform int offset${e.name};`)),n.enableShapeUniforms){const{uniformShape:t}=jA(n.packedInputs,e.shapeInfo.logicalShape,e.shapeInfo.texShape);switch(t.length){case 1:s.push(`uniform int ${e.name}Shape;`);break;case 2:s.push(`uniform ivec2 ${e.name}Shape;`);break;case 3:s.push(`uniform ivec3 ${e.name}Shape;`);break;case 4:s.push(`uniform ivec4 ${e.name}Shape;`)}s.push(`uniform ivec2 ${e.name}TexShape;`)}})),n.enableShapeUniforms){switch(t.logicalShape.length){case 1:s.push("uniform int outShape;");break;case 2:s.push("uniform ivec2 outShape;"),s.push("uniform int outShapeStrides;");break;case 3:s.push("uniform ivec3 outShape;"),s.push("uniform ivec2 outShapeStrides;");break;case 4:s.push("uniform ivec4 outShape;"),s.push("uniform ivec3 outShapeStrides;")}s.push("uniform ivec2 outTexShape;")}n.customUniforms&&n.customUniforms.forEach((e=>{s.push(`uniform ${e.type} ${e.name}${e.arrayIndex?`[${e.arrayIndex}]`:""};`)}));const r=s.join("\n"),a=e.map((e=>function(e,t,n=!1,s){let r="";r+=n?LA(e,s):MA(e,s);const a=e.shapeInfo.logicalShape,i=t.logicalShape;return a.length<=i.length&&(r+=n?function(e,t){const n=e.name,s=n.charAt(0).toUpperCase()+n.slice(1),r="get"+s+"AtOutCoords",a=e.shapeInfo.logicalShape.length,i=t.logicalShape.length,o=DA(e.shapeInfo.logicalShape,t.logicalShape),l=GA(i),u=i-a;let c;const h=["x","y","z","w","u","v"];c=0===a?"":i<2&&o.length>=1?"coords = 0;":o.map((e=>`coords.${h[e+u]} = 0;`)).join("\n");let d="";d=i<2&&a>0?"coords":e.shapeInfo.logicalShape.map(((e,t)=>`coords.${h[t+u]}`)).join(", ");let p="return outputValue;";const f=1===ue(e.shapeInfo.logicalShape),m=1===ue(t.logicalShape);if(1!==a||f||m){if(f&&!m)p=1===i?"\n        return vec4(outputValue.x, outputValue.x, 0., 0.);\n      ":"\n        return vec4(outputValue.x);\n      ";else if(o.length){const e=a-2,t=a-1;o.indexOf(e)>-1&&o.indexOf(t)>-1?p="return vec4(outputValue.x);":o.indexOf(e)>-1?p="return vec4(outputValue.x, outputValue.y, outputValue.x, outputValue.y);":o.indexOf(t)>-1&&(p="return vec4(outputValue.xx, outputValue.zz);")}}else p="\n      return vec4(outputValue.xy, outputValue.xy);\n    ";return`\n    vec4 ${r}() {\n      ${l} coords = getOutputCoords();\n      ${c}\n      vec4 outputValue = get${s}(${d});\n      ${p}\n    }\n  `}(e,t):function(e,t){const n=e.name,s=n.charAt(0).toUpperCase()+n.slice(1),r="get"+s+"AtOutCoords",a=t.texShape,i=e.shapeInfo.texShape,o=e.shapeInfo.logicalShape.length,l=t.logicalShape.length;if(!e.shapeInfo.isUniform&&o===l&&null==e.shapeInfo.flatOffset&&ce(i,a))return`\n      float ${r}() {\n        return sampleTexture(${n}, resultUV);\n      }\n    `;const u=GA(l),c=DA(e.shapeInfo.logicalShape,t.logicalShape),h=l-o;let d;const p=["x","y","z","w","u","v"];d=0===o?"":l<2&&c.length>=1?"coords = 0;":c.map((e=>`coords.${p[e+h]} = 0;`)).join("\n");let f="";return f=l<2&&o>0?"coords":e.shapeInfo.logicalShape.map(((e,t)=>`coords.${p[t+h]}`)).join(", "),`\n    float ${r}() {\n      ${u} coords = getOutputCoords();\n      ${d}\n      return get${s}(${f});\n    }\n  `}(e,t)),r}(e,t,n.packedInputs,n.enableShapeUniforms))).join("\n"),i=t.texShape,o=EA(),l=function(e){return`\n    float sampleTexture(sampler2D textureSampler, vec2 uv) {\n      return ${e.texture2D}(textureSampler, uv).r;\n    }\n  `}(o);let u,c,h=function(e){return`${e.version}\n    precision highp float;\n    precision highp int;\n    precision highp sampler2D;\n    ${e.varyingFs} vec2 resultUV;\n    ${e.defineOutput}\n    const vec2 halfCR = vec2(0.5, 0.5);\n\n    struct ivec5\n    {\n      int x;\n      int y;\n      int z;\n      int w;\n      int u;\n    };\n\n    struct ivec6\n    {\n      int x;\n      int y;\n      int z;\n      int w;\n      int u;\n      int v;\n    };\n\n    uniform float NAN;\n    ${e.defineSpecialNaN}\n    ${e.defineSpecialInf}\n    ${e.defineRound}\n\n    int imod(int x, int y) {\n      return x - y * (x / y);\n    }\n\n    int idiv(int a, int b, float sign) {\n      int res = a / b;\n      int mod = imod(a, b);\n      if (sign < 0. && mod != 0) {\n        res -= 1;\n      }\n      return res;\n    }\n\n    //Based on the work of Dave Hoskins\n    //https://www.shadertoy.com/view/4djSRW\n    #define HASHSCALE1 443.8975\n    float random(float seed){\n      vec2 p = resultUV * seed;\n      vec3 p3  = fract(vec3(p.xyx) * HASHSCALE1);\n      p3 += dot(p3, p3.yzx + 19.19);\n      return fract((p3.x + p3.y) * p3.z);\n    }\n\n    ${zA}\n    ${BA}\n    ${PA}\n  `}(o);return t.isPacked?(u=function(e,t,n){switch(e.length){case 0:return"\n    int getOutputCoords() {\n      return 0;\n    }\n  ";case 1:return function(e,t,n){const s=[Math.ceil(t[0]/2),Math.ceil(t[1]/2)];return 1===s[0]?n?"\n      int getOutputCoords() {\n        return 2 * int(resultUV.x * ceil(float(outTexShape[1]) / 2.0));\n      }\n    ":`\n      int getOutputCoords() {\n        return 2 * int(resultUV.x * ${s[1]}.0);\n      }\n    `:1===s[1]?n?"\n      int getOutputCoords() {\n        return 2 * int(resultUV.y * ceil(float(outTexShape[0]) / 2.0));\n      }\n    ":`\n      int getOutputCoords() {\n        return 2 * int(resultUV.y * ${s[0]}.0);\n      }\n    `:n?"\n    int getOutputCoords() {\n      ivec2 packedTexShape = ivec2(ceil(float(outTexShape[0]) / 2.0), ceil(float(outTexShape[1]) / 2.0));\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(packedTexShape[0], packedTexShape[1]));\n      return 2 * (resTexRC.x * packedTexShape[1] + resTexRC.y);\n    }\n  ":`\n    int getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(${s[0]}, ${s[1]}));\n      return 2 * (resTexRC.x * ${s[1]} + resTexRC.y);\n    }\n  `}(0,t,n);case 2:return function(e,t,n){const s=[Math.ceil(t[0]/2),Math.ceil(t[1]/2)];if(ce(e,t))return n?"\n      ivec2 getOutputCoords() {\n        ivec2 packedTexShape = ivec2(ceil(float(outTexShape[0]) / 2.0), ceil(float(outTexShape[1]) / 2.0));\n        return 2 * ivec2(resultUV.yx * vec2(packedTexShape[0], packedTexShape[1]));\n      }\n    ":`\n      ivec2 getOutputCoords() {\n        return 2 * ivec2(resultUV.yx * vec2(${s[0]}, ${s[1]}));\n      }\n    `;const r=Math.ceil(e[1]/2);return n?"\n    ivec2 getOutputCoords() {\n      ivec2 packedTexShape = ivec2(ceil(float(outTexShape[0]) / 2.0), ceil(float(outTexShape[1]) / 2.0));\n      int texelsInLogicalRow = int(ceil(float(outShape[1]) / 2.0));\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(packedTexShape[0], packedTexShape[1]));\n\n      int index = resTexRC.x * packedTexShape[1] + resTexRC.y;\n      int r = 2 * (index / texelsInLogicalRow);\n      int c = imod(index, texelsInLogicalRow) * 2;\n\n      return ivec2(r, c);\n    }\n  ":`\n    ivec2 getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(${s[0]}, ${s[1]}));\n\n      int index = resTexRC.x * ${s[1]} + resTexRC.y;\n      int r = 2 * (index / ${r});\n      int c = imod(index, ${r}) * 2;\n\n      return ivec2(r, c);\n    }\n  `}(e,t,n);case 3:return function(e,t,n){if(n)return"\n    ivec3 getOutputCoords() {\n      ivec2 packedTexShape = ivec2(ceil(float(outTexShape[0]) / 2.0), ceil(float(outTexShape[1]) / 2.0));\n      int texelsInLogicalRow = int(ceil(float(outShape[2]) / 2.0));\n      int texelsInBatch = texelsInLogicalRow * int(ceil(float(outShape[1]) / 2.0));\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(packedTexShape[0], packedTexShape[1]));\n      int index = resTexRC.x * packedTexShape[1] + resTexRC.y;\n\n      int b = index / texelsInBatch;\n      index -= b * texelsInBatch;\n\n      int r = 2 * (index / texelsInLogicalRow);\n      int c = imod(index, texelsInLogicalRow) * 2;\n\n      return ivec3(b, r, c);\n    }\n  ";const s=[Math.ceil(t[0]/2),Math.ceil(t[1]/2)],r=Math.ceil(e[2]/2),a=r*Math.ceil(e[1]/2);return`\n    ivec3 getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(${s[0]}, ${s[1]}));\n      int index = resTexRC.x * ${s[1]} + resTexRC.y;\n\n      int b = index / ${a};\n      index -= b * ${a};\n\n      int r = 2 * (index / ${r});\n      int c = imod(index, ${r}) * 2;\n\n      return ivec3(b, r, c);\n    }\n  `}(e,t,n);default:return function(e,t,n){if(n)return"\n    ivec4 getOutputCoords() {\n      ivec2 packedTexShape = ivec2(ceil(float(outTexShape[0]) / 2.0), ceil(float(outTexShape[1]) / 2.0));\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(packedTexShape[0], packedTexShape[1]));\n      int index = resTexRC.x * packedTexShape[1] + resTexRC.y;\n\n      int texelsInLogicalRow = int(ceil(float(outShape[3]) / 2.0));\n      int texelsInBatch = texelsInLogicalRow * int(ceil(float(outShape[2]) / 2.0));\n      int texelsInBatchN = texelsInBatch * outShape[1];\n\n      int b2 = index / texelsInBatchN;\n      index -= b2 * texelsInBatchN;\n\n      int b = index / texelsInBatch;\n      index -= b * texelsInBatch;\n\n      int r = 2 * (index / texelsInLogicalRow);\n      int c = imod(index, texelsInLogicalRow) * 2;\n\n      return ivec4(b2, b, r, c);\n    }\n  ";const s=[Math.ceil(t[0]/2),Math.ceil(t[1]/2)],r=Math.ceil(e[e.length-1]/2),a=r*Math.ceil(e[e.length-2]/2);let i=a,o="",l="b, r, c";for(let t=2;t<e.length-1;t++)i*=e[e.length-t-1],o=`\n      int b${t} = index / ${i};\n      index -= b${t} * ${i};\n    `+o,l=`b${t}, `+l;return`\n    ivec${e.length} getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(${s[0]}, ${s[1]}));\n      int index = resTexRC.x * ${s[1]} + resTexRC.y;\n\n      ${o}\n\n      int b = index / ${a};\n      index -= b * ${a};\n\n      int r = 2 * (index / ${r});\n      int c = imod(index, ${r}) * 2;\n\n      return ivec${e.length}(${l});\n    }\n  `}(e,t,n)}}(t.logicalShape,i,n.enableShapeUniforms),c=function(e){return`\n    void setOutput(vec4 val) {\n      ${e.output} = val;\n    }\n  `}(o)):(u=function(e,t,n){switch(e.length){case 0:return"\n    int getOutputCoords() {\n      return 0;\n    }\n  ";case 1:return function(e,t,n){return 1===t[0]?n?"\n      int getOutputCoords() {\n        return int(resultUV.x * float(outTexShape[1]));\n      }\n    ":`\n      int getOutputCoords() {\n        return int(resultUV.x * ${t[1]}.0);\n      }\n    `:1===t[1]?n?"\n      int getOutputCoords() {\n        return int(resultUV.y * float(outTexShape[0]));\n      }\n    ":`\n      int getOutputCoords() {\n        return int(resultUV.y * ${t[0]}.0);\n      }\n    `:n?"\n    int getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(outTexShape[0], outTexShape[1]));\n      return resTexRC.x * outTexShape[1] + resTexRC.y;\n    }\n  ":`\n    int getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(${t[0]}, ${t[1]}));\n      return resTexRC.x * ${t[1]} + resTexRC.y;\n    }\n  `}(0,t,n);case 2:return function(e,t,n){return ce(e,t)?n?"\n      ivec2 getOutputCoords() {\n        return ivec2(resultUV.yx * vec2(outTexShape[0], outTexShape[1]));\n      }\n    ":`\n      ivec2 getOutputCoords() {\n        return ivec2(resultUV.yx * vec2(${t[0]}, ${t[1]}));\n      }\n    `:1===e[1]?n?"\n      ivec2 getOutputCoords() {\n        ivec2 resTexRC = ivec2(resultUV.yx *\n                               vec2(outTexShape[0], outTexShape[1]));\n        int index = resTexRC.x * outTexShape[1] + resTexRC.y;\n        return ivec2(index, 0);\n      }\n    ":`\n      ivec2 getOutputCoords() {\n        ivec2 resTexRC = ivec2(resultUV.yx *\n                               vec2(${t[0]}, ${t[1]}));\n        int index = resTexRC.x * ${t[1]} + resTexRC.y;\n        return ivec2(index, 0);\n      }\n    `:1===e[0]?n?"\n      ivec2 getOutputCoords() {\n        ivec2 resTexRC = ivec2(resultUV.yx *\n                               vec2(outTexShape[0], outTexShape[1]));\n        int index = resTexRC.x * outTexShape[1] + resTexRC.y;\n        return ivec2(0, index);\n      }\n    ":`\n      ivec2 getOutputCoords() {\n        ivec2 resTexRC = ivec2(resultUV.yx *\n                               vec2(${t[0]}, ${t[1]}));\n        int index = resTexRC.x * ${t[1]} + resTexRC.y;\n        return ivec2(0, index);\n      }\n    `:n?"\n    ivec2 getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(outTexShape[0], outTexShape[1]));\n      int index = resTexRC.x * outTexShape[1] + resTexRC.y;\n      int r = index / outShape[1];\n      int c = index - r * outShape[1];\n      return ivec2(r, c);\n    }\n  ":`\n    ivec2 getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(${t[0]}, ${t[1]}));\n      int index = resTexRC.x * ${t[1]} + resTexRC.y;\n      int r = index / ${e[1]};\n      int c = index - r * ${e[1]};\n      return ivec2(r, c);\n    }\n  `}(e,t,n);case 3:return function(e,t,n){if(n)return`\n  ivec3 getOutputCoords() {\n    ivec2 resTexRC = ivec2(resultUV.yx *\n                           vec2(outTexShape[0], outTexShape[1]));\n    int index = resTexRC.x * outTexShape[1] + resTexRC.y;\n    ${RA(["r","c","d"],e)}\n    return ivec3(r, c, d);\n  }\n`;const s=AA(["r","c","d"],e);return`\n    ivec3 getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(${t[0]}, ${t[1]}));\n      int index = resTexRC.x * ${t[1]} + resTexRC.y;\n      ${s}\n      return ivec3(r, c, d);\n    }\n  `}(e,t,n);case 4:return function(e,t,n){if(n)return`\n    ivec4 getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n        vec2(outTexShape[0], outTexShape[1]));\n      int index = resTexRC.x * outTexShape[1] + resTexRC.y;\n      ${RA(["r","c","d","d2"],e)}\n      return ivec4(r, c, d, d2);\n    }\n  `;const s=AA(["r","c","d","d2"],e);return`\n    ivec4 getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n        vec2(${t[0]}, ${t[1]}));\n      int index = resTexRC.x * ${t[1]} + resTexRC.y;\n      ${s}\n      return ivec4(r, c, d, d2);\n    }\n  `}(e,t,n);case 5:return function(e,t){const n=AA(["r","c","d","d2","d3"],e);return`\n    ivec5 getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx * vec2(${t[0]},\n                             ${t[1]}));\n\n      int index = resTexRC.x * ${t[1]} + resTexRC.y;\n\n      ${n}\n\n      ivec5 outShape = ivec5(r, c, d, d2, d3);\n      return outShape;\n    }\n  `}(e,t);case 6:return function(e,t){const n=AA(["r","c","d","d2","d3","d4"],e);return`\n    ivec6 getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n        vec2(${t[0]}, ${t[1]}));\n      int index = resTexRC.x * ${t[1]} + resTexRC.y;\n\n      ${n}\n\n      ivec6 result = ivec6(r, c, d, d2, d3, d4);\n      return result;\n    }\n  `}(e,t);default:throw new Error(`${e.length}-D output sampling is not yet supported`)}}(t.logicalShape,i,n.enableShapeUniforms),c=function(e){return`\n    void setOutput(float val) {\n      ${e.output} = vec4(val, 0, 0, 0);\n    }\n  `}(o)),n.packedInputs&&(h+=WA),[h,l,c,r,u,a,n.userCode].join("\n")}function MA(e,t=!1){const n=e.shapeInfo.logicalShape;switch(n.length){case 0:return function(e,t){const n=e.name,s="get"+n.charAt(0).toUpperCase()+n.slice(1);if(e.shapeInfo.isUniform)return`float ${s}() {return ${n};}`;const[r,a]=e.shapeInfo.texShape;if(1===r&&1===a)return`\n      float ${s}() {\n        return sampleTexture(${n}, halfCR);\n      }\n    `;const i=VA(n);if(t)return`\n    float ${s}() {\n      vec2 uv = uvFromFlat(${n}TexShape[0], ${n}TexShape[1], ${i});\n      return sampleTexture(${n}, uv);\n    }\n  `;const[o,l]=e.shapeInfo.texShape;return`\n    float ${s}() {\n      vec2 uv = uvFromFlat(${o}, ${l}, ${i});\n      return sampleTexture(${n}, uv);\n    }\n  `}(e,t);case 1:return function(e,t){const n=e.name,s="get"+n.charAt(0).toUpperCase()+n.slice(1);if(e.shapeInfo.isUniform)return`\n      float ${s}(int index) {\n        ${UA(e)}\n      }\n    `;const r=e.shapeInfo.texShape,a=r[0],i=r[1];if(1===i&&1===a)return`\n      float ${s}(int index) {\n        return sampleTexture(${n}, halfCR);\n      }\n    `;const o=VA(n);return 1===i?t?`\n      float ${s}(int index) {\n        vec2 uv = vec2(0.5, (float(index + ${o}) + 0.5) / float(${n}TexShape[0]));\n        return sampleTexture(${n}, uv);\n      }\n    `:`\n      float ${s}(int index) {\n        vec2 uv = vec2(0.5, (float(index + ${o}) + 0.5) / ${a}.0);\n        return sampleTexture(${n}, uv);\n      }\n    `:1===a?t?`\n      float ${s}(int index) {\n        vec2 uv = vec2((float(index + ${o}) + 0.5) / float(${n}TexShape[1]), 0.5);\n        return sampleTexture(${n}, uv);\n      }\n    `:`\n      float ${s}(int index) {\n        vec2 uv = vec2((float(index + ${o}) + 0.5) / ${i}.0, 0.5);\n        return sampleTexture(${n}, uv);\n      }\n    `:t?`\n    float ${s}(int index) {\n      vec2 uv = uvFromFlat(${n}TexShape[0], ${n}TexShape[1], index + ${o});\n      return sampleTexture(${n}, uv);\n    }\n  `:`\n    float ${s}(int index) {\n      vec2 uv = uvFromFlat(${a}, ${i}, index + ${o});\n      return sampleTexture(${n}, uv);\n    }\n  `}(e,t);case 2:return function(e,t){const n=e.shapeInfo.logicalShape,s=e.name,r="get"+s.charAt(0).toUpperCase()+s.slice(1),a=e.shapeInfo.texShape;if(null!=a&&ce(n,a)){if(t)return`\n      float ${r}(int row, int col) {\n        vec2 uv = (vec2(col, row) + halfCR) / vec2(${s}TexShape[1], ${s}TexShape[0]);\n        return sampleTexture(${s}, uv);\n      }\n    `;const e=a[0];return`\n    float ${r}(int row, int col) {\n      vec2 uv = (vec2(col, row) + halfCR) / vec2(${a[1]}.0, ${e}.0);\n      return sampleTexture(${s}, uv);\n    }\n  `}const{newShape:i,keptDims:o}=ye(n),l=i;if(l.length<n.length){const n=["row","col"];return`\n      ${MA(HA(e,l),t)}\n      float ${r}(int row, int col) {\n        return ${r}(${qA(n,o)});\n      }\n    `}if(e.shapeInfo.isUniform)return`\n      float ${r}(int row, int col) {\n        int index = round(dot(vec2(row, col), vec2(${n[1]}, 1)));\n        ${UA(e)}\n      }\n    `;const u=a[0],c=a[1],h=VA(s);return 1===c?t?`\n      float ${r}(int row, int col) {\n        float index = dot(vec3(row, col, ${h}), vec3(${s}Shape[1], 1, 1));\n        vec2 uv = vec2(0.5, (index + 0.5) / float(${s}TexShape[0]));\n        return sampleTexture(${s}, uv);\n      }\n    `:`\n    float ${r}(int row, int col) {\n      float index = dot(vec3(row, col, ${h}), vec3(${n[1]}, 1, 1));\n      vec2 uv = vec2(0.5, (index + 0.5) / ${u}.0);\n      return sampleTexture(${s}, uv);\n    }\n  `:1===u?t?`\n      float ${r}(int row, int col) {\n        float index = dot(vec3(row, col, ${h}), vec3(${s}Shape[1], 1, 1));\n        vec2 uv = vec2((index + 0.5) / float(${s}TexShape[1]), 0.5);\n        return sampleTexture(${s}, uv);\n      }\n    `:`\n    float ${r}(int row, int col) {\n      float index = dot(vec3(row, col, ${h}), vec3(${n[1]}, 1, 1));\n      vec2 uv = vec2((index + 0.5) / ${c}.0, 0.5);\n      return sampleTexture(${s}, uv);\n    }\n  `:t?`\n      float ${r}(int row, int col) {\n        // Explicitly use integer operations as dot() only works on floats.\n        int index = row * ${s}Shape[1] + col + ${h};\n        vec2 uv = uvFromFlat(${s}TexShape[0], ${s}TexShape[1], index);\n        return sampleTexture(${s}, uv);\n      }\n    `:`\n  float ${r}(int row, int col) {\n    // Explicitly use integer operations as dot() only works on floats.\n    int index = row * ${n[1]} + col + ${h};\n    vec2 uv = uvFromFlat(${u}, ${c}, index);\n    return sampleTexture(${s}, uv);\n  }\n`}(e,t);case 3:return function(e,t){const n=e.shapeInfo.logicalShape,s=e.name,r="get"+s.charAt(0).toUpperCase()+s.slice(1),a=n[1]*n[2],i=n[2],{newShape:o,keptDims:l}=ye(n),u=o;if(u.length<n.length){const n=["row","col","depth"];return`\n        ${MA(HA(e,u),t)}\n        float ${r}(int row, int col, int depth) {\n          return ${r}(${qA(n,l)});\n        }\n      `}if(e.shapeInfo.isUniform)return`\n      float ${r}(int row, int col, int depth) {\n        int index = round(dot(vec3(row, col, depth),\n                          vec3(${a}, ${i}, 1)));\n        ${UA(e)}\n      }\n    `;const c=e.shapeInfo.texShape,h=c[0],d=c[1],p=e.shapeInfo.flatOffset;if(d===a&&null==p)return t?`\n      float ${r}(int row, int col, int depth) {\n        int stride1 = ${s}Shape[2];\n        float texR = float(row);\n        float texC = dot(vec2(col, depth), vec2(stride1, 1));\n        vec2 uv = (vec2(texC, texR) + halfCR) /\n                   vec2(${s}TexShape[1], ${s}TexShape[0]);\n        return sampleTexture(${s}, uv);\n      }\n    `:`\n        float ${r}(int row, int col, int depth) {\n          float texR = float(row);\n          float texC = dot(vec2(col, depth), vec2(${i}, 1));\n          vec2 uv = (vec2(texC, texR) + halfCR) /\n                     vec2(${d}.0, ${h}.0);\n          return sampleTexture(${s}, uv);\n        }\n      `;if(d===i&&null==p)return t?`\n      float ${r}(int row, int col, int depth) {\n        float texR = dot(vec2(row, col), vec2(${s}Shape[1], 1));\n        float texC = float(depth);\n        vec2 uv = (vec2(texC, texR) + halfCR) / vec2(${s}TexShape[1], ${s}TexShape[0]);\n        return sampleTexture(${s}, uv);\n      }\n    `:`\n    float ${r}(int row, int col, int depth) {\n      float texR = dot(vec2(row, col), vec2(${n[1]}, 1));\n      float texC = float(depth);\n      vec2 uv = (vec2(texC, texR) + halfCR) / vec2(${d}.0, ${h}.0);\n      return sampleTexture(${s}, uv);\n    }\n  `;const f=VA(s);return t?`\n    float ${r}(int row, int col, int depth) {\n      // Explicitly use integer operations as dot() only works on floats.\n      int stride0 = ${s}Shape[1] * ${s}Shape[2];\n      int stride1 = ${s}Shape[2];\n      int index = row * stride0 + col * stride1 + depth + ${f};\n      vec2 uv = uvFromFlat(${s}TexShape[0], ${s}TexShape[1], index);\n      return sampleTexture(${s}, uv);\n    }\n    `:`\n      float ${r}(int row, int col, int depth) {\n        // Explicitly use integer operations as dot() only works on floats.\n        int index = row * ${a} + col * ${i} + depth + ${f};\n        vec2 uv = uvFromFlat(${h}, ${d}, index);\n        return sampleTexture(${s}, uv);\n      }\n  `}(e,t);case 4:return function(e,t){const n=e.shapeInfo.logicalShape,s=e.name,r="get"+s.charAt(0).toUpperCase()+s.slice(1),a=n[3],i=n[2]*a,o=n[1]*i,{newShape:l,keptDims:u}=ye(n);if(l.length<n.length){const n=["row","col","depth","depth2"];return`\n      ${MA(HA(e,l),t)}\n      float ${r}(int row, int col, int depth, int depth2) {\n        return ${r}(${qA(n,u)});\n      }\n    `}if(e.shapeInfo.isUniform)return`\n      float ${r}(int row, int col, int depth, int depth2) {\n        int index = round(dot(vec4(row, col, depth, depth2),\n                          vec4(${o}, ${i}, ${a}, 1)));\n        ${UA(e)}\n      }\n    `;const c=e.shapeInfo.flatOffset,h=e.shapeInfo.texShape,d=h[0],p=h[1],f=`int stride2 = ${s}Shape[3];`,m=`int stride1 = ${s}Shape[2] * stride2;`,g=`int stride0 = ${s}Shape[1] * stride1;`;if(p===o&&null==c)return t?`\n      float ${r}(int row, int col, int depth, int depth2) {\n        ${f}\n        ${m}\n        float texR = float(row);\n        float texC =\n            dot(vec3(col, depth, depth2),\n                vec3(stride1, stride2, 1));\n        vec2 uv = (vec2(texC, texR) + halfCR) /\n                   vec2(${s}TexShape[1], ${s}TexShape[0]);\n        return sampleTexture(${s}, uv);\n      }\n    `:`\n      float ${r}(int row, int col, int depth, int depth2) {\n        float texR = float(row);\n        float texC =\n            dot(vec3(col, depth, depth2),\n                vec3(${i}, ${a}, 1));\n        vec2 uv = (vec2(texC, texR) + halfCR) /\n                   vec2(${p}.0, ${d}.0);\n        return sampleTexture(${s}, uv);\n      }\n    `;if(p===a&&null==c)return t?`\n      float ${r}(int row, int col, int depth, int depth2) {\n        float texR = dot(vec3(row, col, depth),\n                         vec3(${s}Shape[1] * ${s}Shape[2], ${s}Shape[2], 1));\n        float texC = float(depth2);\n        vec2 uv = (vec2(texC, texR) + halfCR) /\n                  vec2(${s}TexShape[1], ${s}TexShape[0]);\n        return sampleTexture(${s}, uv);\n      }\n    `:`\n      float ${r}(int row, int col, int depth, int depth2) {\n        float texR = dot(vec3(row, col, depth),\n                         vec3(${n[1]*n[2]}, ${n[2]}, 1));\n        float texC = float(depth2);\n        vec2 uv = (vec2(texC, texR) + halfCR) /\n                  vec2(${p}.0, ${d}.0);\n        return sampleTexture(${s}, uv);\n      }\n    `;const y=VA(s);return t?`\n    float ${r}(int row, int col, int depth, int depth2) {\n      // Explicitly use integer operations as dot() only works on floats.\n      ${f}\n      ${m}\n      ${g}\n      int index = row * stride0 + col * stride1 +\n          depth * stride2 + depth2;\n      vec2 uv = uvFromFlat(${s}TexShape[0], ${s}TexShape[1], index + ${y});\n      return sampleTexture(${s}, uv);\n    }\n  `:`\n    float ${r}(int row, int col, int depth, int depth2) {\n      // Explicitly use integer operations as dot() only works on floats.\n      int index = row * ${o} + col * ${i} +\n          depth * ${a} + depth2;\n      vec2 uv = uvFromFlat(${d}, ${p}, index + ${y});\n      return sampleTexture(${s}, uv);\n    }\n  `}(e,t);case 5:return function(e){const t=e.shapeInfo.logicalShape,n=e.name,s="get"+n.charAt(0).toUpperCase()+n.slice(1),r=t[4],a=t[3]*r,i=t[2]*a,o=t[1]*i,{newShape:l,keptDims:u}=ye(t);if(l.length<t.length){const t=["row","col","depth","depth2","depth3"];return`\n      ${MA(HA(e,l))}\n      float ${s}(int row, int col, int depth, int depth2, int depth3) {\n        return ${s}(${qA(t,u)});\n      }\n    `}if(e.shapeInfo.isUniform)return`\n      float ${s}(int row, int col, int depth, int depth2, int depth3) {\n        float index = dot(\n          vec4(row, col, depth, depth2),\n          vec4(${o}, ${i}, ${a}, ${r})) +\n          depth3;\n        ${UA(e)}\n      }\n    `;const c=e.shapeInfo.flatOffset,h=e.shapeInfo.texShape,d=h[0],p=h[1];if(p===o&&null==c)return`\n      float ${s}(int row, int col, int depth, int depth2, int depth3) {\n        int texR = row;\n        float texC = dot(vec4(col, depth, depth2, depth3),\n                         vec4(${i}, ${a}, ${r}, 1));\n        vec2 uv = (vec2(texC, texR) + halfCR) /\n                   vec2(${p}.0, ${d}.0);\n        return sampleTexture(${n}, uv);\n      }\n    `;if(p===r&&null==c)return`\n      float ${s}(int row, int col, int depth, int depth2, int depth3) {\n        float texR = dot(\n          vec4(row, col, depth, depth2),\n          vec4(${t[1]*t[2]*t[3]},\n               ${t[2]*t[3]}, ${t[3]}, 1));\n        int texC = depth3;\n        vec2 uv = (vec2(texC, texR) + halfCR) /\n                  vec2(${p}.0, ${d}.0);\n        return sampleTexture(${n}, uv);\n      }\n    `;return`\n    float ${s}(int row, int col, int depth, int depth2, int depth3) {\n      // Explicitly use integer operations as dot() only works on floats.\n      int index = row * ${o} + col * ${i} + depth * ${a} +\n          depth2 * ${r} + depth3 + ${VA(n)};\n      vec2 uv = uvFromFlat(${d}, ${p}, index);\n      return sampleTexture(${n}, uv);\n    }\n  `}(e);case 6:return function(e){const t=e.shapeInfo.logicalShape,n=e.name,s="get"+n.charAt(0).toUpperCase()+n.slice(1),{newShape:r,keptDims:a}=ye(t);if(r.length<t.length){const t=["row","col","depth","depth2","depth3","depth4"];return`\n      ${MA(HA(e,r))}\n      float ${s}(int row, int col, int depth,\n                    int depth2, int depth3, int depth4) {\n        return ${s}(${qA(t,a)});\n      }\n    `}const i=t[5],o=t[4]*i,l=t[3]*o,u=t[2]*l,c=t[1]*u;if(e.shapeInfo.isUniform)return`\n      float ${s}(int row, int col, int depth,\n                  int depth2, int depth3, int depth4) {\n        int index = round(dot(\n          vec4(row, col, depth, depth2),\n          vec4(${c}, ${u}, ${l}, ${o})) +\n          dot(\n            vec2(depth3, depth4),\n            vec2(${i}, 1)));\n        ${UA(e)}\n      }\n    `;const h=e.shapeInfo.flatOffset,d=e.shapeInfo.texShape,p=d[0],f=d[1];if(f===c&&null==h)return`\n      float ${s}(int row, int col, int depth,\n                    int depth2, int depth3, int depth4) {\n        int texR = row;\n        float texC = dot(vec4(col, depth, depth2, depth3),\n          vec4(${u}, ${l}, ${o}, ${i})) +\n               float(depth4);\n        vec2 uv = (vec2(texC, texR) + halfCR) /\n                   vec2(${f}.0, ${p}.0);\n        return sampleTexture(${n}, uv);\n      }\n    `;if(f===i&&null==h)return`\n      float ${s}(int row, int col, int depth,\n                    int depth2, int depth3, int depth4) {\n        float texR = dot(vec4(row, col, depth, depth2),\n          vec4(${t[1]*t[2]*t[3]*t[4]},\n               ${t[2]*t[3]*t[4]},\n               ${t[3]*t[4]},\n               ${t[4]})) + float(depth3);\n        int texC = depth4;\n        vec2 uv = (vec2(texC, texR) + halfCR) /\n                  vec2(${f}.0, ${p}.0);\n        return sampleTexture(${n}, uv);\n      }\n    `;return`\n    float ${s}(int row, int col, int depth,\n                  int depth2, int depth3, int depth4) {\n      // Explicitly use integer operations as dot() only works on floats.\n      int index = row * ${c} + col * ${u} + depth * ${l} +\n          depth2 * ${o} + depth3 * ${i} + depth4 + ${VA(n)};\n      vec2 uv = uvFromFlat(${p}, ${f}, index);\n      return sampleTexture(${n}, uv);\n    }\n  `}(e);default:throw new Error(`${n.length}-D input sampling is not yet supported`)}}function LA(e,t){switch(e.shapeInfo.logicalShape.length){case 0:return function(e){const t=e.name;return`\n    vec4 ${"get"+t.charAt(0).toUpperCase()+t.slice(1)}() {\n      return ${EA().texture2D}(${t}, halfCR);\n    }\n  `}(e);case 1:return function(e,t){const n=e.name,s="get"+n.charAt(0).toUpperCase()+n.slice(1),r=e.shapeInfo.texShape,a=EA();if(t)return`\n    vec4 ${s}(int index) {\n      ivec2 packedTexShape = ivec2(ceil(float(${n}TexShape[0]) / 2.0), ceil(float(${n}TexShape[1]) / 2.0));\n      vec2 uv = packedUVfrom1D(\n        packedTexShape[0], packedTexShape[1], index);\n      return ${a.texture2D}(${n}, uv);\n    }\n  `;const i=[Math.ceil(r[0]/2),Math.ceil(r[1]/2)];return`\n    vec4 ${s}(int index) {\n      vec2 uv = packedUVfrom1D(\n        ${i[0]}, ${i[1]}, index);\n      return ${a.texture2D}(${n}, uv);\n    }\n  `}(e,t);case 2:return function(e,t){const n=e.shapeInfo.logicalShape,s=e.name,r="get"+s.charAt(0).toUpperCase()+s.slice(1),a=e.shapeInfo.texShape,i=a[0],o=a[1],l=EA();if(null!=a&&ce(n,a))return t?`\n      vec4 ${r}(int row, int col) {\n        vec2 uv = (vec2(col, row) + halfCR) / vec2(${s}TexShape[1], ${s}TexShape[0]);\n\n        return ${l.texture2D}(${s}, uv);\n      }\n    `:`\n      vec4 ${r}(int row, int col) {\n        vec2 uv = (vec2(col, row) + halfCR) / vec2(${o}.0, ${i}.0);\n\n        return ${l.texture2D}(${s}, uv);\n      }\n    `;if(t)return`\n    vec4 ${r}(int row, int col) {\n      ivec2 packedTexShape = ivec2(ceil(float(${s}TexShape[0]) / 2.0), ceil(float(${s}TexShape[1]) / 2.0));\n      int valuesPerRow = int(ceil(float(${s}Shape[1]) / 2.0));\n      vec2 uv = packedUVfrom2D(valuesPerRow, packedTexShape[0], packedTexShape[1], row, col);\n      return ${l.texture2D}(${s}, uv);\n    }\n  `;const u=[Math.ceil(a[0]/2),Math.ceil(a[1]/2)];return`\n    vec4 ${r}(int row, int col) {\n      vec2 uv = packedUVfrom2D(${Math.ceil(n[1]/2)}, ${u[0]}, ${u[1]}, row, col);\n      return ${l.texture2D}(${s}, uv);\n    }\n  `}(e,t);case 3:return function(e,t){const n=e.shapeInfo.logicalShape,s=e.name,r="get"+s.charAt(0).toUpperCase()+s.slice(1),a=e.shapeInfo.texShape,i=[Math.ceil(a[0]/2),Math.ceil(a[1]/2)];if(1===n[0]){const s=[1,2],a=["b","row","col"];return`\n        ${LA(HA(e,n.slice(1)),t)}\n        vec4 ${r}(int b, int row, int col) {\n          return ${r}(${qA(a,s)});\n        }\n      `}const o=EA();if(t)return`\n    vec4 ${r}(int b, int row, int col) {\n      ivec2 packedTexShape = ivec2(ceil(float(${s}TexShape[0]) / 2.0), ceil(float(${s}TexShape[1]) / 2.0));\n      int valuesPerRow = int(ceil(float(${s}Shape[2]) / 2.0));\n      int texelsInBatch = valuesPerRow * int(ceil(float(${s}Shape[1]) / 2.0));\n      vec2 uv = packedUVfrom3D(\n        packedTexShape[0], packedTexShape[1], texelsInBatch, valuesPerRow, b, row, col);\n      return ${o.texture2D}(${s}, uv);\n    }\n  `;const l=i[0],u=i[1],c=Math.ceil(n[2]/2);return`\n    vec4 ${r}(int b, int row, int col) {\n      vec2 uv = packedUVfrom3D(\n        ${l}, ${u}, ${c*Math.ceil(n[1]/2)}, ${c}, b, row, col);\n      return ${o.texture2D}(${s}, uv);\n    }\n  `}(e,t);default:return function(e,t){const n=e.name,s="get"+n.charAt(0).toUpperCase()+n.slice(1),r=EA();if(t)return`\n    vec4 ${s}(int b2, int b, int row, int col) {\n      int valuesPerRow = int(ceil(float(${n}Shape[3]) / 2.0));\n      int texelsInBatch = valuesPerRow * int(ceil(float(${n}Shape[2]) / 2.0));\n      int index = b * texelsInBatch + (row / 2) * valuesPerRow + (col / 2);\n      texelsInBatch *= ${n}Shape[1];\n      index = b2 * texelsInBatch + index;\n      ivec2 packedTexShape = ivec2(ceil(float(${n}TexShape[0]) / 2.0), ceil(float(${n}TexShape[1]) / 2.0));\n      int texR = index / packedTexShape[1];\n      int texC = index - texR * packedTexShape[1];\n      vec2 uv = (vec2(texC, texR) + halfCR) / vec2(packedTexShape[1], packedTexShape[0]); return ${r.texture2D}(${n}, uv);\n    }\n  `;const a=e.shapeInfo.logicalShape,i=a.length,o=e.shapeInfo.texShape,l=[Math.ceil(o[0]/2),Math.ceil(o[1]/2)],u=l[0],c=l[1],h=Math.ceil(a[i-1]/2);let d=h*Math.ceil(a[i-2]/2),p="int b, int row, int col",f=`b * ${d} + (row / 2) * ${h} + (col / 2)`;for(let e=2;e<i-1;e++)p=`int b${e}, `+p,d*=a[i-e-1],f=`b${e} * ${d} + `+f;return`\n    vec4 ${s}(${p}) {\n      int index = ${f};\n      int texR = index / ${c};\n      int texC = index - texR * ${c};\n      vec2 uv = (vec2(texC, texR) + halfCR) / vec2(${c}, ${u});\n      return ${r.texture2D}(${n}, uv);\n    }\n  `}(e,t)}}const zA="\nvec2 uvFromFlat(int texNumR, int texNumC, int index) {\n  int texR = index / texNumC;\n  int texC = index - texR * texNumC;\n  return (vec2(texC, texR) + halfCR) / vec2(texNumC, texNumR);\n}\nvec2 packedUVfrom1D(int texNumR, int texNumC, int index) {\n  int texelIndex = index / 2;\n  int texR = texelIndex / texNumC;\n  int texC = texelIndex - texR * texNumC;\n  return (vec2(texC, texR) + halfCR) / vec2(texNumC, texNumR);\n}\n",BA="\nvec2 packedUVfrom2D(int texelsInLogicalRow, int texNumR,\n  int texNumC, int row, int col) {\n  int texelIndex = (row / 2) * texelsInLogicalRow + (col / 2);\n  int texR = texelIndex / texNumC;\n  int texC = texelIndex - texR * texNumC;\n  return (vec2(texC, texR) + halfCR) / vec2(texNumC, texNumR);\n}\n",PA="\nvec2 packedUVfrom3D(int texNumR, int texNumC,\n    int texelsInBatch, int texelsInLogicalRow, int b,\n    int row, int col) {\n  int index = b * texelsInBatch + (row / 2) * texelsInLogicalRow + (col / 2);\n  int texR = index / texNumC;\n  int texC = index - texR * texNumC;\n  return (vec2(texC, texR) + halfCR) / vec2(texNumC, texNumR);\n}\n",WA="\n  float getChannel(vec4 frag, vec2 innerDims) {\n    vec2 modCoord = mod(innerDims, 2.);\n    return modCoord.x == 0. ?\n      (modCoord.y == 0. ? frag.r : frag.g) :\n      (modCoord.y == 0. ? frag.b : frag.a);\n  }\n  float getChannel(vec4 frag, int dim) {\n    float modCoord = mod(float(dim), 2.);\n    return modCoord == 0. ? frag.r : frag.g;\n  }\n";function VA(e){return`offset${e}`}function UA(e){const t=e.name,n=ue(e.shapeInfo.logicalShape);return n<2?`return ${t};`:`\n    for (int i = 0; i < ${n}; i++) {\n      if (i == index) {\n        return ${t}[i];\n      }\n    }\n  `}function GA(e){if(e<=1)return"int";if(2===e)return"ivec2";if(3===e)return"ivec3";if(4===e)return"ivec4";if(5===e)return"ivec5";if(6===e)return"ivec6";throw Error(`GPU for rank ${e} is not yet supported`)}function jA(e,t,n){const{newShape:s,keptDims:r}=ye(t),a=t.length,i=e&&3===a&&1===t[0],o=i?t.slice(1):s,l=!e&&a>1&&!ce(t,n)&&s.length<a||i;return{useSqueezeShape:l,uniformShape:l?o:t,keptDims:r}}function HA(e,t){const n=JSON.parse(JSON.stringify(e));return n.shapeInfo.logicalShape=t,n}function qA(e,t){return t.map((t=>e[t])).join(", ")}function KA(e,t,n){const s=[],r=[];let a,i,o,l=null,u=null;u=e.getUniformLocation(n,"NAN",!1),1===Pe().getNumber("WEBGL_VERSION")&&(l=e.getUniformLocation(n,"INFINITY",!1));const c=!1;for(const r of t.variableNames){const a={name:r,uniform:e.getUniformLocation(n,r,c),offset:e.getUniformLocation(n,`offset${r}`,c)};t.enableShapeUniforms&&(a.shape=e.getUniformLocation(n,`${r}Shape`,c),a.texShape=e.getUniformLocation(n,`${r}TexShape`,c)),s.push(a)}if(t.enableShapeUniforms&&(a=e.getUniformLocation(n,"outShape",c),o=e.getUniformLocation(n,"outShapeStrides",c),i=e.getUniformLocation(n,"outTexShape",c)),t.customUniforms)for(const s of t.customUniforms)r.push(e.getUniformLocation(n,s.name,c));return{variablesLocations:s,customUniformLocations:r,infLoc:l,nanLoc:u,outShapeLocation:a,outShapeStridesLocation:o,outTexShapeLocation:i}}function XA(e,t){if(e.length!==t.length)throw Error(`Binary was compiled with ${e.length} inputs, but was executed with ${t.length} inputs`);e.forEach(((e,n)=>{const s=e.logicalShape,r=t[n],a=r.shape;if(!ce(s,a))throw Error(`Binary was compiled with different shapes than the current args. Shapes ${s} and ${a} must match`);if(e.isUniform&&r.isUniform)return;const i=e.texShape,o=r.isUniform?null:r.texData.texShape;if(!ce(i,o))throw Error(`Binary was compiled with different texture shapes than the current args. Shape ${i} and ${o} must match`)}))}function YA(e){return Pe().getBool("WEBGL_USE_SHAPES_UNIFORMS")&&e<=4}class JA{constructor(e){this.variableNames=["A"],this.packedInputs=!1,this.packedOutput=!0,this.outPackingScheme=ZE.DENSE,this.customUniforms=[{name:"texShape",type:"ivec2"}];const t=EA();this.outputShape=e,this.enableShapeUniforms=YA(this.outputShape.length),this.userCode=`\n      ivec3 outCoordsFromFlatIndex(int index) {\n        ${this.enableShapeUniforms?RA(["r","c","d"],e):AA(["r","c","d"],e)}\n        return ivec3(r, c, d);\n      }\n\n      void main() {\n        ivec2 resTexRC = ivec2(resultUV.yx * vec2(texShape[0], texShape[1]));\n        int index = 4 * (resTexRC.x * texShape[1] + resTexRC.y);\n\n        vec4 result = vec4(0.);\n\n        for (int i=0; i<4; i++) {\n          int flatIndex = index + i;\n          ivec3 rc = outCoordsFromFlatIndex(flatIndex);\n          result[i] = getA(rc.x, rc.y, rc.z);\n        }\n\n        ${t.output} = result;\n      }\n    `}}class ZA{constructor(e){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.outPackingScheme=ZE.DENSE,this.customUniforms=[{name:"texShape",type:"ivec2"}];const t=EA();this.outputShape=e,this.enableShapeUniforms=YA(this.outputShape.length),this.userCode=`\n      ivec3 outCoordsFromFlatIndex(int index) {\n        ${this.enableShapeUniforms?RA(["r","c","d"],e):AA(["r","c","d"],e)}\n        return ivec3(r, c, d);\n      }\n\n      void main() {\n        ivec2 resTexRC = ivec2(resultUV.yx * vec2(texShape[0], texShape[1]));\n        int index = 4 * (resTexRC.x * texShape[1] + resTexRC.y);\n\n        vec4 result = vec4(0.);\n\n        for (int i=0; i<4; i++) {\n          int flatIndex = index + i;\n          ivec3 rc = outCoordsFromFlatIndex(flatIndex);\n          result[i] = getChannel(getA(rc.x, rc.y, rc.z), vec2(rc.y, rc.z));\n        }\n\n        ${t.output} = result;\n      }\n    `}}class QA{constructor(e){this.variableNames=["A"],this.outTexUsage=QE.DOWNLOAD;const t=EA();this.outputShape=e,this.userCode=`\n      ${FA}\n\n      void main() {\n        float x = getAAtOutCoords();\n        ${t.output} = encode_float(x);\n      }\n    `}}class eR{constructor(e){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!1,this.outTexUsage=QE.DOWNLOAD;const t=EA();this.outputShape=e,this.userCode=`\n      ${FA}\n\n      void main() {\n        ivec3 coords = getOutputCoords();\n        float x = getChannel(getAAtOutCoords(), vec2(coords.y, coords.z));\n        ${t.output} = encode_float(x);\n      }\n    `}}const tR={R:0,G:1,B:2,A:3};class nR{constructor(e,t=!1,n="RGBA"){this.variableNames=["A"],this.customUniforms=[{name:"texShape",type:"ivec2"}];const s=EA();this.outputShape=e,this.enableShapeUniforms=YA(this.outputShape.length);let r="result";t&&(r="floor(result * 255. + 0.5)");let a="";for(let e=0;e<n.length;e++){const t=n[e];a+=`\n          if(offset == ${e}) {\n            result = values[${tR[t]}];\n          }`}this.userCode=`\n      ${this.enableShapeUniforms?"\n  int getFlatIndex(ivec3 coords) {\n    return coords.x * outShapeStrides[0] + coords.y * outShapeStrides[1] + coords.z;\n  }\n":_A(e)}\n\n      void main() {\n        ivec3 coords = getOutputCoords();\n        int flatIndex = getFlatIndex(coords);\n        float result = 0.;\n        int offset = imod(flatIndex, ${n.length});\n\n        flatIndex = idiv(flatIndex, ${n.length}, 1.);\n\n        int r = flatIndex / texShape[1];\n        if (r < texShape[0]) {\n          int c = imod(flatIndex, texShape[1]);\n          vec2 uv = (vec2(c, r) + halfCR) / vec2(texShape[1], texShape[0]);\n          vec4 values = ${s.texture2D}(A, uv);\n          ${a}\n        }\n        ${s.output} = vec4(${r}, 0., 0., 0.);\n      }\n    `}}class sR{constructor(e,t=!1){this.variableNames=["A"],this.packedInputs=!1,this.packedOutput=!0,this.customUniforms=[{name:"texShape",type:"ivec2"}];const n=EA();this.outputShape=e,this.enableShapeUniforms=YA(this.outputShape.length);let s="",r="result";t&&(r="floor(result * 255. + 0.5)");for(let t=0;t<=1;t++)for(let r=0;r<=1;r++){const a=2*t+r;s+=`\n          localCoords = coords;\n          if(localCoords[2] + ${r} < ${this.enableShapeUniforms?"outShape[2]":`${e[2]}`}) {\n          localCoords[2] += ${r};\n          if (localCoords[1] + ${t} < ${this.enableShapeUniforms?"outShape[1]":`${e[1]}`}) {\n            localCoords[1] += ${t};\n\n            flatIndex = getFlatIndex(localCoords);\n            offset = imod(flatIndex, 4);\n\n            flatIndex = idiv(flatIndex, 4, 1.);\n\n            int r = flatIndex / texShape[1];\n            int c = imod(flatIndex, texShape[1]);\n            vec2 uv = (vec2(c, r) + halfCR) / vec2(texShape[1], texShape[0]);\n            values = ${n.texture2D}(A, uv);\n\n            if (offset == 0) {\n              result[${a}] = values[0];\n            } else if (offset == 1) {\n              result[${a}] = values[1];\n            } else if (offset == 2) {\n              result[${a}] = values[2];\n            } else {\n              result[${a}] = values[3];\n            }\n          }\n        }\n        `}this.userCode=`\n        ${this.enableShapeUniforms?"\n  int getFlatIndex(ivec3 coords) {\n    return coords.x * outShapeStrides[0] + coords.y * outShapeStrides[1] + coords.z;\n  }\n":_A(e)}\n\n        void main() {\n          ivec3 coords = getOutputCoords();\n\n          vec4 result = vec4(0.);\n          int flatIndex, r, c, offset;\n          ivec3 localCoords;\n          vec2 uv;\n          vec4 values;\n\n          ${s}\n\n          ${n.output} = ${r};\n        }\n    `}}function rR(e,t,n,s,r,a){!function(e,t){const n=Pe().getNumber("WEBGL_MAX_TEXTURE_SIZE");if(e<=0||t<=0)throw new Error(`Requested texture size [${e}x${t}] is invalid.`);if(e>n||t>n)throw new Error(`Requested texture size [${e}x${t}] greater than WebGL maximum on this browser / GPU [${n}x${n}].`)}(t,n);const i=function(e){return gA(e,(()=>e.createTexture()),"Unable to create WebGLTexture.")}(e),o=e.TEXTURE_2D;return aA(e,(()=>e.bindTexture(o,i))),aA(e,(()=>e.texParameteri(o,e.TEXTURE_WRAP_S,e.CLAMP_TO_EDGE))),aA(e,(()=>e.texParameteri(o,e.TEXTURE_WRAP_T,e.CLAMP_TO_EDGE))),aA(e,(()=>e.texParameteri(o,e.TEXTURE_MIN_FILTER,e.NEAREST))),aA(e,(()=>e.texParameteri(o,e.TEXTURE_MAG_FILTER,e.NEAREST))),1===Pe().getNumber("WEBGL_VERSION")?aA(e,(()=>e.texImage2D(o,0,s,t,n,0,r,a,null))):aA(e,(()=>e.texStorage2D(o,1,s,t,n))),aA(e,(()=>e.bindTexture(e.TEXTURE_2D,null))),{texture:i,texShape:[n,t]}}function aR(e){return e.internalFormatFloat}function iR(e){return e.internalFormatHalfFloat}function oR(e){return e.downloadTextureFormat}function lR(e){return e.internalFormatPackedFloat}function uR(e){return e.internalFormatPackedHalfFloat}class cR{constructor(e){this.outputTexture=null,this.program=null,this.disposed=!1,this.itemsToPoll=[];const t=Pe().getNumber("WEBGL_VERSION");if(null!=e?(this.gl=e,function(e,t){XE[e]=t}(t,e)):this.gl=JE(t),e=this.gl,2===Pe().getNumber("WEBGL_VERSION")){const t=e;this.createVertexArray=()=>aA(t,(()=>t.createVertexArray())),this.bindVertexArray=e=>aA(t,(()=>t.bindVertexArray(e))),this.deleteVertexArray=e=>aA(t,(()=>t.deleteVertexArray(e))),this.getVertexArray=()=>aA(t,(()=>t.getParameter(t.VERTEX_ARRAY_BINDING)))}else if(null!=e){const t=e.getExtension("OES_vertex_array_object");if(null==t)throw new Error("All WebGL1 implementations are expected to offer OES_vertex_array_object.");this.createVertexArray=()=>aA(e,(()=>t.createVertexArrayOES())),this.bindVertexArray=n=>aA(e,(()=>t.bindVertexArrayOES(n))),this.deleteVertexArray=n=>aA(e,(()=>t.deleteVertexArrayOES(n))),this.getVertexArray=()=>aA(e,(()=>e.getParameter(t.VERTEX_ARRAY_BINDING_OES)))}let n="WEBGL_color_buffer_float";const s="EXT_color_buffer_half_float";if(this.parallelCompilationExtension=this.gl.getExtension("KHR_parallel_shader_compile"),1===Pe().getNumber("WEBGL_VERSION")){const e="OES_texture_float",t="OES_texture_half_float";if(this.textureFloatExtension=oA(this.gl,e),NA(this.gl,t))this.textureHalfFloatExtension=oA(this.gl,t);else if(Pe().get("WEBGL_FORCE_F16_TEXTURES"))throw new Error("GL context does not support half float textures, yet the environment flag WEBGL_FORCE_F16_TEXTURES is set to true.");if(this.colorBufferFloatExtension=this.gl.getExtension(n),NA(this.gl,s))this.colorBufferHalfFloatExtension=oA(this.gl,s);else if(Pe().get("WEBGL_FORCE_F16_TEXTURES"))throw new Error("GL context does not support color renderable half floats, yet the environment flag WEBGL_FORCE_F16_TEXTURES is set to true.")}else if(n="EXT_color_buffer_float",NA(this.gl,n))this.colorBufferFloatExtension=this.gl.getExtension(n);else{if(!NA(this.gl,s))throw new Error("GL context does not support color renderable floats");this.colorBufferHalfFloatExtension=this.gl.getExtension(s)}this.vertexBuffer=function(e){return function(e,t){const n=gA(e,(()=>e.createBuffer()),"Unable to create WebGLBuffer");return aA(e,(()=>e.bindBuffer(e.ARRAY_BUFFER,n))),aA(e,(()=>e.bufferData(e.ARRAY_BUFFER,t,e.STATIC_DRAW))),n}(e,new Float32Array([-1,1,0,0,1,-1,-1,0,0,0,1,1,0,1,1,1,-1,0,1,0]))}(this.gl),this.indexBuffer=function(e){return function(e,t){const n=gA(e,(()=>e.createBuffer()),"Unable to create WebGLBuffer");return aA(e,(()=>e.bindBuffer(e.ELEMENT_ARRAY_BUFFER,n))),aA(e,(()=>e.bufferData(e.ELEMENT_ARRAY_BUFFER,t,e.STATIC_DRAW))),n}(e,new Uint16Array([0,1,2,2,1,3]))}(this.gl),this.framebuffer=function(e){return gA(e,(()=>e.createFramebuffer()),"Unable to create WebGLFramebuffer.")}(this.gl),this.textureConfig=rA(this.gl,this.textureHalfFloatExtension)}get debug(){return Pe().getBool("DEBUG")}dispose(){if(this.disposed)return;null!=this.program&&console.warn("Disposing a GPGPUContext that still has a bound WebGLProgram. This is probably a resource leak, delete the program with GPGPUContext.deleteProgram before disposing."),null!=this.outputTexture&&console.warn("Disposing a GPGPUContext that still has a bound output matrix texture.  This is probably a resource leak, delete the output matrix texture with GPGPUContext.deleteMatrixTexture before disposing.");const e=this.gl;aA(e,(()=>e.finish())),aA(e,(()=>e.bindFramebuffer(e.FRAMEBUFFER,null))),aA(e,(()=>e.deleteFramebuffer(this.framebuffer))),aA(e,(()=>e.bindBuffer(e.ARRAY_BUFFER,null))),aA(e,(()=>e.bindBuffer(e.ELEMENT_ARRAY_BUFFER,null))),aA(e,(()=>e.deleteBuffer(this.indexBuffer))),this.disposed=!0}createFloat32MatrixTexture(e,t){return this.throwIfDisposed(),function(e,t,n,s){const[r,a]=tA(t,n);return rR(e,r,a,aR(s),s.textureFormatFloat,e.FLOAT)}(this.gl,e,t,this.textureConfig)}createFloat16MatrixTexture(e,t){return this.throwIfDisposed(),function(e,t,n,s){const[r,a]=tA(t,n);return rR(e,r,a,iR(s),s.textureFormatFloat,s.textureTypeHalfFloat)}(this.gl,e,t,this.textureConfig)}createUnsignedBytesMatrixTexture(e,t){return this.throwIfDisposed(),function(e,t,n,s){const[r,a]=tA(t,n);return rR(e,r,a,oR(s),e.RGBA,e.UNSIGNED_BYTE)}(this.gl,e,t,this.textureConfig)}uploadPixelDataToTexture(e,t){this.throwIfDisposed(),function(e,t,n){aA(e,(()=>e.bindTexture(e.TEXTURE_2D,t))),n.data instanceof Uint8Array?2===Pe().getNumber("WEBGL_VERSION")?aA(e,(()=>e.texSubImage2D(e.TEXTURE_2D,0,0,0,n.width,n.height,e.RGBA,e.UNSIGNED_BYTE,n.data))):aA(e,(()=>e.texImage2D(e.TEXTURE_2D,0,e.RGBA,n.width,n.height,0,e.RGBA,e.UNSIGNED_BYTE,n.data))):2===Pe().getNumber("WEBGL_VERSION")?aA(e,(()=>e.texSubImage2D(e.TEXTURE_2D,0,0,0,e.RGBA,e.UNSIGNED_BYTE,n))):aA(e,(()=>e.texImage2D(e.TEXTURE_2D,0,e.RGBA,e.RGBA,e.UNSIGNED_BYTE,n))),aA(e,(()=>e.bindTexture(e.TEXTURE_2D,null)))}(this.gl,e,t)}uploadDenseMatrixToTexture(e,t,n,s){this.throwIfDisposed(),function(e,t,n,s,r,a){let i,o,l;aA(e,(()=>e.bindTexture(e.TEXTURE_2D,t))),r instanceof Uint8Array?(i=new Uint8Array(n*s*4),o=e.UNSIGNED_BYTE,l=e.RGBA):(i=new Float32Array(n*s*4),o=e.FLOAT,l=a.internalFormatPackedFloat),i.set(r),2===Pe().getNumber("WEBGL_VERSION")?aA(e,(()=>e.texSubImage2D(e.TEXTURE_2D,0,0,0,n,s,e.RGBA,o,i))):aA(e,(()=>e.texImage2D(e.TEXTURE_2D,0,l,n,s,0,e.RGBA,o,i))),aA(e,(()=>e.bindTexture(e.TEXTURE_2D,null)))}(this.gl,e,t,n,s,this.textureConfig)}createFloat16PackedMatrixTexture(e,t){return this.throwIfDisposed(),function(e,t,n,s){const[r,a]=sA(t,n);return rR(e,r,a,uR(s),e.RGBA,s.textureTypeHalfFloat)}(this.gl,e,t,this.textureConfig)}createPackedMatrixTexture(e,t){return this.throwIfDisposed(),function(e,t,n,s){const[r,a]=sA(t,n);return rR(e,r,a,lR(s),e.RGBA,e.FLOAT)}(this.gl,e,t,this.textureConfig)}deleteMatrixTexture(e){this.throwIfDisposed(),this.outputTexture===e&&(fA(this.gl,this.framebuffer),this.outputTexture=null),aA(this.gl,(()=>this.gl.deleteTexture(e)))}downloadByteEncodedFloatMatrixFromOutputTexture(e,t,n){return this.downloadMatrixDriver(e,(()=>function(e,t,n,s){const[r,a]=tA(t,n),i=new Uint8Array(t*n*4);return aA(e,(()=>e.readPixels(0,0,r,a,s.downloadTextureFormat,e.UNSIGNED_BYTE,i))),new Float32Array(i.buffer)}(this.gl,t,n,this.textureConfig)))}downloadPackedMatrixFromBuffer(e,t,n,s,r,a){return function(e,t,n,s,r,a,i){const o=e,l=new Float32Array(function(e,t){const[n,s]=sA(e,t);return n*s*4}(a,i));return o.bindBuffer(o.PIXEL_PACK_BUFFER,t),o.getBufferSubData(o.PIXEL_PACK_BUFFER,0,l),o.bindBuffer(o.PIXEL_PACK_BUFFER,null),l}(this.gl,e,0,0,0,r,a,this.textureConfig)}downloadFloat32MatrixFromBuffer(e,t){return function(e,t,n){const s=e,r=new Float32Array(n);return s.bindBuffer(s.PIXEL_PACK_BUFFER,t),s.getBufferSubData(s.PIXEL_PACK_BUFFER,0,r),s.bindBuffer(s.PIXEL_PACK_BUFFER,null),r}(this.gl,e,t)}createBufferFromTexture(e,t,n){this.bindTextureToFrameBuffer(e);const s=function(e,t,n){const s=e.createBuffer();aA(e,(()=>e.bindBuffer(e.PIXEL_PACK_BUFFER,s)));const r=16*t*n;return aA(e,(()=>e.bufferData(e.PIXEL_PACK_BUFFER,r,e.STREAM_READ))),aA(e,(()=>e.readPixels(0,0,n,t,e.RGBA,e.FLOAT,0))),aA(e,(()=>e.bindBuffer(e.PIXEL_PACK_BUFFER,null))),s}(this.gl,t,n,this.textureConfig);return this.unbindTextureToFrameBuffer(),s}createAndWaitForFence(){const e=this.createFence(this.gl);return this.pollFence(e)}createFence(e){let t,n;if(Pe().getBool("WEBGL_FENCE_API_ENABLED")){const s=e,r=s.fenceSync(s.SYNC_GPU_COMMANDS_COMPLETE,0);e.flush(),n=()=>{const e=s.clientWaitSync(r,0,0);return e===s.ALREADY_SIGNALED||e===s.CONDITION_SATISFIED},t=r}else Pe().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")>0?(t=this.beginQuery(),this.endQuery(),n=()=>this.isQueryAvailable(t,Pe().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION"))):n=()=>!0;return{query:t,isFencePassed:n}}downloadMatrixFromPackedTexture(e,t,n){return this.downloadMatrixDriver(e,(()=>function(e,t,n){const s=new Float32Array(t*n*4);return aA(e,(()=>e.readPixels(0,0,n,t,e.RGBA,e.FLOAT,s))),s}(this.gl,t,n)))}createProgram(e){this.throwIfDisposed();const t=this.gl;null==this.vertexShader&&(this.vertexShader=function(e){const t=EA();return function(e,t){const n=gA(e,(()=>e.createShader(e.VERTEX_SHADER)),"Unable to create vertex WebGLShader.");if(aA(e,(()=>e.shaderSource(n,t))),aA(e,(()=>e.compileShader(n))),!1===e.getShaderParameter(n,e.COMPILE_STATUS))throw console.log(e.getShaderInfoLog(n)),new Error("Failed to compile vertex shader.");return n}(e,`${t.version}\n    precision highp float;\n    ${t.attribute} vec3 clipSpacePos;\n    ${t.attribute} vec2 uv;\n    ${t.varyingVs} vec2 resultUV;\n\n    void main() {\n      gl_Position = vec4(clipSpacePos, 1);\n      resultUV = uv;\n    }`)}(t));const n=function(e){return gA(e,(()=>e.createProgram()),"Unable to create WebGLProgram.")}(t);aA(t,(()=>t.attachShader(n,this.vertexShader))),aA(t,(()=>t.attachShader(n,e))),function(e,t){if(aA(e,(()=>e.linkProgram(t))),!Pe().get("ENGINE_COMPILE_ONLY")&&!1===e.getProgramParameter(t,e.LINK_STATUS))throw console.log(e.getProgramInfoLog(t)),new Error("Failed to link vertex and fragment shaders.")}(t,n);const s=Object.assign(n,{vao:this.createVertexArray()});return this.debug&&cA(t,s),s}buildVao(e){this.setProgram(e),this.bindVertexArray(e.vao);const t=this.gl;aA(t,(()=>t.bindBuffer(t.ELEMENT_ARRAY_BUFFER,this.indexBuffer))),function(e,t,n){aA(e,(()=>e.bindBuffer(e.ARRAY_BUFFER,n))),hA(e,t,"clipSpacePos",n,3,20,0)&&hA(e,t,"uv",n,2,20,12)}(t,e,this.vertexBuffer)}deleteProgram(e){this.throwIfDisposed(),e===this.program&&(this.program=null),null!=e&&(aA(this.gl,(()=>this.gl.deleteProgram(e))),this.deleteVertexArray(e.vao))}setProgram(e){this.throwIfDisposed(),this.program=e,null!=this.program&&this.debug&&cA(this.gl,this.program),aA(this.gl,(()=>this.gl.useProgram(e)))}getUniformLocation(e,t,n=!0){return this.throwIfDisposed(),n?function(e,t,n){return gA(e,(()=>e.getUniformLocation(t,n)),'uniform "'+n+'" not present in program.')}(this.gl,e,t):function(e,t,n){return e.getUniformLocation(t,n)}(this.gl,e,t)}getAttributeLocation(e,t){return this.throwIfDisposed(),aA(this.gl,(()=>this.gl.getAttribLocation(e,t)))}getUniformLocationNoThrow(e,t){return this.throwIfDisposed(),this.gl.getUniformLocation(e,t)}setInputMatrixTexture(e,t,n){this.throwIfDisposed(),this.throwIfNoProgram(),dA(this.gl,e,t,n)}setOutputMatrixTexture(e,t,n){this.setOutputMatrixTextureDriver(e,n,t)}setOutputPackedMatrixTexture(e,t,n){this.throwIfDisposed();const[s,r]=sA(t,n);this.setOutputMatrixTextureDriver(e,s,r)}setOutputMatrixWriteRegion(e,t,n,s){this.setOutputMatrixWriteRegionDriver(n,e,s,t)}setOutputPackedMatrixWriteRegion(e,t,n,s){throw new Error("setOutputPackedMatrixWriteRegion not implemented.")}debugValidate(){null!=this.program&&cA(this.gl,this.program),mA(this.gl)}executeProgram(){this.throwIfDisposed(),this.throwIfNoProgram();const e=this.gl;if(this.debug){const e=this.getVertexArray();console.assert(e===this.program.vao,"VAO changed between setProgram and executeProgram!"),this.debugValidate()}aA(e,(()=>e.drawElements(e.TRIANGLES,6,e.UNSIGNED_SHORT,0)))}blockUntilAllProgramsCompleted(){this.throwIfDisposed(),aA(this.gl,(()=>this.gl.finish()))}getQueryTimerExtension(){return null==this.disjointQueryTimerExtension&&(this.disjointQueryTimerExtension=oA(this.gl,2===Pe().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")?"EXT_disjoint_timer_query_webgl2":"EXT_disjoint_timer_query")),this.disjointQueryTimerExtension}getQueryTimerExtensionWebGL2(){return this.getQueryTimerExtension()}getQueryTimerExtensionWebGL1(){return this.getQueryTimerExtension()}beginQuery(){if(2===Pe().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")){const e=this.gl,t=this.getQueryTimerExtensionWebGL2(),n=e.createQuery();return e.beginQuery(t.TIME_ELAPSED_EXT,n),n}const e=this.getQueryTimerExtensionWebGL1(),t=e.createQueryEXT();return e.beginQueryEXT(e.TIME_ELAPSED_EXT,t),t}endQuery(){if(2===Pe().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")){const e=this.gl,t=this.getQueryTimerExtensionWebGL2();return void e.endQuery(t.TIME_ELAPSED_EXT)}const e=this.getQueryTimerExtensionWebGL1();e.endQueryEXT(e.TIME_ELAPSED_EXT)}async waitForQueryAndGetTime(e){return await fe((()=>this.disposed||this.isQueryAvailable(e,Pe().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")))),this.getQueryTime(e,Pe().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION"))}getQueryTime(e,t){if(0===t)return null;if(2===t){const t=this.gl;return t.getQueryParameter(e,t.QUERY_RESULT)/1e6}{const t=this.getQueryTimerExtensionWebGL1();return t.getQueryObjectEXT(e,t.QUERY_RESULT_EXT)/1e6}}isQueryAvailable(e,t){if(0===t)return!0;if(2===t){const t=this.gl,n=this.getQueryTimerExtensionWebGL2(),s=t.getQueryParameter(e,t.QUERY_RESULT_AVAILABLE);return null==this.disjoint&&(this.disjoint=this.gl.getParameter(n.GPU_DISJOINT_EXT)),s&&!this.disjoint}{const t=this.getQueryTimerExtensionWebGL1(),n=t.getQueryObjectEXT(e,t.QUERY_RESULT_AVAILABLE_EXT);return null==this.disjoint&&(this.disjoint=this.gl.getParameter(t.GPU_DISJOINT_EXT)),n&&!this.disjoint}}pollFence(e){return new Promise((t=>{this.addItemToPoll((()=>e.isFencePassed()),(()=>t()))}))}pollItems(){const e=function(e){let t=0;for(;t<e.length&&e[t]();++t);return t-1}(this.itemsToPoll.map((e=>e.isDoneFn)));for(let t=0;t<=e;++t){const{resolveFn:e}=this.itemsToPoll[t];e()}this.itemsToPoll=this.itemsToPoll.slice(e+1)}addItemToPoll(e,t){if(this.itemsToPoll.push({isDoneFn:e,resolveFn:t}),this.itemsToPoll.length>1)return;let n;"setTimeoutCustom"in Pe().platform&&(n=Pe().platform.setTimeoutCustom.bind(Pe().platform)),fe((()=>(this.pollItems(),0===this.itemsToPoll.length)),(()=>0),null,n)}bindTextureToFrameBuffer(e){this.throwIfDisposed(),pA(this.gl,e,this.framebuffer),this.debug&&mA(this.gl)}unbindTextureToFrameBuffer(){null!=this.outputTexture?(pA(this.gl,this.outputTexture,this.framebuffer),this.debug&&mA(this.gl)):fA(this.gl,this.framebuffer)}downloadMatrixDriver(e,t){this.bindTextureToFrameBuffer(e);const n=t();return this.unbindTextureToFrameBuffer(),n}setOutputMatrixTextureDriver(e,t,n){this.throwIfDisposed();const s=this.gl;pA(s,e,this.framebuffer),this.debug&&mA(s),this.outputTexture=e,aA(s,(()=>s.viewport(0,0,t,n))),aA(s,(()=>s.scissor(0,0,t,n)))}setOutputMatrixWriteRegionDriver(e,t,n,s){this.throwIfDisposed(),aA(this.gl,(()=>this.gl.scissor(e,t,n,s)))}throwIfDisposed(){if(this.disposed)throw new Error("Attempted to use disposed GPGPUContext.")}throwIfNoProgram(){if(null==this.program)throw new Error("No GPU program is currently set.")}}const{mx:hR,XI:dR,Nk:pR,f6:fR,ct:mR,YG:gR,hH:yR,z3:bR,sG:xR,uM:wR,vS:vR,qB:kR,GG:IR,rq:NR,lg:SR,WR:TR,cu:CR,GE:$R,px:ER,jC:AR,He:RR,hE:_R,BF:FR,Dk:DR,cl:OR,_B:MR,ub:LR,_f:zR,Ku:BR,qy:PR,Zy:WR,bu:VR,zv:UR,dH:GR,HS:jR,yH:HR,l3:qR,z9:KR,x6:XR,_m:YR,eW:JR,GK:ZR,SP:QR,yr:e_,dl:t_,Dw:n_,xT:s_,_X:r_,wz:a_}=T;function i_(e,t){return["x","y","z","w","u","v"].slice(0,t).map((t=>`${e}.${t}`))}function o_(e,t){return 1===t?[e]:i_(e,t)}class l_{constructor(e){if(this.variableNames=["A"],this.packedInputs=!1,this.packedOutput=!0,this.outputShape=e,this.rank=e.length,this.enableShapeUniforms=YA(this.outputShape.length),0===this.rank)this.userCode="\n        void main() {\n          setOutput(vec4(getA(), 0., 0., 0.));\n        }\n      ";else{const e=o_("rc",this.rank),t=GA(this.rank),n=this.getOutOfBoundsCondition(e),s=this.getSetup(e),r=this.getOutput(e);this.userCode=`\n        void main() {\n          ${t} rc = getOutputCoords();\n\n          if(${n}) {\n            setOutput(vec4(0));\n          } else {\n            ${s}\n\n            setOutput(vec4(${r}));\n          }\n        }\n      `}}getSourceCoordsArr(e){const t=[];for(let n=0;n<=1;n++)for(let s=0;s<=1;s++){let r=`${0===n?"r":"rp1"}, ${0===s?"c":"cp1"}`;for(let t=2;t<this.rank;t++)r=`${e[e.length-1-t]},`+r;t.push(r)}return t}getOutOfBoundsCondition(e){if(1===this.rank)return`rc > ${this.enableShapeUniforms?"outShape":this.outputShape[0]}`;let t="";for(let n=this.rank-2;n<this.rank;n++)t+=`${e[n]} >= ${this.enableShapeUniforms?`outShape[${n}]`:this.outputShape[n]}`,n<this.rank-1&&(t+="||");return t}getSetup(e){if(1===this.rank)return"";const t=e.slice(-2),n=this.enableShapeUniforms?`outShape[${this.rank} - 1]`:this.outputShape[this.rank-1],s=this.enableShapeUniforms?`outShape[${this.rank} - 2]`:this.outputShape[this.rank-2];return`\n      int r = ${t[0]};\n      int c = ${t[1]};\n      int rp1 = r + 1;\n      int cp1 = c + 1;\n\n      bool cEdge = cp1 >= ${n};\n      bool rEdge = rp1 >= ${s};\n    `}getOutput(e){const t=this.getSourceCoordsArr(e);return 1===this.rank?`getA(rc), (rc + 1 >= ${this.enableShapeUniforms?"outShape":this.outputShape[0]} ? 0. : getA(rc + 1)), 0, 0`:`getA(${t[0]}),\n            cEdge ? 0. : getA(${t[1]}),\n            rEdge ? 0. : getA(${t[2]}),\n            rEdge || cEdge ? 0. : getA(${t[3]})`}}class u_{constructor(e,t){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.customUniforms=[{name:"inputShape",type:"ivec3"}],this.outputShape=e,this.enableShapeUniforms=YA(this.outputShape.length);let n="";for(let e=0;e<4;e++){let t="thisRC = rc;";e%2==1&&(t+="thisRC.z += 1;"),e>1&&(t+="thisRC.y += 1;"),n+=`\n        ${t}\n        ${e>0?"if(thisRC.y < rows && thisRC.z < cols){":""}\n          int flatIndex = getFlatIndex(thisRC);\n\n          ivec3 inputRC = inputCoordsFromReshapedOutCoords(flatIndex);\n          vec2 inputRCInnerDims = vec2(float(inputRC.y),float(inputRC.z));\n\n          result[${e}] =\n            getChannel(getA(inputRC.x, inputRC.y, inputRC.z), inputRCInnerDims);\n        ${e>0?"}":""}\n      `}var s,r;this.userCode=`\n      ${s=t,r=this.enableShapeUniforms,`\n    ivec3 inputCoordsFromReshapedOutCoords(int index) {\n      ${r?function(e,t,n="index"){const s=function(e,t){const n=e.length,s=e.map((e=>`${t}[${e}]`)),r=new Array(n-1);r[n-2]=s[n-1];for(let e=n-3;e>=0;--e)r[e]=`(${r[e+1]} * ${s[e+1]})`;return r}(e.map(((e,t)=>t)),t);return s.map(((t,r)=>`int ${e[r]} = ${n} / ${s[r]}; ${r===s.length-1?`int ${e[r+1]} = ${n} - ${e[r]} * ${s[r]}`:`index -= ${e[r]} * ${s[r]}`};`)).join("")}(["r","c","d"],"inputShape"):AA(["r","c","d"],s)}\n      return ivec3(r, c, d);\n    }\n  `}\n      ${this.enableShapeUniforms?"\n  int getFlatIndex(ivec3 coords) {\n    return coords.x * outShapeStrides[0] + coords.y * outShapeStrides[1] + coords.z;\n  }\n":_A(e)}\n\n      void main() {\n        ivec3 rc = getOutputCoords();\n\n        vec4 result = vec4(0.);\n\n        ivec3 thisRC;\n        int rows = ${this.enableShapeUniforms?"outShape[1]":e[1]};\n        int cols = ${this.enableShapeUniforms?"outShape[2]":e[2]};\n\n        ${n}\n\n        setOutput(result);\n      }\n    `}}class c_{constructor(e){this.gpgpu=e,this.numUsedTextures=0,this.numFreeTextures=0,this._numBytesAllocated=0,this._numBytesFree=0,this.freeTextures={},this.usedTextures={},this.logEnabled=!1}acquireTexture(e,t,n){const s=d_(t,n),r=p_(e,s,n);r in this.freeTextures||(this.freeTextures[r]=[]),r in this.usedTextures||(this.usedTextures[r]=[]);const a=h_(e,s,this.gpgpu.gl,this.gpgpu.textureConfig,n);if(this.freeTextures[r].length>0){this.numFreeTextures--,this.numUsedTextures++,this._numBytesFree-=a,this.log();const e=this.freeTextures[r].pop();return this.usedTextures[r].push(e),e}let i;return s===eA.PACKED_2X2_FLOAT32?i=this.gpgpu.createPackedMatrixTexture(e[0],e[1]):s===eA.PACKED_2X2_FLOAT16?i=this.gpgpu.createFloat16PackedMatrixTexture(e[0],e[1]):s===eA.UNPACKED_FLOAT32?i=this.gpgpu.createFloat32MatrixTexture(e[0],e[1]):s===eA.UNPACKED_FLOAT16?i=this.gpgpu.createFloat16MatrixTexture(e[0],e[1]):s===eA.PACKED_4X1_UNSIGNED_BYTE&&(i=this.gpgpu.createUnsignedBytesMatrixTexture(e[0],e[1])),this.usedTextures[r].push(i),this.numUsedTextures++,this._numBytesAllocated+=a,this.log(),i}releaseTexture(e,t,n,s){if(null==this.freeTextures)return;const r=d_(n,s),a=p_(t,r,s);a in this.freeTextures||(this.freeTextures[a]=[]);const i=h_(t,r,this.gpgpu.gl,this.gpgpu.textureConfig,s),o=Pe().getNumber("WEBGL_DELETE_TEXTURE_THRESHOLD");-1!==o&&this._numBytesAllocated>o?(this.gpgpu.deleteMatrixTexture(e.texture),this._numBytesAllocated-=i):(this.freeTextures[a].push(e),this.numFreeTextures++,this._numBytesFree+=i),this.numUsedTextures--;const l=this.usedTextures[a],u=l&&l.indexOf(e);if(null==u||u<0)throw new Error("Cannot release a texture that was never provided by this texture manager");l[u]=l[l.length-1],l.pop(),this.log()}log(){if(!this.logEnabled)return;const e=this.numFreeTextures+this.numUsedTextures;console.log("Free/Used",`${this.numFreeTextures} / ${this.numUsedTextures}`,`(${e})`);const t=this._numBytesFree/this._numBytesAllocated;console.log(`Bytes allocated: ${this._numBytesAllocated}`),console.log(`Bytes unused: ${this._numBytesFree} (${Math.round(100*t)}%)`)}get numBytesAllocated(){return this._numBytesAllocated}get numBytesFree(){return this._numBytesFree}getNumUsedTextures(){return this.numUsedTextures}getNumFreeTextures(){return this.numFreeTextures}dispose(){if(null!=this.freeTextures){for(const e in this.freeTextures)this.freeTextures[e].forEach((e=>{this.gpgpu.deleteMatrixTexture(e.texture)}));for(const e in this.usedTextures)this.usedTextures[e].forEach((e=>{this.gpgpu.deleteMatrixTexture(e.texture)}));this.freeTextures=null,this.usedTextures=null,this.numUsedTextures=0,this.numFreeTextures=0,this._numBytesAllocated=0,this._numBytesFree=0}}}function h_(e,t,n,s,r){const a=function(e,t){switch(e){case eA.PACKED_2X2_FLOAT32:return lR(t);case eA.PACKED_2X2_FLOAT16:return uR(t);case eA.UNPACKED_FLOAT32:return aR(t);case eA.UNPACKED_FLOAT16:return iR(t);case eA.PACKED_4X1_UNSIGNED_BYTE:return oR(t);default:throw new Error(`Unknown physical texture type ${e}`)}}(t,s);let i;if(r){const[t,n]=sA(e[0],e[1]);i=t*n}else{const[t,n]=tA(e[0],e[1]);i=t*n}const o=function(e,t){const n=e;if(t===n.R32F)return 4;if(t===n.R16F)return 2;if(t===n.RGBA32F)return 16;if(t===e.RGBA)return 16;if(t===n.RGBA16F)return 8;if(t===n.RGBA8)return 4;throw new Error(`Unknown internal format ${t}`)}(n,a);return i*o}function d_(e,t){if(e===QE.UPLOAD)return eA.PACKED_2X2_FLOAT32;if(e===QE.RENDER||null==e)return function(e){return Pe().getBool("WEBGL_RENDER_FLOAT32_ENABLED")?e?eA.PACKED_2X2_FLOAT32:eA.UNPACKED_FLOAT32:e?eA.PACKED_2X2_FLOAT16:eA.UNPACKED_FLOAT16}(t);if(e===QE.DOWNLOAD||e===QE.PIXELS)return eA.PACKED_4X1_UNSIGNED_BYTE;throw new Error(`Unknown logical texture type ${e}`)}function p_(e,t,n){return`${e[0]}_${e[1]}_${t}_${n}`}class f_{constructor(e,t){this.variableNames=["A"],this.outputShape=e,this.enableShapeUniforms=YA(this.outputShape.length),this.userCode=`\n      float unaryOperation(float x) {\n        ${t}\n      }\n\n      void main() {\n        float x = getAAtOutCoords();\n        float y = unaryOperation(x);\n\n        setOutput(y);\n      }\n    `}}const m_="if (isnan(x)) return x;",g_="return abs(x);",y_=m_+"\n  return (x < 0.0) ? 0.0 : x;\n",b_=m_+"\n  return (x < 0.0) ? 0.0 : min(6.0, x);\n",x_="return x;";class w_{constructor(e,t){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=e,this.enableShapeUniforms=YA(this.outputShape.length),this.userCode=`\n      vec4 unaryOperation(vec4 x) {\n        ${t}\n      }\n\n      void main() {\n        vec4 x = getAAtOutCoords();\n        vec4 y = unaryOperation(x);\n\n        setOutput(y);\n      }\n    `}}class v_{constructor(e){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!1,this.outputShape=e,this.enableShapeUniforms=YA(this.outputShape.length);const t=e.length,n=o_("rc",t),s=GA(t),r=function(e,t){if(1===e)return"rc";let n="";for(let s=0;s<e;s++)n+=t[s],s<e-1&&(n+=",");return n}(t,n),a=n.slice(-2),i=t<=1?"rc":`vec2(${a.join(",")})`;this.userCode=`\n      void main() {\n        ${s} rc = getOutputCoords();\n        vec4 packedInput = getA(${r});\n\n        setOutput(getChannel(packedInput, ${i}));\n      }\n    `}}const k_=td,I_={},N_=Pe().getNumber("CPU_HANDOFF_SIZE_THRESHOLD");class S_ extends ee{nextDataId(){return S_.nextDataId++}constructor(e){if(super(),this.pendingRead=new WeakMap,this.pendingDisposal=new WeakSet,this.dataRefCount=new WeakMap,this.numBytesInGPU=0,this.uploadWaitMs=0,this.downloadWaitMs=0,this.lastGlFlushTime=0,this.warnedAboutMemory=!1,this.pendingDeletes=0,this.disposed=!1,!Pe().getBool("HAS_WEBGL"))throw new Error("WebGL is not supported on this device");let t;if(null!=e){if(e instanceof cR)t=e;else{const n=JE(Pe().getNumber("WEBGL_VERSION"),e);t=new cR(n)}this.binaryCache={},this.gpgpuCreatedLocally=!1}else{const e=JE(Pe().getNumber("WEBGL_VERSION"));t=new cR(e),this.binaryCache=((n=Pe().getNumber("WEBGL_VERSION"))in I_||(I_[n]={}),I_[n]),this.gpgpuCreatedLocally=!0}var n;this.gpgpu=t,this.canvas=this.gpgpu.gl.canvas,this.textureManager=new c_(this.gpgpu),this.numMBBeforeWarning=null==Pe().global.screen?1024:Pe().global.screen.height*Pe().global.screen.width*window.devicePixelRatio*600/1024/1024,this.texData=new Q(this,Aa())}numDataIds(){return this.texData.numDataIds()-this.pendingDeletes}writeTexture(e,t,n,s,r,a){const i=this.makeTensorInfo(t,n),o=this.texData.get(i.dataId);o.isPacked=!1,o.texture={texture:e,texShape:[s,r]},o.texShape=[s,r];const l=xA(t),u=new nR(l,!1,a),c=this.runWebGLProgram(u,[i],n,[[s,r]]);return c.shape=t,o.texture=null,this.disposeIntermediateTensorInfo(i),c.dataId}write(e,t,n){if((Pe().getBool("WEBGL_CHECK_NUMERICAL_PROBLEMS")||Pe().getBool("DEBUG"))&&this.checkNumericalProblems(e),"complex64"===n&&null!=e)throw new Error("Cannot write to a complex64 dtype. Please use tf.complex(real, imag).");const s={id:this.nextDataId()};return this.texData.set(s,{shape:t,dtype:n,values:e,usage:QE.UPLOAD,refCount:1}),s}refCount(e){return this.texData.has(e)?this.texData.get(e).refCount:0}incRef(e){this.texData.get(e).refCount++}decRef(e){this.texData.has(e)&&this.texData.get(e).refCount--}move(e,t,n,s,r){if(Pe().getBool("DEBUG")&&this.checkNumericalProblems(t),"complex64"===s)throw new Error("Cannot write to a complex64 dtype. Please use tf.complex(real, imag).");this.texData.set(e,{shape:n,dtype:s,values:t,usage:QE.UPLOAD,refCount:r})}disposeIntermediateTensorInfo(e){this.disposeData(e.dataId)}readSync(e){const t=this.texData.get(e),{values:n,dtype:s,complexTensorInfos:r,slice:a,shape:i,isPacked:o}=t;if(null!=a){let t;t=o?new w_(i,x_):new f_(i,x_);const n=this.runWebGLProgram(t,[{dataId:e,shape:i,dtype:s}],s),r=this.readSync(n.dataId);return this.disposeIntermediateTensorInfo(n),r}if(null!=n)return this.convertAndCacheOnCPU(e);if("string"===s)return n;const l=null!=this.activeTimers;let u,c;return l&&(u=Er()),c="complex64"===s?Kp(this.readSync(r.real.dataId),this.readSync(r.imag.dataId)):this.getValuesFromTexture(e),l&&(this.downloadWaitMs+=Er()-u),this.convertAndCacheOnCPU(e,c)}async read(e){if(this.pendingRead.has(e)){const t=this.pendingRead.get(e);return new Promise((e=>t.push(e)))}const t=this.texData.get(e),{values:n,shape:s,slice:r,dtype:a,complexTensorInfos:i,isPacked:o}=t;if(null!=r){let t;t=o?new w_(s,x_):new f_(s,x_);const n=this.runWebGLProgram(t,[{dataId:e,shape:s,dtype:a}],a),r=this.read(n.dataId);return this.disposeIntermediateTensorInfo(n),r}if(null!=n)return this.convertAndCacheOnCPU(e);if(Pe().getBool("DEBUG")&&!Pe().getBool("WEBGL_DOWNLOAD_FLOAT_ENABLED")&&2===Pe().getNumber("WEBGL_VERSION"))throw new Error("tensor.data() with WEBGL_DOWNLOAD_FLOAT_ENABLED=false and WEBGL_VERSION=2 not yet supported.");let l,u,c=null;if("complex64"!==a&&Pe().get("WEBGL_BUFFER_SUPPORTED")){l=this.decode(e);const t=this.texData.get(l.dataId);c=this.gpgpu.createBufferFromTexture(t.texture.texture,...nA(s))}if(this.pendingRead.set(e,[]),"complex64"!==a&&await this.gpgpu.createAndWaitForFence(),"complex64"===a){const e=await Promise.all([this.read(i.real.dataId),this.read(i.imag.dataId)]);u=Kp(e[0],e[1])}else if(null==c)u=this.getValuesFromTexture(e);else{const e=ue(s);u=this.gpgpu.downloadFloat32MatrixFromBuffer(c,e)}if(null!=l&&this.disposeIntermediateTensorInfo(l),null!=c){const e=this.gpgpu.gl;aA(e,(()=>e.deleteBuffer(c)))}const h=this.convertAndCacheOnCPU(e,u),d=this.pendingRead.get(e);return this.pendingRead.delete(e),d.forEach((e=>e(h))),this.pendingDisposal.has(e)&&(this.pendingDisposal.delete(e),this.disposeData(e)&&Aa().removeDataId(e,this),this.pendingDeletes--),h}readToGPU(e,t={}){const n=this.texData.get(e),{values:s,shape:r,slice:a,dtype:i,isPacked:o,texture:l}=n;if("complex64"===i)throw new Error("Does not support reading texture for complex64 dtype.");if(null!=a){let n;n=o?new w_(r,x_):new f_(r,x_);const s=this.runWebGLProgram(n,[{dataId:e,shape:r,dtype:i}],i),a=this.readToGPU(s,t);return this.disposeIntermediateTensorInfo(s),a}if(null==l)throw null!=s?new Error("Data is not on GPU but on CPU."):new Error("There is no data on GPU or CPU.");const u=this.decode(e,t.customTexShape),c=Aa().makeTensorFromTensorInfo(u),h=this.texData.get(u.dataId);return Object.assign({tensorRef:c},h.texture)}bufferSync(e){const t=this.readSync(e.dataId);if("string"===e.dtype)try{const n=t.map((e=>Rr(e)));return Li(e.shape,e.dtype,n)}catch(e){throw new Error("Failed to decode encoded string bytes into utf-8")}return Li(e.shape,e.dtype,t)}checkNumericalProblems(e){if(null!=e)for(let t=0;t<e.length;t++){const n=e[t];if(!iA(n)){if(Pe().getBool("WEBGL_RENDER_FLOAT32_CAPABLE"))throw Error(`The value ${n} cannot be represented with your current settings. Consider enabling float32 rendering: 'tf.env().set('WEBGL_RENDER_FLOAT32_ENABLED', true);'`);throw Error(`The value ${n} cannot be represented on this device.`)}}}getValuesFromTexture(e){const{shape:t,dtype:n,isPacked:s}=this.texData.get(e),r=ue(t);if(Pe().getBool("WEBGL_DOWNLOAD_FLOAT_ENABLED")){const n=this.decode(e),s=this.texData.get(n.dataId),a=this.gpgpu.downloadMatrixFromPackedTexture(s.texture.texture,...nA(t)).subarray(0,r);return this.disposeIntermediateTensorInfo(n),a}const a=Pe().getBool("WEBGL_PACK")&&!0===s,i=a?xA(t):t,o=a?new eR(i):new QA(i),l=this.runWebGLProgram(o,[{shape:i,dtype:n,dataId:e}],"float32"),u=this.texData.get(l.dataId),c=this.gpgpu.downloadByteEncodedFloatMatrixFromOutputTexture(u.texture.texture,u.texShape[0],u.texShape[1]).subarray(0,r);return this.disposeIntermediateTensorInfo(l),c}timerAvailable(){return Pe().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE")>0}time(e){const t=this.activeTimers,n=[];let s=!1;null==this.programTimersStack?(this.programTimersStack=n,s=!0):this.activeTimers.push(n),this.activeTimers=n,e();const r=Fr(this.activeTimers.map((e=>e.query))).filter((e=>null!=e)),a=Fr(this.activeTimers.map((e=>e.name))).filter((e=>null!=e));this.activeTimers=t,s&&(this.programTimersStack=null);const i={uploadWaitMs:this.uploadWaitMs,downloadWaitMs:this.downloadWaitMs,kernelMs:null,wallMs:null};return(async()=>{if(Pe().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE")>0){const e=await Promise.all(r);i.kernelMs=function(e){let t=0;for(let n=0;n<e.length;n++)t+=e[n];return t}(e),i.getExtraProfileInfo=()=>e.map(((e,t)=>({name:a[t],ms:e}))).map((e=>`${e.name}: ${e.ms}`)).join(", ")}else i.kernelMs={error:"WebGL query timers are not supported in this environment."};return this.uploadWaitMs=0,this.downloadWaitMs=0,i})()}memory(){return{unreliable:!1,numBytesInGPU:this.numBytesInGPU,numBytesInGPUAllocated:this.textureManager.numBytesAllocated,numBytesInGPUFree:this.textureManager.numBytesFree}}startTimer(){return Pe().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE")>0?this.gpgpu.beginQuery():{startMs:Er(),endMs:null}}endTimer(e){return Pe().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE")>0?(this.gpgpu.endQuery(),e):(e.endMs=Er(),e)}async getQueryTime(e){if(Pe().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE")>0)return this.gpgpu.waitForQueryAndGetTime(e);const t=e;return t.endMs-t.startMs}disposeData(e,t=!1){if(this.pendingDisposal.has(e))return!1;if(!this.texData.has(e))return!0;if(t?this.texData.get(e).refCount=0:this.texData.get(e).refCount--,!t&&this.texData.get(e).refCount>0)return!1;if(this.pendingRead.has(e))return this.pendingDisposal.add(e),this.pendingDeletes++,!1;this.releaseGPUData(e);const{complexTensorInfos:n}=this.texData.get(e);return null!=n&&(this.disposeData(n.real.dataId,t),this.disposeData(n.imag.dataId,t)),this.texData.delete(e),!0}releaseGPUData(e){const{texture:t,dtype:n,texShape:s,usage:r,isPacked:a,slice:i}=this.texData.get(e),o=i&&i.origDataId||e,l=this.dataRefCount.get(o);l>1?this.dataRefCount.set(o,l-1):(this.dataRefCount.delete(o),null!=t&&(this.numBytesInGPU-=this.computeBytes(s,n),this.textureManager.releaseTexture(t,s,r,a)));const u=this.texData.get(e);u.texture=null,u.texShape=null,u.isPacked=!1,u.slice=null}getTexture(e){return this.uploadToGPU(e),this.texData.get(e).texture.texture}getDataInfo(e){return this.texData.get(e)}shouldExecuteOnCPU(e,t=N_){return Pe().getBool("WEBGL_CPU_FORWARD")&&e.every((e=>null==this.texData.get(e.dataId).texture&&ue(e.shape)<t))}getGPGPUContext(){return this.gpgpu}where(e){nr("tf.where() in webgl locks the UI thread. Call tf.whereAsync() instead");const t=e.dataSync();return k_(e.shape,t)}packedUnaryOp(e,t,n){const s=new w_(e.shape,t),r=this.compileAndRun(s,[e],n);return Aa().makeTensorFromTensorInfo(r)}abs(e){if(this.shouldExecuteOnCPU([e])&&"complex64"!==e.dtype){const t=GR(this.texData.get(e.dataId).values);return this.makeOutput(e.shape,e.dtype,t)}if(Pe().getBool("WEBGL_PACK_UNARY_OPERATIONS"))return this.packedUnaryOp(e,g_,e.dtype);const t=new f_(e.shape,g_),n=this.compileAndRun(t,[e]);return Aa().makeTensorFromTensorInfo(n)}makeTensorInfo(e,t,n){let s;if("string"===t&&null!=n&&n.length>0&&ke(n[0])){const r=n.map((e=>Ar(e)));s=this.write(r,e,t)}else s=this.write(n,e,t);return this.texData.get(s).usage=null,{dataId:s,shape:e,dtype:t}}makeOutput(e,t,n){return Aa().makeTensorFromTensorInfo(this.makeTensorInfo(e,t,n),this)}unpackTensor(e){const t=new v_(e.shape);return this.runWebGLProgram(t,[e],e.dtype)}packTensor(e){const t=new l_(e.shape);return this.runWebGLProgram(t,[e],e.dtype,null,!0)}packedReshape(e,t){const n=[yA(e.shape),...bA(e.shape)],s={dtype:e.dtype,shape:n,dataId:e.dataId},r=[yA(t),...bA(t)],a=new u_(r,n),i=[n],o=this.runWebGLProgram(a,[s],e.dtype,i,!0);return{dataId:o.dataId,shape:t,dtype:o.dtype}}decode(e,t){const n=this.texData.get(e),{isPacked:s,shape:r,dtype:a}=n;null!=t&&ie(ue(r)<=t[0]*t[1]*4,(()=>"customTexShape is too small. Row * Column * 4 should be equal or larger than the size of the tensor data."));const i=xA(r);let o;o=s?new ZA(i):new JA(i);const l=[null!=t?t:nA(i)];return{dtype:a,shape:r,dataId:this.runWebGLProgram(o,[{shape:i,dtype:a,dataId:e}],a,l,!0,t).dataId}}runWebGLProgram(e,t,n,s,r=!1,a){const i=this.makeTensorInfo(e.outputShape,n),o=this.texData.get(i.dataId);if(e.packedOutput&&(o.isPacked=!0),e.outPackingScheme===ZE.DENSE){const t=null!=a?a:nA(e.outputShape);o.texShape=t.map((e=>2*e))}if(null!=e.outTexUsage&&(o.usage=e.outTexUsage),0===ue(i.shape))return o.values=be(i.dtype,0),i;const l=[],u=t.map((t=>{if("complex64"===t.dtype)throw new Error("GPGPUProgram does not support complex64 input. For complex64 dtypes, please separate the program into real and imaginary parts.");let n=this.texData.get(t.dataId);if(null==n.texture){if(!e.packedInputs&&ue(t.shape)<=Pe().getNumber("WEBGL_SIZE_UPLOAD_UNIFORM"))return{shape:t.shape,texData:null,isUniform:!0,uniformValues:n.values};e.packedInputs&&(n.isPacked=!0,n.shape=t.shape)}if(this.uploadToGPU(t.dataId),!!n.isPacked!=!!e.packedInputs)t=n.isPacked?this.unpackTensor(t):this.packTensor(t),l.push(t),n=this.texData.get(t.dataId);else if(n.isPacked&&!vA(n.shape,t.shape)){const e=t,s=t.shape;t.shape=n.shape,t=this.packedReshape(t,s),l.push(t),n=this.texData.get(t.dataId),e.shape=s}return{shape:t.shape,texData:n,isUniform:!1}}));this.uploadToGPU(i.dataId);const c={shape:i.shape,texData:o,isUniform:!1},h=function(e,t,n){let s="";t.concat(n).forEach((t=>{const r=null!=t.texData&&null!=t.texData.slice&&t.texData.slice.flatOffset>0;if(e.enableShapeUniforms&&!t.isUniform){const a=t.texData.texShape,{useSqueezeShape:i,uniformShape:o,keptDims:l}=jA(e.packedInputs,t.shape,a);let u="",c="",h="";if(1===o.length&&e.packedInputs){const e=[Math.ceil(a[0]/2),Math.ceil(a[1]/2)];u=`${e[0]>1}_${e[1]>1}`}else if(2!==o.length||e.packedInputs){if(o.length>2&&!e.packedInputs){const e=Ce(o);h=`${e[0]===a[1]}_${e[e.length-1]===a[1]}`}}else c=`${o[0]>1}_${o[1]>1}`;const d=t.shape.length,p=2===o.length&&ce(t.shape,a),f=1===ue(t.shape),m=uo(t.shape,n.shape),g=!e.packedInputs&&d===n.shape.length&&ce(a,n.texData.texShape),y=e.packedInputs||o.length>2?"":`${a[0]>1}_${a[1]>1}`;s+=`${d}_${g}_${i?l:""}_${o.length}_${f}_${m}_${p}_${u}_${c}_${h}_${y}_${r}`}else{const e=t.isUniform?"uniform":t.texData.texShape;s+=`${t.shape}_${e}_${r}`}}));const r=e.userCode;let a=e.constructor.name;return a+="_"+s+"_"+r+`${Pe().getNumber("WEBGL_VERSION")}`,a}(e,u,c),d=this.getAndSaveBinary(h,(()=>function(e,t,n,s){const r=n.map(((e,n)=>{const s={logicalShape:e.shape,texShape:e.isUniform?null:e.texData.texShape,isUniform:e.isUniform,isPacked:!e.isUniform&&e.texData.isPacked,flatOffset:null};return null!=e.texData&&null!=e.texData.slice&&e.texData.slice.flatOffset>0&&(s.flatOffset=e.texData.slice.flatOffset),{name:t.variableNames[n],shapeInfo:s}})),a=r.map((e=>e.shapeInfo)),i={logicalShape:s.shape,texShape:s.texData.texShape,isUniform:!1,isPacked:s.texData.isPacked,flatOffset:null},o=OA(r,i,t),l=function(e,t){const n=gA(e,(()=>e.createShader(e.FRAGMENT_SHADER)),"Unable to create fragment WebGLShader.");if(aA(e,(()=>e.shaderSource(n,t))),aA(e,(()=>e.compileShader(n))),Pe().get("ENGINE_COMPILE_ONLY"))return n;if(!1===e.getShaderParameter(n,e.COMPILE_STATUS))throw uA(t,e.getShaderInfoLog(n)),new Error("Failed to compile fragment shader.");return n}(e.gl,o),u=e.createProgram(l);return Pe().get("ENGINE_COMPILE_ONLY")?{program:t,fragmentShader:l,source:o,webGLProgram:u,inShapeInfos:a,outShapeInfo:i,variablesLocations:null,customUniformLocations:null,infLoc:null,nanLoc:null,outShapeLocation:null,outShapeStridesLocation:null,outTexShapeLocation:null}:(e.buildVao(u),Object.assign({program:t,fragmentShader:l,source:o,webGLProgram:u,inShapeInfos:a,outShapeInfo:i},KA(e,t,u)))}(this.gpgpu,e,u,c))),p=null!=this.activeTimers;let f;p&&(f=this.startTimer()),Pe().get("ENGINE_COMPILE_ONLY")||function(e,t,n,s,r){t.program.enableShapeUniforms||(XA(t.inShapeInfos,n),XA([t.outShapeInfo],[s]));const a=s.texData.texture,i=s.texData.texShape;s.texData.isPacked?e.setOutputPackedMatrixTexture(a.texture,i[0],i[1]):e.setOutputMatrixTexture(a.texture,i[0],i[1]),e.setProgram(t.webGLProgram),e.bindVertexArray(t.webGLProgram.vao),1===Pe().getNumber("WEBGL_VERSION")&&null!==t.infLoc&&e.gl.uniform1f(t.infLoc,1/0),null!==t.nanLoc&&e.gl.uniform1f(t.nanLoc,NaN);for(let s=0;s<n.length;++s){const r=n[s],{uniform:a,offset:i,shape:o,texShape:l}=t.variablesLocations[s];if(o){const{uniformShape:n}=jA(t.program.packedInputs,r.shape,r.texData.texShape);switch(n.length){case 1:e.gl.uniform1iv(o,new Int32Array(n));break;case 2:e.gl.uniform2iv(o,new Int32Array(n));break;case 3:e.gl.uniform3iv(o,new Int32Array(n));break;case 4:e.gl.uniform4iv(o,new Int32Array(n))}}if(l&&e.gl.uniform2i(l,r.texData.texShape[0],r.texData.texShape[1]),null!=a)if(r.isUniform)if(ue(r.shape)<2)e.gl.uniform1f(a,r.uniformValues[0]);else{let t=r.uniformValues;t instanceof Float32Array||(t=new Float32Array(t)),e.gl.uniform1fv(a,t)}else null!=r.texData.slice&&null!=i&&e.gl.uniform1i(i,r.texData.slice.flatOffset),e.setInputMatrixTexture(r.texData.texture.texture,a,s)}const o=t.outShapeLocation;if(o)switch(s.shape.length){case 1:e.gl.uniform1iv(o,new Int32Array(s.shape));break;case 2:e.gl.uniform2iv(o,new Int32Array(s.shape));break;case 3:e.gl.uniform3iv(o,new Int32Array(s.shape));break;case 4:e.gl.uniform4iv(o,new Int32Array(s.shape))}if(t.outShapeStridesLocation){const n=Ce(s.shape);switch(s.shape.length){case 2:e.gl.uniform1iv(t.outShapeStridesLocation,new Int32Array(n));break;case 3:e.gl.uniform2iv(t.outShapeStridesLocation,new Int32Array(n));break;case 4:e.gl.uniform3iv(t.outShapeStridesLocation,new Int32Array(n))}}if(t.outTexShapeLocation&&e.gl.uniform2i(t.outTexShapeLocation,s.texData.texShape[0],s.texData.texShape[1]),t.program.customUniforms&&r)for(let n=0;n<t.program.customUniforms.length;++n){const s=t.program.customUniforms[n],a=t.customUniformLocations[n],i=r[n];if("float"===s.type)e.gl.uniform1fv(a,i);else if("vec2"===s.type)e.gl.uniform2fv(a,i);else if("vec3"===s.type)e.gl.uniform3fv(a,i);else if("vec4"===s.type)e.gl.uniform4fv(a,i);else if("int"===s.type)e.gl.uniform1iv(a,i);else if("ivec2"===s.type)e.gl.uniform2iv(a,i);else if("ivec3"===s.type)e.gl.uniform3iv(a,i);else{if("ivec4"!==s.type)throw Error(`uniform type ${s.type} is not supported yet.`);e.gl.uniform4iv(a,i)}}e.executeProgram()}(this.gpgpu,d,u,c,s),l.forEach((e=>this.disposeIntermediateTensorInfo(e))),p&&(f=this.endTimer(f),this.activeTimers.push({name:e.constructor.name,query:this.getQueryTime(f)}));const m=Pe().getNumber("WEBGL_FLUSH_THRESHOLD");if(m>0){const e=Er();e-this.lastGlFlushTime>m&&(this.gpgpu.gl.flush(),this.lastGlFlushTime=e)}if(!Pe().getBool("WEBGL_LAZILY_UNPACK")&&o.isPacked&&!1===r){const e=this.unpackTensor(i);return this.disposeIntermediateTensorInfo(i),e}return i}compileAndRun(e,t,n,s,r=!1){return n=n||t[0].dtype,this.runWebGLProgram(e,t,n,s,r)}getAndSaveBinary(e,t){return e in this.binaryCache||(this.binaryCache[e]=t()),this.binaryCache[e]}getTextureManager(){return this.textureManager}dispose(){this.disposed||(Pe().getBool("IS_TEST")||Object.keys(this.binaryCache).forEach((e=>{this.gpgpu.deleteProgram(this.binaryCache[e].webGLProgram),delete this.binaryCache[e]})),this.textureManager.dispose(),null!=this.canvas&&"undefined"!=typeof HTMLCanvasElement&&this.canvas instanceof HTMLCanvasElement?this.canvas.remove():this.canvas=null,this.gpgpuCreatedLocally&&(this.gpgpu.program=null,this.gpgpu.dispose()),this.disposed=!0)}floatPrecision(){return null==this.floatPrecisionValue&&(this.floatPrecisionValue=_a((()=>{if(!Pe().get("WEBGL_RENDER_FLOAT32_ENABLED")){const e=Pe().getBool("DEBUG");Pe().set("DEBUG",!1);const t=this.abs(Xi(1e-8)).dataSync()[0];if(Pe().set("DEBUG",e),t>0)return 32}return 16}))),this.floatPrecisionValue}epsilon(){return 32===this.floatPrecision()?1e-7:1e-4}uploadToGPU(e){const t=this.texData.get(e),{shape:n,dtype:s,values:r,texture:a,usage:i,isPacked:o}=t;if(null!=a)return;const l=null!=this.activeTimers;let u;l&&(u=Er());let c=t.texShape;if(null==c&&(c=function(e,t=!1){let n=Pe().getNumber("WEBGL_MAX_TEXTURE_SIZE"),s=Pe().getNumber("WEBGL_MAX_SIZE_FOR_NARROW_TEXTURE");if(s===1/0&&Pe().getBool("WEBGL_AUTO_SQUARIFY_NARROW_TEXTURE_SHAPE")&&(s=n/2),t&&(n*=2,s*=2,1===(e=e.map(((t,n)=>n>=e.length-2?re(e[n]):e[n]))).length&&(e=[2,e[0]])),2!==e.length){const t=ye(e);e=t.newShape}let r=ue(e),a=null;e.length<=1&&r<=n?a=[1,r]:2===e.length&&e[0]<=n&&e[1]<=n?a=e:3===e.length&&e[0]*e[1]<=n&&e[2]<=n?a=[e[0]*e[1],e[2]]:3===e.length&&e[0]<=n&&e[1]*e[2]<=n?a=[e[0],e[1]*e[2]]:4===e.length&&e[0]*e[1]*e[2]<=n&&e[3]<=n?a=[e[0]*e[1]*e[2],e[3]]:4===e.length&&e[0]<=n&&e[1]*e[2]*e[3]<=n&&(a=[e[0],e[1]*e[2]*e[3]]);const i=null!=a&&Math.max(...a)>s&&Math.min(...a)<=(t?2:1)&&Math.min(...a)>0;if(null==a||i)if(t){const t=yA(e);let n=2,s=2;e.length&&([n,s]=bA(e)),r=t*(n/2)*(s/2),a=de(r).map((e=>2*e))}else a=de(r);return a}(n,o),t.texShape=c),null!=r){const e=xA(n);let a,i=c[1],h=c[0];const d=r instanceof Uint8Array||r instanceof Uint8ClampedArray;!o&&d||([i,h]=sA(c[0],c[1])),a=o?new sR(e,d):new nR(e,d);const p=d?[h,i]:c,f=this.makeTensorInfo(p,s),m=this.texData.get(f.dataId);m.usage=d?QE.PIXELS:QE.UPLOAD,m.texShape=p,this.gpgpu.uploadDenseMatrixToTexture(this.getTexture(f.dataId),i,h,r);const g=[[h,i]],y=!0,b=this.runWebGLProgram(a,[f],s,g,y),x=this.texData.get(b.dataId);t.texShape=x.texShape,t.isPacked=x.isPacked,t.usage=x.usage,Pe().get("ENGINE_COMPILE_ONLY")?this.disposeData(b.dataId):(t.texture=x.texture,t.values=null,this.texData.delete(b.dataId)),this.disposeIntermediateTensorInfo(f),l&&(this.uploadWaitMs+=Er()-u)}else{const e=this.acquireTexture(c,i,s,o);t.texture=e}}convertAndCacheOnCPU(e,t){const n=this.texData.get(e),{dtype:s}=n;return null!=t&&(n.values=function(e,t){if("float32"===t||"complex64"===t)return e;if("int32"===t||"bool"===t){const n="int32"===t?new Int32Array(e.length):new Uint8Array(e.length);for(let t=0;t<n.length;++t)n[t]=Math.round(e[t]);return n}throw new Error(`Unknown dtype ${t}`)}(t,s)),n.values}acquireTexture(e,t,n,s){if(this.numBytesInGPU+=this.computeBytes(e,n),!this.warnedAboutMemory&&this.numBytesInGPU>1024*this.numMBBeforeWarning*1024){const e=(this.numBytesInGPU/1024/1024).toFixed(2);this.warnedAboutMemory=!0,console.warn(`High memory usage in GPU: ${e} MB, most likely due to a memory leak`)}return this.textureManager.acquireTexture(e,t,s)}computeBytes(e,t){return e[0]*e[1]*ve(t)}checkCompileCompletion(){for(const[,e]of Object.entries(this.binaryCache))this.checkCompletion_(e)}async checkCompileCompletionAsync(){const e=[];if(this.gpgpu.parallelCompilationExtension){for(const[,t]of Object.entries(this.binaryCache))e.push(this.checkCompletionAsync_(t));return Promise.all(e)}for(const[,t]of Object.entries(this.binaryCache)){const n=new Promise((e=>{try{this.checkCompletion_(t),e(!0)}catch(e){throw e}}));e.push(n)}return Promise.all(e)}async checkCompletionAsync_(e){return this.gpgpu.gl.getProgramParameter(e.webGLProgram,this.gpgpu.parallelCompilationExtension.COMPLETION_STATUS_KHR)?this.checkCompletion_(e):(await Ip(),this.checkCompletionAsync_(e))}checkCompletion_(e){if(!1===this.gpgpu.gl.getProgramParameter(e.webGLProgram,this.gpgpu.gl.LINK_STATUS)){if(console.log(this.gpgpu.gl.getProgramInfoLog(e.webGLProgram)),!1===this.gpgpu.gl.getShaderParameter(e.fragmentShader,this.gpgpu.gl.COMPILE_STATUS))throw uA(e.source,this.gpgpu.gl.getShaderInfoLog(e.fragmentShader)),new Error("Failed to compile fragment shader.");throw new Error("Failed to link vertex and fragment shaders.")}return!0}getUniformLocations(){for(const e of Object.values(this.binaryCache)){this.gpgpu.buildVao(e.webGLProgram);const{variablesLocations:t,customUniformLocations:n,infLoc:s,nanLoc:r,outShapeLocation:a,outShapeStridesLocation:i,outTexShapeLocation:o}=KA(this.gpgpu,e.program,e.webGLProgram);e.variablesLocations=t,e.customUniformLocations=n,e.infLoc=s,e.nanLoc=r,e.outShapeLocation=a,e.outShapeStridesLocation=i,e.outTexShapeLocation=o}}createTensorFromGPUData(e,t,n){e.channels=e.channels||"RGBA";const{texture:s,height:r,width:a,channels:i}=e,o=Aa().backend;if(!o.gpgpu.gl.isTexture(s))throw new Error("The texture is invalid. Also, please make sure the texture and the TFJS WebGL backend are using the same canvas. If you want to use your own custom canvas, you have to create and use the custom TFJS WebGL backend created from the canvas through 'new tf.MathBackendWebGL(customCanvas)'.");const l=o.writeTexture(s,t,n,r,a,i);return Aa().makeTensorFromDataId(l,t,n,o)}}S_.nextDataId=0,ga()&&Oa("webgl",(()=>new S_),2);const T_="\n  if (isnan(a)) return a;\n  if (isnan(b)) return b;\n";class C_{constructor(e,t,n){this.variableNames=["A","B"],this.outputShape=ho(t,n),this.enableShapeUniforms=YA(this.outputShape.length),this.userCode=`\n      float binaryOperation(float a, float b) {\n        ${e}\n      }\n\n      void main() {\n        float a = getAAtOutCoords();\n        float b = getBAtOutCoords();\n        setOutput(binaryOperation(a, b));\n      }\n    `}}const $_="\n  result.r = isNaN.r ? NAN : result.r;\n  result.g = isNaN.g ? NAN : result.g;\n  result.b = isNaN.b ? NAN : result.b;\n  result.a = isNaN.a ? NAN : result.a;\n";class E_{constructor(e,t,n,s=!1){this.variableNames=["A","B"],this.supportsBroadcasting=!0,this.packedInputs=!0,this.packedOutput=!0,this.outputShape=ho(t,n);const r=this.outputShape.length;this.enableShapeUniforms=YA(r);let a="";if(s)if(0===r||1===ue(this.outputShape))a="\n          result.y = 0.;\n          result.z = 0.;\n          result.w = 0.;\n        ";else if(a=`\n          ${GA(r)} coords = getOutputCoords();\n        `,1===r)this.enableShapeUniforms?a+="\n            result.y = (coords + 1) >= outShape ? 0. : result.y;\n            result.z = 0.;\n            result.w = 0.;\n          ":a+=`\n            result.y = (coords + 1) >= ${this.outputShape[0]} ? 0. : result.y;\n            result.z = 0.;\n            result.w = 0.;\n          `;else{const e=o_("coords",r);this.enableShapeUniforms?a+=`\n            bool nextRowOutOfBounds =\n              (${e[r-2]} + 1) >= outShape[${r} - 2];\n            bool nextColOutOfBounds =\n              (${e[r-1]} + 1) >= outShape[${r} - 1];\n            result.y = nextColOutOfBounds ? 0. : result.y;\n            result.z = nextRowOutOfBounds ? 0. : result.z;\n            result.w = nextColOutOfBounds || nextRowOutOfBounds ? 0. : result.w;\n          `:a+=`\n            bool nextRowOutOfBounds =\n              (${e[r-2]} + 1) >= ${this.outputShape[r-2]};\n            bool nextColOutOfBounds =\n              (${e[r-1]} + 1) >= ${this.outputShape[r-1]};\n            result.y = nextColOutOfBounds ? 0. : result.y;\n            result.z = nextRowOutOfBounds ? 0. : result.z;\n            result.w = nextColOutOfBounds || nextRowOutOfBounds ? 0. : result.w;\n          `}this.userCode=`\n      vec4 binaryOperation(vec4 a, vec4 b) {\n        ${e}\n      }\n\n      void main() {\n        vec4 a = getAAtOutCoords();\n        vec4 b = getBAtOutCoords();\n\n        vec4 result = binaryOperation(a, b);\n        ${a}\n\n        setOutput(result);\n      }\n    `}}function A_(e){const{inputs:t,backend:n}=e,{x:s}=t;return n.incRef(s.dataId),{dataId:s.dataId,shape:s.shape,dtype:s.dtype}}const R_={kernelName:an,backendName:"webgl",kernelFunc:A_};function __(e){const{inputs:t,backend:n}=e,{real:s,imag:r}=t,a=n.makeTensorInfo(s.shape,"complex64"),i=n.texData.get(a.dataId),o=A_({inputs:{x:s},backend:n}),l=A_({inputs:{x:r},backend:n});return i.complexTensorInfos={real:o,imag:l},a}const F_={kernelName:yt,backendName:"webgl",kernelFunc:__},D_="return (a < 0.) ? b * a : a;",O_="\n  vec4 aLessThanZero = vec4(lessThan(a, vec4(0.)));\n  return (aLessThanZero * (b * a)) + ((vec4(1.0) - aLessThanZero) * a);\n",M_={kernelName:dn,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{alpha:a}=s,i=n.makeTensorInfo([],"float32",Cr(a,"float32")),o=Pe().getBool("WEBGL_PACK_BINARY_OPERATIONS")?new E_(O_,r.shape,i.shape):new C_(D_,r.shape,i.shape),l=n.runWebGLProgram(o,[r,i],"float32");return n.disposeIntermediateTensorInfo(i),l}},L_="return (a < 0.) ? b * a : a;",z_="\n  vec4 aLessThanZero = vec4(lessThan(a, vec4(0.)));\n  return (aLessThanZero * (b * a)) + ((vec4(1.0) - aLessThanZero) * a);\n",B_={kernelName:qn,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n}=e,{x:s,alpha:r}=t,a=Pe().getBool("WEBGL_PACK_BINARY_OPERATIONS")?new E_(z_,s.shape,r.shape):new C_(L_,s.shape,r.shape);return n.runWebGLProgram(a,[s,r],"float32")}},P_="if (isnan(x)) return x;";function W_({opSnippet:e,packedOpSnippet:t,cpuKernelImpl:n,dtype:s}){return({inputs:r,backend:a})=>{const{x:i}=r,o=a,l=s||i.dtype;if(o.shouldExecuteOnCPU([i])&&null!=n){const e=o.texData.get(i.dataId),t=n(e.values,l);return o.makeTensorInfo(i.shape,l,t)}let u;return u=Pe().getBool("WEBGL_PACK_UNARY_OPERATIONS")&&null!=t?new w_(i.shape,t):new f_(i.shape,e),o.runWebGLProgram(u,[i],l)}}function V_({opSnippet:e,packedOpSnippet:t,checkOutOfBounds:n=!1,supportsComplex:s=!1,cpuKernelImpl:r,dtype:a}){return({inputs:i,backend:o})=>{const{a:l,b:u}=i,c=o;if(s&&"complex64"===l.dtype){const t=c.texData.get(l.dataId),n=c.texData.get(u.dataId),[s,r]=[[t.complexTensorInfos.real,n.complexTensorInfos.real],[t.complexTensorInfos.imag,n.complexTensorInfos.imag]].map((t=>{const[n,s]=t,r={dataId:n.dataId,dtype:n.dtype,shape:l.shape},a={dataId:s.dataId,dtype:s.dtype,shape:u.shape},i=new C_(e,l.shape,u.shape);return c.runWebGLProgram(i,[r,a],ta(n.dtype,s.dtype))})),a=__({inputs:{real:s,imag:r},backend:c});return c.disposeIntermediateTensorInfo(s),c.disposeIntermediateTensorInfo(r),a}const h=a||ta(l.dtype,u.dtype);if(("string"===l.dtype||"string"===u.dtype||c.shouldExecuteOnCPU([l,u]))&&null!=r){const e=c.texData.get(l.dataId).values,t=c.texData.get(u.dataId).values,n="string"===l.dtype?Ef(e):e,s="string"===l.dtype?Ef(t):t,[a,i]=r(l.shape,u.shape,n,s,h),o=c.makeTensorInfo(i,h);return c.texData.get(o.dataId).values=a,o}let d;return d=Pe().getBool("WEBGL_PACK_BINARY_OPERATIONS")&&null!=t?new E_(t,l.shape,u.shape,n):new C_(e,l.shape,u.shape),c.runWebGLProgram(d,[l,u],h)}}function U_(e,t=!1){if("linear"===e)return"return x;";if("relu"===e)return t?"\n  vec4 result = x * vec4(greaterThanEqual(x, vec4(0.0)));\n  bvec4 isNaN = isnan(x);\n\n  result.r = isNaN.r ? x.r : result.r;\n  result.g = isNaN.g ? x.g : result.g;\n  result.b = isNaN.b ? x.b : result.b;\n  result.a = isNaN.a ? x.a : result.a;\n\n  return result;\n":y_;if("elu"===e)return t?"\n  vec4 result;\n\n  result.r = (x.r >= 0.0) ? x.r : (exp(x.r) - 1.0);\n  result.g = (x.g >= 0.0) ? x.g : (exp(x.g) - 1.0);\n  result.b = (x.b >= 0.0) ? x.b : (exp(x.b) - 1.0);\n  result.a = (x.a >= 0.0) ? x.a : (exp(x.a) - 1.0);\n\n  return result;\n":"return (x >= 0.0) ? x : (exp(x) - 1.0);";if("relu6"===e)return t?"\n  vec4 result = min(x, vec4(6.)) * vec4(greaterThanEqual(x, vec4(0.0)));\n  bvec4 isNaN = isnan(x);\n\n  result.r = isNaN.r ? x.r : result.r;\n  result.g = isNaN.g ? x.g : result.g;\n  result.b = isNaN.b ? x.b : result.b;\n  result.a = isNaN.a ? x.a : result.a;\n\n  return result;\n":b_;if("prelu"===e)return t?z_:L_;if("leakyrelu"===e)return t?O_:D_;if("sigmoid"===e)return"return 1.0 / (1.0 + exp(-1.0 * x));";throw new Error(`Activation ${e} has not been implemented for the WebGL backend.`)}class G_{constructor(e,t,n,s=!1,r=!1,a=!1,i=null,o=!1,l=!1){this.variableNames=["matrixA","matrixB"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=n,this.enableShapeUniforms=YA(this.outputShape.length);const u=s?e[1]:e[2],c=Math.ceil(u/2),h=s?"i * 2, rc.y":"rc.y, i * 2",d=r?"rc.z, i * 2":"i * 2, rc.z",p=s?["a.xxyy","a.zzww"]:["a.xxzz","a.yyww"],f=r?["b.xzxz","b.ywyw"]:["b.xyxy","b.zwzw"];let m="",g="";i&&(m=o?`vec4 activation(vec4 a) {\n          vec4 b = getPreluActivationWeightsAtOutCoords();\n          ${i}\n        }`:l?`vec4 activation(vec4 a) {\n          vec4 b = getLeakyreluAlphaAtOutCoords();\n          ${i}\n        }`:`vec4 activation(vec4 x) {\n          ${i}\n        }`,g="result = activation(result);");const y=a?"result += getBiasAtOutCoords();":"";a&&this.variableNames.push("bias"),o&&this.variableNames.push("preluActivationWeights"),l&&this.variableNames.push("leakyreluAlpha");let b="rc.x",x="rc.x";e[0]<t[0]?b=`imod(rc.x, ${e[0]})`:t[0]<e[0]&&(x=`imod(rc.x, ${t[0]})`),this.userCode=`\n      ${m}\n      // Don't use uniform for sharedDimensionPacked for performance.\n      const float sharedDimension = ${c}.0;\n\n      vec4 dot2x2ARowBCol(ivec3 rc) {\n        vec4 result = vec4(0);\n        int batchA = ${b};\n        int batchB = ${x};\n        for (int i = 0; i < ${c}; i++) {\n          vec4 a = getMatrixA(batchA, ${h});\n          vec4 b = getMatrixB(batchB, ${d});\n\n          // These swizzled products need to be separately added.\n          // See: https://github.com/tensorflow/tfjs/issues/1735\n          result += (${p[0]} * ${f[0]});\n          result += (${p[1]} * ${f[1]});\n        }\n        return result;\n      }\n\n      void main() {\n        ivec3 rc = getOutputCoords();\n        vec4 result = dot2x2ARowBCol(rc);\n\n        ${y}\n\n        ${g}\n\n        setOutput(result);\n      }\n    `}}class j_{constructor(e,t,n){this.variableNames=["AReal","AImag","BReal","BImag"],this.outputShape=ho(t,n),this.userCode=`\n      float binaryOpComplex(\n          float areal, float aimag, float breal, float bimag) {\n        ${e}\n      }\n\n      void main() {\n        float areal = getARealAtOutCoords();\n        float aimag = getAImagAtOutCoords();\n        float breal = getBRealAtOutCoords();\n        float bimag = getBImagAtOutCoords();\n        setOutput(binaryOpComplex(areal, aimag, breal, bimag));\n      }\n    `}}const H_="return a * b;";function q_(e){const{inputs:t,backend:n}=e,{a:s,b:r}=t,a=ta(s.dtype,r.dtype);if("complex64"===s.dtype){const e=n.texData.get(s.dataId),t=n.texData.get(r.dataId),a=new j_("return areal * breal - aimag * bimag;",s.shape,r.shape),i=new j_("return areal * bimag + aimag * breal;",s.shape,r.shape),o=[{dataId:e.complexTensorInfos.real.dataId,dtype:e.complexTensorInfos.real.dtype,shape:s.shape},{dataId:e.complexTensorInfos.imag.dataId,dtype:e.complexTensorInfos.imag.dtype,shape:s.shape},{dataId:t.complexTensorInfos.real.dataId,dtype:t.complexTensorInfos.real.dtype,shape:r.shape},{dataId:t.complexTensorInfos.imag.dataId,dtype:t.complexTensorInfos.imag.dtype,shape:r.shape}],l=n.runWebGLProgram(a,o,"float32"),u=n.runWebGLProgram(i,o,"float32"),c=__({inputs:{real:l,imag:u},backend:n});return n.disposeIntermediateTensorInfo(l),n.disposeIntermediateTensorInfo(u),c}if(n.shouldExecuteOnCPU([s,r])){const e=n.texData.get(s.dataId),t=n.texData.get(r.dataId),[i,o]=FR(s.shape,r.shape,e.values,t.values,a),l=n.makeTensorInfo(o,a);return n.texData.get(l.dataId).values=i,l}let i;return i=Pe().getBool("WEBGL_PACK_BINARY_OPERATIONS")?new E_(H_,s.shape,r.shape):new C_(H_,s.shape,r.shape),n.runWebGLProgram(i,[s,r],a)}const K_={kernelName:Mn,backendName:"webgl",kernelFunc:q_};function X_(e){const{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{shape:a}=s,i=n,o=ue(r.shape),l=me(a,o),u=ue(l);ie(o===u,(()=>`The new shape (${l}) has ${u} elements and the old shape (${r.shape}) has ${o} elements. The new shape and old shape must have the same number of elements.`));const c=i.texData.get(r.dataId);return!c.isPacked||vA(r.shape,l)||null!==c.texture&&vA(c.shape,l)?(i.incRef(r.dataId),{dataId:r.dataId,shape:l,dtype:r.dtype}):function(e,t,n){const s=[yA(e.shape),...bA(e.shape)],r={dtype:e.dtype,shape:s,dataId:e.dataId},a=[yA(t),...bA(t)],i=new u_(a,s),o=[s],l=n.runWebGLProgram(i,[r],e.dtype,o,!0);return{dataId:l.dataId,shape:t,dtype:l.dtype}}(r,l,i)}const Y_={kernelName:ns,backendName:"webgl",kernelFunc:X_};class J_{constructor(e,t){this.variableNames=["x"];const{windowSize:n,batchSize:s,inSize:r,outSize:a}=e;this.outputShape=[s,a];const i=4*Math.floor(n/4),o=n%4;let l="sumValue += dot(values, ones);";if(null!=t){const e=1/t;l=`sumValue += dot(values * ${he(e)?e.toPrecision(2):e}, ones);`}let u="";r%n>0&&(u=`\n        if (inIdx < 0 || inIdx >= ${r}) {\n          return 0.0;\n        }\n      `),this.userCode=`\n      const vec4 ones = vec4(1.0, 1.0, 1.0, 1.0);\n\n      float getValue(int batch, int inIdx) {\n        ${u}\n        return getX(batch, inIdx);\n      }\n\n      void main() {\n        ivec2 coords = getOutputCoords();\n        int batch = coords[0];\n        int outIdx = coords[1];\n        int inOffset = outIdx * ${n};\n\n        float sumValue = 0.0;\n\n        for (int i = 0; i < ${i}; i += 4) {\n          int inIdx = inOffset + i;\n          vec4 values = vec4(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1),\n            getValue(batch, inIdx + 2),\n            getValue(batch, inIdx + 3)\n          );\n\n          ${l}\n        }\n\n        int inIdx = inOffset + ${i};\n        if (${1===o}) {\n          vec4 values = vec4(getValue(batch, inIdx), 0.0, 0.0, 0.0);\n\n          ${l}\n        } else if (${2===o}) {\n          vec4 values = vec4(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1), 0.0, 0.0);\n\n          ${l}\n        } else if (${3===o}) {\n          vec4 values = vec4(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1),\n            getValue(batch, inIdx + 2), 0.0);\n\n          ${l}\n        }\n        setOutput(sumValue);\n      }\n    `}}class Z_{constructor(e,t){this.variableNames=["x"];const{windowSize:n,batchSize:s,inSize:r,outSize:a}=e;this.outputShape=[s,a];let i="0.0",o="";"prod"===t?i="1.0":"min"===t?(i="1.0 / 1e-20",o="min"):"max"===t&&(i="-1.0 / 1e-20",o="max");let l=`${t}(${t}(${t}(minMaxValue[0], minMaxValue[1]), minMaxValue[2]), minMaxValue[3])`;"sum"===t?l="sumValue":"prod"===t?l="prodValue":"all"===t?l="allValue":"any"===t&&(l="anyValue");const u=4*Math.floor(n/4),c=n%4;let h=`\n      if (${"sum"===t}) {\n        sumValue += dot(values, ones);\n      } else if (${"prod"===t}) {\n        vec2 tmp = vec2(values[0], values[1]) * vec2(values[2], values[3]);\n        prodValue *= tmp[0] * tmp[1];\n      } else {\n        minMaxValue = ${o}(values, minMaxValue);\n        if (${"min"===t} || ${"max"===t}) {\n          minMaxValue = ${o}(values, minMaxValue);\n          bvec4 isNaN = isnan(values);\n          if (isNaN.r || isNaN.g || isNaN.b || isNaN.a) {\n            minMaxValue = vec4(NAN);\n          }\n        }\n      }\n    `,d="vec4";"all"===t?(i="1.0",h="\n        bool reducedAllValue = all(values);\n        float floatedReducedAllValue = float(reducedAllValue);\n        allValue = float(allValue >= 1.0 && floatedReducedAllValue >= 1.0);\n      ",d="bvec4"):"any"===t&&(i="0.0",h="\n        bool reducedAnyValue = any(values);\n        float floatedReducedAnyValue = float(reducedAnyValue);\n        anyValue = float(anyValue >= 1.0 || floatedReducedAnyValue >= 1.0);\n      ",d="bvec4");let p="";r%n>0&&(p=`\n        if (inIdx < 0 || inIdx >= ${r}) {\n          return initializationValue;\n        }\n      `),this.userCode=`\n      const float initializationValue = ${i};\n      const vec4 ones = vec4(1.0, 1.0, 1.0, 1.0);\n\n      float getValue(int batch, int inIdx) {\n        ${p}\n        return getX(batch, inIdx);\n      }\n\n      void main() {\n        ivec2 coords = getOutputCoords();\n        int batch = coords[0];\n        int outIdx = coords[1];\n        int inOffset = outIdx * ${n};\n\n        vec4 minMaxValue = vec4(${i});\n        float prodValue = 1.0;\n        float sumValue = 0.0;\n        float allValue = 1.0;\n        float anyValue = 0.0;\n\n        for (int i = 0; i < ${u}; i += 4) {\n          int inIdx = inOffset + i;\n          ${d} values = ${d}(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1),\n            getValue(batch, inIdx + 2),\n            getValue(batch, inIdx + 3)\n          );\n\n          ${h}\n        }\n\n        int inIdx = inOffset + ${u};\n        if (${1===c}) {\n          ${d} values = ${d}(\n            getValue(batch, inIdx),\n            initializationValue,\n            initializationValue,\n            initializationValue\n          );\n\n          ${h}\n        } else if (${2===c}) {\n          ${d} values = ${d}(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1),\n            initializationValue,\n            initializationValue\n          );\n\n          ${h}\n        } else if (${3===c}) {\n          ${d} values = ${d}(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1),\n            getValue(batch, inIdx + 2),\n            initializationValue\n          );\n\n          ${h}\n        }\n        setOutput(${l});\n      }\n    `}}function Q_(e,t,n,s){const r=function(e){const t=[];for(;0===t.length||1!==t[t.length-1].outSize;){const n=t.length?t[t.length-1].outSize:e[1],s=_p(n);t.push({inSize:n,windowSize:s,outSize:Math.ceil(n/s)})}return t}(e.shape);let a=e;for(let i=0;i<r.length;i++){const{inSize:o,windowSize:l,outSize:u}=r[i];let c,h;c="mean"===n?0===i?new J_({windowSize:l,inSize:o,batchSize:e.shape[0],outSize:u},o):new J_({windowSize:l,inSize:o,batchSize:e.shape[0],outSize:u}):new Z_({windowSize:l,inSize:o,batchSize:e.shape[0],outSize:u},n),h=a,a=s.runWebGLProgram(c,[a],t),h.dataId!==e.dataId&&s.disposeIntermediateTensorInfo(h)}return a}class eF{constructor(e,t){this.variableNames=["A"];const n=new Array(e.length);for(let s=0;s<n.length;s++)n[s]=e[t[s]];this.outputShape=n,this.rank=n.length;const s=GA(this.rank),r=function(e){const t=e.length;if(t>6)throw Error(`Transpose for rank ${t} is not yet supported`);const n=["resRC.x","resRC.y","resRC.z","resRC.w","resRC.u","resRC.v"],s=new Array(t);for(let t=0;t<e.length;t++)s[e[t]]=n[t];return s.join()}(t);this.userCode=`\n    void main() {\n      ${s} resRC = getOutputCoords();\n      setOutput(getA(${r}));\n    }\n    `}}class tF{constructor(e,t){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0;const n=new Array(e.length);for(let s=0;s<n.length;s++)n[s]=e[t[s]];if(this.outputShape=n,this.rank=n.length,this.rank>6)throw Error(`Packed transpose for rank ${this.rank} is not yet supported.`);const s=GA(this.rank),r=i_("rc",this.rank),a=new Array(this.rank);for(let e=0;e<t.length;e++)a[t[e]]=r[e];const i=`vec2(${a.slice(-2).join()})`,o=`++${r[this.rank-1]} < ${n[this.rank-1]}`,l=`getChannel(getA(${a.join()}), ${i})`;this.userCode=`\n    void main() {\n      ${s} rc = getOutputCoords();\n      vec4 result = vec4(0.);\n      result[0] = ${l};\n      if(${o}) {\n        result[1] = ${l};\n      }\n      --${r[this.rank-1]};\n      if(++${r[this.rank-2]} < ${n[this.rank-2]}) {\n        result[2] = ${l};\n        if(${o}) {\n          result[3] = ${l};\n        }\n      }\n      setOutput(result);\n    }\n    `}}function nF(e,t,n){const s=Pe().getBool("WEBGL_PACK_ARRAY_OPERATIONS")?new tF(e.shape,t):new eF(e.shape,t);return n.runWebGLProgram(s,[e],e.dtype)}function sF(e){const{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{axis:a,keepDims:i}=s;return function(e,t,n,s){const r=t,a=e.shape.length,i=ge(r,e.shape);let o=i;const l=Fu(o,a),u=null!=l;let c=e;u&&(c=nF(e,l,s),o=Ou(o.length,a)),_u("sum",o,a);const[h,d]=Au(c.shape,o);let p=h;n&&(p=Ru(h,i));const f=ue(d),m=X_({inputs:{x:c},attrs:{shape:[ue(e.shape)/f,f]},backend:s}),g=Q_(m,na(e.dtype),"sum",s),y=X_({inputs:{x:g},attrs:{shape:p},backend:s});return s.disposeIntermediateTensorInfo(m),s.disposeIntermediateTensorInfo(g),u&&s.disposeIntermediateTensorInfo(c),y}(r,a,i,n)}const rF={kernelName:Is,backendName:"webgl",kernelFunc:sF};function aF(e){const{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{perm:a}=s,i=n,o=r.shape.length,l=new Array(o);for(let e=0;e<l.length;e++)l[e]=r.shape[a[e]];let u;if(i.shouldExecuteOnCPU([r])){const e=i.texData.get(r.dataId).values,t=r_(e,r.shape,r.dtype,a,l);u=i.makeTensorInfo(l,r.dtype),i.texData.get(u.dataId).values=t}else u=nF(r,a,i);return u}const iF={kernelName:js,backendName:"webgl",kernelFunc:aF};function oF({a:e,b:t,transposeA:n,transposeB:s,backend:r,bias:a=null,preluActivationWeights:i=null,leakyreluAlpha:o=0,activation:l=null}){const u=e.shape.length,c=t.shape.length,h=n?e.shape[u-2]:e.shape[u-1],d=s?t.shape[c-1]:t.shape[c-2],p=n?e.shape[u-1]:e.shape[u-2],f=s?t.shape[c-2]:t.shape[c-1],m=e.shape.slice(0,-2),g=t.shape.slice(0,-2),y=ue(m),b=ue(g),x=ho(e.shape.slice(0,-2),t.shape.slice(0,-2)).concat([p,f]);ie(h===d,(()=>`Error in matMul: inner shapes (${h}) and (${d}) of Tensors with shapes ${e.shape} and ${t.shape} and transposeA=${n} and transposeB=${s} must match.`));const w=n?[y,h,p]:[y,p,h],v=s?[b,f,d]:[b,d,f],k=X_({inputs:{x:e},backend:r,attrs:{shape:w}}),I=X_({inputs:{x:t},backend:r,attrs:{shape:v}}),N=[k,I],S=Math.max(y,b),T=n?k.shape[1]:k.shape[2],C=null!=a,$=null!=i,E="leakyrelu"===l,A=null!=l?U_(l,!0):null;let R;if((1===p||1===f)&&T>1e3&&!1===(C||$||E||null!=A)){let e=k,t=I;n&&(e=aF({inputs:{x:k},backend:r,attrs:{perm:[0,2,1]}}),N.push(e)),s&&(t=aF({inputs:{x:I},backend:r,attrs:{perm:[0,2,1]}}),N.push(t));const a=1===f;let i=e;1!==f&&(i=X_({inputs:{x:e},backend:r,attrs:{shape:[S,T,1]}}),N.push(i));const o=1===f?2:1;let l=t;a&&(l=X_({inputs:{x:t},backend:r,attrs:{shape:[S,1,T]}}),N.push(l));const u=q_({inputs:{a:i,b:l},backend:r});R=sF({inputs:{x:u},backend:r,attrs:{axis:o,keepDims:!0}}),N.push(u)}else{const l=ta(e.dtype,t.dtype),u=new G_(w,v,[S,p,f],n,s,C,A,$,E),c=[k,I];if(null!=a&&c.push(a),$&&c.push(i),E){const e=r.makeTensorInfo([],"float32",Cr(o,"float32"));c.push(e),N.push(e)}R=r.runWebGLProgram(u,c,l)}const _=X_({inputs:{x:R},backend:r,attrs:{shape:x}});N.push(R);for(const e of N)r.disposeIntermediateTensorInfo(e);return _}const lF={kernelName:Qs,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{a:r,b:a,bias:i,preluActivationWeights:o}=t,{transposeA:l,transposeB:u,activation:c,leakyreluAlpha:h}=s;return oF({a:r,b:a,transposeA:l,transposeB:u,backend:n,bias:i,preluActivationWeights:o,leakyreluAlpha:h,activation:c})}},uF="return abs(x);",cF={kernelName:je,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n}=e,{x:s}=t;if(n.shouldExecuteOnCPU([s])&&"complex64"!==s.dtype){const e=n.texData.get(s.dataId),t=GR(e.values);return n.makeTensorInfo(s.shape,s.dtype,t)}let r;return r=Pe().getBool("WEBGL_PACK_UNARY_OPERATIONS")?new w_(s.shape,uF):new f_(s.shape,uF),n.runWebGLProgram(r,[s],s.dtype)}},hF=W_({opSnippet:m_+"\n  if (abs(x) > 1.) {\n    return NAN;\n  }\n  return acos(x);\n"}),dF={kernelName:He,backendName:"webgl",kernelFunc:hF},pF=W_({opSnippet:m_+"\n  if (x < 1.0) return NAN;\nreturn log(x + sqrt(x * x - 1.0));"}),fF={kernelName:qe,backendName:"webgl",kernelFunc:pF},mF="return a + b;",gF=V_({opSnippet:mF,packedOpSnippet:mF,supportsComplex:!0,cpuKernelImpl:hR}),yF={kernelName:Ke,backendName:"webgl",kernelFunc:gF};class bF{constructor(e,t){this.outputShape=[],this.outputShape=e,this.variableNames=t.map(((e,t)=>`T${t}`));const n=[];this.variableNames.forEach((e=>{n.push(`float v${e} = get${e}AtOutCoords();`)}));const s=this.variableNames.map((e=>`v${e}`)).join(" + ");this.userCode=`\n      void main() {\n        ${n.join("\n        ")}\n\n        float result = ${s};\n        setOutput(result);\n      }\n    `}}class xF{constructor(e,t){this.outputShape=[],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=e,this.variableNames=t.map(((e,t)=>`T${t}`));const n=[];this.variableNames.forEach((e=>{n.push(`vec4 v${e} = get${e}AtOutCoords();`)}));const s=this.variableNames.map((e=>`v${e}`)).join(" + ");this.userCode=`\n      void main() {\n        ${n.join("\n        ")}\n\n        vec4 result = ${s};\n        setOutput(result);\n      }\n    `}}const wF={kernelName:Xe,backendName:"webgl",kernelFunc:function e(t){const{inputs:n,backend:s}=t,r=n;if(1===r.length)return A_({inputs:{x:r[0]},backend:s});if(r.length>Pe().getNumber("WEBGL_MAX_TEXTURES_IN_SHADER")){const t=Math.floor(r.length/2),n=e({inputs:r.slice(0,t),backend:s}),a=e({inputs:r.slice(t),backend:s});return e({inputs:[n,a],backend:s})}const a=r.map((e=>e.dtype)).reduce(((e,t)=>ta(e,t))),i=r.map((e=>e.shape)),o=Pe().getBool("WEBGL_PACK")?new xF(r[0].shape,i):new bF(r[0].shape,i);return s.runWebGLProgram(o,r,a)}},vF={kernelName:Ye,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{axis:a,keepDims:i}=s,o=r.shape.length,l=ge(a,r.shape);let u=l;const c=Fu(u,o);let h=r;null!=c&&(h=aF({inputs:{x:r},backend:n,attrs:{perm:c}}),u=Ou(u.length,o)),_u("all",u,o);const[d,p]=Au(h.shape,u),f=X_({inputs:{x:h},backend:n,attrs:{shape:[-1,ue(p)]}}),m=Q_(f,f.dtype,"all",n);let g;return g=X_(i?{inputs:{x:m},backend:n,attrs:{shape:Ru(d,l)}}:{inputs:{x:m},backend:n,attrs:{shape:d}}),n.disposeIntermediateTensorInfo(f),n.disposeIntermediateTensorInfo(m),null!=c&&n.disposeIntermediateTensorInfo(h),g}},kF={kernelName:Je,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{axis:a,keepDims:i}=s,o=r.shape.length,l=ge(a,r.shape);let u=l;const c=Fu(u,o);let h=r;null!=c&&(h=aF({inputs:{x:r},backend:n,attrs:{perm:c}}),u=Ou(u.length,o)),_u("any",u,o);const[d,p]=Au(h.shape,u),f=X_({inputs:{x:h},backend:n,attrs:{shape:[-1,ue(p)]}}),m=Q_(f,f.dtype,"any",n);let g;return g=X_(i?{inputs:{x:m},backend:n,attrs:{shape:Ru(d,l)}}:{inputs:{x:m},backend:n,attrs:{shape:d}}),n.disposeIntermediateTensorInfo(f),n.disposeIntermediateTensorInfo(m),null!=c&&n.disposeIntermediateTensorInfo(h),g}};class IF{constructor(e,t,n){this.variableNames=["A"];const{windowSize:s,batchSize:r,outSize:a}=e;n||this.variableNames.push("bestIndicesA"),this.outputShape=[r,a];const i="max"===t?">":"<",o=n?"inOffset + i;":"round(getBestIndicesA(batch, inOffset + i));";this.userCode=`\n      void main() {\n        ivec2 coords = getOutputCoords();\n        int batch = coords[0];\n        int outIdx = coords[1];\n        int inOffset = outIdx * ${s};\n\n        int bestIndex = inOffset;\n        float bestValue = getA(batch, bestIndex);\n\n        for (int i = 0; i < ${s}; i++) {\n          int inIdx = ${o};\n          float candidate = getA(batch, inIdx);\n          if (candidate ${i} bestValue) {\n            bestValue = candidate;\n            bestIndex = inIdx;\n          }\n        }\n        setOutput(float(bestIndex));\n      }\n    `}}class NF{constructor(e,t,n,s){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,ie(e.length>2,(()=>`Packed arg${n.charAt(0).toUpperCase()+n.slice(1)} supports only inputs with rank above 2.`));const r=e[e.length-1],a=Math.ceil(r/t);this.outputShape=e.slice(0,-1),a>1&&this.outputShape.push(a),s||this.variableNames.push("bestIndicesA");const i=this.outputShape,o=i.length,l=GA(o),u=o_("coords",o);let c,h;if(1===a){h=o+1;const e=GA(h);c=`\n        ${e} sourceLocR = ${e}(${u.join()}, 0);\n        ++${u[o-1]};\n        ${e} sourceLocG = ${e}(${u.join()}, 0);\n        ++${u[o-2]};\n        ${e} sourceLocA = ${e}(${u.join()}, 0);\n        --${u[o-1]};\n        ${e} sourceLocB = ${e}(${u.join()}, 0);\n        --${u[o-2]};`}else h=o,c=`\n        ${l} sourceLocR = coords;\n        ++${u[o-1]};\n        ${l} sourceLocG = coords;\n        ++${u[o-2]};\n        ${l} sourceLocA = coords;\n        --${u[o-1]};\n        ${l} sourceLocB = coords;\n        --${u[o-2]};`;const d=["x","y","z","w","u","v"].slice(0,h),p="."+d[h-1],f=d.map((e=>"int "+e)),m=o_("sourceLocR",h-1).concat("inIdx.r"),g=o_("sourceLocG",h-1).concat("inIdx.g"),y=o_("sourceLocB",h-1).concat("inIdx.b"),b=o_("sourceLocA",h-1).concat("inIdx.a"),x="max"===n?"greaterThan":"lessThan",w=s?"":`\n          inIdx = round(vec4(getBestIndicesAChannel(${m.join()}),\n                             getBestIndicesAChannel(${g.join()}),\n                             getBestIndicesAChannel(${y.join()}),\n                             getBestIndicesAChannel(${b.join()})));`,v=`vec4(\n            getAChannel(${m.join()}),\n            hasNextCol ? getAChannel(${g.join()}) : 0.,\n            hasNextRow ? getAChannel(${y.join()}) : 0.,\n            hasNextRow && hasNextCol ? getAChannel(${b.join()}) : 0.)`,k=s?"":`\n      float getBestIndicesAChannel(${f.join()}) {\n        return getChannel(getBestIndicesA(${d.join()}),\n                                          vec2(${d.slice(-2).join()}));\n      }`;this.userCode=`\n      float getAChannel(${f.join()}) {\n        return getChannel(getA(${d.join()}),\n                               vec2(${d.slice(-2).join()}));\n      }\n      ${k}\n      void main() {\n        ${l} coords = getOutputCoords();\n        bool hasNextCol = ${u[o-1]} < ${i[o-1]-1};\n        bool hasNextRow = ${u[o-2]} < ${i[o-2]-1};\n        ${c}\n        ivec4 srcIdx = ivec4(sourceLocR${p}, sourceLocG${p},\n          sourceLocB${p}, sourceLocA${p}) * ${t};\n        ivec4 inIdx = srcIdx;\n        vec4 bestIndex = vec4(inIdx);\n        vec4 bestValue = ${v};\n\n        for (int i = 0; i < ${t}; i++) {\n          inIdx = srcIdx;\n          ${w}\n          vec4 candidate = ${v};\n          bvec4 nan = isnan(candidate);\n          bvec4 replace = bvec4(\n            vec4(${x}(candidate, bestValue)) * (vec4(1.0) - vec4(nan)));\n\n          bestValue = vec4(replace.x  ? candidate.x : bestValue.x,\n                           replace.y  ? candidate.y : bestValue.y,\n                           replace.z  ? candidate.z : bestValue.z,\n                           replace.w  ? candidate.w : bestValue.w);\n          bestIndex = mix(bestIndex, vec4(inIdx), vec4(replace));\n          srcIdx++;\n        }\n        setOutput(bestIndex);\n      }\n    `}}function SF(e,t,n,s=null){let r=t.shape[0],a=t.shape[1];null!=s&&(r=s.shape[0],a=s.shape[1]);const i=_p(a),o={windowSize:i,inSize:a,batchSize:r,outSize:Math.ceil(a/i)},l=new IF(o,n,null==s),u=[t];null!=s&&u.push(s);const c=e.runWebGLProgram(l,u,"int32");if(1===c.shape[1])return c;const h=SF(e,t,n,c);return e.disposeIntermediateTensorInfo(c),h}function TF(e,t,n,s=null){const r=null!=s?s.shape:t.shape,a=_p(r[r.length-1]),i=new NF(r,a,n,null==s),o=null==s?[t]:[t,s],l=e.runWebGLProgram(i,o,"int32");if(l.shape.length===t.shape.length){const s=TF(e,t,n,l);return e.disposeIntermediateTensorInfo(l),s}return l}function CF(e,t,n,s){const r=[n];if(_u("arg"+s.charAt(0).toUpperCase()+s.slice(1),r,t.shape.length),!Pe().getBool("WEBGL_PACK_REDUCE")||t.shape.length<=2){const n=[],a=e.texData.get(t.dataId);let i=t;null!==a&&a.isPacked&&(i=e.unpackTensor(t),n.push(i));const[o,l]=Au(i.shape,r),u=ue(l),c=X_({inputs:{x:i},backend:e,attrs:{shape:[-1,u]}});n.push(c);const h=SF(e,c,s);n.push(h);const d=X_({inputs:{x:h},backend:e,attrs:{shape:o}});return n.forEach((t=>e.disposeIntermediateTensorInfo(t))),d}return TF(e,t,s)}const $F={kernelName:Ze,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{axis:a}=s;let i=ge(a,r.shape);const o=Fu(i,r.shape.length);let l=r;const u=[];null!=o&&(l=aF({inputs:{x:r},backend:n,attrs:{perm:o}}),u.push(l),i=Ou(i.length,l.shape.length)),_u("argMax",[i[0]],l.shape.length);const c=CF(n,l,i[0],"max");return u.forEach((e=>n.disposeIntermediateTensorInfo(e))),c}},EF={kernelName:Qe,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{axis:a}=s;let i=ge(a,r.shape);const o=Fu(i,r.shape.length);let l=r;const u=[];null!=o&&(l=aF({inputs:{x:r},backend:n,attrs:{perm:o}}),u.push(l),i=Ou(i.length,l.shape.length)),_u("argMin",[i[0]],l.shape.length);const c=CF(n,l,i[0],"min");return u.forEach((e=>n.disposeIntermediateTensorInfo(e))),c}},AF=W_({opSnippet:m_+"\n  if (abs(x) > 1.) {\n    return NAN;\n  }\n  return asin(x);\n"}),RF={kernelName:et,backendName:"webgl",kernelFunc:AF},_F=W_({opSnippet:m_+"return log(x + sqrt(x * x + 1.0));"}),FF={kernelName:tt,backendName:"webgl",kernelFunc:_F},DF=W_({opSnippet:m_+"\n  return atan(x);\n"}),OF={kernelName:nt,backendName:"webgl",kernelFunc:DF},MF=V_({opSnippet:T_+"\n  return atan(a, b);\n",packedOpSnippet:"\n  vec4 result = atan(a, b);\n  bvec4 isNaNA = isnan(a);\n  bvec4 isNaNB = isnan(b);\n  bvec4 isNaN = bvec4(isNaNA.x || isNaNB.x, isNaNA.y || isNaNB.y, isNaNA.z || isNaNB.z, isNaNA.w || isNaNB.w);\n  "+$_+"\n  return result;\n"}),LF={kernelName:rt,backendName:"webgl",kernelFunc:MF},zF=W_({opSnippet:m_+"\n  if ((x < -1.0) || (x > 1.0)) return NAN;\nreturn (log(1.0 + x) - log(1.0 - x)) / 2.0;"}),BF={kernelName:st,backendName:"webgl",kernelFunc:zF};class PF{constructor(e,t,n,s=!1,r=!1){if(this.variableNames=["x"],"avg"===t&&n)throw new Error("Cannot compute positions for average pool.");const a=e.filterWidth,i=e.strideHeight,o=e.strideWidth,l=e.dilationHeight,u=e.dilationWidth,c=e.effectiveFilterHeight,h=e.effectiveFilterWidth,d=e.padInfo.top,p=e.padInfo.left;this.outputShape=e.outShape;const f="avg"===t,m=`((batch  * ${e.inHeight} + xR) * ${e.inWidth} + xC) * ${e.inChannels} + d`,g=`(xR * ${e.inWidth} + xC) * ${e.inChannels} + d`;let y="0.0";if(f||(y="-1.0 / 1e-20"),n){const t=">=";return void(this.userCode=`\n        const ivec2 strides = ivec2(${i}, ${o});\n        const ivec2 pads = ivec2(${d}, ${p});\n\n        void main() {\n          ivec4 coords = getOutputCoords();\n          int batch = coords[0];\n          int d = coords[3];\n\n          ivec2 xRCCorner = coords.yz * strides - pads;\n          int xRCorner = xRCCorner.x;\n          int xCCorner = xRCCorner.y;\n\n          // max/min x(?, ?, d) to get y(yR, yC, d).\n          // ? = to be determined\n          float minMaxValue = 0.0;\n          float minMaxValueFound = 0.0;\n          int minMaxPosition = 0;\n          float avgValue = 0.0;\n\n          for (int wR = 0; wR < ${c};\n              wR += ${l}) {\n            int xR = xRCorner + wR;\n\n            if (xR < 0 || xR >= ${e.inHeight}) {\n              continue;\n            }\n\n            for (int wC = 0; wC < ${h};\n                wC += ${u}) {\n              int xC = xCCorner + wC;\n\n              if (xC < 0 || xC >= ${e.inWidth}) {\n                continue;\n              }\n\n              float value = getX(batch, xR, xC, d);\n\n              // If a min / max value has already been found, use it. If not,\n              // use the current value.\n              float currMinMaxValue = mix(\n                  value, minMaxValue, minMaxValueFound);\n              if (value ${t} currMinMaxValue) {\n                minMaxValue = value;\n                minMaxValueFound = 1.0;\n                minMaxPosition = ${s?r?m:g:`wR * ${h} + wC`};\n              }\n            }\n          }\n          setOutput(float(minMaxPosition));\n        }\n      `)}let b=`${t}(${t}(${t}(minMaxValue[0], minMaxValue[1]), minMaxValue[2]), minMaxValue[3])`;"avg"===t&&(b="avgValue / max(count, 1.0)");const x=4*Math.floor(a/4),w=a%4,v=`\n      if (${f}) {\n        avgValue += dot(values, ones);\n      } else {\n        minMaxValue = max(values, minMaxValue);\n      }\n    `;this.userCode=`\n      const ivec2 strides = ivec2(${i}, ${o});\n      const ivec2 pads = ivec2(${d}, ${p});\n      const float initializationValue = ${y};\n      const vec4 ones = vec4(1.0, 1.0, 1.0, 1.0);\n\n      float count = 0.0;\n\n      float getValue(int batch, int xR, int xC, int d) {\n        if (xC < 0 || xC >= ${e.inWidth}) {\n          return initializationValue;\n        }\n        count += 1.0;\n        return getX(batch, xR, xC, d);\n      }\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int batch = coords[0];\n        int d = coords[3];\n\n        ivec2 xRCCorner = coords.yz * strides - pads;\n        int xRCorner = xRCCorner.x;\n        int xCCorner = xRCCorner.y;\n\n        // max/min x(?, ?, d) to get y(yR, yC, d).\n        // ? = to be determined\n        vec4 minMaxValue = vec4(${y});\n        float avgValue = 0.0;\n        count = 0.0;\n\n        for (int wR = 0; wR < ${c};\n            wR += ${l}) {\n          int xR = xRCorner + wR;\n\n          if (xR < 0 || xR >= ${e.inHeight}) {\n            continue;\n          }\n\n          for (int wC = 0; wC < ${x}; wC += 4) {\n            int xC = xCCorner + wC * ${u};\n\n            vec4 values = vec4(\n              getValue(batch, xR, xC, d),\n              getValue(batch, xR, xC + ${u}, d),\n              getValue(batch, xR, xC + 2 * ${u}, d),\n              getValue(batch, xR, xC + 3 * ${u}, d)\n            );\n\n            ${v}\n          }\n\n          int xC = xCCorner + ${x};\n          if (${1===w}) {\n            vec4 values = vec4(\n              getValue(batch, xR, xC, d),\n              initializationValue,\n              initializationValue,\n              initializationValue\n            );\n\n            ${v}\n          } else if (${2===w}) {\n            vec4 values = vec4(\n              getValue(batch, xR, xC, d),\n              getValue(batch, xR, xC + ${u}, d),\n              initializationValue,\n              initializationValue\n            );\n\n            ${v}\n          } else if (${3===w}) {\n            vec4 values = vec4(\n              getValue(batch, xR, xC, d),\n              getValue(batch, xR, xC + ${u}, d),\n              getValue(batch, xR, xC + 2 * ${u}, d),\n              initializationValue\n            );\n\n            ${v}\n          }\n        }\n        setOutput(${b});\n      }\n    `}}class WF{constructor(e,t,n,s=!1,r=!1){if(this.variableNames=["x"],"avg"===t&&n)throw new Error("Cannot compute positions for average pool.");const a=e.filterWidth,i=e.strideDepth,o=e.strideHeight,l=e.strideWidth,u=e.dilationDepth,c=e.dilationHeight,h=e.dilationWidth,d=e.effectiveFilterDepth,p=e.effectiveFilterHeight,f=e.effectiveFilterWidth,m=e.padInfo.front,g=e.padInfo.top,y=e.padInfo.left;this.outputShape=e.outShape;const b="avg"===t;let x="0.0";if(b||(x="-1.0 / 1e-20"),n){const t=">=";return void(this.userCode=`\n        const ivec3 strides =\n            ivec3(${i}, ${o}, ${l});\n        const ivec3 pads = ivec3(${m}, ${g}, ${y});\n\n        void main() {\n          ivec5 coords = getOutputCoords();\n          int batch = coords.x;\n          int ch = coords.u;\n\n          ivec3 xCorner = ivec3(coords.y, coords.z, coords.w) * strides - pads;\n          int xDCorner = xCorner.x;\n          int xRCorner = xCorner.y;\n          int xCCorner = xCorner.z;\n\n          // max/min x(?, ?, ?, ch) to get y(yD, yR, yC, ch).\n          // ? = to be determined\n          float minMaxValue = 0.0;\n          float minMaxValueFound = 0.0;\n          int minMaxPosition = 0;\n\n          for (int wD = 0; wD < ${d};\n              wD += ${u}) {\n            int xD = xDCorner + wD;\n\n            if (xD < 0 || xD >= ${e.inDepth}) {\n              continue;\n            }\n\n            for (int wR = 0; wR < ${p};\n                wR += ${c}) {\n              int xR = xRCorner + wR;\n\n              if (xR < 0 || xR >= ${e.inHeight}) {\n                continue;\n              }\n\n              for (int wC = 0; wC < ${f};\n                  wC += ${h}) {\n                int xC = xCCorner + wC;\n\n                if (xC < 0 || xC >= ${e.inWidth}) {\n                  continue;\n                }\n\n                float value = getX(batch, xD, xR, xC, ch);\n\n                // If a min / max value has already been found, use it. If not,\n                // use the current value.\n                float currMinMaxValue = mix(\n                    value, minMaxValue, minMaxValueFound);\n                if (value ${t} currMinMaxValue) {\n                  minMaxValue = value;\n                  minMaxValueFound = 1.0;\n                  minMaxPosition = ${s?r?`(((batch * ${e.inDepth} + xD) * ${e.inHeight} + xR) * ${e.inWidth} + xC) * ${e.inChannels} + ch`:`((xD * ${e.inHeight} + xR) * ${e.inWidth} + xC) * ${e.inChannels} + ch`:`wD * ${p} * ${f} +\n                      wR * ${f} + wC`};\n                }\n              }\n            }\n          }\n          setOutput(float(minMaxPosition));\n        }\n      `)}let w=`${t}(${t}(${t}(minMaxValue[0], minMaxValue[1]), minMaxValue[2]), minMaxValue[3])`;"avg"===t&&(w="avgValue / max(count, 1.0)");const v=4*Math.floor(a/4),k=a%4,I=`\n      if (${b}) {\n        avgValue += dot(values, ones);\n      } else {\n        minMaxValue = max(values, minMaxValue);\n      }\n    `;this.userCode=`\n      const ivec3 strides =\n        ivec3(${i}, ${o}, ${l});\n      const ivec3 pads = ivec3(${m}, ${g}, ${y});\n      const float initializationValue = ${x};\n      const vec4 ones = vec4(1.0, 1.0, 1.0, 1.0);\n\n      float count = 0.0;\n\n      float getValue(int batch, int xD, int xR, int xC, int ch) {\n        if (xC < 0 || xC >= ${e.inWidth}) {\n          return initializationValue;\n        }\n        count += 1.0;\n        return getX(batch, xD, xR, xC, ch);\n      }\n\n      void main() {\n        ivec5 coords = getOutputCoords();\n        int batch = coords.x;\n        int ch = coords.u;\n\n        ivec3 xCorner = ivec3(coords.y, coords.z, coords.w) * strides - pads;\n        int xDCorner = xCorner.x;\n        int xRCorner = xCorner.y;\n        int xCCorner = xCorner.z;\n\n        // max/min x(?, ?, ?, d) to get y(yD, yR, yC, ch).\n        // ? = to be determined\n        vec4 minMaxValue = vec4(${x});\n        float avgValue = 0.0;\n        count = 0.0;\n\n        for (int wD = 0; wD < ${d};\n            wD += ${u}) {\n          int xD = xDCorner + wD;\n\n          if (xD < 0 || xD >= ${e.inDepth}) {\n            continue;\n          }\n\n          for (int wR = 0; wR < ${p};\n            wR += ${c}) {\n            int xR = xRCorner + wR;\n\n            if (xR < 0 || xR >= ${e.inHeight}) {\n              continue;\n            }\n\n            for (int wC = 0; wC < ${v}; wC += 4) {\n              int xC = xCCorner + wC * ${h};\n\n              vec4 values = vec4(\n                getValue(batch, xD, xR, xC, ch),\n                getValue(batch, xD, xR, xC + ${h}, ch),\n                getValue(batch, xD, xR, xC + 2 * ${h}, ch),\n                getValue(batch, xD, xR, xC + 3 * ${h}, ch)\n              );\n\n              ${I}\n            }\n\n            int xC = xCCorner + ${v};\n            if (${1===k}) {\n              vec4 values = vec4(\n                getValue(batch, xD, xR, xC, ch),\n                initializationValue,\n                initializationValue,\n                initializationValue\n              );\n\n              ${I}\n            } else if (${2===k}) {\n              vec4 values = vec4(\n                getValue(batch, xD, xR, xC, ch),\n                getValue(batch, xD, xR, xC + ${h}, ch),\n                initializationValue,\n                initializationValue\n              );\n\n              ${I}\n            } else if (${3===k}) {\n              vec4 values = vec4(\n                getValue(batch, xD, xR, xC, ch),\n                getValue(batch, xD, xR, xC + ${h}, ch),\n                getValue(batch, xD, xR, xC + 2 * ${h}, ch),\n                initializationValue\n              );\n\n              ${I}\n            }\n          }\n        }\n        setOutput(${w});\n      }\n    `}}const VF={kernelName:at,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{x:r}=t;CA(r,"avgPool");const{filterSize:a,strides:i,pad:o,dimRoundingMode:l}=s;ie(Al(i,1),(()=>`Error in avgPool: Either strides or dilations must be 1. Got strides ${i} and dilations '1'`));const u=wl(r.shape,a,i,1,o,l);if(1===u.filterWidth&&1===u.filterHeight&&ce(u.inShape,u.outShape))return A_({inputs:{x:r},backend:n});const c=new PF(u,"avg",!1);return n.runWebGLProgram(c,[r],"float32")}},UF={kernelName:ot,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{filterSize:a,strides:i,pad:o,dimRoundingMode:l,dataFormat:u}=s,c=vl(r.shape,a,i,[1,1,1],o,l,u),h=new WF(c,"avg",!1);return n.runWebGLProgram(h,[r],"float32")}};class GF{constructor(e){this.variableNames=["dy"],this.outputShape=e.inShape;const t=e.filterHeight,n=e.filterWidth,s=e.strideHeight,r=e.strideWidth,a=e.dilationHeight,i=e.dilationWidth,o=e.effectiveFilterHeight,l=e.effectiveFilterWidth,u=o-1-e.padInfo.top,c=l-1-e.padInfo.left,h=1/(t*n);this.userCode=`\n      const ivec2 pads = ivec2(${u}, ${c});\n      const float avgMultiplier = float(${h});\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int d = coords[3];\n\n        ivec2 dyRCCorner = coords.yz - pads;\n        int dyRCorner = dyRCCorner.x;\n        int dyCCorner = dyRCCorner.y;\n\n        // Convolve dy(?, ?, d) with pos mask(:, :, d) to get dx(xR, xC, d).\n        // ? = to be determined. : = across all values in that axis.\n        float dotProd = 0.0;\n        for (int wR = 0; wR < ${o};\n            wR += ${a}) {\n          float dyR = float(dyRCorner + wR) / ${s}.0;\n\n          if (dyR < 0.0 || dyR >= ${e.outHeight}.0 || fract(dyR) > 0.0) {\n            continue;\n          }\n          int idyR = int(dyR);\n\n          for (int wC = 0; wC < ${l};\n            wC+= ${i}) {\n            float dyC = float(dyCCorner + wC) / ${r}.0;\n\n            if (dyC < 0.0 || dyC >= ${e.outWidth}.0 ||\n                fract(dyC) > 0.0) {\n              continue;\n            }\n            int idyC = int(dyC);\n\n            float dyValue = getDy(b, idyR, idyC, d);\n\n            dotProd += dyValue * avgMultiplier;\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}class jF{constructor(e){this.variableNames=["dy"],this.outputShape=e.inShape;const t=e.filterDepth,n=e.filterHeight,s=e.filterWidth,r=e.strideDepth,a=e.strideHeight,i=e.strideWidth,o=e.dilationDepth,l=e.dilationHeight,u=e.dilationWidth,c=e.effectiveFilterDepth,h=e.effectiveFilterHeight,d=e.effectiveFilterWidth,p=c-1-e.padInfo.front,f=h-1-e.padInfo.top,m=d-1-e.padInfo.left,g=1/(t*n*s);this.userCode=`\n      const ivec3 pads = ivec3(${p}, ${f}, ${m});\n      const float avgMultiplier = float(${g});\n\n      void main() {\n        ivec5 coords = getOutputCoords();\n        int batch = coords.x;\n        int ch = coords.u;\n\n        ivec3 dyCorner = ivec3(coords.y, coords.z, coords.w) - pads;\n        int dyDCorner = dyCorner.x;\n        int dyRCorner = dyCorner.y;\n        int dyCCorner = dyCorner.z;\n\n        // Convolve dy(?, ?, ?, d) with pos mask(:, :, :, ch) to get\n        // dx(xD, xR, xC, ch).\n        // ? = to be determined. : = across all values in that axis.\n        float dotProd = 0.0;\n\n        for (int wD = 0; wD < ${c};\n            wD += ${o}) {\n          float dyD = float(dyDCorner + wD) / ${r}.0;\n\n          if (dyD < 0.0 || dyD >= ${e.outDepth}.0 || fract(dyD) > 0.0) {\n            continue;\n          }\n          int idyD = int(dyD);\n\n          for (int wR = 0; wR < ${h};\n              wR += ${l}) {\n            float dyR = float(dyRCorner + wR) / ${a}.0;\n\n            if (dyR < 0.0 || dyR >= ${e.outHeight}.0 ||\n                fract(dyR) > 0.0) {\n              continue;\n            }\n            int idyR = int(dyR);\n\n            for (int wC = 0; wC < ${d};\n                wC += ${u}) {\n              float dyC = float(dyCCorner + wC) / ${i}.0;\n\n              if (dyC < 0.0 || dyC >= ${e.outWidth}.0 ||\n                  fract(dyC) > 0.0) {\n                continue;\n              }\n              int idyC = int(dyC);\n\n              float dyValue = getDy(batch, idyD, idyR, idyC, ch);\n\n              dotProd += dyValue * avgMultiplier;\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}const HF={kernelName:lt,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{dy:r,input:a}=t,i=a,{filterSize:o,strides:l,pad:u,dimRoundingMode:c}=s,h=vl(i.shape,o,l,[1,1,1],u,c),d=new jF(h);return n.runWebGLProgram(d,[r],i.dtype)}},qF={kernelName:it,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{dy:r,input:a}=t,i=a;CA([r,a],"avgPoolGrad");const{filterSize:o,strides:l,pad:u}=s,c=wl(i.shape,o,l,1,u),h=new GF(c);return n.runWebGLProgram(h,[r],i.dtype)}},KF={kernelName:ut,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{a:r,b:a}=t,{transposeA:i,transposeB:o}=s;return oF({a:r,b:a,transposeA:i,transposeB:o,backend:n})}};class XF{constructor(e,t,n,s,r,a){this.outputShape=[],this.variableNames=["x","mean","variance"],ho(e,t),ho(e,n);let i="0.0";null!=s&&(ho(e,s),this.variableNames.push("offset"),i="getOffsetAtOutCoords()");let o="1.0";null!=r&&(ho(e,r),this.variableNames.push("scale"),o="getScaleAtOutCoords()"),this.outputShape=e,this.userCode=`\n      void main() {\n        float x = getXAtOutCoords();\n        float mean = getMeanAtOutCoords();\n        float variance = getVarianceAtOutCoords();\n        float offset = ${i};\n        float scale = ${o};\n        float inv = scale * inversesqrt(variance + float(${a}));\n        setOutput(dot(vec3(x, -mean, offset), vec3(inv, inv, 1)));\n      }\n    `}}class YF{constructor(e,t,n,s,r,a){this.packedInputs=!0,this.packedOutput=!0,this.variableNames=["x","mean","variance"],ho(e,t),ho(e,n);let i="vec4(0.0)";null!=s&&(ho(e,s),this.variableNames.push("offset"),i="getOffsetAtOutCoords()");let o="vec4(1.0)";null!=r&&(ho(e,r),this.variableNames.push("scale"),o="getScaleAtOutCoords()"),this.outputShape=e,this.userCode=`\n      void main() {\n        vec4 offset = ${i};\n        vec4 scale = ${o};\n\n        vec4 x = getXAtOutCoords();\n        vec4 mean = getMeanAtOutCoords();\n        vec4 variance = getVarianceAtOutCoords();\n\n        vec4 inv = scale * inversesqrt(variance + vec4(${a}));\n\n        setOutput((x - mean) * inv + offset);\n      }\n    `}}const JF={kernelName:en,backendName:"webgl",kernelFunc:({inputs:e,backend:t,attrs:n})=>{const{x:s,mean:r,variance:a,offset:i,scale:o}=e;ie(r.shape.length===a.shape.length,(()=>"Batch normalization gradient requires mean and variance to have equal ranks.")),ie(null==i||r.shape.length===i.shape.length,(()=>"Batch normalization gradient requires mean and offset to have equal ranks.")),ie(null==o||r.shape.length===o.shape.length,(()=>"Batch normalization gradient requires mean and scale to have equal ranks."));let{varianceEpsilon:l}=n;null==l&&(l=.001);const u=[s,r,a];let c=null;null!=i&&(c=i.shape,u.push(i));let h=null;null!=o&&(h=o.shape,u.push(o));const d=Pe().getBool("WEBGL_PACK_NORMALIZATION")?new YF(s.shape,r.shape,a.shape,c,h,l):new XF(s.shape,r.shape,a.shape,c,h,l);return t.runWebGLProgram(d,u,u[0].dtype)}};class ZF{constructor(e){this.variableNames=["source"],this.outputShape=e,this.rank=e.length;const t=GA(this.rank);this.customUniforms=[{name:"start",arrayIndex:this.rank,type:"int"}];const n=function(e){if(1===e)return"sourceLoc";if(e<=6)return QF.slice(0,e).map((e=>"sourceLoc."+e)).join(",");throw Error(`Slicing for rank ${e} is not yet supported`)}(this.rank);let s;s=`\n        ${t} sourceLoc;\n        ${t} coords = getOutputCoords();\n        ${e.map(((e,t)=>`sourceLoc.${QF[t]} = start[${t}] + coords.${QF[t]};`)).join("\n")}\n      `,this.userCode=`\n      void main() {\n        ${s}\n        setOutput(getSource(${n}));\n      }\n    `}}const QF=["x","y","z","w","u","v"];class eD{constructor(e){this.variableNames=["source"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=e,this.rank=e.length,this.customUniforms=[{name:"start",arrayIndex:this.rank,type:"int"}];const t=GA(this.rank),n=o_("coords",this.rank),s=o_("sourceLoc",this.rank),r=1===this.rank?"sourceLoc":`vec2(${s.slice(-2).join()})`,a=`getChannel(getSource(${s.join()}), ${r})`,i=`\n      result.x = ${a};\n      if (++${n[this.rank-1]} < ${e[this.rank-1]}) {\n        ++${s[this.rank-1]};\n        result.y = ${a};\n        --${s[this.rank-1]};\n      }\n    `,o=1===this.rank?"":`\n      --${n[this.rank-1]};\n      if (++${n[this.rank-2]} < ${e[this.rank-2]}) {\n        ++${s[this.rank-2]};\n        result.z = ${a};\n        if (++${n[this.rank-1]} < ${e[this.rank-1]}) {\n          ++${s[this.rank-1]};\n          result.w = ${a};\n        }\n      }\n    `,l=this.rank<=4?`sourceLoc = coords +\n            ${t}(${e.map(((e,t)=>`start[${t}]`)).join()});`:e.map(((e,t)=>`${s[t]} = ${n[t]} + start[${t}];`)).join("\n");this.userCode=`\n      void main() {\n        ${t} coords = getOutputCoords();\n        ${t} sourceLoc;\n        ${l}\n        vec4 result = vec4(0.);\n        ${i}\n        ${o}\n        setOutput(result);\n      }\n    `}}function tD(e){const{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{begin:a,size:i}=s,[o,l]=rl(r,a,i);if(Go(r,o,l),0===ue(l))return n.makeTensorInfo(l,r.dtype,[]);if(n.shouldExecuteOnCPU([r])||"string"===r.dtype){const e=n.texData.get(r.dataId),t=jR(e.values,o,l,r.shape,r.dtype);return n.makeTensorInfo(l,r.dtype,t)}const{isPacked:u}=n.texData.get(r.dataId),c=nl(r.shape,o,l);if(u||!c){const e=Pe().getBool("WEBGL_PACK_ARRAY_OPERATIONS")?new eD(l):new ZF(l),t=[o];return n.runWebGLProgram(e,[r],r.dtype,t)}return n.uploadToGPU(r.dataId),function(e,t,n,s){const r=s.texData.get(e.dataId),a=s.makeTensorInfo(n,e.dtype),i=s.texData.get(a.dataId);Object.assign(i,r),i.refCount=1,i.shape=n,i.dtype=e.dtype;let o=sl(t,Ce(e.shape));r.slice&&(o+=r.slice.flatOffset),i.slice={flatOffset:o,origDataId:r.slice&&r.slice.origDataId||e.dataId};const l=s.dataRefCount.get(i.slice.origDataId)||1;return s.dataRefCount.set(i.slice.origDataId,l+1),a}(r,o,l,n)}const nD={kernelName:gs,backendName:"webgl",kernelFunc:tD},sD={kernelName:ct,backendName:"webgl",kernelFunc:e=>{const{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{blockShape:a,crops:i}=s;ie(r.shape.length<=4,(()=>"batchToSpaceND for rank > 4 with a WebGL backend not implemented yet"));const o=a.reduce(((e,t)=>e*t)),l=Dp(r.shape,a,o),u=Op(l.length,a.length),c=Mp(r.shape,a,o),h=Lp(i,a.length),d=zp(c,i,a.length),p=[],f=X_({inputs:{x:r},backend:n,attrs:{shape:l}}),m=aF({inputs:{x:f},backend:n,attrs:{perm:u}}),g=X_({inputs:{x:m},backend:n,attrs:{shape:c}}),y=tD({inputs:{x:g},backend:n,attrs:{begin:h,size:d}});return p.push(f),p.push(m),p.push(g),p.forEach((e=>n.disposeIntermediateTensorInfo(e))),y}},rD={kernelName:ht,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{x:r,weights:a}=t,{size:i}=s,o=n.readSync(r.dataId),l=n.readSync(a.dataId),u=dR(o,l,a.dtype,a.shape,i);return n.makeTensorInfo([i],a.dtype,u)}},aD={kernelName:dt,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n}=e,{a:s,b:r}=t,a=Pe().getBool("WEBGL_PACK_BINARY_OPERATIONS"),i=Pe().getNumber("WEBGL_VERSION");if(n.shouldExecuteOnCPU([s,r])||1===i){const e=n.texData.get(s.dataId).values,t=n.texData.get(r.dataId).values,[a,i]=fR(s.shape,r.shape,e,t,s.dtype),o=n.makeTensorInfo(i,s.dtype);return n.texData.get(o.dataId).values=a,o}let o;return o=a?new E_("\n  int r = int(a.r) & int(b.r);\n  int g = int(a.g) & int(b.g);\n  int rb = int(a.b) & int(b.b);\n  int ra = int(a.a) & int(b.a);\n  return vec4(r, g, rb, ra);\n",s.shape,r.shape,!1):new C_("\n  return float(int(a.r) & int(b.r));\n",s.shape,r.shape),n.runWebGLProgram(o,[s,r],s.dtype)}},iD={kernelName:pt,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n}=e,{s0:s,s1:r}=t,a=n.readSync(s.dataId),i=n.readSync(r.dataId),o=ho(Array.from(a),Array.from(i));return n.makeTensorInfo([o.length],"int32",Int32Array.from(o))}},oD=V_({opSnippet:"return float(a != b);",cpuKernelImpl:OR,dtype:"bool"}),lD={kernelName:zn,backendName:"webgl",kernelFunc:oD};function uD(e){const{inputs:t,backend:n}=e,{input:s}=t;return A_({inputs:{x:n.texData.get(s.dataId).complexTensorInfos.real},backend:n})}const cD={kernelName:Qn,backendName:"webgl",kernelFunc:uD},hD={kernelName:ft,backendName:"webgl",kernelFunc:function e(t){const{inputs:n,backend:s,attrs:r}=t,{x:a}=n,{dtype:i}=r;if("complex64"===i){if("complex64"===a.dtype)return A_({inputs:{x:a},backend:s});const t=Nc(a.shape),n=e({inputs:{x:a},backend:s,attrs:{dtype:"float32"}}),r=__({inputs:{real:n,imag:t},backend:s});return t.dispose(),s.disposeIntermediateTensorInfo(n),r}if("complex64"===a.dtype){const t=uD({inputs:{input:a},backend:s}),n=e({inputs:{x:t},backend:s,attrs:{dtype:i}});return s.disposeIntermediateTensorInfo(t),n}if(!we(a.dtype,i)){const e=A_({inputs:{x:a},backend:s});return{dataId:e.dataId,shape:e.shape,dtype:i}}if(s.shouldExecuteOnCPU([a])){const e=s.texData.get(a.dataId).values,[t,n,r]=mR(e,a.shape,a.dtype,i);return s.makeTensorInfo(t,n,r)}if("int32"===i)return function(e,t){const n=new f_(e.shape,"return float(int(x));"),s=t.runWebGLProgram(n,[e],"int32");return{dataId:s.dataId,shape:s.shape,dtype:s.dtype}}(a,s);if("bool"===i){const e=s.makeTensorInfo([],"bool",be("bool",1)),t=oD({inputs:{a,b:e},backend:s});return s.disposeIntermediateTensorInfo(e),t}throw new Error(`Error in Cast: failed to cast ${a.dtype} to ${i}`)}},dD="return ceil(x);",pD=W_({opSnippet:dD,packedOpSnippet:dD,cpuKernelImpl:gR}),fD={kernelName:mt,backendName:"webgl",kernelFunc:pD};class mD{constructor(e){this.variableNames=["A"],this.customUniforms=[{name:"minVal",type:"float"},{name:"maxVal",type:"float"}],this.outputShape=e,this.userCode="\n\n      void main() {\n        float value = getAAtOutCoords();\n        if (isnan(value)) {\n          setOutput(value);\n          return;\n        }\n\n        setOutput(clamp(value, minVal, maxVal));\n      }\n    "}}class gD{constructor(e){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.customUniforms=[{name:"minVal",type:"float"},{name:"maxVal",type:"float"}],this.outputShape=e,this.userCode="\n      void main() {\n        vec4 value = getAAtOutCoords();\n\n        if (any(isnan(value))) {\n          setOutput(value);\n          return;\n        }\n\n        setOutput(clamp(value, vec4(minVal), vec4(maxVal)));\n      }\n    "}}const yD={kernelName:gt,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{clipValueMin:a,clipValueMax:i}=s;let o;o=Pe().getBool("WEBGL_PACK_CLIP")?new gD(r.shape):new mD(r.shape);const l=[[a],[i]];return n.runWebGLProgram(o,[r],r.dtype,l)}};class bD{constructor(e){this.variableNames=["real","imag"],this.outputShape=e,this.userCode="\n      void main() {\n        float re = abs(getRealAtOutCoords());\n        float im = abs(getImagAtOutCoords());\n        float mx = max(re, im);\n\n        // sadly the length function in glsl is not underflow-safe\n        // (at least not on Intel GPUs). So the safe solution is\n        // to ensure underflow-safety in all cases.\n        setOutput(\n          mx == 0.0 ? 0.0 : mx * length(vec2(1, min(re, im)/mx))\n        );\n      }\n    "}}function xD(e,t){return{dataId:t.dataId,dtype:t.dtype,shape:e.shape}}const wD={kernelName:bt,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n}=e,{x:s}=t,r=n.texData.get(s.dataId),a=new bD(s.shape),i=[xD(s,r.complexTensorInfos.real),xD(s,r.complexTensorInfos.imag)];return n.runWebGLProgram(a,i,i[0].dtype)}};class vD{constructor(e){this.outputShape=[],this.outputShape=Sp(e,1),this.variableNames=e.map(((e,t)=>`T${t}`));const t=new Array(e.length-1);t[0]=e[0][1];for(let n=1;n<t.length;n++)t[n]=t[n-1]+e[n][1];const n=[`if (yC < ${t[0]}) setOutput(getT0(yR, yC));`];for(let e=1;e<t.length;e++){const s=t[e-1];n.push(`else if (yC < ${t[e]}) setOutput(getT${e}(yR, yC-${s}));`)}const s=t.length,r=t[t.length-1];n.push(`else setOutput(getT${s}(yR, yC-${r}));`),this.userCode=`\n      void main() {\n        ivec2 coords = getOutputCoords();\n        int yR = coords.x;\n        int yC = coords.y;\n\n        ${n.join("\n        ")}\n      }\n    `}}class kD{constructor(e,t){this.packedInputs=!0,this.packedOutput=!0,this.outputShape=[],this.outputShape=Sp(e,t);const n=this.outputShape,s=n.length,r=GA(s),a=o_("coords",s),i=["x","y","z","w","u","v"].slice(0,s);this.variableNames=e.map(((e,t)=>`T${t}`));const o=new Array(e.length-1);o[0]=e[0][t];for(let n=1;n<o.length;n++)o[n]=o[n-1]+e[n][t];const l=i[t],u=i.slice(-2),c=i.join();let h=`if (${l} < ${o[0]}) {\n        return getChannel(\n            getT0(${c}), vec2(${u.join()}));\n        }`;for(let e=1;e<o.length;e++){const t=o[e-1];h+=`\n        if (${l} < ${o[e]}  && ${l} >= ${o[e-1]}) {\n          return getChannel(\n            getT${e}(${ID(i,l,t)}),\n            vec2(${ID(u,l,t)}));\n        }`}const d=o.length,p=o[o.length-1];h+=`\n        return getChannel(\n          getT${d}(${ID(i,l,p)}),\n          vec2(${ID(u,l,p)}));`,this.userCode=`\n      float getValue(${i.map((e=>"int "+e))}) {\n        ${h}\n      }\n\n      void main() {\n        ${r} coords = getOutputCoords();\n        vec4 result = vec4(getValue(${a}), 0., 0., 0.);\n\n        ${a[s-1]} = ${a[s-1]} + 1;\n        if (${a[s-1]} < ${n[s-1]}) {\n          result.g = getValue(${a});\n        }\n\n        ${a[s-2]} = ${a[s-2]} + 1;\n        if (${a[s-2]} < ${n[s-2]}) {\n          result.a = getValue(${a});\n        }\n\n        ${a[s-1]} = ${a[s-1]} - 1;\n        if (${a[s-2]} < ${n[s-2]} &&\n            ${a[s-1]} < ${n[s-1]}) {\n          result.b = getValue(${a});\n        }\n        setOutput(result);\n      }\n    `}}function ID(e,t,n){const s=e.indexOf(t);return e.map(((e,t)=>t===s?`${e} - ${n}`:e)).join()}function ND(e){const{inputs:t,backend:n}=e,{input:s}=t;return A_({inputs:{x:n.texData.get(s.dataId).complexTensorInfos.imag},backend:n})}const SD={kernelName:ln,backendName:"webgl",kernelFunc:ND};function TD(e,t,n){const s=e[0].dtype;if("complex64"===s){const s=e.map((e=>uD({inputs:{input:e},backend:n}))),r=e.map((e=>ND({inputs:{input:e},backend:n}))),a=TD(s,t,n),i=TD(r,t,n),o=__({inputs:{real:a,imag:i},backend:n});return s.forEach((e=>n.disposeIntermediateTensorInfo(e))),r.forEach((e=>n.disposeIntermediateTensorInfo(e))),n.disposeIntermediateTensorInfo(a),n.disposeIntermediateTensorInfo(i),o}let r=n.shouldExecuteOnCPU(e);if("string"===s&&(r=!0),r){const r=e.map((e=>{const s=ue(e.shape.slice(t));return X_({inputs:{x:e},backend:n,attrs:{shape:[-1,s]}})})),a=r.map((e=>({vals:n.readSync(e.dataId),shape:e.shape}))),i=Sp(r.map((e=>e.shape)),1),o=1===r[0].shape[0],l=yR(a,i,s,o),u=Sp(e.map((e=>e.shape)),t),c=n.makeTensorInfo(u,s,l);return r.forEach((e=>n.disposeIntermediateTensorInfo(e))),c}const a=e.filter((e=>ue(e.shape)>0)),i=Pe().getBool("WEBGL_PACK_ARRAY_OPERATIONS")&&a[0].shape.length>1;if(1===a.length){const t=i?new f_(e[0].shape,x_):new w_(e[0].shape,x_);return n.runWebGLProgram(t,e,s)}const o=Pe().getNumber("WEBGL_MAX_TEXTURES_IN_SHADER");if(a.length>o){const e=[];for(let s=0;s<a.length;s+=o){const r=a.slice(s,s+o);e.push(TD(r,t,n))}const s=TD(e,t,n);for(const t of e)n.disposeIntermediateTensorInfo(t);return s}if(i){const e=new kD(a.map((e=>e.shape)),t);return n.runWebGLProgram(e,a,s)}const{tensors2D:l,outShape:u}=function(e,t,n){const s=Sp(e.map((e=>e.shape)),t);return{tensors2D:e.map((e=>X_({inputs:{x:e},attrs:{shape:[-1,ue(e.shape.slice(t))]},backend:n}))),outShape:s}}(a,t,n),c=new vD(l.map((e=>e.shape))),h=n.runWebGLProgram(c,l,s);l.forEach((e=>n.disposeIntermediateTensorInfo(e)));const d=X_({inputs:{x:h},attrs:{shape:u},backend:n});return n.disposeIntermediateTensorInfo(h),d}function CD(e){const{inputs:t,backend:n,attrs:s}=e,{axis:r}=s,a=ge(r,t[0].shape)[0];Np(t.map((e=>e.shape)),a);const i=Sp(t.map((e=>e.shape)),a);if(0===ue(i))return n.makeTensorInfo(i,t[0].dtype,[]);const o=t.filter((e=>ue(e.shape)>0));return 1===o.length?A_({inputs:{x:o[0]},backend:n}):TD(o,a,n)}const $D={kernelName:xt,backendName:"webgl",kernelFunc:CD};class ED{constructor(e,t=!1,n=null,s=!1,r=!1){this.variableNames=["x","W"],this.outputShape=e.outShape;const a=e.padInfo.top,i=e.padInfo.left,o=e.strideHeight,l=e.strideWidth,u=e.dilationHeight,c=e.dilationWidth,h=e.filterHeight,d=e.filterWidth,p=4*Math.floor(e.inChannels/4),f=e.inChannels%4,m="channelsLast"===e.dataFormat,g=m?1:2,y=m?2:3,b=m?3:1;let x="",w="";n&&(x=s?`float activation(float a) {\n          float b = getPreluActivationWeightsAtOutCoords();\n          ${n}\n        }`:r?`float activation(float a) {\n          float b = getLeakyreluAlphaAtOutCoords();\n          ${n}\n        }`:`\n          float activation(float x) {\n            ${n}\n          }\n        `,w="result = activation(result);");const v=t?"result += getBiasAtOutCoords();":"";t&&this.variableNames.push("bias"),s&&this.variableNames.push("preluActivationWeights"),r&&this.variableNames.push("leakyreluAlpha"),this.userCode=`\n      ${x}\n\n      const ivec2 strides = ivec2(${o}, ${l});\n      const ivec2 pads = ivec2(${a}, ${i});\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int batch = coords[0];\n        int d2 = coords[${b}];\n\n        ivec2 xRCCorner =\n            ivec2(coords[${g}], coords[${y}]) * strides - pads;\n        int xRCorner = xRCCorner.x;\n        int xCCorner = xRCCorner.y;\n\n        // Convolve x(?, ?, d1) with w(:, :, d1, d2) to get y(yR, yC, d2).\n        // ? = to be determined. : = across all values in that axis.\n        float dotProd = 0.0;\n        for (int wR = 0; wR < ${h}; wR++) {\n          int xR = xRCorner + wR * ${u};\n\n          if (xR < 0 || xR >= ${e.inHeight}) {\n            continue;\n          }\n\n          for (int wC = 0; wC < ${d}; wC++) {\n            int xC = xCCorner + wC * ${c};\n\n            if (xC < 0 || xC >= ${e.inWidth}) {\n              continue;\n            }\n\n            for (int d1 = 0; d1 < ${p}; d1 += 4) {\n              vec4 wValues = vec4(\n                getW(wR, wC, d1, d2),\n                getW(wR, wC, d1 + 1, d2),\n                getW(wR, wC, d1 + 2, d2),\n                getW(wR, wC, d1 + 3, d2)\n              );\n\n              if (${m}) {\n                vec4 xValues = vec4(\n                  getX(batch, xR, xC, d1),\n                  getX(batch, xR, xC, d1 + 1),\n                  getX(batch, xR, xC, d1 + 2),\n                  getX(batch, xR, xC, d1 + 3)\n                );\n                dotProd += dot(xValues, wValues);\n              } else {\n                vec4 xValues = vec4(\n                  getX(batch, d1, xR, xC),\n                  getX(batch, d1 + 1, xR, xC),\n                  getX(batch, d1 + 2, xR, xC),\n                  getX(batch, d1 + 3, xR, xC)\n                );\n                dotProd += dot(xValues, wValues);\n              }\n            }\n\n            if (${1===f}) {\n\n              if (${m}) {\n                dotProd +=\n                    getX(batch, xR, xC, ${p}) *\n                    getW(wR, wC, ${p}, d2);\n              } else {\n                dotProd +=\n                    getX(batch, ${p}, xR, xC) *\n                    getW(wR, wC, ${p}, d2);\n              }\n\n            } else if (${2===f}) {\n              vec2 wValues = vec2(\n                getW(wR, wC, ${p}, d2),\n                getW(wR, wC, ${p} + 1, d2)\n              );\n\n              if (${m}) {\n                vec2 xValues = vec2(\n                  getX(batch, xR, xC, ${p}),\n                  getX(batch, xR, xC, ${p} + 1)\n                );\n                dotProd += dot(xValues, wValues);\n              } else {\n                vec2 xValues = vec2(\n                  getX(batch, ${p}, xR, xC),\n                  getX(batch, ${p} + 1, xR, xC)\n                );\n                dotProd += dot(xValues, wValues);\n              }\n\n            } else if (${3===f}) {\n              vec3 wValues = vec3(\n                getW(wR, wC, ${p}, d2),\n                getW(wR, wC, ${p} + 1, d2),\n                getW(wR, wC, ${p} + 2, d2)\n              );\n\n              if (${m}) {\n                vec3 xValues = vec3(\n                  getX(batch, xR, xC, ${p}),\n                  getX(batch, xR, xC, ${p} + 1),\n                  getX(batch, xR, xC, ${p} + 2)\n                );\n                dotProd += dot(xValues, wValues);\n              } else {\n                vec3 xValues = vec3(\n                  getX(batch, ${p}, xR, xC),\n                  getX(batch, ${p} + 1, xR, xC),\n                  getX(batch, ${p} + 2, xR, xC)\n                );\n                dotProd += dot(xValues, wValues);\n              }\n\n            }\n          }\n        }\n\n        float result = dotProd;\n        ${v}\n        ${w}\n        setOutput(result);\n      }\n    `}}class AD{constructor(e){this.variableNames=["x","W"],this.outputShape=e.outShape;const t=e.padInfo.front,n=e.padInfo.top,s=e.padInfo.left,r=e.strideDepth,a=e.strideHeight,i=e.strideWidth,o=e.dilationDepth,l=e.dilationHeight,u=e.dilationWidth,c=e.filterDepth,h=e.filterHeight,d=e.filterWidth,p=4*Math.floor(e.inChannels/4),f=e.inChannels%4;this.userCode=`\n      const ivec3 strides = ivec3(${r}, ${a}, ${i});\n      const ivec3 pads = ivec3(${t}, ${n}, ${s});\n\n      void main() {\n        ivec5 coords = getOutputCoords();\n        int batch = coords.x;\n        int d2 = coords.u;\n\n        ivec3 xFRCCorner = ivec3(coords.y, coords.z, coords.w) * strides - pads;\n        int xFCorner = xFRCCorner.x;\n        int xRCorner = xFRCCorner.y;\n        int xCCorner = xFRCCorner.z;\n\n        // Convolve x(?, ?, ?, d1) with w(:, :, :, d1, d2) to get\n        // y(yF, yR, yC, d2). ? = to be determined. : = across all\n        // values in that axis.\n        float dotProd = 0.0;\n        for (int wF = 0; wF < ${c}; wF++) {\n          int xF = xFCorner + wF * ${o};\n\n          if (xF < 0 || xF >= ${e.inDepth}) {\n            continue;\n          }\n\n          for (int wR = 0; wR < ${h}; wR++) {\n            int xR = xRCorner + wR * ${l};\n\n            if (xR < 0 || xR >= ${e.inHeight}) {\n              continue;\n            }\n\n            for (int wC = 0; wC < ${d}; wC++) {\n              int xC = xCCorner + wC * ${u};\n\n              if (xC < 0 || xC >= ${e.inWidth}) {\n                continue;\n              }\n\n              for (int d1 = 0; d1 < ${p}; d1 += 4) {\n                vec4 xValues = vec4(\n                  getX(batch, xF, xR, xC, d1),\n                  getX(batch, xF, xR, xC, d1 + 1),\n                  getX(batch, xF, xR, xC, d1 + 2),\n                  getX(batch, xF, xR, xC, d1 + 3)\n                );\n                vec4 wValues = vec4(\n                  getW(wF, wR, wC, d1, d2),\n                  getW(wF, wR, wC, d1 + 1, d2),\n                  getW(wF, wR, wC, d1 + 2, d2),\n                  getW(wF, wR, wC, d1 + 3, d2)\n                );\n\n                dotProd += dot(xValues, wValues);\n              }\n\n              if (${1===f}) {\n                dotProd +=\n                  getX(batch, xF, xR, xC, ${p}) *\n                  getW(wF, wR, wC, ${p}, d2);\n              } else if (${2===f}) {\n                vec2 xValues = vec2(\n                  getX(batch, xF, xR, xC, ${p}),\n                  getX(batch, xF, xR, xC, ${p} + 1)\n                );\n                vec2 wValues = vec2(\n                  getW(wF, wR, wC, ${p}, d2),\n                  getW(wF, wR, wC, ${p} + 1, d2)\n                );\n                dotProd += dot(xValues, wValues);\n              } else if (${3===f}) {\n                vec3 xValues = vec3(\n                  getX(batch, xF, xR, xC, ${p}),\n                  getX(batch, xF, xR, xC, ${p} + 1),\n                  getX(batch, xF, xR, xC, ${p} + 2)\n                );\n                vec3 wValues = vec3(\n                  getW(wF, wR, wC, ${p}, d2),\n                  getW(wF, wR, wC, ${p} + 1, d2),\n                  getW(wF, wR, wC, ${p} + 2, d2)\n                );\n                dotProd += dot(xValues, wValues);\n              }\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}class RD{constructor(e,t=!1,n=null,s=!1,r=!1){this.variableNames=["x","W"],this.packedInputs=!0,this.packedOutput=!0,this.customUniforms=[{name:"pads",type:"ivec2"},{name:"strides",type:"ivec2"},{name:"dilations",type:"ivec2"},{name:"inDims",type:"ivec2"}],this.outputShape=e.outShape,this.enableShapeUniforms=YA(this.outputShape.length);const a=e.padInfo.left,i=e.strideWidth,o=e.dilationWidth,l=e.filterHeight,u=e.filterWidth,c=u;let h="\n       int xR; int xC; int xCOffset;\n       vec4 wTexel; vec4 previous; vec4 final;";for(let e=0;e<u;e++)h+=`\n           vec4 xTexelC${2*e};\n           int xTexelC${2*e}Ready;\n           vec4 xTexelC${2*e+1};\n           int xTexelC${2*e+1}Ready;\n           vec4 xC${e};`;h+=`\n     for (int r = 0; r < ${l}; r++) {\n      for (int d1 = 0; d1 < ${e.inChannels}; d1 += 2) {\n       `;for(let e=0;e<u;e++)h+=`\n           xTexelC${2*e} = vec4(0.0);\n           xTexelC${2*e}Ready = 0;\n           xTexelC${2*e+1} = vec4(0.0);\n           xTexelC${2*e+1}Ready = 0;\n           xC${e} = vec4(0.0);`;h+="\n         xR = xRCorner + r * dilations[0];\n         if (xR >=0 && xR < inDims[0]) {\n       ";for(let t=0;t<(c+1)/2;t++){const n=2*t;if(h+=`\n           xC = xCCorner + ${n*o};\n           `,1===i){if(n<u&&(a%2==1?(h+=`\n                 xCOffset = xC + 1;\n                 if (xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${n}Ready == 0) {\n                   xTexelC${n} = getX(batch, xR, xCOffset, d1);\n\n                   // Need to manually clear unused channels in case\n                   // we're reading from recycled texture.\n                   if (xCOffset + 1 >= inDims[1]) {\n                     xTexelC${n}.zw = vec2(0.0);\n                   }\n                   xTexelC${n}Ready = 1;\n                 }\n               `,h+=1===o&&n>0?`\n                 xC${n} = vec4(xTexelC${n-2}.zw, xTexelC${n}.xy);\n                 `:`\n                   xCOffset = xC + 1 - 2;\n\n                   if (xCOffset >= 0 && xCOffset < inDims[1]) {\n                     previous = getX(batch, xR, xCOffset, d1);\n\n                     // Need to manually clear unused channels in case\n                     // we're reading from recycled texture.\n                     if (xCOffset + 1 >= inDims[1]) {\n                       previous.zw = vec2(0.0);\n                     }\n\n                     xC${n} = vec4(previous.zw, xTexelC${n}.xy);\n                   } else {\n                     xC${n} = vec4(0.0, 0.0, xTexelC${n}.xy);\n                   }\n                   `):h+=`\n                 if (xC >= 0 && xC < inDims[1] && xTexelC${n}Ready == 0) {\n                   xTexelC${n} = getX(batch, xR, xC, d1);\n                   if (xC + 1 >= inDims[1]) {\n                     xTexelC${n}.zw = vec2(0.0);\n                   }\n                   xTexelC${n}Ready = 1;\n                 }\n\n                 xC${n} = xTexelC${n};\n                 `,n+1<u)){const e=a%2==0?re(o):o;o%2==0&&a%2==1||o%2!=0&&a%2!=1?(h+=`\n                   xCOffset = xC + imod(pads[1], 2) + ${e};\n\n                   if (xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${n+1}Ready == 0) {\n                     xTexelC${n+1} = getX(batch, xR, xCOffset, d1);\n\n                     // Need to manually clear unused channels in case\n                     // we're reading from recycled texture.\n                     if (xCOffset + 1 >= inDims[1]) {\n                       xTexelC${n+1}.zw = vec2(0.0);\n                     }\n                     xTexelC${n+1}Ready = 1;\n                   }\n                   `,h+=o>1?`\n                     xCOffset -= 2;\n                     if (xCOffset >= 0 && xCOffset < inDims[1]) {\n                      previous = getX(batch, xR, xCOffset, d1);\n                      xC${n+1} = vec4(previous.zw, xTexelC${n+1}.xy);\n                     } else {\n                      xC${n+1} = vec4(0.0, 0.0, xTexelC${n+1}.xy);\n                     }\n                     `:`\n                     xC${n+1} = vec4(xTexelC${n}.zw, xTexelC${n+1}.xy);\n                     `):h+=1===e?`\n                     xC${n+1} = xTexelC${n};\n                     `:`\n                     xCOffset = xC + ${e};\n\n                     if (xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${n+1}Ready == 0) {\n                       xTexelC${n+1} = getX(batch, xR, xCOffset, d1);\n                       if (xCOffset + 1 >= inDims[1]) {\n                         xTexelC${n+1}.zw = vec2(0.0);\n                       }\n                       xTexelC${n+1}Ready = 1;\n                     }\n\n                     xC${n+1} = xTexelC${n+1};\n                     `}}else n<u&&(a%2==1?(h+=`\n                 xCOffset = xC + 1 - strides[1];\n                 if(xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${n}Ready == 0) {\n                   xTexelC${n} = getX(batch, xR, xCOffset, d1);\n                   // Need to manually clear unused channels in case\n                   // we're reading from recycled texture.\n                   if (xCOffset + 1 >= inDims[1]) {\n                     xTexelC${n}.zw = vec2(0.0);\n                   }\n                   xTexelC${n}Ready = 1;\n                 }\n\n                 if(xC + 1 >= 0 && xC + 1 < inDims[1] && xTexelC${n+1}Ready == 0) {\n                   xTexelC${n+1} = getX(batch, xR, xC + 1, d1);\n                   // Need to manually clear unused channels in case\n                   // we're reading from recycled texture.\n                   if (xC + 2 >= inDims[1]) {\n                     xTexelC${n+1}.zw = vec2(0.0);\n                   }\n                   xTexelC${n+1}Ready = 1;\n                 }\n\n                 xC${n} = vec4(xTexelC${n}.zw, xTexelC${n+1}.zw);\n               `,n+1<u&&(h+=`\n                   final = vec4(0.0);\n                   xCOffset = xC + 1 + strides[1];\n                   if(xCOffset >= 0 && xCOffset < inDims[1]) {\n                     final = getX(batch, xR, xCOffset, d1);\n                   }\n                   xC${n+1} = vec4(xTexelC${n+1}.xy, final.xy);\n                 `)):(h+=`\n                 if(xC >= 0 && xC < inDims[1] && xTexelC${n}Ready == 0) {\n                   xTexelC${n} = getX(batch, xR, xC, d1);\n                   if (xC + 1 >= inDims[1]) {\n                     xTexelC${n}.zw = vec2(0.0);\n                   }\n                   xTexelC${n}Ready = 1;\n                 }\n\n                 xCOffset = xC + strides[1];\n                 if(xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${n+1}Ready == 0) {\n                   xTexelC${n+1} = getX(batch, xR, xCOffset, d1);\n                   if (xCOffset + 1 >= inDims[1]) {\n                     xTexelC${n+1}.zw = vec2(0.);\n                   }\n                   xTexelC${n+1}Ready = 1;\n                 }\n\n                 xC${n} = vec4(\n                   xTexelC${n}.xy, xTexelC${n+1}.xy);\n               `,n+1<u&&(h+=`\n                   xC${n+1} = vec4(xTexelC${n}.zw, xTexelC${n+1}.zw);\n                 `)));n<u&&(h+=`\n             wTexel = getW(r, ${n}, d1, d2);\n             dotProd += xC${n}.xxzz * vec4(wTexel.xy, wTexel.xy);\n             if(d1 + 1 < ${e.inChannels}) {\n               dotProd += xC${n}.yyww * vec4(wTexel.zw, wTexel.zw);\n             }\n           `,n+1<u&&(h+=`\n               wTexel = getW(r, ${n+1}, d1, d2);\n               dotProd += xC${n+1}.xxzz * vec4(wTexel.xy, wTexel.xy);\n               if(d1 + 1 < ${e.inChannels}) {\n                 dotProd += xC${n+1}.yyww * vec4(wTexel.zw, wTexel.zw);\n               }\n             `))}h+="\n     }\n   ",h+="\n     }\n   ",h+="\n     }\n   ";let d="",p="";n&&(d=s?`vec4 activation(vec4 a) {\n           vec4 b = getPreluActivationWeightsAtOutCoords();\n           ${n}\n         }`:r?`vec4 activation(vec4 a) {\n           vec4 b = getLeakyreluAlphaAtOutCoords();\n           ${n}\n         }`:`vec4 activation(vec4 x) {\n           ${n}\n         }`,p="result = activation(result);");const f=t?"result += getBiasAtOutCoords();":"";t&&this.variableNames.push("bias"),s&&this.variableNames.push("preluActivationWeights"),r&&this.variableNames.push("leakyreluAlpha"),this.userCode=`\n       ${d}\n\n       void main() {\n         ivec4 coords = getOutputCoords();\n         int batch = coords.x;\n         ivec2 xRCCorner = coords.yz * strides - pads;\n         int d2 = coords.w;\n         int xRCorner = xRCCorner.x;\n         int xCCorner = xRCCorner.y;\n\n         //intialize dotProd with a small epsilon seems to reduce GPU accuracy loss.\n         vec4 dotProd = vec4(0.000000000000001);\n\n         ${h}\n\n         vec4 result = dotProd - vec4(0.000000000000001);\n         ${f}\n         ${p}\n         setOutput(result);\n       }\n     `}}class _D{constructor(e,t){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.customUniforms=[{name:"inputShape",type:"ivec4"},{name:"pad",type:"ivec2"},{name:"stride",type:"ivec2"},{name:"dilation",type:"ivec2"},{name:"inChannels",type:"int"},{name:"itemsPerBlockRow",type:"int"},{name:"outWidth",type:"int"}],this.outputShape=e,this.enableShapeUniforms=YA(this.outputShape.length);const{dataFormat:n}=t,s=EA(),r="channelsLast"===n,a=r?1:2,i=r?2:3,o=this.enableShapeUniforms?"if(blockIndex < outShape[2] && pos < outShape[1]) {":`if(blockIndex < ${e[2]} && pos < ${e[1]}) {`;let l="";for(let e=0;e<=1;e++)for(let t=0;t<=1;t++)l+=`\n          blockIndex = rc.z + ${t};\n          pos = rc.y + ${e};\n\n          ${o}\n            offsetY = int(blockIndex / outWidth) * stride[0] - pad[0];\n            d0 = offsetY + dilation[0] * (pos / itemsPerBlockRow);\n\n            if(d0 < inputShape[${a}] && d0 >= 0) {\n              // Use custom imod instead mod. On Intel GPU, mod may generate\n              // unexpected value.\n              // https://github.com/tensorflow/tfjs/issues/5447\n              offsetX = imod(blockIndex, outWidth) * stride[1] - pad[1];\n              d1 = offsetX + dilation[1] * (imod(pos, itemsPerBlockRow) /\n                  inChannels);\n\n              if(d1 < inputShape[${i}] && d1 >= 0) {\n\n                ch = imod(pos, inChannels);\n\n                if (${r}) {\n                  innerDims = vec2(d1, ch);\n                  result[${2*e+t}] = getChannel(\n                    getA(rc.x, d0, int(innerDims.x),\n                    int(innerDims.y)), innerDims);\n                } else {\n                  innerDims = vec2(d0, d1);\n                  result[${2*e+t}] = getChannel(\n                    getA(rc.x, ch, int(innerDims.x),\n                    int(innerDims.y)), innerDims);\n                }\n              }\n            }\n          }\n        `;this.userCode=`\n      void main() {\n        ivec3 rc = getOutputCoords();\n\n        vec4 result = vec4(0);\n\n        int blockIndex, pos, offsetY, d0, offsetX, d1, ch;\n        vec2 innerDims;\n\n        ${l}\n\n        ${s.output} = result;\n      }\n    `}}function FD(e,t){const n=e.length;return n>=3?t?[...e.slice(0,-3),e[n-3]*e[n-2],e[n-1]]:[...e.slice(0,-3),e[n-3],e[n-2]*e[n-1]]:!t&&1===n&&e[0]>1?[e[0],1]:null}function DD({x:e,filter:t,convInfo:n,backend:s,bias:r=null,preluActivationWeights:a=null,leakyreluAlpha:i=0,activation:o=null}){const l=e.shape,u=s.texData.get(e.dataId),c=n.inChannels,h=l[0]*l[1]*l[2],d=n.outChannels,p="channelsLast"===n.dataFormat,f=!1;let m;const g=[];if(null!=a){const e=FD(a.shape,p);null!=e&&(a=X_({inputs:{x:a},backend:s,attrs:{shape:e}}),g.push(a))}if(null!=r){const e=FD(r.shape,p);null!=e&&(r=X_({inputs:{x:r},backend:s,attrs:{shape:e}}),g.push(r))}if((1!==h&&1!==d||!(c>1e3))&&u.isPacked&&p&&null!=u.texture&&l[2]%2!=0&&ce(u.shape.slice(-3),l.slice(-3))){const c=l[0]*l[1]*(l[2]+1),h={dataId:e.dataId,shape:[1,c,n.inChannels],dtype:e.dtype},d=u.shape;u.shape=u.shape.slice(),u.shape[u.shape.length-2]++,ie(vA(u.shape,h.shape),(()=>`packed reshape ${u.shape} to ${h.shape} isn't free`));const p=X_({inputs:{x:t},backend:s,attrs:{shape:[1,n.inChannels,n.outChannels]}});g.push(p);const y=oF({a:h,b:p,backend:s,transposeA:!1,transposeB:f,bias:r,activation:o,preluActivationWeights:a,leakyreluAlpha:i}),b=s.texData.get(y.dataId);ie(b.isPacked,(()=>"batchMatMul result is expected to be packed")),u.shape=d,b.shape=n.outShape,m=A_({inputs:{x:y},backend:s}),m.shape=n.outShape,g.push(y)}else{const l=n.outHeight*n.outWidth,u=X_({inputs:{x:e},backend:s,attrs:{shape:p?[n.batchSize,l,n.inChannels]:[n.batchSize,n.inChannels,l]}}),c=X_({inputs:{x:t},backend:s,attrs:{shape:[1,n.inChannels,n.outChannels]}}),h=oF({a:p?u:c,b:p?c:u,transposeA:!p,transposeB:f,backend:s,bias:r,activation:o,preluActivationWeights:a,leakyreluAlpha:i});m=X_({inputs:{x:h},backend:s,attrs:{shape:n.outShape}}),g.push(u),g.push(c),g.push(h)}for(const e of g)s.disposeIntermediateTensorInfo(e);return m}function OD({x:e,filter:t,convInfo:n,backend:s,bias:r=null,preluActivationWeights:a=null,leakyreluAlpha:i=0,activation:o=null}){const{filterWidth:l,filterHeight:u,inChannels:c,outWidth:h,outHeight:d,dataFormat:p}=n,f="channelsLast"===p,m=l*u*c,g=d*h,y=[n.batchSize,m,g],b=[];if(null!=a){const e=FD(a.shape,f);null!=e&&(a=X_({inputs:{x:a},backend:s,attrs:{shape:e}}),b.push(a))}if(null!=r){const e=FD(r.shape,f);null!=e&&(r=X_({inputs:{x:r},backend:s,attrs:{shape:e}}),b.push(r))}const x=X_({inputs:{x:t},backend:s,attrs:{shape:[1,m,ue(t.shape)/m]}});b.push(x);const w=new _D(y,n),v=[e.shape,[n.padInfo.top,n.padInfo.left],[n.strideHeight,n.strideWidth],[n.dilationHeight,n.dilationWidth],[n.inChannels],[n.filterWidth*n.inChannels],[n.outWidth]],k=s.runWebGLProgram(w,[e],"float32",v),I=X_({inputs:{x:k},backend:s,attrs:{shape:y}});b.push(k),b.push(I);const N=null!=r,S=null!=a,T="leakyrelu"===o,C=o?U_(o,!0):null,$=new G_(f?I.shape:x.shape,f?x.shape:I.shape,f?[n.batchSize,g,n.outChannels]:[n.batchSize,n.outChannels,g],!0,!1,N,C,S,T),E=f?[I,x]:[x,I];if(r&&E.push(r),S&&E.push(a),T){const e=s.makeTensorInfo([],"float32",Cr(i,"float32"));E.push(e),b.push(e)}const A=s.runWebGLProgram($,E,"float32"),R=X_({inputs:{x:A},backend:s,attrs:{shape:n.outShape}});b.push(A);for(const e of b)s.disposeIntermediateTensorInfo(e);return R}const MD={kernelName:wt,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{x:r,filter:a}=t,{strides:i,pad:o,dataFormat:l,dilations:u,dimRoundingMode:c}=s,h=_l(l),d=kl(r.shape,a.shape,i,u,o,c,!1,h);let p;if(1!==d.filterHeight||1!==d.filterWidth||1!==d.dilationHeight||1!==d.dilationWidth||1!==d.strideHeight||1!==d.strideWidth||"SAME"!==d.padInfo.type&&"VALID"!==d.padInfo.type)if(d.strideWidth<=2&&"channelsLast"===h&&Pe().getBool("WEBGL_EXP_CONV")){const e=new RD(d),t=[[d.padInfo.top,d.padInfo.left],[d.strideHeight,d.strideWidth],[d.dilationHeight,d.dilationWidth],[d.inHeight,d.inWidth]];p=n.runWebGLProgram(e,[r,a],"float32",t)}else if(Pe().getBool("WEBGL_CONV_IM2COL"))p=OD({x:r,filter:a,convInfo:d,backend:n});else{const e=new ED(d);p=n.runWebGLProgram(e,[r,a],"float32")}else p=DD({x:r,filter:a,convInfo:d,backend:n});const f=X_({inputs:{x:p},backend:n,attrs:{shape:d.outShape}});return n.disposeIntermediateTensorInfo(p),f}};class LD{constructor(e){this.variableNames=["x","dy"],this.outputShape=e.filterShape;const t=e.strideHeight,n=e.strideWidth,s=e.padInfo.top,r=e.padInfo.left,a="channelsLast"===e.dataFormat;this.userCode=`\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int wR = coords.x;\n        int wC = coords.y;\n        int d1 = coords.z;\n        int d2 = coords.w;\n\n        // Convolve x(?, ?, d1) with dy(:, :, d2) to get dw(wR, wC, d1, d2).\n        // ? = to be determined. : = across all values in that axis.\n        float dotProd = 0.0;\n\n        for (int b = 0; b < ${e.batchSize}; b++) {\n          for (int yR = 0; yR < ${e.outHeight}; yR++) {\n            int xR = wR + yR * ${t} - ${s};\n\n            if (xR < 0 || xR >= ${e.inHeight}) {\n              continue;\n            }\n\n            for (int yC = 0; yC < ${e.outWidth}; yC++) {\n              int xC = wC + yC * ${n} - ${r};\n\n              if (xC < 0 || xC >= ${e.inWidth}) {\n                continue;\n              }\n\n              ${a?"float dyValue = getDy(b, yR, yC, d2);\n              float xValue = getX(b, xR, xC, d1);\n              dotProd += (xValue * dyValue);":"float dyValue = getDy(b, d2, yR, yC);\n              float xValue = getX(b, d1, xR, xC);\n              dotProd += (xValue * dyValue);"}\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}class zD{constructor(e){this.variableNames=["dy","W"],this.outputShape=e.inShape;const t=e.filterHeight,n=e.filterWidth,s=e.strideHeight,r=e.strideWidth,a="channelsLast"===e.dataFormat,i=t-1-e.padInfo.top,o=n-1-e.padInfo.left,l=a?1:2,u=a?2:3,c=a?3:1;this.userCode=`\n      const ivec2 pads = ivec2(${i}, ${o});\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int batch = coords[0];\n        int d1 = coords[${c}];\n\n        ivec2 dyCorner = ivec2(coords[${l}], coords[${u}]) - pads;\n        int dyRCorner = dyCorner.x;\n        int dyCCorner = dyCorner.y;\n\n        // Convolve dy(?, ?, d2) with w(:, :, d1, d2) to compute dx(xR, xC, d1).\n        // ? = to be determined. : = across all values in that axis.\n        float dotProd = 0.0;\n        for (int wR = 0; wR < ${t}; wR++) {\n          float dyR = float(dyRCorner + wR) / ${s}.0;\n\n          if (dyR < 0.0 || dyR >= ${e.outHeight}.0 || fract(dyR) > 0.0) {\n            continue;\n          }\n          int idyR = int(dyR);\n\n          int wRPerm = ${t} - 1 - wR;\n\n          for (int wC = 0; wC < ${n}; wC++) {\n            float dyC = float(dyCCorner + wC) / ${r}.0;\n\n            if (dyC < 0.0 || dyC >= ${e.outWidth}.0 ||\n                fract(dyC) > 0.0) {\n              continue;\n            }\n            int idyC = int(dyC);\n\n            int wCPerm = ${n} - 1 - wC;\n\n            for (int d2 = 0; d2 < ${e.outChannels}; d2++) {\n\n              if (${a}) {\n                float xValue = getDy(batch, idyR, idyC, d2);\n                float wValue = getW(wRPerm, wCPerm, d1, d2);\n                dotProd += xValue * wValue;\n              } else {\n                float xValue = getDy(batch, d2, idyR, idyC);\n                float wValue = getW(wRPerm, wCPerm, d1, d2);\n                dotProd += xValue * wValue;\n              }\n\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}class BD{constructor(e){this.variableNames=["x","dy"],this.outputShape=e.filterShape;const t=e.strideDepth,n=e.strideHeight,s=e.strideWidth,r=e.padInfo.front,a=e.padInfo.top,i=e.padInfo.left;this.userCode=`\n      void main() {\n        ivec5 coords = getOutputCoords();\n        int wF = coords.x;\n        int wR = coords.y;\n        int wC = coords.z;\n        int d1 = coords.w;\n        int d2 = coords.u;\n\n        float dotProd = 0.0;\n\n        for (int b = 0; b < ${e.batchSize}; b++) {\n          for (int yF = 0; yF < ${e.outDepth}; yF++) {\n            int xF = wF + yF * ${t} - ${r};\n\n            if (xF < 0 || xF >= ${e.inDepth}) {\n              continue;\n            }\n\n            for (int yR = 0; yR < ${e.outHeight}; yR++) {\n              int xR = wR + yR * ${n} - ${a};\n\n              if (xR < 0 || xR >= ${e.inHeight}) {\n                continue;\n              }\n\n              for (int yC = 0; yC < ${e.outWidth}; yC++) {\n                int xC = wC + yC * ${s} - ${i};\n\n                if (xC < 0 || xC >= ${e.inWidth}) {\n                  continue;\n                }\n\n                float dyValue = getDy(b, yF, yR, yC, d2);\n                float xValue = getX(b, xF, xR, xC, d1);\n                dotProd += (xValue * dyValue);\n              }\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}class PD{constructor(e){this.variableNames=["dy","W"],this.outputShape=e.inShape;const t=e.filterDepth,n=e.filterHeight,s=e.filterWidth,r=e.strideDepth,a=e.strideHeight,i=e.strideWidth,o=t-1-e.padInfo.front,l=n-1-e.padInfo.top,u=s-1-e.padInfo.left;this.userCode=`\n      const ivec3 pads = ivec3(${o}, ${l}, ${u});\n\n      void main() {\n        ivec5 coords = getOutputCoords();\n        int batch = coords.x;\n        int d1 = coords.u;\n\n\n        ivec3 dyCorner = ivec3(coords.y, coords.z, coords.w) - pads;\n        int dyFCorner = dyCorner.x;\n        int dyRCorner = dyCorner.y;\n        int dyCCorner = dyCorner.z;\n\n        float dotProd = 0.0;\n        for (int wF = 0; wF < ${t}; wF++) {\n          float dyF = float(dyFCorner + wF) / ${r}.0;\n\n          if (dyF < 0.0 || dyF >= ${e.outDepth}.0 || fract(dyF) > 0.0) {\n            continue;\n          }\n          int idyF = int(dyF);\n\n          int wFPerm = ${t} - 1 - wF;\n\n          for (int wR = 0; wR < ${n}; wR++) {\n            float dyR = float(dyRCorner + wR) / ${a}.0;\n\n            if (dyR < 0.0 || dyR >= ${e.outHeight}.0 ||\n              fract(dyR) > 0.0) {\n              continue;\n            }\n            int idyR = int(dyR);\n\n            int wRPerm = ${n} - 1 - wR;\n\n            for (int wC = 0; wC < ${s}; wC++) {\n              float dyC = float(dyCCorner + wC) / ${i}.0;\n\n              if (dyC < 0.0 || dyC >= ${e.outWidth}.0 ||\n                  fract(dyC) > 0.0) {\n                continue;\n              }\n              int idyC = int(dyC);\n\n              int wCPerm = ${s} - 1 - wC;\n\n              for (int d2 = 0; d2 < ${e.outChannels}; d2++) {\n                float xValue = getDy(batch, idyF, idyR, idyC, d2);\n                float wValue = getW(wFPerm, wRPerm, wCPerm, d1, d2);\n                dotProd += xValue * wValue;\n              }\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}const WD={kernelName:vt,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{x:r,dy:a}=t,{strides:i,pad:o,dataFormat:l,dimRoundingMode:u,filterShape:c}=s,h=_l(l),d=kl(r.shape,c,i,1,o,u,!1,h),p=new LD(d);return n.runWebGLProgram(p,[r,a],"float32")}};class VD{constructor(e){this.variableNames=["dy","W"],this.packedInputs=!0,this.packedOutput=!0,this.customUniforms=[{name:"strides",type:"vec2"}],this.outputShape=e.inShape,this.enableShapeUniforms=YA(this.outputShape.length);const t=e.filterHeight,n=e.filterWidth,s=t-1-e.padInfo.top,r=n-1-e.padInfo.left;this.userCode=`\n      const ivec2 pads = ivec2(${s}, ${r});\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int batch = coords[0];\n        int d1 = coords[3];\n\n        ivec2 dyCorner = ivec2(coords[1], coords[2]) - pads;\n        int dyRCorner = dyCorner.x;\n        int dyCCorner = dyCorner.y;\n\n        vec4 result = vec4(0.);\n        for (int wR = 0; wR < ${t}; wR++) {\n          float dyR = float(dyRCorner + wR) / strides[0];\n          if (dyR < 0.0 || dyR >= ${e.outHeight}.0 || fract(dyR) > 0.0) {\n            continue;\n          }\n          int idyR = int(dyR);\n          int wRPerm = ${t} - 1 - wR;\n\n          for (int wC = 0; wC < ${n}; wC++) {\n            int wCPerm = ${n} - 1 - wC;\n\n            float dyC = float(dyCCorner + wC) / strides[1];\n            bool idyCVal = (dyC >= 0.0) && (dyC < ${e.outWidth}.0)\n              && (fract(dyC) == 0.0);\n            int idyC = int(dyC);\n\n            float dyC2 = float(dyCCorner + wC + 1) / strides[1];\n            bool idyCVal2 = (dyC2 >= 0.0) && (dyC2 < ${e.outWidth}.0)\n              && (fract(dyC2) == 0.0);\n            int idyC2 = int(dyC2);\n\n            if (idyCVal && idyCVal2) {\n              for (int d2 = 0; d2 < ${e.outChannels}; d2 += 2) {\n                vec4 wValue = getW(wRPerm, wCPerm, d1, d2);\n                vec4 dySample = getDy(batch, idyR, idyC, d2);\n                vec4 dySample2 = (idyC / 2 == idyC2 / 2) ?\n                  dySample : getDy(batch, idyR, idyC2, d2);\n\n                vec2 dyValue = mod(float(idyC), 2.) == 0. ?\n                  dySample.xy : dySample.zw;\n                result.xy += vec2(dot(dyValue, wValue.xy),\n                  dot(dyValue, wValue.zw));\n\n                dyValue = mod(float(idyC2), 2.) == 0. ?\n                  dySample2.xy : dySample2.zw;\n                result.zw += vec2(dot(dyValue, wValue.xy),\n                  dot(dyValue, wValue.zw));\n              }\n            } else if (idyCVal) {\n              for (int d2 = 0; d2 < ${e.outChannels}; d2 += 2) {\n                vec4 wValue = getW(wRPerm, wCPerm, d1, d2);\n                vec4 dySample = getDy(batch, idyR, idyC, d2);\n                vec2 dyValue = mod(float(idyC), 2.) == 0. ?\n                  dySample.xy : dySample.zw;\n                result.xy += vec2(dot(dyValue, wValue.xy),\n                  dot(dyValue, wValue.zw));\n              }\n            } else if (idyCVal2) {\n              for (int d2 = 0; d2 < ${e.outChannels}; d2 += 2) {\n                vec4 wValue = getW(wRPerm, wCPerm, d1, d2);\n                vec4 dySample = getDy(batch, idyR, idyC2, d2);\n                vec2 dyValue = mod(float(idyC2), 2.) == 0. ?\n                  dySample.xy : dySample.zw;\n                result.zw += vec2(dot(dyValue, wValue.xy),\n                  dot(dyValue, wValue.zw));\n              }\n            }\n          }\n        }\n        setOutput(result);\n      }\n    `}}const UD={kernelName:kt,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{dy:r,filter:a}=t,{inputShape:i,strides:o,pad:l,dataFormat:u,dimRoundingMode:c}=s,h=_l(u),d=kl(i,a.shape,o,1,l,c,!1,h);if(Pe().getBool("WEBGL_PACK_CONV2DTRANSPOSE")&&"channelsLast"===h){const e=[[d.strideHeight,d.strideWidth]],t=new VD(d);return n.runWebGLProgram(t,[r,a],"float32",e)}{const e=new zD(d);return n.runWebGLProgram(e,[r,a],"float32")}}},GD={kernelName:It,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{x:r,filter:a}=t,{strides:i,pad:o,dilations:l}=s,u=Il(r.shape,a.shape,i,l,o),c=new AD(u);return n.runWebGLProgram(c,[r,a],"float32")}},jD={kernelName:Nt,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{x:r,dy:a}=t,{strides:i,pad:o,filterShape:l}=s,u=Il(r.shape,l,i,1,o),c=new BD(u);return n.runWebGLProgram(c,[r,a],"float32")}},HD={kernelName:St,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{dy:r,filter:a}=t,{pad:i,strides:o,inputShape:l}=s,u=Il(l,a.shape,o,1,i),c=new PD(u);return n.runWebGLProgram(c,[r,a],"float32")}},qD=W_({opSnippet:P_+"\n  return cos(x);\n",packedOpSnippet:`\n  vec4 result = cos(x);\n  bvec4 isNaN = isnan(x);\n  ${$_}\n  return result;\n`}),KD={kernelName:Tt,backendName:"webgl",kernelFunc:qD},XD=W_({opSnippet:"\n  float e2x = exp(-x);\n  return (e2x + 1.0 / e2x) / 2.0;\n"}),YD={kernelName:Ct,backendName:"webgl",kernelFunc:XD};class JD{constructor(e,t,n,s,r){this.variableNames=["Image","Boxes","BoxInd"],this.outputShape=[];const[a,i,o,l]=e,[u]=t,[c,h]=n;this.outputShape=[u,c,h,l];const d="bilinear"===s?1:0,[p,f]=[i-1+".0",o-1+".0"],[m,g,y]=c>1?[""+(i-1)/(c-1),"(y2-y1) * height_ratio",`y1*${p} + float(y)*(height_scale)`]:["0.0","0.0",`0.5 * (y1+y2) * ${p}`],[b,x,w]=h>1?[""+(o-1)/(h-1),"(x2-x1) * width_ratio",`x1*${f} + float(x)*(width_scale)`]:["0.0","0.0",`0.5 * (x1+x2) * ${f}`];this.userCode=`\n      const float height_ratio = float(${m});\n      const float width_ratio = float(${b});\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int y = coords[1];\n        int x = coords[2];\n        int d = coords[3];\n\n        // get box vals\n        float y1 = getBoxes(b,0);\n        float x1 = getBoxes(b,1);\n        float y2 = getBoxes(b,2);\n        float x2 = getBoxes(b,3);\n\n        // get image in batch index\n        int bInd = round(getBoxInd(b));\n        if(bInd < 0 || bInd >= ${a}) {\n          return;\n        }\n\n        float height_scale = ${g};\n        float width_scale = ${x};\n\n        float in_y = ${y};\n        if( in_y < 0.0 || in_y > ${p} ) {\n          setOutput(float(${r}));\n          return;\n        }\n        float in_x = ${w};\n        if( in_x < 0.0 || in_x > ${f} ) {\n          setOutput(float(${r}));\n          return;\n        }\n\n        vec2 sourceFracIndexCR = vec2(in_x,in_y);\n        if(${d} == 1) {\n          // Compute the four integer indices.\n          ivec2 sourceFloorCR = ivec2(sourceFracIndexCR);\n          ivec2 sourceCeilCR = ivec2(ceil(sourceFracIndexCR));\n\n          float topLeft = getImage(b, sourceFloorCR.y, sourceFloorCR.x, d);\n          float bottomLeft = getImage(b, sourceCeilCR.y, sourceFloorCR.x, d);\n          float topRight = getImage(b, sourceFloorCR.y, sourceCeilCR.x, d);\n          float bottomRight = getImage(b, sourceCeilCR.y, sourceCeilCR.x, d);\n\n          vec2 fracCR = sourceFracIndexCR - vec2(sourceFloorCR);\n\n          float top = topLeft + (topRight - topLeft) * fracCR.x;\n          float bottom = bottomLeft + (bottomRight - bottomLeft) * fracCR.x;\n          float newValue = top + (bottom - top) * fracCR.y;\n          setOutput(newValue);\n        } else {\n          // Compute the coordinators of nearest neighbor point.\n          ivec2 sourceNearestCR = ivec2(floor(\n            sourceFracIndexCR + vec2(0.5,0.5)));\n          float newValue = getImage(b, sourceNearestCR.y, sourceNearestCR.x, d);\n          setOutput(newValue);\n        }\n      }\n    `}}const ZD={kernelName:At,backendName:"webgl",kernelFunc:e=>{const{inputs:t,backend:n,attrs:s}=e,{image:r,boxes:a,boxInd:i}=t,{cropSize:o,method:l,extrapolationValue:u}=s,c=new JD(r.shape,a.shape,o,l,u);return n.runWebGLProgram(c,[r,a,i],"float32")}};var QD;!function(e){e.Prod="*",e.Sum="+"}(QD||(QD={}));class eO{constructor(e,t,n,s){this.op=e,this.outputShape=t,this.variableNames=["x"],this.customUniforms=[{name:"index",type:"float"}];const r=this.outputShape.length,a=this.op===QD.Prod?"1.0":"0.0",i=n?a:`getX(${tO(r,"coords",this.op)})`,o=this.outputShape[this.outputShape.length-1];let l="",u="";n?(l=s?"end != "+(o-1):"end != 0",u=s?"end + 1":"end - 1"):(l=s?`end + pow2 < ${o}`:"end >= pow2",u=s?"end + pow2":"end - pow2"),this.userCode=`\n      void main() {\n        ${GA(r)} coords = getOutputCoords();\n        int end = ${nO(r,"coords",this.op)};\n        float val = ${i};\n        int pow2 = int(pow(2.0, index));\n        if (${l}) {\n          int idx = ${u};\n          ${nO(r,"coords",this.op)} = idx;\n          val ${this.op}= getX(${tO(r,"coords",this.op)});\n        }\n        setOutput(val);\n      }\n    `}}function tO(e,t,n){if(1===e)return`${t}`;if(2===e)return`${t}.x, ${t}.y`;if(3===e)return`${t}.x, ${t}.y, ${t}.z`;if(4===e)return`${t}.x, ${t}.y, ${t}.z, ${t}.w`;throw new Error(`Cumulative ${n} for rank ${e} is not yet supported`)}function nO(e,t,n){if(1===e)return`${t}`;if(2===e)return`${t}.y`;if(3===e)return`${t}.z`;if(4===e)return`${t}.w`;throw new Error(`Cumulative ${n} for rank ${e} is not yet supported`)}function sO(e,t,n,s,r,a){const i=t.shape.length,o=Fu([s],i);let l=t;null!=o&&(l=aF({inputs:{x:t},backend:n,attrs:{perm:o}}));const u=Ou(1,i)[0];if(u!==i-1)throw new Error(`WebGL cumprod shader expects an inner-most axis=${t.shape.length-1} but got axis=${s}`);const c=l.shape[u];let h=A_({inputs:{x:l},backend:n});for(let t=0;t<=Math.ceil(Math.log2(c))-1;t++){const s=new eO(e,l.shape,!1,a),r=[[t]],i=h;h=n.runWebGLProgram(s,[h],h.dtype,r),n.disposeIntermediateTensorInfo(i)}if(r){const t=new eO(e,l.shape,r,a),s=h;h=n.runWebGLProgram(t,[h],h.dtype),n.disposeIntermediateTensorInfo(s)}if(null!=o){const e=aF({inputs:{x:h},backend:n,attrs:{perm:Du(o)}});return n.disposeIntermediateTensorInfo(h),n.disposeIntermediateTensorInfo(l),e}return h}const rO={kernelName:$t,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{axis:a,exclusive:i,reverse:o}=s;return sO(QD.Prod,r,n,a,i,o)}},aO={kernelName:Et,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{axis:a,exclusive:i,reverse:o}=s;return sO(QD.Sum,r,n,a,i,o)}},iO={kernelName:Rt,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{x:r,weights:a}=t,{size:i,binaryOutput:o}=s;if(1===r.shape.length){const e=n.readSync(r.dataId),t=n.readSync(a.dataId),s=dR(e,t,a.dtype,a.shape,i);return n.makeTensorInfo([i],a.dtype,s)}if(2===r.shape.length){const e=n.bufferSync(r),t=n.bufferSync(a),s=pR(e,t,i,o);return n.makeTensorInfo(s.shape,a.dtype,s.values)}throw new Error(`Error in denseBincount: input must be at most rank 2, but got rank${r.shape.length}.`)}};class oO{constructor(e,t,n){this.variableNames=["x"],this.outputShape=[],this.outputShape=e,this.blockSize=t,this.dataFormat=n,this.userCode=`\n    void main() {\n      ivec4 coords = getOutputCoords();\n      int b = coords[0];\n      int h = ${this.getHeightCoordString()};\n      int w = ${this.getWidthCoordString()};\n      int d = ${this.getDepthCoordString()};\n\n      int in_h = h / ${t};\n      int offset_h = imod(h, ${t});\n      int in_w = w / ${t};\n      int offset_w = imod(w, ${t});\n      int offset_d = (offset_h * ${t} + offset_w) *\n        ${this.getOutputDepthSize()};\n      int in_d = d + offset_d;\n\n      float result = ${this.getInputSamplingString()};\n      setOutput(result);\n    }\n  `}getHeightCoordString(){return"NHWC"===this.dataFormat?"coords[1]":"coords[2]"}getWidthCoordString(){return"NHWC"===this.dataFormat?"coords[2]":"coords[3]"}getDepthCoordString(){return"NHWC"===this.dataFormat?"coords[3]":"coords[1]"}getOutputDepthSize(){return"NHWC"===this.dataFormat?this.outputShape[3]:this.outputShape[1]}getInputSamplingString(){return"NHWC"===this.dataFormat?"getX(b, in_h, in_w, in_d)":"getX(b, in_d, in_h, in_w)"}}const lO={kernelName:_t,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{blockSize:a,dataFormat:i}=s,o=r.shape[0],l=("NHWC"===i?r.shape[1]:r.shape[2])*a,u=("NHWC"===i?r.shape[2]:r.shape[3])*a,c=("NHWC"===i?r.shape[3]:r.shape[1])/(a*a),h=new oO("NHWC"===i?[o,l,u,c]:[o,c,l,u],a,i);return n.runWebGLProgram(h,[r],r.dtype)}};class uO{constructor(e,t=!1,n=null,s=!1,r=!1){this.variableNames=["x","W"],this.customUniforms=[{name:"pads",type:"ivec2"},{name:"strides",type:"ivec2"},{name:"dilations",type:"ivec2"},{name:"inDims",type:"ivec2"}],this.outputShape=e.outShape,this.enableShapeUniforms=YA(this.outputShape.length);const a=e.filterHeight,i=e.filterWidth,o=e.outChannels/e.inChannels;let l="",u="";n&&(l=s?`float activation(float a) {\n          float b = getPreluActivationWeightsAtOutCoords();\n          ${n}\n        }`:r?`float activation(float a) {\n          float b = getLeakyreluAlphaAtOutCoords();\n          ${n}\n        }`:`\n          float activation(float x) {\n            ${n}\n          }\n        `,u="result = activation(result);");const c=t?"result += getBiasAtOutCoords();":"";t&&this.variableNames.push("bias"),s&&this.variableNames.push("preluActivationWeights"),r&&this.variableNames.push("leakyreluAlpha"),this.userCode=`\n      ${l}\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int batch = coords.x;\n        ivec2 xRCCorner = coords.yz * strides - pads;\n        int d2 = coords.w;\n        int d1 = d2 / ${o};\n        int q = d2 - d1 * ${o};\n\n        int xRCorner = xRCCorner.x;\n        int xCCorner = xRCCorner.y;\n\n        // Convolve x(?, ?, d1) with w(:, :, d1, q) to get y(yR, yC, d2).\n        // ? = to be determined. : = across all values in that axis.\n        float dotProd = 0.0;\n        // TO DO(dsmilkov): Flatten the two for loops and vec4 the operations.\n        for (int wR = 0; wR < ${a}; wR++) {\n          int xR = xRCorner + wR * dilations[0];\n\n          if (xR < 0 || xR >= inDims[0]) {\n            continue;\n          }\n\n          for (int wC = 0; wC < ${i}; wC++) {\n            int xC = xCCorner + wC * dilations[1];\n\n            if (xC < 0 || xC >= inDims[1]) {\n              continue;\n            }\n\n            float xVal = getX(batch, xR, xC, d1);\n            float wVal = getW(wR, wC, d1, q);\n            dotProd += xVal * wVal;\n          }\n        }\n\n        float result = dotProd;\n        ${c}\n        ${u}\n        setOutput(result);\n      }\n    `}}class cO{constructor(e,t=!1,n=null,s=!1,r=!1){this.variableNames=["x","W"],this.packedInputs=!0,this.packedOutput=!0,this.customUniforms=[{name:"pads",type:"ivec2"},{name:"strides",type:"ivec2"},{name:"dilations",type:"ivec2"},{name:"inDims",type:"ivec2"}],this.outputShape=e.outShape,this.enableShapeUniforms=YA(this.outputShape.length);const a=e.outChannels/e.inChannels,i=e.padInfo.left,o=e.strideWidth,l=e.dilationWidth,u=e.filterHeight,c=e.filterWidth,h=c;let d="\n      int xR; int xC; int xCOffset;\n      vec4 wTexel; vec4 previous; vec4 final;";for(let e=0;e<c;e++)d+=`\n          vec4 xTexelC${2*e};\n          int xTexelC${2*e}Ready;\n          vec4 xTexelC${2*e+1};\n          int xTexelC${2*e+1}Ready;\n          vec4 xC${e};`;d+=`\n    for (int r = 0; r < ${u}; r++) {\n      `;for(let e=0;e<c;e++)d+=`\n          xTexelC${2*e} = vec4(0.0);\n          xTexelC${2*e}Ready = 0;\n          xTexelC${2*e+1} = vec4(0.0);\n          xTexelC${2*e+1}Ready = 0;\n          xC${e} = vec4(0.0);`;d+="\n        xR = xRCorner + r * dilations[0];\n        if (xR >=0 && xR < inDims[0]) {\n      ";for(let e=0;e<(h+1)/2;e++){const t=2*e;if(d+=`\n          xC = xCCorner + ${t*l};\n          `,1===o){if(t<c&&(i%2==1?(d+=`\n                xCOffset = xC + 1;\n                if (xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${t}Ready == 0) {\n                  xTexelC${t} = getX(batch, xR, xCOffset, d1);\n\n                  // Need to manually clear unused channels in case\n                  // we're reading from recycled texture.\n                  if (xCOffset + 1 >= inDims[1]) {\n                    xTexelC${t}.zw = vec2(0.0);\n                  }\n                  xTexelC${t}Ready = 1;\n                }\n              `,d+=1===l&&t>0?`\n                xC${t} = vec4(xTexelC${t-2}.zw, xTexelC${t}.xy);\n                `:`\n                  xCOffset = xC + 1 - 2;\n\n                  if (xCOffset >= 0 && xCOffset < inDims[1]) {\n                    previous = getX(batch, xR, xCOffset, d1);\n\n                    // Need to manually clear unused channels in case\n                    // we're reading from recycled texture.\n                    if (xCOffset + 1 >= inDims[1]) {\n                      previous.zw = vec2(0.0);\n                    }\n\n                    xC${t} = vec4(previous.zw, xTexelC${t}.xy);\n                  } else {\n                    xC${t} = vec4(0.0, 0.0, xTexelC${t}.xy);\n                  }\n                  `):d+=`\n                if (xC >= 0 && xC < inDims[1] && xTexelC${t}Ready == 0) {\n                  xTexelC${t} = getX(batch, xR, xC, d1);\n                  if (xC + 1 >= inDims[1]) {\n                    xTexelC${t}.zw = vec2(0.0);\n                  }\n                  xTexelC${t}Ready = 1;\n                }\n\n                xC${t} = xTexelC${t};\n                `,t+1<c)){const e=i%2==0?re(l):l;l%2==0&&i%2==1||l%2!=0&&i%2!=1?(d+=`\n                  xCOffset = xC + imod(pads[1], 2) + ${e};\n\n                  if (xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${t+1}Ready == 0) {\n                    xTexelC${t+1} = getX(batch, xR, xCOffset, d1);\n\n                    // Need to manually clear unused channels in case\n                    // we're reading from recycled texture.\n                    if (xCOffset + 1 >= inDims[1]) {\n                      xTexelC${t+1}.zw = vec2(0.0);\n                    }\n                    xTexelC${t+1}Ready = 1;\n                  }\n                  `,d+=l>1?`\n                    xCOffset -= 2;\n                    if (xCOffset >= 0 && xCOffset < inDims[1]) {\n                     previous = getX(batch, xR, xCOffset, d1);\n                     xC${t+1} = vec4(previous.zw, xTexelC${t+1}.xy);\n                    } else {\n                     xC${t+1} = vec4(0.0, 0.0, xTexelC${t+1}.xy);\n                    }\n                    `:`\n                    xC${t+1} = vec4(xTexelC${t}.zw, xTexelC${t+1}.xy);\n                    `):d+=1===e?`\n                    xC${t+1} = xTexelC${t};\n                    `:`\n                    xCOffset = xC + ${e};\n\n                    if (xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${t+1}Ready == 0) {\n                      xTexelC${t+1} = getX(batch, xR, xCOffset, d1);\n                      if (xCOffset + 1 >= inDims[1]) {\n                        xTexelC${t+1}.zw = vec2(0.0);\n                      }\n                      xTexelC${t+1}Ready = 1;\n                    }\n\n                    xC${t+1} = xTexelC${t+1};\n                    `}}else t<c&&(i%2==1?(d+=`\n                xCOffset = xC + 1 - strides[1];\n                if(xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${t}Ready == 0) {\n                  xTexelC${t} = getX(batch, xR, xCOffset, d1);\n                  // Need to manually clear unused channels in case\n                  // we're reading from recycled texture.\n                  if (xCOffset + 1 >= inDims[1]) {\n                    xTexelC${t}.zw = vec2(0.0);\n                  }\n                  xTexelC${t}Ready = 1;\n                }\n\n                if(xC + 1 >= 0 && xC + 1 < inDims[1] && xTexelC${t+1}Ready == 0) {\n                  xTexelC${t+1} = getX(batch, xR, xC + 1, d1);\n                  // Need to manually clear unused channels in case\n                  // we're reading from recycled texture.\n                  if (xC + 2 >= inDims[1]) {\n                    xTexelC${t+1}.zw = vec2(0.0);\n                  }\n                  xTexelC${t+1}Ready = 1;\n                }\n\n                xC${t} = vec4(xTexelC${t}.zw, xTexelC${t+1}.zw);\n              `,t+1<c&&(d+=`\n                  final = vec4(0.0);\n                  xCOffset = xC + 1 + strides[1];\n                  if(xCOffset >= 0 && xCOffset < inDims[1]) {\n                    final = getX(batch, xR, xCOffset, d1);\n                  }\n                  xC${t+1} = vec4(xTexelC${t+1}.xy, final.xy);\n                `)):(d+=`\n                if(xC >= 0 && xC < inDims[1] && xTexelC${t}Ready == 0) {\n                  xTexelC${t} = getX(batch, xR, xC, d1);\n                  if (xC + 1 >= inDims[1]) {\n                    xTexelC${t}.zw = vec2(0.0);\n                  }\n                  xTexelC${t}Ready = 1;\n                }\n\n                xCOffset = xC + strides[1];\n                if(xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${t+1}Ready == 0) {\n                  xTexelC${t+1} = getX(batch, xR, xCOffset, d1);\n                  if (xCOffset + 1 >= inDims[1]) {\n                    xTexelC${t+1}.zw = vec2(0.);\n                  }\n                  xTexelC${t+1}Ready = 1;\n                }\n\n                xC${t} = vec4(\n                  xTexelC${t}.xy, xTexelC${t+1}.xy);\n              `,t+1<c&&(d+=`\n                  xC${t+1} = vec4(xTexelC${t}.zw, xTexelC${t+1}.zw);\n                `)));t<c&&(d+=`\n            wTexel = getW(r, ${t}, d1, q);\n            dotProd += xC${t} * vec4(wTexel.xz, wTexel.xz);\n          `,t+1<c&&(d+=`\n              wTexel = getW(r, ${t+1}, d1, q);\n              dotProd += xC${t+1} * vec4(wTexel.xz, wTexel.xz);\n            `))}d+="\n    }\n  ",d+="\n      }\n    ";let p="",f="";n&&(p=s?`vec4 activation(vec4 a) {\n          vec4 b = getPreluActivationWeightsAtOutCoords();\n          ${n}\n        }`:r?`vec4 activation(vec4 a) {\n          vec4 b = getLeakyreluAlphaAtOutCoords();\n          ${n}\n        }`:`vec4 activation(vec4 x) {\n          ${n}\n        }`,f="result = activation(result);");const m=t?"result += getBiasAtOutCoords();":"";t&&this.variableNames.push("bias"),s&&this.variableNames.push("preluActivationWeights"),r&&this.variableNames.push("leakyreluAlpha"),this.userCode=`\n      ${p}\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int batch = coords.x;\n        ivec2 xRCCorner = coords.yz * strides - pads;\n        int d2 = coords.w;\n        int d1 = d2 / ${a};\n        int q = d2 - d1 * ${a};\n        int xRCorner = xRCCorner.x;\n        int xCCorner = xRCCorner.y;\n\n        //intialize dotProd with a small epsilon seems to reduce GPU accuracy loss.\n        vec4 dotProd = vec4(0.000000000000001);\n\n        ${d}\n\n        vec4 result = dotProd - vec4(0.000000000000001);\n        ${m}\n        ${f}\n        setOutput(result);\n      }\n    `}}const hO={kernelName:Ft,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{x:r,filter:a}=t,{strides:i,pad:o,dilations:l,dimRoundingMode:u}=s;let c=l;null==c&&(c=[1,1]),ie(Al(i,c),(()=>`Error in depthwiseConv2d: Either strides or dilations must be 1. Got strides ${i} and dilations '${c}'`));const h=kl(r.shape,a.shape,i,c,o,u,!0);let d;d=Pe().getBool("WEBGL_PACK_DEPTHWISECONV")&&h.strideWidth<=2&&h.outChannels/h.inChannels===1?new cO(h):new uO(h);const p=[[h.padInfo.top,h.padInfo.left],[h.strideHeight,h.strideWidth],[h.dilationHeight,h.dilationWidth],[h.inHeight,h.inWidth]];return n.runWebGLProgram(d,[r,a],"float32",p)}};class dO{constructor(e){this.variableNames=["x","dy"],this.outputShape=e.filterShape;const t=e.strideHeight,n=e.strideWidth,s=e.padInfo.top,r=e.padInfo.left,a=e.outChannels/e.inChannels;this.userCode=`\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int wR = coords.x;\n        int wC = coords.y;\n        int d1 = coords.z;\n        int dm = coords.w;\n        int d2 = d1 * ${a} + dm;\n\n        float dotProd = 0.0;\n\n        // TO DO: Vec4 over the batch size\n        for (int b = 0; b < ${e.batchSize}; b++) {\n          for (int yR = 0; yR < ${e.outHeight}; yR++) {\n            int xR = wR + yR * ${t} - ${s};\n\n            if (xR < 0 || xR >= ${e.inHeight}) {\n              continue;\n            }\n\n            for (int yC = 0; yC < ${e.outWidth}; yC++) {\n              int xC = wC + yC * ${n} - ${r};\n\n              if (xC < 0 || xC >= ${e.inWidth}) {\n                continue;\n              }\n\n              float dyValue = getDy(b, yR, yC, d2);\n              float xValue = getX(b, xR, xC, d1);\n              dotProd += (xValue * dyValue);\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}class pO{constructor(e){this.variableNames=["dy","W"],this.outputShape=e.inShape;const t=e.filterHeight,n=e.filterWidth,s=e.strideHeight,r=e.strideWidth,a=t-1-e.padInfo.top,i=n-1-e.padInfo.left,o=e.outChannels/e.inChannels;this.userCode=`\n      const ivec2 pads = ivec2(${a}, ${i});\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int batch = coords[0];\n        int d1 = coords[3];\n        ivec2 dyCorner = coords.yz - pads;\n        int dyRCorner = dyCorner.x;\n        int dyCCorner = dyCorner.y;\n\n        float dotProd = 0.0;\n\n        for (int wR = 0; wR < ${t}; wR++) {\n          float dyR = float(dyRCorner + wR) / ${s}.0;\n\n          if (dyR < 0.0 || dyR >= ${e.outHeight}.0 || fract(dyR) > 0.0) {\n            continue;\n          }\n          int idyR = int(dyR);\n\n          int wRPerm = ${t} - 1 - wR;\n\n          for (int wC = 0; wC < ${n}; wC++) {\n            float dyC = float(dyCCorner + wC) / ${r}.0;\n\n            if (dyC < 0.0 || dyC >= ${e.outWidth}.0 ||\n                fract(dyC) > 0.0) {\n              continue;\n            }\n            int idyC = int(dyC);\n\n            int wCPerm = ${n} - 1 - wC;\n\n            // TO DO: Vec4 over the channelMul\n            for (int dm = 0; dm < ${o}; dm++) {\n              int d2 = d1 * ${o} + dm;\n              float xValue = getDy(batch, idyR, idyC, d2);\n              float wValue = getW(wRPerm, wCPerm, d1, dm);\n              dotProd += xValue * wValue;\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}const fO={kernelName:Dt,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{x:r,dy:a}=t,{strides:i,dilations:o,pad:l,dimRoundingMode:u,filterShape:c}=s,h=kl(r.shape,c,i,o,l,u,!0),d=new dO(h);return n.runWebGLProgram(d,[r,a],"float32")}},mO={kernelName:Ot,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{dy:r,filter:a}=t,{strides:i,dilations:o,pad:l,dimRoundingMode:u,inputShape:c}=s,h=kl(c,a.shape,i,o,l,u,!0),d=new pO(h);return n.runWebGLProgram(d,[r,a],"float32")}};class gO{constructor(e){this.variableNames=["X"],this.outputShape=[e,e],this.userCode="\n      void main() {\n          ivec2 coords = getOutputCoords();\n          float val = coords[0] == coords[1] ? getX(coords[0]) : 0.0;\n          setOutput(val);\n      }\n    "}}const yO={kernelName:Mt,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n}=e,{x:s}=t,r=[...s.shape,...s.shape],a=ue(s.shape),i=X_({inputs:{x:s},backend:n,attrs:{shape:[a]}}),o=new gO(a),l=n.runWebGLProgram(o,[i],i.dtype),u=X_({inputs:{x:l},backend:n,attrs:{shape:r}});return n.disposeIntermediateTensorInfo(i),n.disposeIntermediateTensorInfo(l),u}};class bO{constructor(e){this.variableNames=["x","W"],this.outputShape=e.outShape;const{inHeight:t,inWidth:n,padInfo:s,strideHeight:r,strideWidth:a,filterHeight:i,filterWidth:o,dilationHeight:l,dilationWidth:u}=e,{top:c,left:h}=s;this.userCode=`\n      const ivec2 strides = ivec2(${r}, ${a});\n      const ivec2 pads = ivec2(${c}, ${h});\n      const float neg_infinity = -3.4e38;\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int batch = coords.x;\n        int d1 = coords.w;\n        ivec2 outTopLeftCorner =\n            coords.yz * strides - pads;\n        int hBeg = outTopLeftCorner.x;\n        int wBeg = outTopLeftCorner.y;\n\n        float curVal = neg_infinity;\n        for (int h = 0; h < ${i}; h++) {\n          int hIn = hBeg + h * ${l};\n\n          if (hIn >= 0 && hIn < ${t}) {\n            for (int w = 0; w < ${o}; w++) {\n              int wIn = wBeg + w * ${u};\n\n              if (wIn >= 0 && wIn < ${n}) {\n                float xVal = getX(batch, hIn, wIn, d1);\n                float wVal = getW(h, w, d1);\n\n                float val = xVal + wVal;\n                if (val > curVal) {\n                  curVal = val;\n                }\n              }\n            }\n          }\n        }\n\n        float result = curVal;\n        setOutput(result);\n      }\n    `}}const xO={kernelName:Lt,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{x:r,filter:a}=t,{strides:i,pad:o,dilations:l}=s,u=xl(r.shape,a.shape,i,o,"NHWC",l);let c;const h=new bO(u);c=n.runWebGLProgram(h,[r,a],"float32");const d=X_({inputs:{x:c},backend:n,attrs:{shape:u.outShape}});return n.disposeIntermediateTensorInfo(c),d}},wO={kernelName:Wt,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{equation:r}=s,a=t,{allDims:i,summedDims:o,idDims:l}=of(r,a.length);uf(i.length,l,a);const{path:u,steps:c}=cf(o,l),h=c.length;let d=null,p=i.length;const f=[];for(let e=0;e<h;++e){for(const t of c[e]){const{permutationIndices:e,expandDims:s}=lf(p,l[t]);let r;hf(e)?r=a[t]:(r=aF({inputs:{x:a[t]},backend:n,attrs:{perm:e}}),f.push(r));const i=r.shape.slice();for(let e=0;e<s.length;++e)i.splice(s[e],0,1);ce(r.shape,i)||(r=X_({inputs:{x:r},backend:n,attrs:{shape:i}}),f.push(r)),null===d?d=r:(d=q_({inputs:{a:r,b:d},backend:n}),f.push(d))}e<h-1&&(u[e]>=0&&(d=sF({inputs:{x:d},backend:n,attrs:{axis:u[e]-(i.length-p),keepDims:!1}}),f.push(d)),p--)}for(const e of f)e!==d&&n.disposeIntermediateTensorInfo(e);return d}},vO=W_({opSnippet:"return (x >= 0.0) ? x : (exp(x) - 1.0);",packedOpSnippet:"\n  vec4 result;\n\n  result.r = (x.r >= 0.0) ? x.r : (exp(x.r) - 1.0);\n  result.g = (x.g >= 0.0) ? x.g : (exp(x.g) - 1.0);\n  result.b = (x.b >= 0.0) ? x.b : (exp(x.b) - 1.0);\n  result.a = (x.a >= 0.0) ? x.a : (exp(x.a) - 1.0);\n\n  return result;\n"}),kO={kernelName:Vt,backendName:"webgl",kernelFunc:vO},IO={kernelName:Ut,backendName:"webgl",kernelFunc:e=>{const{inputs:t,backend:n}=e,{dy:s,y:r}=t,a=Pe().getBool("WEBGL_PACK_BINARY_OPERATIONS")?new E_("\n  vec4 bGTEZero = vec4(greaterThanEqual(b, vec4(0.)));\n  return (bGTEZero * a) + ((vec4(1.0) - bGTEZero) * (a * (b + vec4(1.0))));\n",s.shape,r.shape):new C_("return (b >= 0.0) ? a : a * (b + 1.0);",s.shape,r.shape);return n.runWebGLProgram(a,[s,r],s.dtype)}},NO=V_({opSnippet:"return float(a == b);",packedOpSnippet:"\n  return vec4(equal(a, b));\n",dtype:"bool",cpuKernelImpl:bR}),SO={kernelName:jt,backendName:"webgl",kernelFunc:NO},TO=W_({opSnippet:`\n  // Error function is calculated approximately with elementary function.\n  // See "Handbook of Mathematical Functions with Formulas,\n  // Graphs, and Mathematical Tables", Abramowitz and Stegun.\n  float p = ${Vp};\n  float a1 = ${Up};\n  float a2 = ${Gp};\n  float a3 = ${jp};\n  float a4 = ${Hp};\n  float a5 = ${qp};\n\n  float sign = sign(x);\n  x = abs(x);\n  float t = 1.0 / (1.0 + p * x);\n  return sign * (1.0 - (((((a5*t + a4)*t) + a3)*t + a2)*t + a1)*t*exp(-x*x));\n`}),CO={kernelName:Gt,backendName:"webgl",kernelFunc:TO},$O=W_({opSnippet:P_+"\n  return exp(x);\n",packedOpSnippet:"\n  vec4 result = exp(x);\n  bvec4 isNaN = isnan(x);\n  result.r = isNaN.r ? x.r : result.r;\n  result.g = isNaN.g ? x.g : result.g;\n  result.b = isNaN.b ? x.b : result.b;\n  result.a = isNaN.a ? x.a : result.a;\n\n  return result;\n",cpuKernelImpl:xR,dtype:"float32"}),EO={kernelName:Ht,backendName:"webgl",kernelFunc:$O};function AO(e){const{inputs:t,attrs:n,backend:s}=e,{dim:r}=n,{input:a}=t,i=a.shape.length,o=a.shape.slice();let l=r;return r<0&&(ie(-(i+1)<=r,(()=>`Axis must be in the interval [${-(i+1)}, ${i}]`)),l=i+r+1),o.splice(l,0,1),X_({inputs:{x:a},backend:s,attrs:{shape:o}})}const RO={kernelName:qt,backendName:"webgl",kernelFunc:AO},_O="return exp(x) - 1.0;",FO=W_({opSnippet:_O,packedOpSnippet:_O,cpuKernelImpl:wR}),DO={kernelName:Kt,backendName:"webgl",kernelFunc:FO};class OO{constructor(e,t,n){this.variableNames=["real","imag"];const s=t[1];this.outputShape=t;const r=n?`2.0 * ${Math.PI}`:`-2.0 * ${Math.PI}`,a=n?`${s}.0`:"1.0";let i;if("real"===e)i="return real * expR - imag * expI;";else{if("imag"!==e)throw new Error(`FFT component must be either "real" or "imag", got ${e}.`);i="return real * expI + imag * expR;"}this.userCode=`\n      const float exponentMultiplier = ${r};\n\n      float unaryOpComplex(float real, float expR, float imag, float expI) {\n        ${i}\n      }\n\n      float mulMatDFT(int batch, int index) {\n        float indexRatio = float(index) / float(${s});\n        float exponentMultiplierTimesIndexRatio =\n            exponentMultiplier * indexRatio;\n\n        float result = 0.0;\n\n        for (int i = 0; i < ${s}; i++) {\n          // x = (-2|2 * PI / N) * index * i;\n          float x = exponentMultiplierTimesIndexRatio * float(i);\n          float expR = cos(x);\n          float expI = sin(x);\n          float real = getReal(batch, i);\n          float imag = getImag(batch, i);\n\n          result +=\n              unaryOpComplex(real, expR, imag, expI) / ${a};\n        }\n\n        return result;\n      }\n\n      void main() {\n        ivec2 coords = getOutputCoords();\n        setOutput(mulMatDFT(coords[0], coords[1]));\n      }\n    `}}function MO(e,t,n){const s=n.texData.get(e.dataId),r=ue(e.shape),a=e.shape[e.shape.length-1],i=X_({inputs:{x:e},backend:n,attrs:{shape:[r/a,a]}}),o=i.shape,l=new OO("real",o,t),u=new OO("imag",o,t),c=[{dataId:s.complexTensorInfos.real.dataId,dtype:s.complexTensorInfos.real.dtype,shape:o},{dataId:s.complexTensorInfos.imag.dataId,dtype:s.complexTensorInfos.imag.dtype,shape:o}],h=n.runWebGLProgram(l,c,"float32"),d=n.runWebGLProgram(u,c,"float32"),p=__({inputs:{real:h,imag:d},backend:n});n.disposeIntermediateTensorInfo(h),n.disposeIntermediateTensorInfo(d);const f=X_({inputs:{x:p},backend:n,attrs:{shape:e.shape}});return n.disposeIntermediateTensorInfo(i),n.disposeIntermediateTensorInfo(p),f}const LO={kernelName:Xt,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n}=e,{input:s}=t;return MO(s,!1,n)}};class zO{constructor(e,t){this.outputShape=[],this.customUniforms=[{name:"value",type:"float"}],this.variableNames=["x"],this.outputShape=e,this.userCode="\n      void main() {\n        // Input can be obtained from uniform value.\n        setOutput(value);\n      }\n    "}}function BO(e){const{backend:t,attrs:n}=e,{shape:s,value:r}=n;let{dtype:a}=n;if(a=a||Ne(r),"string"===a){const e=xe(a,ue(s));return e.fill(r),t.makeTensorInfo(s,a,e)}{const e=new zO(s,r),n=[[r]];return t.runWebGLProgram(e,[],a,n)}}const PO={kernelName:Yt,backendName:"webgl",kernelFunc:BO};class WO{constructor(e){this.variableNames=["Image"],this.outputShape=[];const t=e[2];this.outputShape=e,this.userCode=`\n        void main() {\n          ivec4 coords = getOutputCoords();\n          int x = coords[2];\n\n          int coordX = ${t} - x - 1;\n          float outputValue;\n          if(coordX >= 0 && coordX < ${t}) {\n            outputValue = getImage(coords[0], coords[1], coordX, coords[3]);\n          } else {\n            outputValue = getImage(coords[0], coords[1], coords[2], coords[3]);\n          }\n          setOutput(outputValue);\n        }\n    `}}const VO={kernelName:Jt,backendName:"webgl",kernelFunc:({inputs:e,backend:t})=>{const{image:n}=e,s=t,r=new WO(n.shape);return s.runWebGLProgram(r,[n],n.dtype)}},UO="return floor(x);",GO=W_({opSnippet:UO,packedOpSnippet:UO,cpuKernelImpl:vR}),jO={kernelName:Zt,backendName:"webgl",kernelFunc:GO},HO=V_({opSnippet:"\n  float s = sign(a) * sign(b);\n  int ia = round(a);\n  int ib = round(b);\n  if (ib != 0) {\n    // Windows (D3D) wants guaranteed non-zero int division at compile-time.\n    return float(idiv(ia, ib, s));\n  } else {\n    return NAN;\n  }\n",packedOpSnippet:"\n  ivec4 ia = round(a);\n  ivec4 ib = round(b);\n  bvec4 cond = notEqual(ib, ivec4(0));\n  ivec4 result = ivec4(0);\n  vec4 s = sign(a) * sign(b);\n\n  // Windows (D3D) wants guaranteed non-zero int division at compile-time.\n  if (cond[0]) {\n    result[0] = idiv(ia[0], ib[0], s[0]);\n  }\n  if (cond[1]) {\n    result[1] = idiv(ia[1], ib[1], s[1]);\n  }\n  if (cond[2]) {\n    result[2] = idiv(ia[2], ib[2], s[2]);\n  }\n  if (cond[3]) {\n    result[3] = idiv(ia[3], ib[3], s[3]);\n  }\n  return vec4(result);\n",dtype:"int32"}),qO={kernelName:Qt,backendName:"webgl",kernelFunc:HO};class KO{constructor(e){this.variableNames=["A"];const t=EA(),[n,s]=e;this.outputShape=e,this.userCode=`\n      void main() {\n        ivec3 coords = getOutputCoords();\n        int texR = coords[0];\n        int texC = coords[1];\n        int depth = coords[2];\n        vec2 uv = (vec2(texC, texR) + halfCR) / vec2(${s}.0, ${n}.0);\n\n        vec4 values = ${t.texture2D}(A, uv);\n        float value;\n        if (depth == 0) {\n          value = values.r;\n        } else if (depth == 1) {\n          value = values.g;\n        } else if (depth == 2) {\n          value = values.b;\n        } else if (depth == 3) {\n          value = values.a;\n        }\n\n        setOutput(floor(value * 255.0 + 0.5));\n      }\n    `}}class XO{constructor(e){this.variableNames=["A"],this.packedInputs=!1,this.packedOutput=!0;const t=EA(),[n,s]=e;this.outputShape=e,this.userCode=`\n      void main() {\n        ivec3 coords = getOutputCoords();\n        int texR = coords[0];\n        int texC = coords[1];\n        int depth = coords[2];\n\n        vec4 result = vec4(0.);\n\n        for(int row=0; row<=1; row++) {\n          for(int col=0; col<=1; col++) {\n            texC = coords[1] + row;\n            depth = coords[2] + col;\n\n            vec2 uv = (vec2(texC, texR) + halfCR) /\n                       vec2(${s}.0, ${n}.0);\n            vec4 values = ${t.texture2D}(A, uv);\n            float value;\n            if (depth == 0) {\n              value = values.r;\n            } else if (depth == 1) {\n              value = values.g;\n            } else if (depth == 2) {\n              value = values.b;\n            } else if (depth == 3) {\n              value = values.a;\n            }\n\n            result[row * 2 + col] = floor(value * 255.0 + 0.5);\n          }\n        }\n\n        ${t.output} = result;\n      }\n    `}}const YO={kernelName:Js,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e;let{pixels:r}=t;const{numChannels:a}=s,i="undefined"!=typeof HTMLVideoElement&&r instanceof HTMLVideoElement,o="undefined"!=typeof HTMLImageElement&&r instanceof HTMLImageElement,[l,u]=i?[r.videoWidth,r.videoHeight]:[r.width,r.height],c=[u,l],h=[u,l,a];if(o||i){const e=Pe().getBool("CANVAS2D_WILL_READ_FREQUENTLY_FOR_GPU");null!=JO&&e===ZO||(ZO=e,JO=document.createElement("canvas").getContext("2d",{willReadFrequently:ZO})),JO.canvas.width=l,JO.canvas.height=u,JO.drawImage(r,0,0,l,u),r=JO.canvas}const d=n.makeTensorInfo(c,"int32");n.texData.get(d.dataId).usage=QE.PIXELS,n.gpgpu.uploadPixelDataToTexture(n.getTexture(d.dataId),r);const p=Pe().getBool("WEBGL_PACK")?new XO(h):new KO(h),f=n.runWebGLProgram(p,[d],"int32");return n.disposeData(d.dataId),f}};let JO,ZO=Pe().getBool("CANVAS2D_WILL_READ_FREQUENTLY_FOR_GPU");const QO={kernelName:er,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{x:r,filter:a,bias:i,preluActivationWeights:o}=t,{strides:l,pad:u,dataFormat:c,dilations:h,dimRoundingMode:d,activation:p,leakyreluAlpha:f}=s,m=_l(c),g=kl(r.shape,a.shape,l,h,u,d,!1,m);let y;const b=[],x=null!=i,w=null!=o,v="leakyrelu"===p,k=()=>{const e=[r,a],t=(e,t)=>{if("NCHW"===t&&1===e.shape.length&&1!==e.shape[0]){const t=X_({inputs:{x:e},backend:n,attrs:{shape:[e.shape[0],1,1]}});return b.push(t),t}return e};if(x&&e.push(t(i,c)),w&&e.push(t(o,c)),v){const t=n.makeTensorInfo([],"float32",Cr(f,"float32"));e.push(t),b.push(t)}return e};if(1!==g.filterHeight||1!==g.filterWidth||1!==g.dilationHeight||1!==g.dilationWidth||1!==g.strideHeight||1!==g.strideWidth||"SAME"!==g.padInfo.type&&"VALID"!==g.padInfo.type)if(g.strideWidth<=2&&"channelsLast"===m&&Pe().getBool("WEBGL_EXP_CONV")){const e=p?U_(p,!0):null,t=new RD(g,x,e,w,v),s=[[g.padInfo.top,g.padInfo.left],[g.strideHeight,g.strideWidth],[g.dilationHeight,g.dilationWidth],[g.inHeight,g.inWidth]],r=k();y=n.runWebGLProgram(t,r,"float32",s)}else if(Pe().getBool("WEBGL_CONV_IM2COL"))y=OD({x:r,filter:a,convInfo:g,backend:n,bias:i,activation:p,preluActivationWeights:o,leakyreluAlpha:f});else{const e=p?U_(p,!1):null,t=new ED(g,x,e,w,v),s=k();y=n.runWebGLProgram(t,s,"float32")}else y=DD({x:r,filter:a,convInfo:g,backend:n,bias:i,activation:p,preluActivationWeights:o,leakyreluAlpha:f});const I=X_({inputs:{x:y},backend:n,attrs:{shape:g.outShape}});return b.push(y),b.forEach((e=>n.disposeIntermediateTensorInfo(e))),I}},eM={kernelName:tr,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{x:r,filter:a,bias:i,preluActivationWeights:o}=t,{strides:l,pad:u,dilations:c,dimRoundingMode:h,activation:d,leakyreluAlpha:p}=s,f=[];let m=c;null==m&&(m=[1,1]),ie(Al(l,m),(()=>`Error in depthwiseConv2d: Either strides or dilations must be 1. Got strides ${l} and dilations '${m}'`));const g=kl(r.shape,a.shape,l,m,u,h,!0),y=Pe().getBool("WEBGL_PACK_DEPTHWISECONV")&&g.strideWidth<=2&&g.outChannels/g.inChannels===1,b=d?U_(d,y):null,x=[r,a],w=null!=i,v=null!=o,k="leakyrelu"===d;if(w&&x.push(i),v&&x.push(o),k){const e=n.makeTensorInfo([],"float32",Cr(p,"float32"));x.push(e),f.push(e)}let I;I=y?new cO(g,w,b,v,k):new uO(g,w,b,v,k);const N=[[g.padInfo.top,g.padInfo.left],[g.strideHeight,g.strideWidth],[g.dilationHeight,g.dilationWidth],[g.inHeight,g.inWidth]],S=n.runWebGLProgram(I,x,"float32",N);return f.forEach((e=>n.disposeIntermediateTensorInfo(e))),S}};class tM{constructor(e,t,n,s){this.sliceDim=e,this.strides=t,this.paramsShape=s,this.variableNames=["x","indices"],this.outputShape=n;const r=GA(n.length);let a="\n    int index;";for(let e=0;e<this.sliceDim;e++)a+=`\n          index = round(getIndices(coords[0], ${e}));\n          out_of_bounds = out_of_bounds || index < 0;\n          out_of_bounds = out_of_bounds || index >= ${this.paramsShape[e]};\n          flattenIndex += index * ${this.strides[e]};`;this.userCode=`\n         void main() {\n          ${r} coords = getOutputCoords();\n          int flattenIndex = 0;\n          bool out_of_bounds = false;\n\n          ${a}\n\n          setOutput(out_of_bounds ? 0.0 : getX(flattenIndex, coords[1]));\n        }\n      `}}const nM={kernelName:nn,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n}=e,{params:s,indices:r}=t,a=r.shape,i=a[a.length-1],o=ue(s.shape),[l,u,c,h]=Bp(s,r),d=X_({inputs:{x:r},backend:n,attrs:{shape:[u,i]}}),p=X_({inputs:{x:s},backend:n,attrs:{shape:[ue(s.shape)/c,c]}});if(n.shouldExecuteOnCPU([s,r])||"string"===s.dtype){const e=n.readSync(r.dataId),t=n.bufferSync(s),a=kR(e,t,s.dtype,u,i,c,h,s.shape,o);return n.makeTensorInfo(l,s.dtype,a.values)}const f=new tM(i,h,[u,c],s.shape),m=n.runWebGLProgram(f,[p,d],p.dtype),g=X_({inputs:{x:m},backend:n,attrs:{shape:l}});return n.disposeIntermediateTensorInfo(d),n.disposeIntermediateTensorInfo(p),n.disposeIntermediateTensorInfo(m),g}};class sM{constructor(e,t){this.variableNames=["A","indices"],this.outputShape=t,this.rank=t.length;const n=GA(this.rank),s=function(e){const t=["resRC.x","resRC.y","resRC.z","resRC.w"],n=[];for(let s=0;s<e.length;s++)2===s?n.push("index"):n.push(`${t[s]}`);return n.join()}(e);this.userCode=`\n      void main() {\n        ${n} resRC = getOutputCoords();\n        int index = int(getIndices(resRC.x, resRC.z));\n        float inBounds = (index >= 0) && (index < ${e[2]}) ? 1.0 : 0.0;\n        setOutput(inBounds * getA(${s}));\n      }\n    `}}function rM(e){const{inputs:t,backend:n,attrs:s}=e,{x:r,indices:a}=t,{axis:i,batchDims:o}=s,l=ge(i,r.shape)[0];if(Pe().get("DEBUG")){const e=n.readSync(a.dataId),t=r.shape[l];for(let n=0;n<e.length;++n){const s=e[n];ie(s<=t-1&&s>=0,(()=>`GatherV2: the index value ${s} is not in [0, ${t-1}]`))}}const u=$f(r,a,l,o),c=ue(a.shape),h=[],d=X_({inputs:{x:r},backend:n,attrs:{shape:[u.batchSize,u.outerSize,u.dimSize,u.sliceSize]}}),p=X_({inputs:{x:a},backend:n,attrs:{shape:[u.batchSize,c/u.batchSize]}});h.push(d),h.push(p);const f=[u.batchSize,u.outerSize,c/u.batchSize,u.sliceSize];if(n.shouldExecuteOnCPU([r,a])||"string"===r.dtype){const e=n.bufferSync(p),t=n.bufferSync(d),s=IR(t,e,f);return h.forEach((e=>n.disposeIntermediateTensorInfo(e))),n.makeTensorInfo(u.outputShape,s.dtype,s.values)}const m=new sM(d.shape,f),g=n.runWebGLProgram(m,[d,p],d.dtype);h.push(g);const y=X_({inputs:{x:g},backend:n,attrs:{shape:u.outputShape}});return h.forEach((e=>n.disposeIntermediateTensorInfo(e))),y}const aM={kernelName:tn,backendName:"webgl",kernelFunc:rM},iM=V_({opSnippet:"return float(a > b);",packedOpSnippet:"\n  return vec4(greaterThan(a, b));\n",cpuKernelImpl:NR,dtype:"bool"}),oM={kernelName:sn,backendName:"webgl",kernelFunc:iM},lM=V_({opSnippet:"return float(a >= b);",packedOpSnippet:"\n  return vec4(greaterThanEqual(a, b));\n",dtype:"bool",cpuKernelImpl:SR}),uM={kernelName:rn,backendName:"webgl",kernelFunc:lM},cM={kernelName:on,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n}=e,{input:s}=t;return MO(s,!0,n)}},hM=W_({opSnippet:"return float(!isnan(x) && !isinf(x));",dtype:"bool"}),dM={kernelName:un,backendName:"webgl",kernelFunc:hM},pM=W_({opSnippet:"return float(isinf(x));",dtype:"bool"}),fM={kernelName:cn,backendName:"webgl",kernelFunc:pM},mM=W_({opSnippet:"return float(isnan(x));",dtype:"bool"}),gM={kernelName:hn,backendName:"webgl",kernelFunc:mM},yM=V_({opSnippet:"return float(a < b);",packedOpSnippet:"\n  return vec4(lessThan(a, b));\n",cpuKernelImpl:TR,dtype:"bool"}),bM={kernelName:pn,backendName:"webgl",kernelFunc:yM},xM=V_({opSnippet:"return float(a <= b);",packedOpSnippet:"\n  return vec4(lessThanEqual(a, b));\n",cpuKernelImpl:CR,dtype:"bool"}),wM={kernelName:fn,backendName:"webgl",kernelFunc:xM},vM={kernelName:mn,backendName:"webgl",kernelFunc:function(e){const{backend:t,attrs:n}=e,{start:s,stop:r,num:a}=n,i=$R(s,r,a);return t.makeTensorInfo([i.length],"float32",i)}},kM=W_({opSnippet:P_+"\n  return x < 0.0 ? 0./0. : log(x);\n",packedOpSnippet:"\n  vec4 result = log(x);\n  bvec4 isNaN = isnan(x);\n  result.r = isNaN.r ? x.r : (x.r < 0.0 ? 0./0. : result.r);\n  result.g = isNaN.g ? x.g : (x.g < 0.0 ? 0./0. : result.g);\n  result.b = isNaN.b ? x.b : (x.b < 0.0 ? 0./0. : result.b);\n  result.a = isNaN.a ? x.a : (x.a < 0.0 ? 0./0. : result.a);\n  return result;\n",cpuKernelImpl:ER}),IM={kernelName:gn,backendName:"webgl",kernelFunc:kM},NM=W_({opSnippet:P_+"\n  return log(1.0 + x);\n"}),SM={kernelName:yn,backendName:"webgl",kernelFunc:NM},TM=V_({opSnippet:"return float(a >= 1.0 && b >= 1.0);",packedOpSnippet:"\n  return vec4(\n    vec4(greaterThanEqual(a, vec4(1.0))) *\n    vec4(greaterThanEqual(b, vec4(1.0))));\n",dtype:"bool"}),CM={kernelName:bn,backendName:"webgl",kernelFunc:TM},$M=W_({opSnippet:"return float(!(x >= 1.0));"}),EM={kernelName:xn,backendName:"webgl",kernelFunc:$M},AM=V_({opSnippet:"return float(a >= 1.0 || b >= 1.0);",packedOpSnippet:"\n  return min(\n    vec4(greaterThanEqual(a, vec4(1.0))) +\n    vec4(greaterThanEqual(b, vec4(1.0))),\n    vec4(1.0));\n",dtype:"bool"}),RM={kernelName:wn,backendName:"webgl",kernelFunc:AM};class _M{constructor(e,t,n,s,r){this.variableNames=["x"],this.outputShape=[];const a=t,i=e[3]-1;let o;this.outputShape=e;const l=`float(${n}) + float(${s}) * sum`;o=.5===r?`inversesqrt(${l})`:1===r?`1.0/(${l})`:`exp(log(${l}) * float(-${r}));`,this.userCode=`\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int r = coords[1];\n        int c = coords[2];\n        int d = coords[3];\n        float x = getX(b, r, c, d);\n        float sum = 0.0;\n        for (int j = -${a}; j <= ${a}; j++) {\n          int idx = d + j;\n          if (idx >= 0 && idx <=  ${i}) {\n            float z = getX(b, r, c, idx);\n            sum += z * z;\n          }\n        }\n        float val = x * ${o};\n        setOutput(val);\n      }\n    `}}class FM{constructor(e,t,n,s,r){this.variableNames=["x"],this.outputShape=[],this.packedInputs=!0,this.packedOutput=!0;const a=t,i=e[3]-1;let o;this.outputShape=e;const l=`float(${n}) + float(${s}) * sum`;o=.5===r?`inversesqrt(${l})`:1===r?`1.0/(${l})`:`exp(log(${l}) * float(-${r}));`,this.userCode=`\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords.x;\n        int r = coords.y;\n        int c = coords.z;\n        int d = coords.w;\n\n        bool hasNextCol = d < ${this.outputShape[3]};\n        bool hasNextRow = c < ${this.outputShape[2]};\n\n        vec4 sum = vec4(0.);\n        vec4 xFragAtOutputCoords = getX(b, r, c, d);\n\n        vec4 xAtOutputCoords = vec4(\n          getChannel(xFragAtOutputCoords, vec2(c, d)),\n          hasNextCol ?\n            getChannel(xFragAtOutputCoords, vec2(c, d + 1)) : 0.0,\n          hasNextRow ?\n            getChannel(xFragAtOutputCoords , vec2(c + 1, d)) : 0.0,\n          (hasNextRow && hasNextCol) ?\n            getChannel(xFragAtOutputCoords, vec2(c + 1, d + 1)) : 0.0\n        );\n\n        int firstChannel = d - ${a};\n        vec2 cache = vec2(0.);\n        if(firstChannel >= 0){\n          vec4 firstChannelFrag = getX(b, r, c, firstChannel);\n          cache.x = getChannel(firstChannelFrag, vec2(c, firstChannel));\n            if(hasNextRow){\n              cache.y = getChannel(firstChannelFrag, vec2(c + 1, firstChannel));\n            }\n        }\n\n        ivec2 depth = ivec2(d, d + 1);\n        for (int j = - ${a}; j <= ${a}; j++) {\n          ivec2 idx = depth + j;\n          bvec2 aboveLowerBound = greaterThanEqual(idx, ivec2(0));\n          bvec2 belowUpperBound = lessThanEqual(idx, ivec2(${i}));\n\n          bool depthInRange = aboveLowerBound.x && belowUpperBound.x;\n          bool depthPlusOneInRange = aboveLowerBound.y && belowUpperBound.y;\n\n          if(depthInRange || depthPlusOneInRange){\n            vec4 z = vec4(0.);\n            vec4 xFragAtCurrentDepth;\n            z.xz = cache.xy;\n            if(depthPlusOneInRange && hasNextCol){\n              xFragAtCurrentDepth = idx.y != d ?\n                getX(b, r, c, idx.y) : xFragAtOutputCoords;\n              z.y = getChannel(xFragAtCurrentDepth, vec2(c, idx.y));\n              if(hasNextRow){\n                z.w = getChannel(xFragAtCurrentDepth, vec2(c + 1, idx.y));\n              }\n            }\n            cache.xy = z.yw;\n            sum += z * z;\n          }\n        }\n        vec4 result = xAtOutputCoords * ${o};\n        setOutput(result);\n      }\n    `}}const DM={kernelName:vn,backendName:"webgl",kernelFunc:e=>{const{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{depthRadius:a,bias:i,alpha:o,beta:l}=s,u=Pe().getBool("WEBGL_PACK_NORMALIZATION")?new FM(r.shape,a,i,o,l):new _M(r.shape,a,i,o,l);return n.runWebGLProgram(u,[r],r.dtype)}};class OM{constructor(e,t,n,s,r){this.variableNames=["inputImage","outputImage","dy"],this.outputShape=[],this.outputShape=e,this.depth=e[3],this.depthRadius=t,this.bias=n,this.alpha=s,this.beta=r,this.userCode=`\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int r = coords[1];\n        int c = coords[2];\n\n        float result = 0.0;\n        for (int d = 0; d < ${this.depth}; ++d) {\n          int depthBegin = int(max(0.0, float(d - ${t})));\n          int depthEnd = int(min(float(${this.depth}),\n              float(d + ${t} + 1)));\n\n          const int MIN_DEPTH_BEGIN = 0;\n          const int MAX_DEPTH_END = ${this.depth};\n\n          float norm = 0.0;\n          for (int k = MIN_DEPTH_BEGIN; k < MAX_DEPTH_END; ++k) {\n            if (k < depthBegin){\n              continue;\n            }\n            else if (k >= depthBegin && k < depthEnd) {\n              norm += getInputImage(b, r, c, k) * getInputImage(b, r, c, k);\n            }\n            else {\n              break;\n            }\n          }\n\n          norm = float(${s}) * norm + float(${n});\n\n          for(int k = MIN_DEPTH_BEGIN; k < MAX_DEPTH_END; ++k){\n            if (k < depthBegin){\n              continue;\n            }\n            else if (k >= depthBegin && k < depthEnd){\n              float dyi = -2.0 * float(${s})\n                * float(${r})\n                * getInputImage(b, r, c, k) * getOutputImage(b, r, c, d)\n                / norm;\n              if (k == d) {\n                dyi += pow(norm, -1.0 * ${r});\n              }\n              if (k == coords[3]) {\n                dyi *= getDy(b, r, c, d);\n                result += dyi;\n              }\n            }\n            else {\n              break;\n            }\n          }\n      }\n      setOutput(result);\n      }\n    `}}const MM={kernelName:kn,backendName:"webgl",kernelFunc:e=>{const{inputs:t,backend:n,attrs:s}=e,{x:r,y:a,dy:i}=t,{depthRadius:o,bias:l,alpha:u,beta:c}=s,h=new OM(r.shape,o,l,u,c);return n.runWebGLProgram(h,[r,a,i],r.dtype)}};function LM(e){const{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{reductionIndices:a,keepDims:i}=s,o=r.shape.length,l=ge(a,r.shape);let u=l;const c=Fu(u,o),h=null!=c,d=n.shouldExecuteOnCPU([r]);let p=r;if(h){if(d){const e=n.texData.get(p.dataId).values,t=new Array(o);for(let e=0;e<t.length;e++)t[e]=r.shape[c[e]];const s=r_(e,r.shape,r.dtype,c,t);p=n.makeTensorInfo(t,r.dtype),n.texData.get(p.dataId).values=s}else p=nF(r,c,n);u=Ou(u.length,o)}_u("max",u,o);const[f,m]=Au(p.shape,u);let g,y=f;if(i&&(y=Ru(f,l)),d){const e=n.texData.get(p.dataId).values,t=AR(e,ue(m),y,r.dtype);g=n.makeTensorInfo(y,r.dtype),n.texData.get(g.dataId).values=t}else g=function(e,t,n,s){const r=ue(t),a=X_({inputs:{x:e},attrs:{shape:[ue(e.shape)/r,r]},backend:s}),i=Q_(a,e.dtype,"max",s),o=X_({inputs:{x:i},attrs:{shape:n},backend:s});return s.disposeIntermediateTensorInfo(a),s.disposeIntermediateTensorInfo(i),o}(p,m,y,n);return h&&n.disposeIntermediateTensorInfo(p),g}const zM={kernelName:In,backendName:"webgl",kernelFunc:LM},BM=V_({opSnippet:T_+"\n  return max(a, b);\n",packedOpSnippet:"\n  vec4 result = vec4(max(a, b));\n  bvec4 isNaNA = isnan(a);\n  bvec4 isNaNB = isnan(b);\n  bvec4 isNaN = bvec4(isNaNA.x || isNaNB.x, isNaNA.y || isNaNB.y, isNaNA.z || isNaNB.z, isNaNA.w || isNaNB.w);\n  "+$_+"\n  return result;\n",cpuKernelImpl:RR}),PM={kernelName:Nn,backendName:"webgl",kernelFunc:BM},WM={kernelName:Sn,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{x:r}=t;CA(r,"maxPool");const{filterSize:a,strides:i,pad:o,dimRoundingMode:l}=s;ie(Al(i,1),(()=>`Error in maxPool: Either strides or dilations must be 1. Got strides ${i} and dilations '1'`));const u=wl(r.shape,a,i,1,o,l);if(1===u.filterWidth&&1===u.filterHeight&&ce(u.inShape,u.outShape))return A_({inputs:{x:r},backend:n});const c=new PF(u,"max",!1);return n.runWebGLProgram(c,[r],r.dtype)}},VM={kernelName:Cn,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{filterSize:a,strides:i,pad:o,dataFormat:l,dimRoundingMode:u}=s,c=vl(r.shape,a,i,[1,1,1],o,u,l),h=new WF(c,"max",!1);return n.runWebGLProgram(h,[r],r.dtype)}};class UM{constructor(e){this.variableNames=["dy","maxPos"],this.outputShape=e.inShape;const t=e.strideHeight,n=e.strideWidth,s=e.dilationHeight,r=e.effectiveFilterHeight,a=e.effectiveFilterWidth,i=r-1-e.padInfo.top,o=a-1-e.padInfo.left,l=r*a-1;this.userCode=`\n      const ivec2 pads = ivec2(${i}, ${o});\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int d = coords[3];\n\n        ivec2 dyRCCorner = coords.yz - pads;\n        int dyRCorner = dyRCCorner.x;\n        int dyCCorner = dyRCCorner.y;\n\n        // Convolve dy(?, ?, d) with pos mask(:, :, d) to get dx(xR, xC, d).\n        // ? = to be determined. : = across all values in that axis.\n        float dotProd = 0.0;\n        for (int wR = 0; wR < ${r};\n          wR += ${s}) {\n          float dyR = float(dyRCorner + wR) / ${t}.0;\n\n          if (dyR < 0.0 || dyR >= ${e.outHeight}.0 || fract(dyR) > 0.0) {\n            continue;\n          }\n          int idyR = int(dyR);\n\n          for (int wC = 0; wC < ${a}; wC++) {\n            float dyC = float(dyCCorner + wC) / ${n}.0;\n\n            if (dyC < 0.0 || dyC >= ${e.outWidth}.0 ||\n                fract(dyC) > 0.0) {\n              continue;\n            }\n            int idyC = int(dyC);\n\n            float dyValue = getDy(b, idyR, idyC, d);\n            int maxPosValue = ${l} - int(getMaxPos(b, idyR, idyC, d));\n\n            // Get the current value, check it against the value from the\n            // position matrix.\n            int curPosValue = wR * ${a} + wC;\n            float mask = float(maxPosValue == curPosValue ? 1.0 : 0.0);\n\n            dotProd += dyValue * mask;\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}class GM{constructor(e){this.variableNames=["dy","maxPos"],this.outputShape=e.inShape;const t=e.strideDepth,n=e.strideHeight,s=e.strideWidth,r=e.dilationDepth,a=e.dilationHeight,i=e.dilationWidth,o=e.effectiveFilterDepth,l=e.effectiveFilterHeight,u=e.effectiveFilterWidth,c=o-1-e.padInfo.front,h=l-1-e.padInfo.top,d=u-1-e.padInfo.left,p=o*l*u-1;this.userCode=`\n      const ivec3 pads = ivec3(${c}, ${h}, ${d});\n\n      void main() {\n        ivec5 coords = getOutputCoords();\n        int batch = coords.x;\n        int ch = coords.u;\n\n        ivec3 dyCorner = ivec3(coords.y, coords.z, coords.w) - pads;\n        int dyDCorner = dyCorner.x;\n        int dyRCorner = dyCorner.y;\n        int dyCCorner = dyCorner.z;\n\n        // Convolve dy(?, ?, ?, ch) with pos mask(:, :, :, d) to get\n        // dx(xD, xR, xC, ch).\n        // ? = to be determined. : = across all values in that axis.\n        float dotProd = 0.0;\n\n        for (int wD = 0; wD < ${o};\n           wD += ${r}) {\n          float dyD = float(dyDCorner + wD) / ${t}.0;\n\n          if (dyD < 0.0 || dyD >= ${e.outDepth}.0 || fract(dyD) > 0.0) {\n            continue;\n          }\n          int idyD = int(dyD);\n\n          for (int wR = 0; wR < ${l};\n              wR += ${a}) {\n            float dyR = float(dyRCorner + wR) / ${n}.0;\n\n            if (dyR < 0.0 || dyR >= ${e.outHeight}.0 ||\n                fract(dyR) > 0.0) {\n              continue;\n            }\n            int idyR = int(dyR);\n\n            for (int wC = 0; wC < ${u};\n                wC += ${i}) {\n              float dyC = float(dyCCorner + wC) / ${s}.0;\n\n              if (dyC < 0.0 || dyC >= ${e.outWidth}.0 ||\n                  fract(dyC) > 0.0) {\n                continue;\n              }\n              int idyC = int(dyC);\n\n              float dyValue = getDy(batch, idyD, idyR, idyC, ch);\n              int maxPosValue = ${p} -\n                  int(getMaxPos(batch, idyD, idyR, idyC, ch));\n\n              // Get the current value, check it against the value from the\n              // position matrix.\n              int curPosValue =\n                  wD * ${l} * ${u} +\n                  wR * ${u} + wC;\n              float mask = float(maxPosValue == curPosValue ? 1.0 : 0.0);\n\n              dotProd += dyValue * mask;\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}const jM={kernelName:$n,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{dy:r,input:a}=t,i=a,{filterSize:o,strides:l,pad:u,dimRoundingMode:c}=s,h=vl(i.shape,o,l,[1,1,1],u,c),d=new WF(h,"max",!0),p=n.runWebGLProgram(d,[i],i.dtype),f=new GM(h),m=n.runWebGLProgram(f,[r,p],i.dtype);return n.disposeIntermediateTensorInfo(p),m}},HM={kernelName:Tn,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{dy:r,input:a,output:i}=t,o=a;CA([a,i],"maxPoolGrad");const{filterSize:l,strides:u,pad:c,dimRoundingMode:h}=s,d=wl(o.shape,l,u,1,c,h),p=new PF(d,"max",!0),f=n.runWebGLProgram(p,[o],o.dtype),m=new UM(d),g=n.runWebGLProgram(m,[r,f],o.dtype);return n.disposeIntermediateTensorInfo(f),g}},qM={kernelName:En,backendName:"webgl",kernelFunc:({inputs:e,attrs:t,backend:n})=>{const{x:s}=e,{filterSize:r,strides:a,pad:i,includeBatchInIndex:o}=t,l=n;ie(4===s.shape.length,(()=>`Error in maxPool: input must be rank 4 but got rank ${s.shape.length}.`));const u=[1,1];ie(Al(a,u),(()=>`Error in maxPool: Either strides or dilations must be 1. Got strides ${a} and dilations '${u}'`));const c=wl(s.shape,r,a,u,i),[h,d]=function(e,t,n,s){let r=new PF(n,"max",!1);const a=s.runWebGLProgram(r,[e],"float32");return r=new PF(n,"max",!0,!0,t),[a,s.runWebGLProgram(r,[e],"float32")]}(s,o,c,l);return[h,d]}},KM={kernelName:An,backendName:"webgl",kernelFunc:({inputs:e,attrs:t,backend:n})=>{const{x:s}=e,{keepDims:r,axis:a}=t,i=n,o=s.shape.length,l=ge(a,s.shape);let u=l;const c=Fu(u,o),h=null!=c,d=i.shouldExecuteOnCPU([s]),p=[];let f=s;if(h){if(d){const e=i.texData.get(f.dataId).values,t=new Array(o);for(let e=0;e<t.length;e++)t[e]=s.shape[c[e]];const n=r_(e,s.shape,s.dtype,c,t);f=i.makeTensorInfo(t,s.dtype),i.texData.get(f.dataId).values=n}else f=nF(s,c,i);p.push(f),u=Ou(u.length,o)}_u("sum",u,o);const[m,g]=Au(f.shape,u);let y=m;r&&(y=Ru(m,l));const b=function(e,t,n,s){const r=ue(t),a=X_({inputs:{x:e},attrs:{shape:[ue(e.shape)/r,r]},backend:s}),i=Q_(a,"float32","mean",s),o=X_({inputs:{x:i},attrs:{shape:n},backend:s});return s.disposeIntermediateTensorInfo(a),s.disposeIntermediateTensorInfo(i),o}(f,g,y,i);for(const e of p)i.disposeIntermediateTensorInfo(e);return b}},XM={kernelName:Rn,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{axis:a,keepDims:i}=s,o=r.shape.length,l=ge(a,r.shape);let u=l;const c=Fu(u,o);let h=r;null!=c&&(h=aF({inputs:{x:r},backend:n,attrs:{perm:c}}),u=Ou(u.length,r.shape.length)),_u("min",u,o);const[d,p]=Au(h.shape,u),f=X_({inputs:{x:h},backend:n,attrs:{shape:[-1,ue(p)]}}),m=Q_(f,f.dtype,"min",n);let g;return g=X_(i?{inputs:{x:m},backend:n,attrs:{shape:Ru(d,l)}}:{inputs:{x:m},backend:n,attrs:{shape:d}}),n.disposeIntermediateTensorInfo(f),n.disposeIntermediateTensorInfo(m),null!=c&&n.disposeIntermediateTensorInfo(h),g}},YM=V_({opSnippet:T_+"\n  return min(a, b);\n",packedOpSnippet:"\n  vec4 result = vec4(min(a, b));\n  bvec4 isNaNA = isnan(a);\n  bvec4 isNaNB = isnan(b);\n  bvec4 isNaN = bvec4(isNaNA.x || isNaNB.x, isNaNA.y || isNaNB.y, isNaNA.z || isNaNB.z, isNaNA.w || isNaNB.w);\n  "+$_+"\n  return result;\n",cpuKernelImpl:_R}),JM={kernelName:_n,backendName:"webgl",kernelFunc:YM};class ZM{constructor(e,t,n){this.variableNames=["x"],this.outputShape=t.map(((t,n)=>t[0]+e[n]+t[1]));const s=e.length,r=GA(s),a=t.map((e=>e[0])).join(","),i=t.map(((t,n)=>t[0]+e[n])).join(","),o=["coords[0]","coords[1]","coords[2]","coords[3]"].slice(0,s),l="reflect"===n?0:1;this.userCode=1!==s?`\n      ${r} start = ${r}(${a});\n      ${r} end = ${r}(${i});\n\n      void main() {\n        ${r} outC = getOutputCoords();\n        for (int i = 0; i < ${s}; i++) {\n          if (outC[i] < start[i]) {\n            outC[i] = start[i] * 2 - outC[i] - ${l};\n          } else if(outC[i] >= end[i]) {\n            outC[i] = (end[i] - 1) * 2 - outC[i] + ${l};\n          }\n        }\n        ${r} coords = outC - start;\n        setOutput(getX(${o}));\n      }\n    `:`\n        int start = ${a};\n        int end = ${i};\n\n        void main() {\n          int outC = getOutputCoords();\n          if (outC < start) {\n            outC = start * 2 - outC - ${l};\n          } else if(outC >= end) {\n            outC = (end - 1) * 2 - outC + ${l};\n          }\n          setOutput(getX(outC - start));\n        }\n      `}}class QM{constructor(e,t,n){this.variableNames=["x"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=t.map(((t,n)=>t[0]+e[n]+t[1]));const s=e.length,r=GA(s),a=t.map((e=>e[0])).join(","),i=t.map(((t,n)=>t[0]+e[n])).join(","),o=o_("rc",s),l=o_("source",s),u=`${o[s-1]} < ${this.outputShape[s-1]}`,c=1===s?"source":`vec2(${l.slice(-2).join()})`,h="reflect"===n?0:1;let d="";if(1===s){const e=`\n        ${r} source = rc;\n        if (source < start) {\n          source = start * 2 - source - ${h};\n        } else if (source >= end) {\n          source = (end - 1) * 2 - source + ${h};\n        }\n        source -= start;\n      `;d=`\n        ${r} rc = outputLoc;\n        ${e}\n        result[0] = getChannel(getX(${l.join()}), ${c});\n        ${o[s-1]} += 1;\n        if(${u}) {\n          ${e}\n          result[1] = getChannel(getX(${l.join()}), ${c});\n        }\n      `}else{const e=`\n        ${r} source = rc;\n        ${r} lt = ${r}(lessThan(source, start));\n        ${r} gte = ${r}(greaterThanEqual(source, end));\n        ${r} orig = 1 - (lt + gte);\n        source = orig * source +\n                lt * (start * 2 - source - ${h}) +\n                gte * ((end - 1) * 2 - source + ${h});\n        source -= start;\n      `;d=`\n        ${r} rc = outputLoc;\n        ${e}\n        result[0] = getChannel(getX(${l.join()}), ${c});\n        ${o[s-1]} += 1;\n        if(${u}) {\n          ${e}\n          result[1] = getChannel(getX(${l.join()}), ${c});\n        }\n        rc = outputLoc;\n        ${o[s-2]} += 1;\n        if(${o[s-2]} < ${this.outputShape[s-2]}) {\n          ${e}\n          result[2] = getChannel(getX(${l.join()}), ${c});\n          ${o[s-1]} += 1;\n          if(${u}) {\n            ${e}\n            result[3] = getChannel(getX(${l.join()}), ${c});\n          }\n        }\n      `}this.userCode=`\n      const ${r} start = ${r}(${a});\n      const ${r} end = ${r}(${i});\n\n      void main() {\n        ${r} outputLoc = getOutputCoords();\n        vec4 result = vec4(0.);\n        ${d}\n        setOutput(result);\n      }\n    `}}const eL={kernelName:Fn,backendName:"webgl",kernelFunc:({inputs:e,backend:t,attrs:n})=>{const{x:s}=e,{paddings:r,mode:a}=n,i=Pe().getBool("WEBGL_PACK_ARRAY_OPERATIONS")?new QM(s.shape,r,a):new ZM(s.shape,r,a);return t.runWebGLProgram(i,[s],s.dtype)}},tL=V_({opSnippet:"if (b == 0.0) return NAN;\n  return mod(a, b);",packedOpSnippet:"\n  vec4 result = mod(a, b);\n  bvec4 isNaN = equal(b, vec4(0.0));\n  "+$_+"\n  return result;\n"}),nL={kernelName:Dn,backendName:"webgl",kernelFunc:tL};class sL{constructor(e,t,n){this.variableNames=["probs"],this.customUniforms=[{name:"seed",type:"float"}],this.outputShape=[e,n],this.userCode=`\n      void main() {\n        ivec2 coords = getOutputCoords();\n        int batch = coords[0];\n\n        float r = random(seed);\n        float cdf = 0.0;\n\n        for (int i = 0; i < ${t-1}; i++) {\n          cdf += getProbs(batch, i);\n\n          if (r < cdf) {\n            setOutput(float(i));\n            return;\n          }\n        }\n\n        // If no other event happened, last event happened.\n        setOutput(float(${t-1}));\n      }\n    `}}const rL=V_({opSnippet:"\nif (a == b) {\n  return 1.0;\n};\nreturn a / b;",packedOpSnippet:"\n  // vec4 one = vec4(equal(a, b));\n  // return one + (vec4(1.0) - one) * a / b;\n  vec4 result = a / b;\n  if(a.x == b.x) {\n    result.x = 1.;\n  }\n  if(a.y == b.y) {\n    result.y = 1.;\n  }\n  if(a.z == b.z) {\n    result.z = 1.;\n  }\n  if(a.w == b.w) {\n    result.w = 1.;\n  }\n\n  return result;\n",checkOutOfBounds:!0}),aL={kernelName:Pt,backendName:"webgl",kernelFunc:rL},iL="return a - b;",oL=V_({opSnippet:iL,packedOpSnippet:iL,supportsComplex:!0,cpuKernelImpl:t_}),lL={kernelName:Bs,backendName:"webgl",kernelFunc:oL};function uL(e){const{inputs:t,backend:n,attrs:s}=e,{logits:r}=t,{dim:a}=s,i=ge([a],r.shape),o=LM({inputs:{x:r},backend:n,attrs:{reductionIndices:i,keepDims:!1}}),l=Ru(o.shape,i),u=X_({inputs:{x:o},backend:n,attrs:{shape:l}}),c=oL({inputs:{a:r,b:u},backend:n}),h=$O({inputs:{x:c},backend:n}),d=sF({inputs:{x:h},backend:n,attrs:{axis:i,keepDims:!1}}),p=X_({inputs:{x:d},backend:n,attrs:{shape:l}}),f=rL({inputs:{a:h,b:p},backend:n});return n.disposeIntermediateTensorInfo(o),n.disposeIntermediateTensorInfo(u),n.disposeIntermediateTensorInfo(c),n.disposeIntermediateTensorInfo(h),n.disposeIntermediateTensorInfo(d),n.disposeIntermediateTensorInfo(p),f}const cL={kernelName:Ts,backendName:"webgl",kernelFunc:uL},hL={kernelName:On,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{logits:r}=t,{numSamples:a,seed:i,normalized:o}=s,l=o?r:uL({inputs:{logits:r},backend:n,attrs:{dim:r.shape.length-1}}),u=l.shape[0],c=l.shape[1],h=new sL(u,c,a),d=[[i]],p=n.runWebGLProgram(h,[l],"int32",d);return o||n.disposeIntermediateTensorInfo(l),p}},dL=m_+"\n  return -x;\n",pL={kernelName:Ln,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n}=e,{x:s}=t;if(n.shouldExecuteOnCPU([s])){const e=n.texData.get(s.dataId),[t,r]=DR(e.values,s.shape,s.dtype);return n.makeTensorInfo(r,s.dtype,t)}let r;return r=Pe().getBool("WEBGL_PACK_UNARY_OPERATIONS")?new w_(s.shape,"\n  vec4 result = -x;\n  bvec4 isNaN = isnan(x);\n\n  result.r = isNaN.r ? x.r : result.r;\n  result.g = isNaN.g ? x.g : result.g;\n  result.b = isNaN.b ? x.b : result.b;\n  result.a = isNaN.a ? x.a : result.a;\n\n  return result;\n"):new f_(s.shape,dL),n.runWebGLProgram(r,[s],s.dtype)}},fL=Md,mL={kernelName:Bn,backendName:"webgl",kernelFunc:function(e){nr("tf.nonMaxSuppression() in webgl locks the UI thread. Call tf.nonMaxSuppressionAsync() instead");const{inputs:t,backend:n,attrs:s}=e,{boxes:r,scores:a}=t,{maxOutputSize:i,iouThreshold:o,scoreThreshold:l}=s,u=n.readSync(r.dataId),c=n.readSync(a.dataId),{selectedIndices:h}=fL(u,c,i,o,l);return n.makeTensorInfo([h.length],"int32",new Int32Array(h))}},gL=Ld,yL={kernelName:Pn,backendName:"webgl",kernelFunc:function(e){nr("tf.nonMaxSuppression() in webgl locks the UI thread. Call tf.nonMaxSuppressionAsync() instead");const{inputs:t,backend:n,attrs:s}=e,{boxes:r,scores:a}=t,{maxOutputSize:i,iouThreshold:o,scoreThreshold:l,padToMaxOutputSize:u}=s,c=n.readSync(r.dataId),h=n.readSync(a.dataId),{selectedIndices:d,validOutputs:p}=gL(c,h,i,o,l,u);return[n.makeTensorInfo([d.length],"int32",new Int32Array(d)),n.makeTensorInfo([],"int32",new Int32Array([p]))]}},bL=zd,xL={kernelName:Wn,backendName:"webgl",kernelFunc:function(e){nr("tf.nonMaxSuppression() in webgl locks the UI thread. Call tf.nonMaxSuppressionAsync() instead");const{inputs:t,backend:n,attrs:s}=e,{boxes:r,scores:a}=t,{maxOutputSize:i,iouThreshold:o,scoreThreshold:l,softNmsSigma:u}=s,c=n.readSync(r.dataId),h=n.readSync(a.dataId),d=i,p=o,f=l,m=u,{selectedIndices:g,selectedScores:y}=bL(c,h,d,p,f,m);return[n.makeTensorInfo([g.length],"int32",new Int32Array(g)),n.makeTensorInfo([y.length],"float32",new Float32Array(y))]}};class wL{constructor(e,t,n,s){this.variableNames=["indices"],this.outputShape=[e,t],this.userCode=`\n      void main() {\n        ivec2 coords = getOutputCoords();\n        int index = round(getIndices(coords.x));\n        setOutput(mix(float(${s}), float(${n}),\n                      float(index == coords.y)));\n      }\n    `}}const vL={kernelName:Un,backendName:"webgl",kernelFunc:e=>{const{inputs:t,backend:n,attrs:s}=e,{indices:r}=t,{dtype:a,depth:i,onValue:o,offValue:l}=s,u=ue(r.shape),c=new wL(u,i,o,l),h=X_({inputs:{x:r},backend:n,attrs:{shape:[u]}}),d=n.runWebGLProgram(c,[h],a);n.disposeIntermediateTensorInfo(h);const p=X_({inputs:{x:d},backend:n,attrs:{shape:[...r.shape,i]}});return n.disposeIntermediateTensorInfo(d),p}};function kL(e){const{inputs:t,backend:n}=e,{x:s}=t;if("complex64"===s.dtype){const e=uD({inputs:{input:s},backend:n}),t=kL({inputs:{x:e},backend:n}),r=ND({inputs:{input:s},backend:n}),a=kL({inputs:{x:r},backend:n}),i=__({inputs:{real:t,imag:a},backend:n});return n.disposeIntermediateTensorInfo(e),n.disposeIntermediateTensorInfo(t),n.disposeIntermediateTensorInfo(r),n.disposeIntermediateTensorInfo(a),i}return BO({attrs:{shape:s.shape,dtype:s.dtype,value:"string"===s.dtype?"":0},backend:n})}const IL={kernelName:Xs,backendName:"webgl",kernelFunc:kL},NL={kernelName:Vn,backendName:"webgl",kernelFunc:function e(t){const{inputs:n,backend:s}=t,{x:r}=n;if("string"===r.dtype)throw new Error("onesLike is not supported under string dtype");if("complex64"===r.dtype){const t=uD({inputs:{input:r},backend:s}),n=e({inputs:{x:t},backend:s}),a=ND({inputs:{input:r},backend:s}),i=kL({inputs:{x:a},backend:s}),o=__({inputs:{real:n,imag:i},backend:s});return s.disposeIntermediateTensorInfo(t),s.disposeIntermediateTensorInfo(n),s.disposeIntermediateTensorInfo(a),s.disposeIntermediateTensorInfo(i),o}return BO({attrs:{shape:r.shape,dtype:r.dtype,value:1},backend:s})}},SL={kernelName:Gn,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{axis:r}=s;if(1===t.length)return AO({inputs:{input:t[0]},backend:n,attrs:{dim:r}});const a=t[0].shape,i=t[0].dtype;t.forEach((e=>{oe(a,e.shape,"All tensors passed to stack must have matching shapes"),ie(i===e.dtype,(()=>"All tensors passed to stack must have matching dtypes"))}));const o=[],l=CD({inputs:t.map((e=>{const t=AO({inputs:{input:e},backend:n,attrs:{dim:r}});return o.push(t),t})),backend:n,attrs:{axis:r}});return o.forEach((e=>n.disposeIntermediateTensorInfo(e))),l}};class TL{constructor(e,t,n){this.variableNames=["x"],this.customUniforms=[{name:"value",type:"float"}],this.outputShape=t.map(((t,n)=>t[0]+e[n]+t[1]));const s=e.length,r=GA(s),a=t.map((e=>e[0])).join(","),i=t.map(((t,n)=>t[0]+e[n])).join(","),o=["coords[0]","coords[1]","coords[2]","coords[3]"].slice(0,s);this.userCode=1!==s?`\n      ${r} start = ${r}(${a});\n      ${r} end = ${r}(${i});\n\n      void main() {\n        ${r} outC = getOutputCoords();\n        if (any(lessThan(outC, start)) || any(greaterThanEqual(outC, end))) {\n          setOutput(value);\n        } else {\n          ${r} coords = outC - start;\n          setOutput(getX(${o}));\n        }\n      }\n    `:`\n        int start = ${a};\n        int end = ${i};\n\n        void main() {\n          int outC = getOutputCoords();\n          if (outC < start || outC >= end) {\n            setOutput(value);\n          } else {\n            setOutput(getX(outC - start));\n          }\n        }\n      `}}class CL{constructor(e,t,n){this.variableNames=["x"],this.packedInputs=!0,this.packedOutput=!0,this.customUniforms=[{name:"value",type:"float"}],this.outputShape=t.map(((t,n)=>t[0]+e[n]+t[1]));const s=e.length,r=GA(s),a=t.map((e=>e[0])).join(","),i=t.map(((t,n)=>t[0]+e[n])).join(","),o=o_("rc",s),l=o_("source",s),u=`${o[s-1]} < ${this.outputShape[s-1]}`,c=1===s?"source":`vec2(${l.slice(-2).join()})`,h=[`${r} rc = outputLoc;`,`${o[s-1]} += 1;\n       if(${u}) {\n      `,1===s?"":`}\n       rc = outputLoc;\n       ${o[s-2]} += 1;\n       if(${o[s-2]} < ${this.outputShape[s-2]}) {`,1===s?"":`  ${o[s-1]} += 1;\n         if(${u}) {`],d=1===s?"rc < start || rc >= end":"any(lessThan(rc, start)) || any(greaterThanEqual(rc, end))";let p="";for(let e=0,t=1===s?2:4;e<t;e++)p+=`\n        ${h[e]}\n        if (${d}) {\n          result[${e}] = float(value);\n        } else {\n          ${r} source = rc - start;\n          result[${e}] = getChannel(getX(${l.join()}), ${c});\n        }\n      `;p+=1===s?"} ":"}}",this.userCode=`\n      const ${r} start = ${r}(${a});\n      const ${r} end = ${r}(${i});\n\n      void main() {\n        ${r} outputLoc = getOutputCoords();\n        vec4 result = vec4(0.);\n        ${p}\n        setOutput(result);\n      }\n    `}}const $L=e=>{const{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{paddings:a,constantValue:i}=s;if(0===ue(r.shape)){const e=a.map(((e,t)=>e[0]+r.shape[t]+e[1]));return BO({backend:n,attrs:{shape:e,value:i,dtype:r.dtype}})}const o=Pe().getBool("WEBGL_PACK_ARRAY_OPERATIONS")?new CL(r.shape,a,i):new TL(r.shape,a,i),l=[[i]];return n.runWebGLProgram(o,[r],r.dtype,l)},EL={kernelName:jn,backendName:"webgl",kernelFunc:$L},AL=V_({opSnippet:"\n  if(a < 0.0 && floor(b) < b){\n    return NAN;\n  }\n  if (b == 0.0) {\n    return 1.0;\n  }\n  return (round(mod(b, 2.0)) != 1) ?\n      pow(abs(a), b) : sign(a) * pow(abs(a), b);\n",packedOpSnippet:"\n  // isModRound1 has 1 for components with round(mod(b, 2.0)) == 1, 0 otherwise.\n  vec4 isModRound1 = vec4(equal(round(mod(b, 2.0)), ivec4(1)));\n  vec4 multiplier = sign(a) * isModRound1 + (vec4(1.0) - isModRound1);\n  vec4 result = multiplier * pow(abs(a), b);\n\n  // Ensure that a^0 = 1, including 0^0 = 1 as this correspond to TF and JS\n  bvec4 isExpZero = equal(b, vec4(0.0));\n  result.r = isExpZero.r ? 1.0 : result.r;\n  result.g = isExpZero.g ? 1.0 : result.g;\n  result.b = isExpZero.b ? 1.0 : result.b;\n  result.a = isExpZero.a ? 1.0 : result.a;\n\n  bvec4 isNaN1 = lessThan(a, vec4(0.0));\n  bvec4 isNaN2 = lessThan(floor(b), b);\n  bvec4 isNaN = bvec4(isNaN1.x && isNaN2.x, isNaN1.y && isNaN2.y, isNaN1.z && isNaN2.z, isNaN1.w && isNaN2.w);\n  "+$_+"\n  return result;\n"}),RL={kernelName:Hn,backendName:"webgl",kernelFunc:AL},_L={kernelName:Kn,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{axis:a,keepDims:i}=s,o=r.shape.length,l=[],u=ge(a,r.shape);let c=u;const h=Fu(c,o);let d,p=r;if(null!=h&&(p=aF({inputs:{x:r},backend:n,attrs:{perm:h}}),c=Ou(c.length,o),l.push(p)),_u("prod",c,o),n.shouldExecuteOnCPU([p])){const e=n.texData.get(p.dataId).values,{outVals:t,outShape:s,outDtype:r}=MR(p.shape,p.dtype,e,c);d=n.makeTensorInfo(s,r,t)}else{const[e,t]=Au(p.shape,c),s=ue(t),a=X_({inputs:{x:p},backend:n,attrs:{shape:[-1,s]}}),i=Q_(a,na(r.dtype),"prod",n);d=X_({inputs:{x:i},backend:n,attrs:{shape:e}}),l.push(a),l.push(i)}if(i){l.push(d);const e=Ru(d.shape,u);d=X_({inputs:{x:d},backend:n,attrs:{shape:e}})}return l.forEach((e=>n.disposeIntermediateTensorInfo(e))),d}},FL={kernelName:Xn,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{paramsNestedSplits:r,paramsDenseValues:a,indices:i}=t,{outputRaggedRank:o}=s,l=r.map((e=>n.readSync(e.dataId))),u=r.map((e=>e.shape)),c=n.readSync(a.dataId),h=n.readSync(i.dataId),[d,p,f]=LR(l,u,c,a.shape,a.dtype,h,i.shape,o),m=d.map((e=>n.makeTensorInfo([e.length],"int32",e))),g=n.makeTensorInfo(f,a.dtype,p);return m.concat([g])}},DL={kernelName:Yn,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n}=e,{starts:s,limits:r,deltas:a}=t,i=n.readSync(s.dataId),o=n.readSync(r.dataId),l=n.readSync(a.dataId),[u,c]=zR(i,s.shape,s.dtype,o,r.shape,l,a.shape);return[n.makeTensorInfo([u.length],"int32",u),n.makeTensorInfo([c.length],s.dtype,c)]}},OL={kernelName:Jn,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{shape:r,values:a,defaultValue:i,rowPartitionTensors:o}=t,{rowPartitionTypes:l}=s,u=n.readSync(r.dataId),c=n.readSync(a.dataId),h=n.readSync(i.dataId),d=o.map((e=>n.readSync(e.dataId))),p=o.map((e=>e.shape)),[f,m]=BR(u,r.shape,c,a.shape,a.dtype,h,i.shape,d,p,l);return n.makeTensorInfo(f,a.dtype,m)}},ML=e=>{const{backend:t,attrs:n}=e,{start:s,stop:r,step:a,dtype:i}=n,o=PR(s,r,a,i);return t.makeTensorInfo([o.length],i,o)},LL={kernelName:Zn,backendName:"webgl",kernelFunc:ML},zL=W_({opSnippet:"return 1.0 / x;"}),BL={kernelName:es,backendName:"webgl",kernelFunc:zL},PL=W_({opSnippet:m_+"\n  return (x < 0.0) ? 0.0 : x;\n",packedOpSnippet:"\n  vec4 result = x * vec4(greaterThanEqual(x, vec4(0.0)));\n  bvec4 isNaN = isnan(x);\n\n  result.r = isNaN.r ? x.r : result.r;\n  result.g = isNaN.g ? x.g : result.g;\n  result.b = isNaN.b ? x.b : result.b;\n  result.a = isNaN.a ? x.a : result.a;\n\n  return result;\n"}),WL={kernelName:ts,backendName:"webgl",kernelFunc:PL},VL=W_({opSnippet:m_+"\n  return (x < 0.0) ? 0.0 : min(6.0, x);\n",packedOpSnippet:"\n  vec4 result = min(x, vec4(6.)) * vec4(greaterThanEqual(x, vec4(0.0)));\n  bvec4 isNaN = isnan(x);\n\n  result.r = isNaN.r ? x.r : result.r;\n  result.g = isNaN.g ? x.g : result.g;\n  result.b = isNaN.b ? x.b : result.b;\n  result.a = isNaN.a ? x.a : result.a;\n\n  return result;\n"}),UL={kernelName:os,backendName:"webgl",kernelFunc:VL};class GL{constructor(e,t,n,s,r){this.variableNames=["A"],this.outputShape=[];const[a,i,o,l]=e;this.outputShape=[a,t,n,l];const u=[s&&t>1?i-1:i,s&&n>1?o-1:o],c=[s&&t>1?t-1:t,s&&n>1?n-1:n];let h;h=r?"(vec2(yRC) + vec2(0.5)) * effectiveInputOverOutputRatioRC - vec2(0.5)":"vec2(yRC) * effectiveInputOverOutputRatioRC",this.userCode=`\n      const vec2 effectiveInputOverOutputRatioRC = vec2(\n          ${u[0]/c[0]},\n          ${u[1]/c[1]});\n      const vec2 inputShapeRC = vec2(${i}.0, ${o}.0);\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int d = coords[3];\n        ivec2 yRC = coords.yz;\n\n        // Fractional source index.\n        vec2 sourceFracIndexRC = ${h};\n\n        // Compute the four integer indices.\n        ivec2 sourceFloorRC = ivec2(max(sourceFracIndexRC, vec2(0.0)));\n        ivec2 sourceCeilRC = ivec2(\n          min(inputShapeRC - 1.0, ceil(sourceFracIndexRC)));\n\n        float topLeft = getA(b, sourceFloorRC.x, sourceFloorRC.y, d);\n        float bottomLeft = getA(b, sourceCeilRC.x, sourceFloorRC.y, d);\n        float topRight = getA(b, sourceFloorRC.x, sourceCeilRC.y, d);\n        float bottomRight = getA(b, sourceCeilRC.x, sourceCeilRC.y, d);\n\n        vec2 fracRC = sourceFracIndexRC - vec2(sourceFloorRC);\n\n        float top = topLeft + (topRight - topLeft) * fracRC.y;\n        float bottom = bottomLeft + (bottomRight - bottomLeft) * fracRC.y;\n        float newValue = top + (bottom - top) * fracRC.x;\n\n        setOutput(newValue);\n      }\n    `}}class jL{constructor(e,t,n,s,r){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=[];const[a,i,o,l]=e;this.outputShape=[a,t,n,l];const u=[s&&t>1?i-1:i,s&&n>1?o-1:o],c=[s&&t>1?t-1:t,s&&n>1?n-1:n];let h;h=r?"(vec3(yRC) + vec3(0.5)) * effectiveInputOverOutputRatioRC - vec3(0.5)":"vec3(yRC) * effectiveInputOverOutputRatioRC",this.userCode=`\n      const vec3 effectiveInputOverOutputRatioRC = vec3(\n          ${u[0]/c[0]},\n          ${u[1]/c[1]},\n          ${u[1]/c[1]});\n      const vec3 inputShapeRC = vec3(${i}.0, ${o}.0,\n                                     ${o}.0);\n\n      float getAValue(int b, int r, int c, int d) {\n        return getChannel(getA(b, r, c, d), vec2(c, d));\n      }\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int d = coords[3];\n        // Calculate values for next column in yRC.z.\n        ivec3 yRC = coords.yzz + ivec3(0, 0, 1);\n\n        // Fractional source index.\n        vec3 sourceFracIndexRC = ${h};\n\n        // Compute the four integer indices.\n        ivec3 sourceFloorRC = ivec3(max(sourceFracIndexRC, vec3(0.0)));\n        ivec3 sourceCeilRC = ivec3(\n          min(inputShapeRC - 1.0, ceil(sourceFracIndexRC)));\n\n        // Should we calculate next column and row elements in 2x2 packed cell.\n        bool hasNextCol = d < ${l-1};\n        bool hasNextRow = coords.z < ${n-1};\n\n        // In parallel, construct four corners for all four components in\n        // packed 2x2 cell.\n        vec4 topLeft = vec4(\n          getAValue(b, sourceFloorRC.x, sourceFloorRC.y, d),\n          hasNextCol ? getAValue(b, sourceFloorRC.x, sourceFloorRC.y, d + 1)\n                     : 0.0,\n          hasNextRow ? getAValue(b, sourceFloorRC.x, sourceFloorRC.z, d)\n                     : 0.0,\n          (hasNextRow && hasNextCol) ?\n            getAValue(b, sourceFloorRC.x, sourceFloorRC.z, d + 1) : 0.0);\n\n        vec4 bottomLeft = vec4(\n          getAValue(b, sourceCeilRC.x, sourceFloorRC.y, d),\n          hasNextCol ? getAValue(b, sourceCeilRC.x, sourceFloorRC.y, d + 1)\n                     : 0.0,\n          hasNextRow ? getAValue(b, sourceCeilRC.x, sourceFloorRC.z, d)\n                     : 0.0,\n          (hasNextRow && hasNextCol) ?\n            getAValue(b, sourceCeilRC.x, sourceFloorRC.z, d + 1) : 0.0);\n\n        vec4 topRight = vec4(\n          getAValue(b, sourceFloorRC.x, sourceCeilRC.y, d),\n          hasNextCol ? getAValue(b, sourceFloorRC.x, sourceCeilRC.y, d + 1)\n                     : 0.0,\n          hasNextRow ? getAValue(b, sourceFloorRC.x, sourceCeilRC.z, d)\n                     : 0.0,\n          (hasNextRow && hasNextCol) ?\n            getAValue(b, sourceFloorRC.x, sourceCeilRC.z, d + 1) : 0.0);\n\n        vec4 bottomRight = vec4(\n          getAValue(b, sourceCeilRC.x, sourceCeilRC.y, d),\n          hasNextCol ? getAValue(b, sourceCeilRC.x, sourceCeilRC.y, d + 1)\n                     : 0.0,\n          hasNextRow ? getAValue(b, sourceCeilRC.x, sourceCeilRC.z, d)\n                     : 0.0,\n          (hasNextRow && hasNextCol) ?\n            getAValue(b, sourceCeilRC.x, sourceCeilRC.z, d + 1) : 0.0);\n\n        vec3 fracRC = sourceFracIndexRC - vec3(sourceFloorRC);\n\n        vec4 top = mix(topLeft, topRight, fracRC.yyzz);\n        vec4 bottom = mix(bottomLeft, bottomRight, fracRC.yyzz);\n        vec4 newValue = mix(top, bottom, fracRC.x);\n\n        setOutput(newValue);\n      }\n    `}}const HL={kernelName:as,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{images:r}=t,{alignCorners:a,halfPixelCenters:i,size:o}=s,[l,u]=o,c=Pe().getBool("WEBGL_PACK_IMAGE_OPERATIONS")?new jL(r.shape,l,u,a,i):new GL(r.shape,l,u,a,i);return n.runWebGLProgram(c,[r],"float32")}};class qL{constructor(e,t,n){this.variableNames=["dy"],this.outputShape=[],this.outputShape=t;const[,s,r]=t,[,a,i]=e,o=[n&&a>1?s-1:s,n&&i>1?r-1:r],l=[n&&a>1?a-1:a,n&&i>1?i-1:i],u=o[0]/l[0],c=o[1]/l[1],h=1/u,d=1/c,p=2*Math.ceil(h)+2,f=2*Math.ceil(d)+2;this.userCode=`\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int d = coords[3];\n        int r = coords[1];\n        int c = coords[2];\n\n        float accumulator = 0.0;\n\n        const float heightScale = float(${u});\n        const float widthScale = float(${c});\n\n        const float invHeightScale = float(${h});\n        const float invWidthScale = float(${d});\n\n        const int winHeight = int(${p});\n        const int winWidth = int(${f});\n\n        // Compute bounds for where in dy we will look\n        float startRLerp = floor(float(r) * invHeightScale);\n        int startDyR = int(startRLerp - float(winHeight / 2));\n\n        float startCLerp = floor(float(c) * invWidthScale);\n        int startDyC = int(startCLerp - float(winWidth / 2));\n\n        // Loop over dy\n        for (int dyROffset = 0; dyROffset < winHeight; dyROffset++) {\n          int dyR = dyROffset + startDyR;\n\n          // Guard against the window exceeding the bounds of dy\n          if (dyR < 0 || dyR >= ${a}) {\n            continue;\n          }\n\n          for (int dyCOffset = 0; dyCOffset < winWidth; dyCOffset++) {\n            int dyC = dyCOffset + startDyC;\n\n            // Guard against the window exceeding the bounds of dy\n            if (dyC < 0 || dyC >= ${i}) {\n              continue;\n            }\n\n            float dxR = float(dyR) * heightScale;\n            int topDxRIndex = int(floor(dxR));\n            int bottomDxRIndex = int(min(ceil(dxR), ${s-1}.0));\n            float dxRLerp = dxR - float(topDxRIndex);\n            float inverseDxRLerp = 1.0 - dxRLerp;\n\n            float dxC = float(dyC) * widthScale;\n            int leftDxCIndex = int(floor(dxC));\n            int rightDxCIndex = int(min(ceil(dxC), ${r-1}.0));\n            float dxCLerp = dxC - float(leftDxCIndex);\n            float inverseDxCLerp = 1.0 - dxCLerp;\n\n            if (r == topDxRIndex && c == leftDxCIndex) {\n              // topLeft\n              accumulator +=\n                getDy(b, dyR, dyC, d) * inverseDxRLerp * inverseDxCLerp;\n            }\n\n            if (r == topDxRIndex && c == rightDxCIndex) {\n              // topRight\n              accumulator += getDy(b, dyR, dyC, d) * inverseDxRLerp * dxCLerp;\n            }\n\n            if (r == bottomDxRIndex && c == leftDxCIndex) {\n              // bottomLeft\n              accumulator += getDy(b, dyR, dyC, d) * dxRLerp * inverseDxCLerp;\n            }\n\n            if (r == bottomDxRIndex && c == rightDxCIndex) {\n              // bottomRight\n              accumulator += getDy(b, dyR, dyC, d) * dxRLerp * dxCLerp;\n            }\n          }\n        }\n        // End loop over dy\n\n        setOutput(accumulator);\n      }\n    `}}const KL={kernelName:is,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{images:r,dy:a}=t,{alignCorners:i}=s,o=new qL(a.shape,r.shape,i);return n.runWebGLProgram(o,[a],a.dtype)}};class XL{constructor(e,t,n,s,r){this.variableNames=["A"],this.outputShape=[];const[a,i,o,l]=e;this.outputShape=[a,t,n,l];const u=[s&&t>1?i-1:i,s&&n>1?o-1:o],c=[s&&t>1?t-1:t,s&&n>1?n-1:n],h=s?"0.5":"0.0";let d;d=r?"max((vec2(yRC) + vec2(0.5)) * effectiveInputOverOutputRatioRC, vec2(0.0))":"vec2(yRC) * effectiveInputOverOutputRatioRC",this.userCode=`\n      const vec2 effectiveInputOverOutputRatioRC = vec2(\n          ${u[0]/c[0]},\n          ${u[1]/c[1]});\n      const vec2 inputShapeRC = vec2(${i}.0, ${o}.0);\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int d = coords[3];\n        ivec2 yRC = coords.yz;\n\n        // Fractional source index.\n        vec2 sourceFracIndexRC = ${d};\n\n        // Compute the coordinators of nearest neighbor point.\n        ivec2 sourceNearestRC = ivec2(\n          min(inputShapeRC - 1.0, floor(sourceFracIndexRC + ${h})));\n        float newValue = getA(b, sourceNearestRC.x, sourceNearestRC.y, d);\n\n        setOutput(newValue);\n      }\n    `}}class YL{constructor(e,t,n,s,r){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=[];const[a,i,o,l]=e;this.outputShape=[a,t,n,l];const u=[s&&t>1?i-1:i,s&&n>1?o-1:o],c=[s&&t>1?t-1:t,s&&n>1?n-1:n],h=s?"0.5":"0.0";let d;d=r?"max((vec3(yRC) + vec3(0.5)) * effectiveInputOverOutputRatioRC, vec3(0.0))":"vec3(yRC) * effectiveInputOverOutputRatioRC",this.userCode=`\n      const vec3 effectiveInputOverOutputRatioRC = vec3(\n          ${u[0]/c[0]},\n          ${u[1]/c[1]},\n          ${u[1]/c[1]});\n      const vec3 inputShapeRC = vec3(${i}.0, ${o}.0,\n                                     ${o}.0);\n\n      float getAValue(int b, int r, int c, int d) {\n        return getChannel(getA(b, r, c, d), vec2(c, d));\n      }\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int d = coords[3];\n        // Calculate values for next column in yRC.z.\n        ivec3 yRC = coords.yzz + ivec3(0, 0, 1);\n\n        // Fractional source index.\n        vec3 sourceFracIndexRC = ${d};\n\n        // Compute the coordinators of nearest neighbor point.\n        ivec3 sourceNearestRC = ivec3(\n          min(inputShapeRC - 1.0, floor(sourceFracIndexRC + ${h})));\n\n        // Should we calculate next column and row elements in 2x2 packed cell.\n        bool hasNextCol = d < ${l-1};\n        bool hasNextRow = coords.z < ${n-1};\n\n        vec4 newValue = vec4(\n          getAValue(b, sourceNearestRC.x, sourceNearestRC.y, d),\n          hasNextCol ? getAValue(b, sourceNearestRC.x, sourceNearestRC.y, d + 1)\n                     : 0.0,\n          hasNextRow ? getAValue(b, sourceNearestRC.x, sourceNearestRC.z, d)\n                     : 0.0,\n          (hasNextRow && hasNextCol) ?\n            getAValue(b, sourceNearestRC.x, sourceNearestRC.z, d + 1) : 0.0);\n\n        setOutput(newValue);\n      }\n    `}}const JL={kernelName:ss,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{images:r}=t,{alignCorners:a,halfPixelCenters:i,size:o}=s,[l,u]=o,c=Pe().getBool("WEBGL_PACK_IMAGE_OPERATIONS")?new YL(r.shape,l,u,a,i):new XL(r.shape,l,u,a,i);return n.runWebGLProgram(c,[r],r.dtype)}};class ZL{constructor(e,t,n){this.variableNames=["dy"],this.outputShape=[],this.outputShape=t;const[,s,r]=t,[,a,i]=e,o=[n&&a>1?s-1:s,n&&i>1?r-1:r],l=[n&&a>1?a-1:a,n&&i>1?i-1:i],u=o[0]/l[0],c=o[1]/l[1],h=1/u,d=1/c,p=2*Math.ceil(h)+2,f=2*Math.ceil(d)+2;this.userCode=`\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int d = coords[3];\n        int r = coords[1];\n        int c = coords[2];\n\n        float accumulator = 0.0;\n\n        const float heightScale = float(${u});\n        const float widthScale = float(${c});\n\n        const float invHeightScale = float(${h});\n        const float invWidthScale = float(${d});\n\n        const int winHeight = int(${p});\n        const int winWidth = int(${f});\n\n        // Compute bounds for where in dy we will look\n        float startRLerp = floor(float(r) * invHeightScale);\n        int startDyR = int(floor(startRLerp - float(winHeight / 2)));\n\n        float startCLerp = floor(float(c) * invWidthScale);\n        int startDyC = int(floor(startCLerp - float(winWidth / 2)));\n\n        // Loop over dy\n        for (int dyROffset = 0; dyROffset < winHeight; dyROffset++) {\n          int dyR = dyROffset + startDyR;\n\n          // Guard against the window exceeding the bounds of dy\n          if (dyR < 0 || dyR >= ${a}) {\n            continue;\n          }\n\n          for (int dyCOffset = 0; dyCOffset < winWidth; dyCOffset++) {\n            int dyC = dyCOffset + startDyC;\n\n            // Guard against the window exceeding the bounds of dy\n            if (dyC < 0 || dyC >= ${i}) {\n              continue;\n            }\n\n            float sourceFracRow =\n              float(${o[0]}) *\n                (float(dyR) / float(${l[0]}));\n\n            float sourceFracCol =\n                float(${o[1]}) *\n                  (float(dyC) / float(${l[1]}));\n\n            int sourceNearestRow = int(min(\n                float(int(${s}) - 1),\n                ${n} ? float(round(sourceFracRow)) :\n                                  float(floor(sourceFracRow))));\n\n            int sourceNearestCol = int(min(\n                float(int(${r}) - 1),\n                ${n} ? float(round(sourceFracCol)) :\n                                  float(floor(sourceFracCol))));\n\n            if (r == sourceNearestRow && c == sourceNearestCol) {\n              accumulator += getDy(b, dyR, dyC, d);\n            }\n          }\n        }\n        // End loop over dy\n\n        setOutput(accumulator);\n      }\n    `}}const QL={kernelName:rs,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{images:r,dy:a}=t,{alignCorners:i}=s,o=new ZL(a.shape,r.shape,i);return n.runWebGLProgram(o,[a],a.dtype)}};class ez{constructor(e,t){this.variableNames=["x"];const n=e.length;if(n>4)throw new Error(`WebGL backend: Reverse of rank-${n} tensor is not yet supported`);if(this.outputShape=e,1===n)return void(this.userCode=`\n        void main() {\n          int coord = getOutputCoords();\n          setOutput(getX(${e[0]} - coord - 1));\n        }\n      `);const s=e.map(((n,s)=>(n=>-1!==t.indexOf(n)&&1!==e[n]?`${e[n]} - coords[${n}] - 1`:`coords[${n}]`)(s))).join(","),r=GA(n);this.userCode=`\n      void main() {\n        ${r} coords = getOutputCoords();\n        setOutput(getX(${s}));\n      }\n    `}}class tz{constructor(e,t){this.variableNames=["x"],this.packedInputs=!0,this.packedOutput=!0;const n=e.length;if(n>4)throw new Error(`WebGL backend: Reverse of rank-${n} tensor is not yet supported`);this.outputShape=e;const s=o_("rc",n),r=`${s[n-1]} + 1 < ${this.outputShape[n-1]}`,a=`${s[n-2]} + 1 < ${this.outputShape[n-2]}`,i=GA(n);function o(n){const s=e.map(((s,r)=>function(n,s){return-1!==t.indexOf(n)&&1!==e[n]?`${e[n]} - ${s[n]} - 1`:`${s[n]}`}(r,n)));return`getChannel(getX(${s.join(",")}), vec2(${s.slice(-2).join(",")}))`}this.userCode=1===n?`\n        void main(){\n          int rc = getOutputCoords();\n          vec4 result = vec4(0.);\n          result.r = getChannel(getX(${e[0]} - rc - 1),\n            ${e[0]} - rc - 1);\n          if(${r}){\n              result.g = getChannel(getX(${e[0]} - (rc  + 1) - 1),\n                ${e[0]} - (rc  + 1) - 1);\n          }\n          setOutput(result);\n        }\n      `:`\n        void main() {\n          ${i} rc = getOutputCoords();\n          vec4 result = vec4(0.);\n          result.r = ${function(e){return o(e)}(s.slice())};\n          if(${r}){\n            result.g = ${function(e){return e[n-1]="("+e[n-1]+" + 1)",o(e)}(s.slice())};\n          }\n          if(${a}) {\n            result.b = ${function(e){return e[n-2]="("+e[n-2]+" + 1)",o(e)}(s.slice())};\n            if(${r}) {\n              result.a = ${function(e){return e[n-1]="("+e[n-1]+" + 1)",e[n-2]="("+e[n-2]+" + 1)",o(e)}(s.slice())};\n            }\n          }\n          setOutput(result);\n        }\n    `}}const nz={kernelName:ls,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{dims:a}=s,i=r.shape.length,o=ge(a,r.shape);if(0===i)return A_({inputs:{x:r},backend:n});const l=Pe().getBool("WEBGL_PACK_ARRAY_OPERATIONS")?new tz(r.shape,o):new ez(r.shape,o);return n.runWebGLProgram(l,[r],r.dtype)}};class sz{constructor(e,t){this.variableNames=["Image"],this.outputShape=[],this.customUniforms=[{name:"params",type:"vec4"}];const n=e[1],s=e[2];this.outputShape=e;let r="";r="number"==typeof t?`float outputValue = ${t.toFixed(2)};`:`\n        vec3 fill = vec3(${t.join(",")});\n        float outputValue = fill[coords[3]];`,this.userCode=`\n        void main() {\n          ivec4 coords = getOutputCoords();\n          int x = coords[2];\n          int y = coords[1];\n          float coordXFloat = (float(x) - params[0]) * params[3] -\n            (float(y) - params[1]) * params[2];\n          float coordYFloat = (float(x) - params[0]) * params[2] +\n            (float(y) - params[1]) * params[3];\n          int coordX = int(round(coordXFloat + params[0]));\n          int coordY = int(round(coordYFloat + params[1]));\n          ${r}\n          if(coordX >= 0 && coordX < ${s} && coordY >= 0 && coordY < ${n}) {\n            outputValue = getImage(coords[0], coordY, coordX, coords[3]);\n          }\n          setOutput(outputValue);\n        }\n    `}}const rz={kernelName:Zs,backendName:"webgl",kernelFunc:({inputs:e,attrs:t,backend:n})=>{const{image:s}=e,{radians:r,fillValue:a,center:i}=t,o=n,l=new sz(s.shape,a),[u,c]=Fp(i,s.shape[1],s.shape[2]),h=[[u,c,Math.sin(r),Math.cos(r)]];return o.runWebGLProgram(l,[s],s.dtype,h)}},az=W_({opSnippet:"\n  // OpenGL ES does not support round function.\n  // The algorithm is based on banker's rounding.\n  float base = floor(x);\n  if ((x - base) < 0.5) {\n    return floor(x);\n  } else if ((x - base) > 0.5) {\n    return ceil(x);\n  } else {\n    if (mod(base, 2.0) == 0.0) {\n      return base;\n    } else {\n      return base + 1.0;\n    }\n  }\n"}),iz={kernelName:us,backendName:"webgl",kernelFunc:az},oz=W_({opSnippet:"return inversesqrt(x);",cpuKernelImpl:WR}),lz={kernelName:cs,backendName:"webgl",kernelFunc:oz};class uz{constructor(e,t,n,s,r,a,i=!0,o=!1){this.variableNames=["updates","indices","defaultValue"],this.outputShape=a;const l=GA(r.length),u=GA(a.length);let c="";1===n?c="i":2===n&&(c="i, j");const h=`getIndices(${c})`;let d="";1===s?d="i":2===s&&(d="i, coords[1]");const p=`getUpdates(${d})`;let f="";o&&(f="coords[0], coords[1]");const m=`getDefaultValue(${f})`,g=t>1?"strides[j]":"strides";this.userCode=`\n        ${l} strides = ${l}(${r});\n\n        void main() {\n          ${u} coords = getOutputCoords();\n          float sum = 0.0;\n          bool found = false;\n          for (int i = 0; i < ${e}; i++) {\n            int flattenedIndex = 0;\n            for (int j = 0; j < ${t}; j++) {\n              int index = round(${h});\n              flattenedIndex += index * ${g};\n            }\n            if (flattenedIndex == coords[0]) {\n              sum += ${p};\n              found = true;\n            }\n          }\n          setOutput(mix(${m}, sum, float(found)));\n        }\n      `}}class cz{constructor(e,t,n,s,r,a,i=!0,o=!1){this.variableNames=["updates","indices","defaultValue"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=a;const l=GA(r.length),u=GA(a.length);let c="";1===n?c="i":2===n&&(c="i, j");const h=`getIndices(${c})`;let d="";1===s?d="i":2===s&&(d="i, coords[1]");const p=`getUpdates(${d})`;let f="";o&&(f="coords[0], coords[1]");const m=`getDefaultValue(${f})`,g=t>1?"strides[j]":"strides",y=t>1?"strides[j + 1]":"strides";this.userCode=`\n        ${l} strides = ${l}(${r});\n\n        void main() {\n          ${u} coords = getOutputCoords();\n          vec4 sum = vec4(0.);\n          vec4 found = vec4(0.);\n          for (int i = 0; i < ${e}; i+=2) {\n            ivec2 flattenedIndex = ivec2(0);\n            for (int j = 0; j < ${t}; j+=2) {\n              ivec4 index = round(${h});\n              flattenedIndex += index.xz * ${g};\n              if (j + 1 < ${t}) {\n                flattenedIndex += index.yw * ${y};\n              }\n            }\n            if (flattenedIndex[0] == coords[0] || flattenedIndex[1] == coords[0] ||\n                flattenedIndex[0] == coords[0] + 1 || flattenedIndex[1] == coords[0] + 1) {\n              vec4 updVals = ${p};\n              if (flattenedIndex[0] == coords[0]) {\n                sum.xy += updVals.xy;\n                found.xy = vec2(1.);\n              } else if (flattenedIndex[0] == coords[0] + 1) {\n                sum.zw += updVals.xy;\n                found.zw = vec2(1.);\n              }\n              if (flattenedIndex[1] == coords[0]) {\n                sum.xy += updVals.zw;\n                found.xy = vec2(1.);\n              } else if (flattenedIndex[1] == coords[0] + 1) {\n                sum.zw += updVals.zw;\n                found.zw = vec2(1.);\n              }\n            }\n          }\n          setOutput(mix(${m}, sum, found));\n        }\n      `}}const hz={kernelName:hs,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{indices:r,updates:a}=t,{shape:i}=s,{sliceRank:o,numUpdates:l,sliceSize:u,strides:c,outputSize:h}=Hh(0,r,i),d=[h/u,u];if(0===h)return n.makeTensorInfo(i,r.dtype);const p=X_({inputs:{x:r},backend:n,attrs:{shape:[l,o]}}),f=X_({inputs:{x:a},backend:n,attrs:{shape:[l,u]}}),m=n.makeTensorInfo([],"float32",new Float32Array([0]));let g;g=Pe().getBool("WEBGL_PACK")?new cz(l,o,p.shape.length,f.shape.length,c,d):new uz(l,o,p.shape.length,f.shape.length,c,d);const y=n.runWebGLProgram(g,[f,p,m],f.dtype),b=X_({inputs:{x:y},backend:n,attrs:{shape:i}});return n.disposeIntermediateTensorInfo(p),n.disposeIntermediateTensorInfo(f),n.disposeIntermediateTensorInfo(y),n.disposeIntermediateTensorInfo(m),b}};class dz{constructor(e,t,n,s){this.variableNames=["sortedSequence","values"],this.customUniforms=[{name:"numInputs",type:"int"}],this.outputShape=[e,n];const r=`for (int i = 0; i < ${Math.ceil(Math.log2(t+1))}; ++i) { if (left >= right) break;`,a=2===Pe().getNumber("WEBGL_VERSION")?"while (left < right) {":r,i="left"===s?"<":"<=";this.userCode=`\n       int findBound(int batch, float value) {\n         int left = 0;\n         int right = numInputs;\n         int mid;\n         ${a}\n           mid = (left + right) / 2;\n           if (getSortedSequence(batch, mid) ${i} value) {\n             left = mid + 1;\n           } else {\n             right = mid;\n           }\n         }\n         return right;\n       }\n\n       void main() {\n         ivec2 coords = getOutputCoords();\n         int batch = coords[0];\n         int valueIndex = coords[1];\n\n         float value = getValues(batch, valueIndex);\n\n         setOutput(float(findBound(batch, value)));\n       }\n     `}}const pz={kernelName:ps,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{sortedSequence:r,values:a}=t,{side:i}=s,o=new dz(r.shape[0],r.shape[1],a.shape[1],i),l=[[r.shape[1]]];return n.runWebGLProgram(o,[r,a],"int32",l)}};class fz{constructor(e,t,n){let s,r;if(this.variableNames=["c","a","b"],this.outputShape=t,n>4)throw Error(`Where for rank ${n} is not yet supported`);if(1===n)r="resRC",s="resRC";else{const n=["resRC.x","resRC.y","resRC.z","resRC.w"],a=[],i=[];for(let s=0;s<t.length;s++)i.push(`${n[s]}`),s<e&&a.push(`${n[s]}`);s=a.join(),r=i.join()}const a=GA(n);this.userCode=`\n      void main() {\n        ${a} resRC = getOutputCoords();\n        float cVal = getC(${s});\n        if (cVal >= 1.0) {\n          setOutput(getA(${r}));\n        } else {\n          setOutput(getB(${r}));\n        }\n      }\n    `}}const mz={kernelName:fs,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n}=e,{condition:s,t:r,e:a}=t,i=new fz(s.shape.length,r.shape,r.shape.length);return n.runWebGLProgram(i,[s,r,a],ta(r.dtype,a.dtype))}},gz=W_({opSnippet:`\n  // Stable and Attracting Fixed Point (0, 1) for Normalized Weights.\n  // see: https://arxiv.org/abs/1706.02515\n  float scaleAlpha = ${Pp};\n  float scale = ${Wp};\n  return (x >= 0.0) ? scale * x : scaleAlpha * (exp(x) - 1.0);\n`}),yz={kernelName:ms,backendName:"webgl",kernelFunc:gz},bz=W_({opSnippet:P_+"\n  return 1.0 / (1.0 + exp(-1.0 * x));\n",packedOpSnippet:"\n  vec4 result = 1.0 / (1.0 + exp(-1.0 * x));\n  bvec4 isNaN = isnan(x);\n\n  result.r = isNaN.r ? x.r : result.r;\n  result.g = isNaN.g ? x.g : result.g;\n  result.b = isNaN.b ? x.b : result.b;\n  result.a = isNaN.a ? x.a : result.a;\n\n  return result;\n",cpuKernelImpl:UR}),xz={kernelName:ws,backendName:"webgl",kernelFunc:bz},wz=W_({opSnippet:"\n  if (isnan(x)) { return 0.0; }\n  return sign(x);\n"}),vz={kernelName:xs,backendName:"webgl",kernelFunc:wz},kz=W_({opSnippet:P_+"\n  return sin(x);\n",packedOpSnippet:`\n  vec4 result = sin(x);\n  bvec4 isNaN = isnan(x);\n  ${$_}\n  return result;\n`}),Iz={kernelName:ys,backendName:"webgl",kernelFunc:kz},Nz=W_({opSnippet:"\n  float e2x = exp(x);\n  return (e2x - 1.0 / e2x) / 2.0;\n"}),Sz={kernelName:bs,backendName:"webgl",kernelFunc:Nz},Tz=W_({opSnippet:"\n  float epsilon = 1.1920928955078125e-7;\n  float threshold = log(epsilon) + 2.0;\n\n  bool too_large = x > -threshold;\n  bool too_small = x < threshold;\n\n  float result;\n  float exp_x = exp(x);\n\n  if (too_large){\n    result = x;\n  }\n  else if (too_small){\n    result = exp_x;\n  }\n  else{\n    result = log(exp_x + 1.0);\n  }\n  return result;\n"}),Cz={kernelName:vs,backendName:"webgl",kernelFunc:Tz},$z={kernelName:Ns,backendName:"webgl",kernelFunc:e=>{const{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{blockShape:a,paddings:i}=s;ie(r.shape.length<=4,(()=>"spaceToBatchND for rank > 4 with a WebGL backend not implemented yet"));const o=a.reduce(((e,t)=>e*t)),l=[[0,0]];l.push(...i);for(let e=1+a.length;e<r.shape.length;++e)l.push([0,0]);const u=[],c=$L({inputs:{x:r},backend:n,attrs:{paddings:l,constantValue:0}}),h=Dp(c.shape,a,o,!1),d=Op(h.length,a.length,!1),p=Mp(c.shape,a,o,!1),f=X_({inputs:{x:c},backend:n,attrs:{shape:h}}),m=aF({inputs:{x:f},backend:n,attrs:{perm:d}}),g=X_({inputs:{x:m},backend:n,attrs:{shape:p}});return u.push(c),u.push(f),u.push(m),u.forEach((e=>n.disposeIntermediateTensorInfo(e))),g}},Ez={kernelName:Cs,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n}=e,{indices:s,values:r,denseShape:a,defaultValue:i}=t;if(1!==a.shape.length)throw new Error(`Dense shape must be a vector, saw:\n         ${a.shape}`);if(2!==s.shape.length)throw new Error(`Indices must be a matrix, saw:\n         ${s.shape}`);if(1!==r.shape.length)throw new Error(`Values must be a vector, saw:\n         ${r.shape}`);if(0!==i.shape.length)throw new Error(`Default value must be a scalar, saw:\n        ${i.shape}`);const o=n.readSync(s.dataId),l=n.readSync(r.dataId),u=n.readSync(a.dataId),c=n.readSync(i.dataId)[0],[h,d,p,f,m]=HR(o,s.shape,s.dtype,l,r.dtype,u,c);return[n.makeTensorInfo(d,s.dtype,h),n.makeTensorInfo([d[0]],r.dtype,p),n.makeTensorInfo([f.length],"bool",new Uint8Array(f.map((e=>Number(e))))),n.makeTensorInfo([m.length],s.dtype,new Int32Array(m))]}},Az={kernelName:$s,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n}=e,{inputIndices:s,inputShape:r,newShape:a}=t;if(2!==s.shape.length)throw new Error(`Input indices should be a matrix but received shape ${s.shape}`);if(1!==r.shape.length)throw new Error(`Input shape should be a vector but received shape ${r.shape}`);if(1!==a.shape.length)throw new Error(`Target shape should be a vector but received shape ${a.shape}`);const i=Array.from(n.readSync(r.dataId)),o=n.readSync(s.dataId),l=Array.from(n.readSync(a.dataId)),[u,c,h]=qR(o,s.shape,s.dtype,i,l);return[n.makeTensorInfo(c,s.dtype,u),n.makeTensorInfo([h.length],a.dtype,new Int32Array(h))]}},Rz={kernelName:Es,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n}=e,{data:s,indices:r,segmentIds:a}=t;if(s.shape.length<1)throw new Error("Data should be at least 1 dimensional but received scalar");if(1!==r.shape.length)throw new Error(`Indices should be a vector but received shape\n              ${r.shape}`);if(1!==a.shape.length)throw new Error(`Segment ids should be a vector but received shape\n              ${a.shape}`);const i=n.readSync(s.dataId),o=n.readSync(r.dataId),l=n.readSync(a.dataId),[u,c]=KR(i,s.shape,s.dtype,o,l,!0);return n.makeTensorInfo(c,s.dtype,u)}},_z={kernelName:As,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n}=e,{data:s,indices:r,segmentIds:a}=t;if(s.shape.length<1)throw new Error("Data should be at least 1 dimensional but received scalar");if(1!==r.shape.length)throw new Error(`Indices should be a vector but received shape\n             ${r.shape}`);if(1!==a.shape.length)throw new Error(`Segment ids should be a vector but received shape\n             ${a.shape}`);const i=n.readSync(s.dataId),o=n.readSync(r.dataId),l=n.readSync(a.dataId),[u,c]=KR(i,s.shape,s.dtype,o,l);return n.makeTensorInfo(c,s.dtype,u)}},Fz={kernelName:Rs,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{sparseIndices:r,sparseValues:a,defaultValue:i}=t,{outputShape:o}=s,{sliceRank:l,numUpdates:u,sliceSize:c,strides:h,outputSize:d}=Hh(0,r,o),p=!1;if("string"===a.dtype){const e=n.bufferSync(r),t=n.bufferSync(a),s=Rr(n.readSync(i.dataId)[0]),f=VR(e,t,o,d,c,u,l,h,s,p);return n.makeTensorInfo(o,f.dtype,f.values)}const f=new uz(u,l,r.shape.length,a.shape.length,h,[d,1],p),m=n.runWebGLProgram(f,[a,r,i],a.dtype),g=X_({inputs:{x:m},backend:n,attrs:{shape:o}});return n.disposeIntermediateTensorInfo(m),g}},Dz={kernelName:Ss,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{numOrSizeSplits:a,axis:i}=s,o=ge(i,r.shape)[0],l=pf(r,a,o),u=r.shape.length,c=new Array(u).fill(0),h=r.shape.slice();return l.map((e=>{const t=[...h];t[o]=e;const s=tD({inputs:{x:r},backend:n,attrs:{begin:c,size:t}});return c[o]+=e,s}))}},Oz="return sqrt(x);",Mz=W_({opSnippet:Oz,packedOpSnippet:Oz,cpuKernelImpl:XR}),Lz={kernelName:ks,backendName:"webgl",kernelFunc:Mz},zz={kernelName:Fs,backendName:"webgl",kernelFunc:W_({opSnippet:"return x * x;"})},Bz="return (a - b) * (a - b);",Pz=V_({opSnippet:Bz,packedOpSnippet:Bz}),Wz={kernelName:_s,backendName:"webgl",kernelFunc:Pz},Vz={kernelName:Ds,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{x:r}=t;if("string"!==r.dtype)throw new Error("Input must be of datatype string");const a=Ef(n.readSync(r.dataId)),i=YR(a,"string",s);return n.makeTensorInfo(r.shape,"string",i)}},Uz={kernelName:Ys,backendName:"webgl",kernelFunc:function({inputs:e,attrs:t,backend:n}){const{x:s}=e,r=m_+`\n    return x > 0.0 ? 1.0 : float(${t.alpha});\n  `,a=new f_(s.shape,r);return n.runWebGLProgram(a,[s],s.dtype)}};class Gz{constructor(e,t,n){this.variableNames=["x"],this.outputShape=n;const s=n.length,r=GA(n.length),a=GA(n.length);let i="";if(1===s)i="coords * strides + begin";else{let e=0;i=n.map(((t,s)=>(e++,1===n.length?`coords * strides[${s}] + begin[${s}]`:`coords[${e-1}] * strides[${s}] + begin[${s}]`))).join(",")}this.userCode=`\n      ${r} begin = ${r}(${e});\n      ${r} strides = ${r}(${t});\n\n      void main() {\n        ${a} coords = getOutputCoords();\n        setOutput(getX(${i}));\n      }\n    `}}const jz={kernelName:Os,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{begin:a,end:i,strides:o,beginMask:l,endMask:u,ellipsisMask:c,newAxisMask:h,shrinkAxisMask:d}=s,{finalShapeSparse:p,finalShape:f,isIdentity:m,sliceDim0:g,isSimpleSlice:y,begin:b,end:x,strides:w}=al(r.shape,a,i,o,l,u,c,h,d);let v;if(m)v=X_({inputs:{x:r},backend:n,attrs:{shape:f}});else if(g||y){ie(r.shape.length>=1,(()=>`Input must have rank at least 1, got: ${r.shape.length}`));const e=Ho(b,x,w),t=tD({inputs:{x:r},backend:n,attrs:{begin:b,size:e}});v=X_({inputs:{x:t},backend:n,attrs:{shape:f}}),n.disposeIntermediateTensorInfo(t)}else if(n.shouldExecuteOnCPU([r])){const e=n.readSync(r.dataId),t=Li(r.shape,r.dtype,e),s=JR(p,t,w,b);v=n.makeTensorInfo(f,r.dtype,s.values)}else{const e=new Gz(b,w,p);v=n.runWebGLProgram(e,[r],r.dtype)}const k=X_({inputs:{x:v},backend:n,attrs:{shape:f}});return n.disposeIntermediateTensorInfo(v),k}},Hz={kernelName:Ms,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{separator:r,nGramWidths:a,leftPad:i,rightPad:o,padWidth:l,preserveShortSequences:u}=s,{data:c,dataSplits:h}=t,d=n.readSync(c.dataId),p=n.readSync(h.dataId),[f,m]=ZR(d,p,r,a,i,o,l,u);return[n.makeTensorInfo([f.length],"string",f),n.makeTensorInfo(h.shape,"int32",m)]}},qz={kernelName:Ls,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{skipEmpty:r}=s,{input:a,delimiter:i}=t;if("string"!==a.dtype)throw new Error("Input must be of datatype string");if(1!==a.shape.length)throw new Error(`Input must be a vector, got shape: ${a.shape}`);if(0!==i.shape.length)throw new Error(`Delimiter must be a scalar, got shape: ${i.shape}`);const o=n.readSync(a.dataId),l=n.readSync(i.dataId)[0],[u,c,h]=QR(o,l,r),d=c.length;return[n.makeTensorInfo([d,2],"int32",u),n.makeTensorInfo([d],"string",c),n.makeTensorInfo([2],"int32",new Int32Array(h))]}},Kz={kernelName:zs,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{numBuckets:r}=s,{input:a}=t;if("string"!==a.dtype)throw new Error("Input must be of datatype string");if(r<=0)throw new Error("Number of buckets must be at least 1");const i=n.readSync(a.dataId),o=e_(i,r);return n.makeTensorInfo(a.shape,"int32",o)}},Xz=W_({opSnippet:"return tan(x);"}),Yz={kernelName:Ps,backendName:"webgl",kernelFunc:Xz},Jz=W_({opSnippet:"\n  float e2x = exp(-2.0 * abs(x));\n  return sign(x) * (1.0 - e2x) / (1.0 + e2x);\n"}),Zz={kernelName:Ws,backendName:"webgl",kernelFunc:Jz},Qz={kernelName:ds,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{tensor:r,indices:a,updates:i}=t,{}=s,{sliceRank:o,numUpdates:l,sliceSize:u,strides:c,outputSize:h}=Hh(0,a,r.shape),d=[h/u,u];if(0===h)return n.makeTensorInfo(r.shape,a.dtype);const p=X_({inputs:{x:a},backend:n,attrs:{shape:[l,o]}}),f=X_({inputs:{x:i},backend:n,attrs:{shape:[l,u]}}),m=X_({inputs:{x:r},backend:n,attrs:{shape:d}}),g=new uz(l,o,p.shape.length,f.shape.length,c,d,!1,!0),y=n.runWebGLProgram(g,[f,p,m],m.dtype),b=X_({inputs:{x:y},backend:n,attrs:{shape:r.shape}});return n.disposeIntermediateTensorInfo(p),n.disposeIntermediateTensorInfo(f),n.disposeIntermediateTensorInfo(m),n.disposeIntermediateTensorInfo(y),b}};class eB{constructor(e,t){this.variableNames=["A"];const n=new Array(e.length);for(let s=0;s<n.length;s++)n[s]=e[s]*t[s];this.outputShape=n,this.rank=n.length;const s=GA(this.rank),r=function(e){const t=e.length;if(t>5)throw Error(`Tile for rank ${t} is not yet supported`);if(1===t)return`imod(resRC, ${e[0]})`;const n=["resRC.x","resRC.y","resRC.z","resRC.w","resRC.u"],s=[];for(let t=0;t<e.length;t++)s.push(`imod(${n[t]}, ${e[t]})`);return s.join()}(e);this.userCode=`\n      void main() {\n        ${s} resRC = getOutputCoords();\n        setOutput(getA(${r}));\n      }\n    `}}function tB(e){const{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{reps:a}=s;if("string"===r.dtype||r.shape.length>5){const e=n.readSync(r.dataId),t="string"===r.dtype?e.map((e=>Rr(e))):e,s=Li(r.shape,r.dtype,t),i=n_(s,a);return n.makeTensorInfo(i.shape,i.dtype,i.values)}const i=new eB(r.shape,a);return n.runWebGLProgram(i,[r],r.dtype)}const nB={kernelName:Vs,backendName:"webgl",kernelFunc:tB};class sB{constructor(e){this.variableNames=["x","indices"],this.customUniforms=[{name:"n",type:"int"},{name:"firstPass",type:"int"},{name:"negativeInf",type:"float"},{name:"dir",type:"int"},{name:"inc",type:"int"}],this.outputShape=e,this.userCode="\n       void main() {\n         ivec2 coords = getOutputCoords();\n         int batch = coords[0];\n         int elemIdx = coords[1];\n\n         // We compare elements pair-wise within a group of size 2 * inc.\n         // The comparing rule for each group alternates between ascending\n         // and descending. Within each group, we compare each pair at\n         // positions i and i+inc. To decide whether an element at position i\n         // is x0 or x1, we mod it by 2 * inc, if the result is smaller than\n         // inc, it is in the first half of the group, we denote it as x0,\n         // otherwise we denote it as x1.\n         // For example, as shown in the Bitonic top K paper referenced above,\n         // Figure5(a) shows that element[1] is in the\n         // second half of the group when group size is 2, but it is in the\n         // first half of the group when group size is 4.\n\n         bool isFirstInPair = imod(elemIdx, 2 * inc) < inc;\n         int i = isFirstInPair ? elemIdx : elemIdx - inc;\n\n         int i0 = firstPass == 1 ? i : int(getIndices(batch, i));\n         int i1 = firstPass == 1 ? i + inc : int(getIndices(batch, i + inc));\n         float x0 = i0 < n ? getX(batch, i0) : negativeInf;\n         float x1 = i1 < n ? getX(batch, i1) : negativeInf;\n\n         // Denotes which direction indices are in (ascending or descending).\n         bool reverse = imod(elemIdx, 2 * dir) >= dir;\n         bool isGreater = x0 > x1 || (x0 == x1 && i1 > i0);\n         if (reverse == isGreater) { // Elements in opposite order of direction\n           int iTemp = i0;\n           i0 = i1;\n           i1 = iTemp;\n         }\n         if (isFirstInPair) {\n            setOutput(float(i0));\n         } else {\n            setOutput(float(i1));\n         }\n       }\n     "}}class rB{constructor(e){this.variableNames=["x","indices"],this.customUniforms=[{name:"n",type:"int"},{name:"firstPass",type:"int"},{name:"k",type:"int"}],this.outputShape=e,this.userCode="\n    void main() {\n         // Takes max of indices (0, k), (1, k + 1), (2, k + 2) ...\n         ivec2 coords = getOutputCoords();\n         int batch = coords[0];\n         int elemIdx = coords[1];\n\n         // The output size is half of the previous size.\n         // If the previous sequence is | | | | _ _ _ _  | | | |  _ _ _ _ (k=4),\n         // we only need to output the indices at positions |, the indices at\n         // positions _ can be thrown away, see Figure5(b) After Phase 2\n         // (Merge phase) in the Bitonic Top K paper referenced above.\n         // For example, the paper shows we only need to output the orange bars.\n         // The output sequence should look like this | | | | | | | |.\n         // Because the sequence is halved, to map the output index back\n         // to the previous sequence to find the corresponding value,\n         // we need to double the index. When we double the index,\n         // we basically interpolate a position, so 2i looks like\n         // | _ | _ | _ | _ | _ | _ | _. We move the | to the first k position\n         // of each 2k positions by - elemIdx % k. E.g. for output at\n         // index 4,5,6,7, we want to get the corresponding element at\n         // original index 8,9,10,11, for output at index 8,9,10,11,\n         // we want to get the corresponding element at original index\n         // 16,17,18,19, so on and so forth.\n\n         int i = elemIdx < k ? elemIdx : (elemIdx * 2 - imod(elemIdx, k));\n         int i0 = firstPass == 1 ? i : int(getIndices(batch, i));\n         int i1 = firstPass == 1 ? i + k : int(getIndices(batch, i + k));\n\n         float x0 = getX(batch, i0);\n         float x1 = i1 < n ? getX(batch, i1) : x0;\n\n         setOutput(x0 >= x1 ? float(i0) : float(i1));\n       }\n     "}}function aB(e,t){null!==t&&e.disposeIntermediateTensorInfo(t)}function iB(e){let t=1;for(;t<e;)t*=2;return t}const oB={kernelName:Us,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{k:a,sorted:i}=s,o=Pe().getNumber("TOPK_LAST_DIM_CPU_HANDOFF_SIZE_THRESHOLD"),l=Pe().getNumber("TOPK_K_CPU_HANDOFF_THRESHOLD"),u=r.shape,c=u[u.length-1];if(n.shouldExecuteOnCPU([r])||c<o||a>l){const e=n.readSync(r.dataId),[t,s]=s_(e,u,r.dtype,a,i);return[n.makeTensorInfo(t.shape,t.dtype,t.values),n.makeTensorInfo(s.shape,s.dtype,s.values)]}if(0===a)return u[u.length-1]=0,[n.makeTensorInfo(u,r.dtype,[]),n.makeTensorInfo(u,"int32",[])];if(1===c)return[r,BO({attrs:{shape:u,dtype:"int32",value:0},backend:n})];const h=n.texData.get(r.dataId),d=null!==h&&h.isPacked,p=d?n.unpackTensor(r):r,f=ue(u)/c,m=X_({inputs:{x:p},attrs:{shape:[f,c]},backend:n});d&&aB(n,p);const g=iB(a),y=iB(c);let b=null;const x=()=>null===b?[m,m]:[m,b],w=(e,t,s)=>{const r=x(),a=new sB(s),i=[[c],[null===b?1:0],[Number.NEGATIVE_INFINITY],[e],[t]],o=b;b=n.runWebGLProgram(a,r,"int32",i),aB(n,o)};for(let e=1;e<g;e*=2){const t=2*e;for(let n=e;n>=1;n/=2)w(t,n,[f,y])}for(let e=y;e>g;e/=2){const t=x(),s=new rB([f,e/2]),r=[[c],[null===b?1:0],[g]],a=b;b=n.runWebGLProgram(s,t,"int32",r),aB(n,a);const i=g/2,o=2*i;for(let e=i;e>=1;e/=2)w(o,e,b.shape)}let v=b;b=tD({inputs:{x:b},backend:n,attrs:{begin:0,size:[f,a]}}),aB(n,v);let k=rM({inputs:{x:m,indices:b},backend:n,attrs:{axis:1,batchDims:1}});aB(n,m);const I=u.slice(0,-1);I.push(a),v=b,b=X_({inputs:{x:b},attrs:{shape:I},backend:n}),aB(n,v);const N=k;return k=X_({inputs:{x:k},attrs:{shape:I},backend:n}),aB(n,N),[k,b]}};class lB{constructor(e,t,n,s,r,a){this.variableNames=["Image","Transforms"],this.outputShape=a;const i="nearest"===n?1:2;let o;switch(s){case"constant":default:o=1;break;case"reflect":o=2;break;case"wrap":o=3;break;case"nearest":o=4}this.userCode=`\n            float mapCoord(float outCoord, float len) {\n              float inCoord = outCoord;\n              if(${o} == 2) {\n                if (inCoord < 0.0) {\n                  if (len <= 1.0) {\n                    inCoord = 0.0;\n                  } else {\n                    float sz2 = 2.0 * len;\n                    if (inCoord < sz2) {\n                      inCoord = sz2 * float(int(float(-inCoord / sz2))) +\n                      inCoord;\n                    }\n                    inCoord = inCoord < -len ? inCoord + sz2 : -inCoord - 1.0;\n                  }\n                } else if (inCoord > len - 1.0) {\n                  if (len <= 1.0) {\n                    inCoord = 0.0;\n                  } else {\n                    float sz2 = 2.0 * len;\n                    inCoord -= sz2 * float(int(float(inCoord / sz2)));\n                    if (inCoord >= len) {\n                      inCoord = sz2 - inCoord - 1.0;\n                    }\n                  }\n                }\n                return clamp(inCoord, 0.0, len - 1.0);\n              } else if (${o} == 3) {\n                if (inCoord < 0.0) {\n                  if (len <= 1.0) {\n                    inCoord = 0.0;\n                  } else {\n                    float sz = len - 1.0;\n                    inCoord += len * (float(int(float(-inCoord / sz))) + 1.0);\n                  }\n                } else if (inCoord > len - 1.0) {\n                  if (len <= 1.0) {\n                    inCoord = 0.0;\n                  } else {\n                    float sz = len - 1.0;\n                    inCoord -= len * float(int(float(inCoord / sz)));\n                  }\n                }\n                return clamp(inCoord, 0.0, len - 1.0);\n              } else if (${o} == 4) {\n                return clamp(outCoord, 0.0, len - 1.0);\n              } else {\n                return outCoord;\n              }\n            }\n\n            float readWithFillValue(int batch, int coordY, int coordX,\n              int channel) {\n              float outputValue;\n              if (0 <= coordY && coordY < ${e} && 0 <= coordX && coordX < ${t}) {\n                  outputValue = getImage(batch, coordY, coordX, channel);\n              } else {\n                outputValue = float(${r});\n              }\n              return outputValue;\n            }\n\n            void main() {\n              ivec4 coords = getOutputCoords();\n              float outputValue;\n              int batch = coords[0];\n              int x = coords[2];\n              int y = coords[1];\n              int channel = coords[3];\n              float xf = float(x);\n              float yf = float(y);\n              float a1 = getTransforms(batch, 0);\n              float a2 = getTransforms(batch, 1);\n              float a3 = getTransforms(batch, 2);\n              float b1 = getTransforms(batch, 3);\n              float b2 = getTransforms(batch, 4);\n              float b3 = getTransforms(batch, 5);\n              float c1 = getTransforms(batch, 6);\n              float c2 = getTransforms(batch, 7);\n              float projection = c1 * xf + c2 * yf + 1.0;\n              if (projection == 0.0) {\n                outputValue = float(${r});\n              } else {\n                float inX = (a1 * xf + a2 * yf + a3) / projection;\n                float inY = (b1 * xf + b2 * yf + b3) / projection;\n                float mapX = mapCoord(inX, float(${t}));\n                float mapY = mapCoord(inY, float(${e}));\n\n                if (${i} == 1) {\n                  int coordY = int(round(mapY));\n                  int coordX = int(round(mapX));\n                  outputValue = readWithFillValue(batch, coordY, coordX,\n                    channel);\n                } else {\n                  float yFloor = floor(mapY);\n                  float xFloor = floor(mapX);\n                  float yCeil = yFloor + 1.0;\n                  float xCeil = xFloor + 1.0;\n                  float valueYFloor = (xCeil - mapX) *\n                  readWithFillValue(batch, int(yFloor), int(xFloor), channel) +\n                  (mapX - xFloor) *\n                  readWithFillValue(batch, int(yFloor), int(xCeil), channel);\n                  float valueYCeil = (xCeil - mapX) *\n                  readWithFillValue(batch, int(yCeil), int(xFloor), channel) +\n                  (mapX - xFloor) *\n                  readWithFillValue(batch, int(yCeil), int(xCeil), channel);\n                  outputValue = (yCeil - mapY) * valueYFloor +\n                  (mapY - yFloor) * valueYCeil;\n                }\n              }\n              setOutput(outputValue);\n            }\n        `}}const uB={kernelName:Gs,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{image:r,transforms:a}=t,{interpolation:i,fillMode:o,fillValue:l,outputShape:u}=s,[c,h,d,p]=r.shape,[f,m]=null!=u?u:[h,d],g=new lB(h,d,i,o,l,[c,f,m,p]);return n.runWebGLProgram(g,[r,a],"float32")}},cB={kernelName:Hs,backendName:"webgl",kernelFunc:function(e){const{inputs:t,attrs:n,backend:s}=e,{axis:r}=n,{x:a}=t;CA(a,"unique"),console.warn("WARNING: ","UI might be locked temporarily as data is being downloaded");const i=s.readSync(a.dataId),{outputValues:o,outputShape:l,indices:u}=a_(i,r,a.shape,a.dtype);return[s.makeTensorInfo(l,a.dtype,o),s.makeTensorInfo([u.length],"int32",u)]}},hB={kernelName:qs,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{value:r}=t;let{axis:a}=s;a<0&&(a+=r.shape.length);const i=r,o=i.shape.length,l=r.shape[a],u=new Array(o-1);let c=0;for(let e=0;e<o;e++)e!==a&&(u[c++]=i.shape[e]);const h=[],d=new Array(o).fill(0),p=i.shape.slice();p[a]=1;const f=new Array(l);for(let e=0;e<f.length;e++){d[a]=e;const t=tD({inputs:{x:i},backend:n,attrs:{begin:d,size:p}}),s=X_({inputs:{x:t},backend:n,attrs:{shape:u}});f[e]=s,h.push(t)}return h.forEach((e=>n.disposeIntermediateTensorInfo(e))),f}};class dB{constructor(e,t){this.variableNames=["x","segmentIds"];const n=e.windowSize,s=e.batchSize,r=e.inSize,a=e.numSegments,i=a*Math.ceil(r/n);this.outputShape=[s,i];const o=4*Math.floor(n/4),l=n%4,u="\n        sumValue += dot(values, segFilter);\n    ";let c="";r%n>0&&(c=`\n        if (inIdx < 0 || inIdx >= ${r}) {\n          return initializationValue;\n        }\n      `);let h="";r%n>0&&(h=`\n        if (inIdx < 0 || inIdx >= ${r}) {\n          return -1.0;\n        }\n      `),this.userCode=`\n      const float initializationValue = 0.0;\n\n      float getValue(int batch, int inIdx) {\n        ${c}\n        return getX(batch, inIdx);\n      }\n\n      float getSegmentIdAtIndex(int inIdx) {\n        ${h}\n        return getSegmentIds(inIdx);\n      }\n\n      void main() {\n        ivec2 coords = getOutputCoords();\n        int batch = coords[0];\n        int outIdx = coords[1];\n        int inOffset = int(floor(float(outIdx) / float(\n          ${a})) * float(${n}));\n        int currentSeg = int(mod(float(outIdx), float(${a})));\n\n        float sumValue = 0.0;\n\n        for (int i = 0; i < ${o}; i += 4) {\n          int inIdx = inOffset + i;\n          vec4 values = vec4(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1),\n            getValue(batch, inIdx + 2),\n            getValue(batch, inIdx + 3)\n          );\n\n          vec4 segFilter = vec4(\n            int(getSegmentIdAtIndex(inIdx)) == currentSeg ? 1 : 0,\n            int(getSegmentIdAtIndex(inIdx + 1)) == currentSeg ? 1 : 0,\n            int(getSegmentIdAtIndex(inIdx + 2)) == currentSeg ? 1 : 0,\n            int(getSegmentIdAtIndex(inIdx + 3)) == currentSeg ? 1 : 0\n          );\n\n          ${u}\n        }\n\n        int inIdx = inOffset + ${o};\n        if (${1===l}) {\n          vec4 values = vec4(\n            getValue(batch, inIdx),\n            initializationValue,\n            initializationValue,\n            initializationValue\n          );\n\n          int inIdxSeg = int(getSegmentIdAtIndex(inIdx));\n\n          vec4 segFilter = vec4(\n            int(getSegmentIdAtIndex(inIdx)) == currentSeg ? 1 : 0,\n            0,\n            0,\n            0\n          );\n\n          ${u}\n        } else if (${2===l}) {\n          vec4 values = vec4(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1),\n            initializationValue,\n            initializationValue\n          );\n\n          vec4 segFilter = vec4(\n            int(getSegmentIdAtIndex(inIdx)) == currentSeg ? 1 : 0,\n            int(getSegmentIdAtIndex(inIdx + 1)) == currentSeg ? 1 : 0,\n              0,\n              0\n          );\n\n          ${u}\n        } else if (${3===l}) {\n          vec4 values = vec4(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1),\n            getValue(batch, inIdx + 2),\n            initializationValue\n          );\n\n          vec4 segFilter = vec4(\n            int(getSegmentIdAtIndex(inIdx)) == currentSeg ? 1 : 0,\n            int(getSegmentIdAtIndex(inIdx + 1)) == currentSeg ? 1 : 0,\n            int(getSegmentIdAtIndex(inIdx + 2)) == currentSeg ? 1 : 0,\n            0\n          );\n\n          ${u}\n        }\n        setOutput(sumValue);\n      }\n    `}}const pB={kernelName:Ks,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{x:r,segmentIds:a}=t,{numSegments:i}=s,o=r.shape.length,l=[];let u=0;const c=Fu([u],o);let h=r;null!=c&&(h=aF({inputs:{x:r},backend:n,attrs:{perm:c}}),l.push(h),u=Ou(1,o)[0]);const d=Cf(h.shape,u,i),p=ue([h.shape[u]]),f=X_({inputs:{x:h},backend:n,attrs:{shape:[-1,p]}});l.push(f);const m=na(r.dtype),g=(e,t,s,r,a)=>{const i=e.shape[0],o=e.shape[1],u=Tf(o,a),c=new dB({windowSize:u,inSize:o,batchSize:i,numSegments:a},t),h=n.compileAndRun(c,[e,s],r);if(l.push(h),h.shape[1]===a)return h;const d=ML({backend:n,attrs:{start:0,stop:a,step:1,dtype:"float32"}}),p=tB({inputs:{x:d},backend:n,attrs:{reps:[o/u]}});return l.push(d),l.push(p),g(h,t,p,r,a)},y=X_({inputs:{x:g(f,"unsortedSegmentSum",a,m,i)},backend:n,attrs:{shape:d}});let b=y;if(null!=c){l.push(y);const e=Du(c);b=aF({inputs:{x:b},backend:n,attrs:{perm:e}})}return l.forEach((e=>n.disposeIntermediateTensorInfo(e))),b}},fB=[lF,cF,dF,fF,yF,wF,vF,kF,$F,EF,RF,FF,OF,LF,BF,VF,UF,HF,qF,KF,JF,sD,rD,aD,iD,hD,fD,yD,F_,wD,$D,MD,WD,UD,GD,jD,HD,KD,YD,ZD,rO,aO,iO,lO,hO,fO,mO,yO,xO,wO,kO,IO,SO,CO,EO,RO,DO,LO,PO,VO,jO,qO,YO,QO,eM,nM,aM,oM,uM,R_,cM,SD,dM,fM,gM,M_,bM,wM,vM,IM,SM,CM,EM,RM,DM,MM,zM,PM,WM,VM,jM,HM,qM,KM,XM,JM,eL,nL,hL,K_,pL,mL,yL,xL,lD,vL,NL,SL,EL,RL,B_,_L,FL,DL,OL,LL,cD,aL,BL,WL,UL,Y_,HL,KL,JL,QL,nz,rz,iz,lz,hz,pz,mz,yz,xz,vz,Iz,Sz,nD,cL,Cz,$z,Ez,Az,Rz,_z,Fz,Dz,Lz,zz,Wz,Vz,Uz,jz,Hz,qz,Kz,lL,rF,Yz,Zz,Qz,nB,oB,uB,iF,cB,hB,pB,IL];for(const e of fB)ur(e);const mB=224,gB=["A","B","C","D","E","F","G","H","I","J","K","L","M","N","O","P","Q","R","S","T","U","V","W","X","Y","Z","del","blank","space"],yB=[[0,1],[1,2],[2,3],[3,4],[0,5],[5,6],[6,7],[7,8],[0,9],[9,10],[10,11],[11,12],[0,13],[13,14],[14,15],[15,16],[0,17],[17,18],[18,19],[19,20],[0,5],[5,9],[9,13],[13,17]],bB=class{constructor(){this.model=null,this.hands=null,this.predQueue=[],this.PRED_QUEUE_MAXLEN=5,this.lastStableLabel="",this.isDetecting=!1,this.onResultCallback=null,this.processingFrame=!1,this.lastProcessingTime=Date.now(),this.processingInterval=100,this.confidenceThreshold=.7}async initialize(){try{2===Pe().get("WEBGL_VERSION")&&(Pe().set("WEBGL_FORCE_F16_TEXTURES",!0),Pe().set("WEBGL_DELETE_TEXTURE_THRESHOLD",0)),this.model=await async function(t,n={},s=e){if(null==t)throw new Error("modelUrl in loadGraphModel() cannot be null. Please provide a url or an IOHandler that loads the model");null==n&&(n={}),n.fromTFHub&&"string"==typeof t&&(t=function(e){return e.endsWith("/")||(e+="/"),`${e}model.json?tfjs-format=file`}(t));const r=new Pk(t,n,s);return await r.load(),r}("./models/model.json");const t=Nc([1,mB,mB,3]),n={keras_tensor_1766:t};return Fa([t,this.model.execute(n)]),this.hands=new Z.Hands({locateFile:e=>`https://cdn.jsdelivr.net/npm/@mediapipe/hands/${e}`}),this.hands.setOptions({maxNumHands:1,modelComplexity:0,minDetectionConfidence:.7,minTrackingConfidence:.5}),this.hands.onResults((e=>this.onHandsResults(e))),!0}catch(e){return console.error("Error initializing SignDetector:",e),!1}}setResultCallback(e){this.onResultCallback=e}async processFrame(e,t){if(!this.isDetecting||!this.hands||!this.model||this.processingFrame)return;const n=Date.now();if(!(n-this.lastProcessingTime<this.processingInterval))try{this.processingFrame=!0,this.lastProcessingTime=n;const t=document.createElement("canvas");t.width=640,t.height=480,t.getContext("2d").drawImage(e,0,0,t.width,t.height),await this.hands.send({image:t}),t.remove()}catch(e){console.error("Error processing frame:",e)}finally{this.processingFrame=!1,window.gc&&window.gc()}}async onHandsResults(e){if(!e.multiHandLandmarks?.length)return;const t=e.multiHandLandmarks[0],n=document.querySelector("#previewPlayer"),s=document.querySelector("#detectionCanvas"),r=s.getContext("2d");r.clearRect(0,0,s.width,s.height);let a=1/0,i=1/0,o=-1/0,l=-1/0;t.forEach((e=>{const t=e.x*s.width,n=e.y*s.height;a=Math.min(a,t),i=Math.min(i,n),o=Math.max(o,t),l=Math.max(l,n)})),a=Math.max(0,a-20),i=Math.max(0,i-20),o=Math.min(s.width,o+20),l=Math.min(s.height,l+20);try{if(r.strokeStyle="#00ff00",r.lineWidth=2,r.strokeRect(a,i,o-a,l-i),r.fillStyle="#ff0000",t.forEach((e=>{const t=e.x*s.width,n=e.y*s.height;r.beginPath(),r.arc(t,n,3,0,2*Math.PI),r.fill()})),r.strokeStyle="#00ff00",r.lineWidth=2,yB.forEach((([e,n])=>{const a=t[e],i=t[n];r.beginPath(),r.moveTo(a.x*s.width,a.y*s.height),r.lineTo(i.x*s.width,i.y*s.height),r.stroke()})),this.isDetecting&&Date.now()-this.lastProcessingTime>=this.processingInterval){const e=await this.getPrediction(n,t);if(e){this.predQueue.push(e),this.predQueue.length>this.PRED_QUEUE_MAXLEN&&this.predQueue.shift();const t=this.getStablePrediction();t&&this.onResultCallback&&this.onResultCallback(t)}}}catch(e){console.error("Error in onHandsResults:",e)}}async getPrediction(e,t){try{const{handImage:n,bbox:s}=this.extractHandRegion(e,t);if(!n)return null;const r=_a((()=>Wo(n).resizeBilinear([mB,mB]).expandDims(0).div(255))),a={keras_tensor_1766:r},i=await this.model.execute(a),o=await i.data(),l=Math.max(...o),u=o.indexOf(l);return Fa([r,i]),n.remove(),l>=this.confidenceThreshold?gB[u]:null}catch(e){return console.error("Error getting prediction:",e),null}}extractHandRegion(e,t){let n=1/0,s=1/0,r=-1/0,a=-1/0;t.forEach((t=>{const i=t.x*e.videoWidth,o=t.y*e.videoHeight;n=Math.min(n,i),s=Math.min(s,o),r=Math.max(r,i),a=Math.max(a,o)})),n=Math.max(0,n-25),s=Math.max(0,s-25),r=Math.min(e.videoWidth,r+25),a=Math.min(e.videoHeight,a+25);const i=r-n,o=a-s;if(i<=0||o<=0)return{handImage:null,bbox:null};const l=document.createElement("canvas");return l.width=i,l.height=o,l.getContext("2d").drawImage(e,n,s,i,o,0,0,i,o),{handImage:l,bbox:{x:n,y:s,width:i,height:o}}}getStablePrediction(){if(this.predQueue.length<this.PRED_QUEUE_MAXLEN)return null;const e={};this.predQueue.forEach((t=>{e[t]=(e[t]||0)+1}));const t=Math.floor(.6*this.PRED_QUEUE_MAXLEN);for(const[n,s]of Object.entries(e))if(s>=t&&n!==this.lastStableLabel)return this.lastStableLabel=n,n;return null}start(){this.isDetecting=!0,this.predQueue=[],this.lastStableLabel="",this.processingFrame=!1,this.lastProcessingTime=0}stop(){this.isDetecting=!1,this.predQueue=[],this.lastStableLabel="",this.processingFrame=!1,this.model&&Fa(this.model),pa.disposeVariables()}},xB={render:async()=>'\n            <div class="min-h-screen bg-[#FAF5E5]">\n                \x3c!-- Header/Navbar --\x3e\n                <header class="bg-white shadow">\n                    <nav class="container mx-auto px-4 py-4 flex justify-between items-center">\n                        <a href="#" class="w-36 md:w-40">\n                            <img src="../img/logo-tabir.png" alt="Logo" />\n                        </a>\n                        <div class="flex items-center gap-4">\n                            <button id="logoutBtn" class="text-[#013366] hover:text-[#4A708B]">Logout</button>\n                        </div>\n                    </nav>\n                </header>\n\n                \x3c!-- Main Content --\x3e\n                <main class="container mx-auto px-4 py-8">\n                    <div class="bg-white rounded-lg shadow p-6">\n                        <h1 class="text-2xl font-bold text-[#013366] mb-6">Welcome to Your Dashboard</h1>\n                        \n                        \x3c!-- Quick Actions --\x3e\n                        <div class="grid grid-cols-1 md:grid-cols-2 gap-6 mb-8">\n                            <div class="bg-[#4A708B] text-white p-6 rounded-lg">\n                                <h2 class="text-xl font-semibold mb-2">Upload Video</h2>\n                                <p class="mb-4">Upload a pre-recorded video for sign language interpretation</p>\n                                <div class="space-y-4">\n                                    <input type="file" id="videoUpload" accept="video/*" class="hidden" />\n                                    <label for="videoUpload" \n                                        class="inline-block bg-white text-[#4A708B] px-4 py-2 rounded cursor-pointer hover:bg-gray-100 transition-colors">\n                                        Choose Video\n                                    </label>\n                                    <div id="uploadStatus" class="text-sm hidden">\n                                        <p class="file-name"></p>\n                                        <div class="progress-bar w-full bg-gray-200 rounded-full h-2.5 mt-2">\n                                            <div class="progress bg-white h-2.5 rounded-full" style="width: 0%"></div>\n                                        </div>\n                                    </div>\n                                </div>\n                            </div>\n                            <div class="bg-[#7A8052] text-white p-6 rounded-lg">\n                                <h2 class="text-xl font-semibold mb-2">Live Camera</h2>\n                                <p class="mb-4">Use your camera for real-time sign language interpretation</p>\n                                <button id="startCamera" class="bg-white text-[#7A8052] px-4 py-2 rounded hover:bg-gray-100 transition-colors">\n                                    Start Camera\n                                </button>\n                            </div>\n                        </div>\n\n                        \x3c!-- Video Preview and Detection --\x3e\n                        <div id="videoPreview" class="hidden mb-8">\n                            <h2 class="text-xl font-semibold text-[#013366] mb-4">Video Preview</h2>\n                            <div class="relative aspect-video bg-gray-100 rounded-lg overflow-hidden">\n                                <video id="previewPlayer" class="w-full h-full object-contain" playsinline></video>\n                                <canvas id="detectionCanvas" class="absolute top-0 left-0 w-full h-full pointer-events-none"></canvas>\n                            </div>\n                            <div class="mt-4">\n                                <h3 class="font-semibold text-[#013366] mb-2">Detected Signs</h3>\n                                <div id="detectionResults" class="p-4 bg-gray-50 rounded-lg min-h-[50px]">\n                                    <p class="text-gray-600">No signs detected yet...</p>\n                                </div>\n                            </div>\n                        </div>\n\n                        \x3c!-- Recent Activity --\x3e\n                        <div class="bg-gray-50 p-6 rounded-lg">\n                            <h2 class="text-xl font-semibold text-[#013366] mb-4">Recent Activity</h2>\n                            <div id="activityList" class="space-y-4">\n                                <p class="text-gray-600">No recent activity to show.</p>\n                            </div>\n                        </div>\n                    </div>\n                </main>\n            </div>\n        ',async afterRender(){let e=null,t=null,n=null;const s=document.getElementById("logoutBtn"),r=document.getElementById("videoUpload"),a=document.getElementById("uploadStatus"),i=document.getElementById("videoPreview"),o=document.getElementById("previewPlayer"),l=document.getElementById("startCamera"),u=document.getElementById("activityList"),c=document.getElementById("detectionResults"),h=document.getElementById("detectionCanvas");e=new bB,await e.initialize(),e.setResultCallback((e=>{const t=document.getElementById("detectionResults");"No signs detected yet..."===t.querySelector("p")?.textContent&&(t.innerHTML="");const n=document.createElement("span");for(n.className="inline-block bg-[#013366] text-white px-3 py-1 rounded-full text-sm mr-2 mb-2",n.textContent=e,t.firstChild?t.insertBefore(n,t.firstChild):t.appendChild(n);t.children.length>10;)t.removeChild(t.lastChild);const s=document.createElement("div");s.className="flex items-center justify-between p-4 bg-white rounded-lg shadow mb-2",s.innerHTML=`\n                <div>\n                    <h3 class="font-semibold text-[#013366]">Sign Detected</h3>\n                    <p class="text-sm text-gray-600">Detected sign: ${e}</p>\n                </div>\n                <span class="text-[#013366]">🤚</span>\n            `,"No recent activity to show."===u.firstChild.textContent&&(u.innerHTML=""),u.insertBefore(s,u.firstChild)}));const d=()=>{e&&e.stop(),n&&(cancelAnimationFrame(n),n=null),t&&(t.getTracks().forEach((e=>e.stop())),t=null),o&&(o.srcObject=null),h&&h.getContext("2d").clearRect(0,0,h.width,h.height),i&&i.classList.add("hidden"),c&&(c.innerHTML='<p class="text-gray-600">No signs detected yet...</p>'),l&&(l.textContent="Start Camera",l.className="bg-white text-[#7A8052] px-4 py-2 rounded hover:bg-gray-100 transition-colors")};s?.addEventListener("click",(()=>{d(),localStorage.removeItem("auth_token"),window.location.hash="#/"})),l?.addEventListener("click",(async()=>{if("Stop Camera"!==l.textContent)try{function s(){!o||o.paused||o.ended||(e.processFrame(o,h),n=requestAnimationFrame(s))}l.textContent="Starting...",l.disabled=!0,t=await navigator.mediaDevices.getUserMedia({video:{width:{ideal:1280},height:{ideal:720}}}),o.srcObject=t,i.classList.remove("hidden"),c.innerHTML='<p class="text-gray-600">No signs detected yet...</p>',await new Promise((e=>{o.onloadedmetadata=()=>{o.play(),e()}})),h.width=o.videoWidth,h.height=o.videoHeight,e.start(),l.textContent="Stop Camera",l.className="bg-red-500 text-white px-4 py-2 rounded hover:bg-red-600 transition-colors",l.disabled=!1,s()}catch(r){console.error("Camera error:",r),alert("Could not access camera: "+r.message),d()}else d()})),r?.addEventListener("change",(async t=>{const n=t.target.files?.[0];if(!n)return;a.classList.remove("hidden"),a.querySelector(".file-name").textContent=n.name;const s=URL.createObjectURL(n);o.src=s,i.classList.remove("hidden"),o.onloadedmetadata=()=>{h.width=o.videoWidth,h.height=o.videoHeight},o.onplay=()=>{e.start(),function t(){o.paused||o.ended||(e.processFrame(o,h),requestAnimationFrame(t))}()};try{const e=localStorage.getItem("auth_token");if(!e)throw new Error("No authentication token found");const t=await fetch("YOUR_UPLOAD_ENDPOINT",{method:"POST",headers:{Authorization:`Bearer ${e}`},body:formData}),s=await t.json();if(!t.ok)throw new Error(s.message||"Upload failed");{const e=document.createElement("div");e.className="flex items-center justify-between p-4 bg-white rounded-lg shadow",e.innerHTML=`\n                        <div>\n                            <h3 class="font-semibold text-[#013366]">${n.name}</h3>\n                            <p class="text-sm text-gray-600">Uploaded successfully</p>\n                        </div>\n                        <span class="text-green-500">✓</span>\n                    `,"No recent activity to show."===u.firstChild.textContent&&(u.innerHTML=""),u.insertBefore(e,u.firstChild)}}catch(e){console.error("Upload error:",e),alert("Failed to upload video: "+e.message),a.classList.add("hidden")}}))}},wB={"/":{render:()=>C.render(),afterRender:()=>C.afterRender(),needsAuth:!1},"/login":{render:()=>Y.render(),afterRender:()=>Y.afterRender(),needsAuth:!1},"/register":{render:()=>J.render(),afterRender:()=>J.afterRender(),needsAuth:!1},"/dashboard":{render:()=>xB.render(),afterRender:()=>xB.afterRender(),needsAuth:!0}},vB=new class{constructor({content:e}){this._content=e}async renderPage(){const e=window.location.hash.slice(1).toLowerCase(),t=wB[e]||wB["/"];!t.needsAuth||localStorage.getItem("auth_token")?"/login"!==e&&"/register"!==e||!localStorage.getItem("auth_token")?(this._content.innerHTML=await t.render(),await t.afterRender()):window.location.hash="#/dashboard":window.location.hash="#/login"}}({content:document.querySelector("#content")});window.addEventListener("hashchange",(()=>{vB.renderPage()})),window.addEventListener("load",(async()=>{vB.renderPage()}))})()})();